O custo de uma rede de comunicações IP pode ser entendido como o custo financeiro de contratação da banda requerida ou, no caso de uma rede própria, o custo financeiro de manutenção dos cabos, fibras e equipamentos para determinadas capacidades dos enlaces.

O objetivo deste trabalho é dimensionar uma rede IP garantindo o menor custo possível mas ao mesmo tempo garantido a qualidade de serviço (QoS) contratada pelos clientes desta rede.

O objetivo do dimensionamento de uma rede IP é minimizar o -custo da rede- ao mesmo tempo garantindo a qualidade de serviço contratada pelos clientes.

Esta qualidade de serviço mínima precisa ser definida pelo projetista da rede.

Neste trabalho estaremos dimensionando uma rede a partir do tráfego medido, seja da própria rede a ser projetada ou de outra rede que possua características de tráfego similares.

A definição de -custo da rede- apresentada é baseada na capacidade dos enlaces sendo esta definição a mais ampla possível.

Podemos entender por custo da rede o custo financeiro de contratação da banda requerida ou, no caso de uma rede própria, o custo financeiro de manutenção dos cabos, fibras e equipamentos para determinadas capacidades dos enlaces.

Outras definições também são cabíveis, ficando a cargo do projetista definir qual tipo de custo se deseja minimizar.

Nos exemplos usados durante este trabalho, usaremos a função de custo baseada no custo financeiro de contratação da banda requerida.

Uma vez definida a função que desejamos minimizar, devemos especificar quais são as restrições.

Claramente existe um limite para minimizar os custos de uma rede.

E este limite é a qualidade de serviço.

Mais diretamente, quanto menor a qualidade de serviço, menor é o custo da rede.

Esta relação de proporcionalidade será explorada mais adiante e o problema de otimização será solucionado na seção V.

Na seção IV, mapearemos os requisitos de QoS das aplicações para requisitos no nível da rede, de modo que possamos definir as restrições da nossa minimização.

Existem dois parâmetros principais para avaliar a qualidade a nível de rede, o atraso fim-a-fim (ou RTT) e a probabilidade de perda.

Para que possamos ponderar os requisitos de qualidade (RTT e probabilidade de perda) na função de custo (que é uma função da capacidade dos enlaces), precisamos definir a relação entre ambos.

Sendo assim, devemos especificar um modelo de tráfego que relacione o RTT e a probabilidade de perda com as capacidades dos enlaces.

Este modelo precisa ser o mais fiel possível ao tráfego real quando da operação da rede.

Isto é necessário para que o projeto represente o mais fielmente possível a rede em operação.

A utilização direta dos dados coletados da rede não é adequada ao dimensionamento pois lhes falta variabilidade estatística.

Dessa forma, precisamos de um modelo de tráfego que seja fiel às principais características do tráfego e que não seja complexo nem exageradamente detalhado.

Estas duas últimas características tornariam o projeto da rede uma tarefa árdua e pouco automática.

Assim, foi escolhida uma modelagem simples e automática usando modelos markovianos ocultos, que têm recebido uma ampla atenção na literatura, conseguindo capturar características importantes do tráfego.

A escolha do modelo é uma das etapas mais importantes do processo.

A seção III é dedicada à descrição do modelo adotado.

Um modelo de tráfego fiel tem que ser baseado em informações confiáveis do tráfego a ser modelado.

Esta é talvez a fase mais crítica de todo o projeto da rede, onde informações erradas podem levar a resultados imprecisos nas outras etapas.

Como obter estas informações é objeto de estudo da próxima seção.

Finalmente, na seção VI são apresentados os resultados do método proposto.

A seção VII apresenta os trabalhos relacionados e as conclusões e trabalhos futuros são mostradas na seção VIII.

O objetivo desta seção é descrever como obter o tráfego agregado nos enlaces que será utilizado para parametrizar o modelo analítico adotado neste trabalho.

A parametrização deste modelo requer como dado de entrada a quantidade de bits por unidade de tempo que passou no enlace.

A escolha da granularidade da coleta e do intervalo de observação foi baseada em trabalhos da literatura.

A granularidade usada foi de 1s com um intervalo de observação de 2h.

O método mais direto e confiável para obter o tráfego agregado nos enlaces é a medição direta do mesmo.

Entretanto, nem sempre há a possibilidade de se medir o tráfego real em todos os enlaces com uma granularidade fina (100ms ou 1s).

Neste caso, podemos medir a média do tráfego com granularidade mais grossa, por exemplo de 30 em 30 minutos, e utilizar as características do tráfego obtidas pela metodologia descrita para estimar o comportamento do tráfego de granularidade fina.

Um ponto a ser ressaltado, é que não é necessário medir o tráfego em todos os enlaces da rede.

Diversas metodologias de estimativa do tráfego de toda a rede a partir do tráfego nos roteadores de borda estão disponíveis na literatura.

O trabalho mostra como obter a média e a variância do tráfego com granularidade fina (1 segundo) a partir da média, da variância com granularidade grossa (30 minutos) e de um parâmetro, b, cujo o valor depende do comportamento do tráfego da rede.

O nosso objetivo é obter um trace com granularidade fina que servirá como estimativa do tráfego entre dois roteadores A e B de uma rede.

Iremos supor que é possível estimar os dados necessários para parametrizar o modelo, ou seja, é possível coletar a média e a variância com granularidade de 30 minutos (estes dados podem ser coletados usando o NetFlow, por exemplo).

Com relação ao valor do parâmetro b, dado que não é indicado estimá-lo a partir de dados coletados com granularidade grossa, devemos usar valores de b calculados para outros fluxos da rede que tenham características semelhantes as do tráfego entre A e B, como por exemplo em um enlace de menor capacidade da mesma rede que possa ser medido com granularidade mais fina.

De posse dos parâmetros do modelo, é possível gerar um trace com granularidade fina para representar este tráfego.

Supondo que este tráfego seja proveniente de diversas fontes independentes, este pode ser aproximado por uma variável aleatória Normal com média e variância obtidas a partir da metodologia descrita acima.

Logo, o procedimento para geração do trace pode ser resumido como a geração, com granularidade fina, de uma variável aleatória Normal com média e variância que mudam a intervalos de 30 minutos.

A seguir apresentaremos um exemplo com o objetivo de ilustrar o método.

Usaremos o tráfego total em Kb/s coletado do roteador do PESC/COPPE com a granularidade de 1 segundo.

Denominaremos este tráfego como tráfego medido.

Obtivemos a média e a variância para cada intervalo de 30 minutos segundo o modelo para este mesmo tráfego.

Gerou-se um trace com granularidade de 1 segundo (denominaremos como tráfego estimado sintético ou somente tráfego estimado) com o objetivo de comparar com o tráfego medido.

Podemos notar a semelhança do tráfego estimado com o tráfego medido (um caminho amostral) para amostras com intervalos de 1 segundo.

Uma vez obtido o tráfego agregado nos enlaces, seja por medições ou baseado em uma estimativa, resta criar um modelo que represente as principais características deste tráfego.

Tráfego estimado e medido para o roteador do PESC/COPPE Este é o assunto da próxima sub-seção.

Para cada enlace deve ser obtido um modelo de tráfego agregado.

O objetivo é capturar as características mais importantes do tráfego agregado em diversos dias.

Para não ficarmos restritos a apenas um caminho amostral, é necessário um modelo analítico preciso para o tráfego.

O modelo analítico estudado neste trabalho é baseado na teoria de cadeias de Markov ocultas (Hidden Markov Models, HMM).

Estes modelos têm sido utilizados com sucesso para descrever séries temporais, em aplicações que incluem reconhecimento de voz e desenvolvimento de modelos precisos do processo de descarte de pacotes na re.

Este modelo tem como característica capturar correlações temporais que porventura existam no tráfego agregado.

Um modelo HMM que represente o tráfego agregado em um enlace irá alimentar um roteador cujo tempo de serviço é exponencial.

Através da resolução analítica deste modelo iremos obter uma função, fi, que mapeia o atraso da fila do roteador di na capacidade do canal fi.

Isso é possível porque estamos trabalhando com a premissa de que a probabilidade de perda de pacotes é pequena.

Os detalhes da modelagem de tráfego usando HMM estão descritos na próxima seção.

O objetivo desta seção é adicionar variabilidade estatística aos tráfegos medidos (traces coletados).

A modelagem do tráfego medido deve ser feita de forma automática, de modo que possamos dimensionar grandes redes.

Os modelos de Markov ocultos ou Hidden Markov Models (HMMs) são definidos como um processo estocástico duplamente embutido onde existe um processo estocástico implícito que não é observável.

No entanto, este somente pode ser -visto- através de um outro conjunto de processos estocásticos que produzem a seqüência de observações.

Nesta seção será apresentada a metodologia utilizada para modelar os traces com HMMs.

A sub-seção III-A explica a utilização de um modelo HMM para representar o tráfego de um enlace.

Este modelo será posteriormente utilizado para o modelo de dimensionamento.

Iremos usar o modelo de Markov oculto (HMM) para representar o tráfego agregado que passa pelo roteador.

Para que a cadeia represente esse tráfego, a mesma deve ser treinada com um tráfego real.

Idealmente a cadeia deve ser treinada com o tráfego de vários dias no mesmo horário.

Após o treinamento, a cadeia poderá ser utilizada para gerar um tráfego com uma duração maior que o tráfego real usado para treiná-la.

Em um HMM, a cada estado está associada uma probabilidade de emissão para cada símbolo existente.

Como o campo a ser modelado (quantidade de bytes observados no enlace) pode assumir um número de valores muito grande, foi necessário utilizar o conceito de níveis, diminuindo, assim, o número de símbolos que cada estado poderia emitir.

Nessa abordagem, primeiramente foi verificado a maior quantidade de bytes que atravessaram o enlace em um intervalo de tempo.

Esse valor fornece um teto para o cálculo dos níveis.

O mapeamento das amostras originais e das amostras discretizadas pelos níveis é obtido, onde ni é a amostra discretizada em número de níveis, Oi é a amostra original coletada, K é a quantidade total de níveis e MAX é o valor da maior amostra coletada.

A estrutura da cadeia inicial pode ter influência na cadeia obtida após o treinamento.

A cadeia escolhida para modelar os traces possui uma estrutura do tipo -Branch-Erlangian- (semelhante a phase-type) com 4 estados (também foi testado um modelo com 6 estados, mas não houve melhora significativa no desempenho do modelo).

Essa cadeia foi utilizada para a previsão de perdas de pacotes de áudio com bons resultados.

Experimentos variando o número de níveis foram realizados com o objetivo de se estudar a influência desse parâmetro no modelo final.

Resultados experimentais mostraram que a utilização de 30 níveis apresentou a melhor relação custo benefício para os traces do tráfego medido no roteador.

Para validar o modelo, foi adicionada uma fila com o tamanho máximo de 1000 pacotes ao modelo de Markov oculto.

Para esse novo modelo, foi calculado o número médio de pacotes na fila, utilizando várias taxas de serviço.

Esses resultados foram comparados com simulações equivalentes utilizando o trace do tráfego medido.

Nessas simulações foi utilizada a ferramenta Tangram-II.

Mostra o número médio de pacotes na fila de transmissão de um enlace em função da capacidade do enlace em pacotes por segundo.

Nesse gráfico é possível observar que os resultados obtidos pelo modelo analítico estão próximos da simulação feita com o trace do tráfego medido, indicando que o modelo analítico representa bem este tráfego.

O resultado obtido com o modelo HMM alimentando uma fila é o número médio de pacotes na fila para diversos valores de capacidade do enlace, onde podemos obter facilmente o atraso na fila em função dessas capacidades.

O próximo passo é obter uma função que mapeie o tempo de espera na fila em função da capacidade do enlace.

Para isso foi feita uma regressão não-linear com objetivo de definir as funções que tenham o menor erro possível, de fácil inversão, definidas em todo o domínio e com derivada primeira negativa.

Exemplos de funções que se encaixam nessas definições são a função exponencial e a função potência.

A função que melhor se adequou aos requisitos descritos acima para a maioria dos traces foi gl = a c + d, onde gl é o tempo de espera na fila e Cl é a capacidade do enlace l.

O problema de otimização formulado em V exige que a função custo seja expressa em função do atraso em cada enlace pois as restrições são expressas em função desta variável.

Iremos então inverter a função gl e usaremos a sua inversa no problema de otimização.

Descobrir as capacidades ideais para uma rede será visto então como um problema de encontrar os valores mínimos de uma função de custo baseada em fl (função de custo das capacidades) de modo que as restrições de QoS das aplicações sejam atendidas (latência e vazão).

Na próxima seção veremos como traduzir os requisitos de QoS (latência e vazão) das aplicações, em restrições para o problema de otimização.

Ao contratar os serviços de uma empresa para dimensionar suas redes, os consumidores fazem exigências referentes à QoS das aplicações que lhe parecem mais importantes.

Podendo especificar, por exemplo, o tempo máximo que lhes parece aceitável para trazer uma página Web (latência), ou ainda a vazão mínima que deve ser oferecida para a transferência de arquivos maiores, como músicas e vídeos.

Assim, é necessário que exista uma forma de associar tais exigências a parâmetros configuráveis da rede, como capacidade do enlace, o atraso médio e a capacidade de armazenamento das filas do roteador.

Estas exigências a nível de rede serão as nossas restrições para a diminuição do custo da rede.

O custo somente pode diminuir se a qualidade mínima requerida continuar sendo atendida.

Suponha, por exemplo, que o usuário tenha requisitado que o download de arquivos grandes seja feito com uma vazão média B.

A partir podemos obter uma expressão que associa a média do RTT com a média da vazão, onde p representa a probabilidade de perda, b representa o número de pacotes confirmados por um ACK, B representa a vazão, To = k RTT é o tempo de time out do TCP e Wmax o tamanho máximo da janela do TCP.

Portanto, a partir da vazão e da probabilidade de perda do enlace é possível determinar o RTT médio.

A latência, por sua vez, é o requisito mais importante para transferência de arquivos pequenos.

Em geral, devido ao tamanho do arquivo, o TCP termina de enviá-lo antes de sair da fase de slow-start.

Estaremos considerando o tempo de transmissão dos pacotes como desprezível em relação ao RTT.

Como exemplo, suponha que o arquivo a ser transferido tenha 1,5x104 bytes e que cada segmento do TCP tenha 1500 bytes.

Transmitiremos, portanto, 10 segmentos.

Considere a janela inicial do TCP igual a dois segmentos e o RTT médio de 250 ms.

Não havendo perda, este arquivo pode ser transferido em aproximadamente 1 segundo.

A hipótese que adotamos é de que não ocorrerão perdas de pacotes na transferência de arquivos pequenos.

Esta hipótese é baseada no cenário descrito a seguir.

Digamos que a probabilidade de perda de um pacote seja 104 e as que perdas sejam independentes.

Supondo que em média 20 pacotes sejam utilizados para a transmissão do arquivo, a probabilidade de que o arquivo inteiro seja transferido sem que haja nenhuma perda é de 0,998.

Assim, apenas um em cada 500 arquivos sofrerá um atraso extra por causa da perda de um pacote.

A contribuição da perda é, portanto, pouco significativa para a média da latência.

Nos exemplos a seguir o tamanho de 1,5 x 104 bytes foi utilizado para os arquivos pequenos de acordo com os resultados, onde se vê que aproximadamente 80% dos arquivos Web acessados pelos usuários são menores ou iguais a 1,5 x 104 bytes.

Para se transferir um arquivo de 15000 bytes, considerando o tamanho da janela inicial do TCP com 2 segmentos, o tamanho dos pacotes de 1500 bytes e desconsiderando a perda de pacotes, são necessários 4 RTTs 1.

Este será considerado o valor máximo permitido de latência para arquivos pequenos encontrados na Web.

Se a latência deve ser menor ou igual a 1,5 segundos, então o RTT deve ser menor ou igual a 375 ms (1,5/4 segundo), sempre lembrando que a probabilidade de perda deve se manter baixa.

Para arquivos de tamanho grande o requisito observado será a vazão média B.

Se conexões HTTP persistentes forem utilizadas, o tempo médio de latência dos objetos tende a diminuir pois o 3-way hand shaking do TCP só é executado uma vez para cada página acessada.

Esta tradução será feita usando a rota dos fluxos em estudo, o protocolo de transporte usado pelas aplicações e os requisitos de QoS mais importantes para as aplicações.

O primeiro passo é o mapeamento dos requisitos de QoS das aplicações em requisitos da rede.

O segundo passo é a obtenção de uma ou mais funções para expressar a restrição que deve ser usada no problema de otimização.

Para isso é necessário o conhecimento do caminho entre a fonte e o destino na rede.

A partir do caminho usado pela aplicação, do retardo médio para cada enlace da rede e do RTT exigido pela aplicação é possível construir as funções de restrição.

No nosso caso a função de restrição pode ser definida como a soma dos retardos médios dos enlaces por onde trafegam os dados das aplicações deve ser menor que o menor valor de RTT requerido para as aplicações.

Se consideramos estas restrições enlace a enlace, elas formam um conjunto de restrições a ser usado no problema de otimização.

De posse das restrições, só nos resta definir a função de custo.

Custo aqui será definido como a quantia paga em dinheiro pela banda utilizada.

Uma vez que um enlace pode ser comercialmente mais barato que outros, como quando por exemplo um dos enlaces é uma rede local e o outro é uma conexão via satélite, será definida uma constante de custo ci para cada enlace i.

Esta constante pode ser generalizada por uma função, conforme veremos posteriormente.

Na próxima seção mostraremos como resolver o problema de otimização mencionado acima.

A rede pode ser representada por um grafo direcionado G = (V,E), onde V representa o número de vértices e E o número de arestas.

Neste caso, os vértices representam os roteadores e as arestas representam os enlaces que existem entre eles.

Para cada par origem-destino o tráfego é transmitido em apenas um único caminho na rede.

Tais caminhos são determinados pela tabela de roteamento da rede e escolhidos no conjunto de caminhos P = pab.

O caminho de transporte, considerando o TCP, é representado por rab = pab pba.

Para cada caminho rab e enlace l 2 E, ±l 2 {0, 1} representa a função que tem valor 1 se o enlace l faz parte do caminho rab e valor 0 caso contrário.

Para calcular o custo mínimo da rede é necessário definir uma função de custo do enlace l, R.

Essa função é relacionada à capacidade do enlace fl e ao custo de cada enlace cl, ou seja R = clfl Essa será a função objetivo para o problema de otimização.

A obtenção da função f está descrita em detalhes na subseção III-B.

O problema de otimização, denominado atribuição de capacidades pode ser formulado da seguinte forma.

Abaixo estaremos omitindo a dependência da função AC nas variáveis dl para simplificar a notação.

Para resolver este problema optamos por um algoritmo de otimização não-linear primal-dual de barreira-logarítmica (pontos interiores), pois este não supõe convexidade das funções.

Note que em um roteador o atraso é inversamente proporcional à capacidade (se a probabilidade de perda é baixa).

Desta forma, apesar de podermos transformar nosso problema em um problema de otimização convexa, caso o custo dos canais cresça linearmente com a banda, um algoritmo que não supõe convexidade torna mais livre a nossa escolha por uma função de custo dos canais.

Uma característica do problema, pelo fato do atraso ser inversamente proporcional à capacidade, é que a solução ótima será uma solução com o maior atraso possível.

Este algoritmo de otimização necessita de uma solução inicial para obter uma solução ótima.

Claramente Cl necessita ser finito e portanto dl > 0.

Além disso, dl precisa estar contido dentro do conjunto da restrição da equação.

A solução do problema de otimização fornecerá o atraso dl em cada um dos enlaces.

Através da função fl podemos calcular a capacidade de cada enlace l para que ele tenha o atraso de fila dl.

Desta forma, o planejamento da rede é constituído pelo conjunto das informações das capacidades dos enlaces da topologia da rede, representada pelo grafo direcionado G, e do tamanho das filas considerado no modelo analítico (usado para representar o tráfego agregado).

No que segue, veremos os resultados do modelo proposto.

Nesta seção realizamos os seguintes estudos do método proposto aplicado à topologia de rede.

Verificamos se a rede em estudo ao utilizar as capacidades calculadas oferece a QoS mínima contratada.

Para esta análise simulamos a rede usando o simulador NS.

Comparamos o método proposto neste trabalho com o modelo proposto.

O método descrito nada mais é do que estimar o desvio padrão do tráfego agregado (com granularidade fina) e calcular a capacidade necessária para que o tráfego agregado esteja 95% do tempo abaixo da capacidade do enlace.

Denominaremos este método como -< 95%-.

O modelo de simulação desenvolvido tem como objetivo representar a rede que se deseja dimensionar e, utilizando as capacidades dos enlaces calculadas conforme descrito na seção III, verificar se os requisitos de latência máxima e vazão mínima das aplicações foram atingidos.

Para obter os traces empregados como tráfego de fundo, foram utilizadas as medições feitas no roteador.

Os traces foram divididos em intervalos de 2 horas e cada um deles representou um enlace diferente na nossa análise.

A topologia do modelo de simulação é composta por 5 roteadores e 10 enlaces.

Iremos agora inserir alguns fluxos TCP e UDP e medir se os requisitos de qualidade desses fluxos foram respeitados pelo dimensionamento da rede.

Um fluxo TCP de 1500 bytes, representando um acesso a uma página HTML, irá medir a latência.

Outros dois fluxos TCP de 600MB e 6MB representarão o download de um vídeo e uma música respectivamente.

O objetivo desses dois últimos fluxos é medir a vazão de ambos.

Por último, usaremos um fluxo UDP e dele mediremos a perda.

Os requisitos previamente contratados pelos clientes dessa rede são latência de transferência de páginas Web inferior a 1,5s, vazão superior a 512Kbps para arquivos grandes, probabilidade de perda inferior a 6 x 103.

Executamos a metodologia proposta neste trabalho considerando a topologia ilustrada, e obtivemos para cada enlace as capacidades.

A legenda -Proposto- assinala os valores obtidos pelo método proposto neste trabalho e -< 95%- indica os valores obtidos pelo método descrito.

Podemos notar que como o método descrito não considera detalhes sobre a QoS, os resultados são, em geral, mais conservadores, o que leva, na maioria dos casos, a escolha de uma capacidade maior do que a necessária para atender os requisitos de QoS definidos.

Mostra as estatísticas calculadas para os fluxos TCP da simulação.

É possível perceber que tais fluxos conseguiram a QoS desejada.

Pode-se observar que o método -< 95%- mostrou-se muito conservador.

Isto pode ser visto tanto com relação à latência, que ficou muito abaixo do limite permitido, quanto em relação à vazão, que ficou muito acima do mínimo acordado.

Com relação ao fluxo UDP, a porcentagem de pacotes perdidos obtida foi de 4,28 x 103 para o método proposto e 8,3x104 para o método -< 95%-.

Mais uma vez o método -< 95%- mostrou-se uma superestimativa, pois a média da perda registrada foi quase 10 vezes menor do que o necessário para se atingir a QoS desejada.

O problema do dimensionamento pode ser visto sob a ótica do conhecido problema de -atribuição de capacidade- ou -capacity assignment problem-.

Assim, a literatura na área de dimensionamento é ampla e possui diversos métodos de dimensionamento.

Entretanto, a maioria dos artigos presentes na literatura não consideram o comportamento do TCP, não dimensionam considerando os requisitos de QoS e/ou não consideram a rede toda, apenas um roteador -gargalo-.

Os autores propuseram um método de dimensionamento onde consideram um enlace bem provisionado se a taxa do tráfego agregado fica 95% do tempo abaixo da capacidade máxima.

Claramente esta estimativa não leva em consideração parâmetros de QoS e tende a superestimar a capacidade do canal, conforme mostrado na seção anterior.

Neste trabalho, os autores também traduzem os requisitos de qualidade de serviço em atraso nas filas dos diversos roteadores e procuram minimizar o custo de acordo com restrições de atraso.

Entretanto, a modelagem do tráfego utilizada pelos autores é complexa e pouco automática, além de necessitar de dados complexos como a distribuição do número de segmentos da janela do TCP no fluxo.

Isto faz com que o método seja pouco útil para modelar redes grandes, onde teríamos que coletar e analisar uma enorme quantidade de fluxos.

O método apresentado neste trabalho é mais automático que os métodos presentes na literatura.

Os modelos markovianos ocultos foram utilizados para análise de perda de pacotes.

Entretanto, não é do conhecimento dos autores outro trabalho que use HMM para modelar um tráfego agregado.

A modelagem proposta neste trabalho, através da utilização de HMMs, mostrou-se mais simples e eficiente para a modelagem do comportamento do tráfego.

Neste trabalho foi apresentado um método de dimensionamento de uma rede IP onde se levam em conta fatores como dificuldade de se conseguir medidas do tráfego agregado com granularidade fina, necessidade de um método automático para se dimensionar uma rede grande e necessidade de dimensionar a rede com QoS mas sem superestimar a capacidade dos canais.

O próximo passo deste trabalho é considerar roteadores com políticas ativas de gerenciamento de filas no dimensionamento da rede.

