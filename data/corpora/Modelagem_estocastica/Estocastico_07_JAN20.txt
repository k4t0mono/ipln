Este documento é a primeira versão de um material didático de apoio à disciplina de Avaliação Quantitativa de Sistemas, ministrada aos cursos de Informática da Faculdade de Informática da Pontifícia Universidade Católica do Rio Grande do Sul.

Seu uso é limitado a este fim.

A reprodução deste material para outros fins é indevida.

O documento é organizado conforme as principais partes da referida disciplina.

Ao longo do documento (assim como da disciplina) são abordados vários formalismos estocásticos para modelagem de sistemas.

Para cada formalismo de modelagem apresentado, procura-se descrevêlo informalmente e formalmente, mostrar a forma de solução a ser empregada, exemplificar, e propor exercícios para fixação de conceitos.

O capítulo de Introdução contextualiza o conteúdo a ser abordado e traz, de maneira bastante sucinta, alguns conceitos que se consideram dominados pelo leitor do restante do documento.

A seguir, dedica-se um capítulo a cada um dos temas, Processo de Nascimento e Morte, Cadeias de Markov, Redes de Filas de Espera, Redes de Petri Estocásticas e Redes de Autômatos Estocásticos.

Ao longo de sua vida profissional, o egresso dos cursos da área de Computação certamente se depara com situações onde tem que analisar uma situação do ponto de vista quantitativo.

A seguir, ilustramos algumas situações para tentar tornar um pouco mais concretos os aspectos que pretendemos tratar.

Situação 1, suponha que à placa de rede de um computador chegam, em média, 300 pacotes por segundo.

Desprezando as variações de tamanho de pacote e sabendo que a placa consegue tratar em média 500 pacotes por segundo, pergunta-se quantos pacotes o buffer da placa deve poder armazenar para que a probabilidade de perda de pacote seja menor que 1 em 1000 ?

Situação 2, suponha que em um posto do INSS 5 pessoas podem ficar sentadas a espera.

Lá fora no entanto, uma fila de capacidade infinita continua, dando voltas e voltas na quadra.

Supondo que ninguém fura a fila e que ninguém morre na fila, e dado que 18 pessoas por hora entram na fila e que o único médico do posto atende criteriosamente uma pessoa a cada 3 minutos.

Todas as pessoas que entram na fila poderão ser atendidas em prazo limitado? Quanto % do seu tempo o médico do posto pode dormir em uma maca a sua disposição? Qual a probabilidade de haver ao menos 1 pessoa tomando chuva na fila, em um dia chuvoso? Qual a probabilidade de exatamente 2 pessoas estarem tomando chuva?

Situação 3, suponha um sistema operacional embarcado que tem sempre as mesmas 4 tarefas rodando, cumprindo um fim específico.

A CPU atende cada tarefa em média em 5 (unidades de tempo).

Uma tarefa sai da CPU 30% das vezes para esperar entrada do disco, 20% para esperar entrada da rede, e 50% das vezes por seu tempo de uso de CPU ter expirado (voltando para a fila ready).

O disco atende à requisição, em média, em 10.

Uma entrada da rede chega em média em 20.

Pergunta-se qual o tamanho médio da fila ready.

Dobrar a velocidade de atendimento do disco resulta em alguma modificação significativa no sistema?

Situação 4, em redes ad-hoc os pontos roteadores utilizam wireless.

Cada estação wireless tem um raio de interferência.

Se outra estação estiver neste raio de interferência, elas não podem transmitir simultaneamente.

Imagine uma rota de 10 estações onde cada estação está no raio de interferência de outras duas (anterior e posterior).

Supondo uso de tecnologia IEEE 802,11.

Qual a vazão líquida de dados na rota de 10 estações ? Aumentando-se o grau de interferência (cada estação interfere com 2 antes e 2 depois), qual o impacto na vazão líquida de dados? Avaliar um sistema é pronunciar-se sobre as características de um certo sistema.

Dado um sistema real qualquer, uma avaliação deste sistema pode ser definida como toda e qualquer observação feita sobre ele.

Neste sentido, existem basicamente dois tipos de avaliação, avaliação qualitativa quando existe a necessidade de uma comparação com o senso-comum, ou ainda uma comparação com um referencial de base.

Avaliação quantitativa baseia-se na formulação de valores específicos, sem expressar considerações dos méritos dos valores obtidos.

Em princípio, toda avaliação tem por objetivo o estabelecimento de um julgamento qualitativo sobre o sistema avaliado.

No entanto, toda avaliação científica é feita sobre resultados quantitativos.

Tais resultados devem ser objetivamente apresentados ao usuário final, de forma que esse possa tomar decisões acerca de seu sistema.

Esta disciplina, como o nome sugere, tem foco no aspecto quantitativo.

A aplicação prática da avaliação de desempenho é o conhecimento da situação (estado) do sistema avaliado.

Tanto situações anteriores como situações atuais podem ser avaliadas para tornar possível a observação da evolução do sistema.

Além disso, a observação do comportamento do sistema ajuda a entender o seu funcionamento.

Podem ser ainda avaliadas situações futuras, com a finalidade de previsão e planejamento.

Ainda, dentro do contexto de avaliação de sistemas, cabe salientar que é sempre recomendável um estudo da confiabilidade do método, para este fim é freqüente realizar-se a comparação de resultados de diversos técnicas diferentes.

Existem diferentes técnicas de avaliação de desempenho de sistemas, que são tradicionalmente divididas em três abordagens distintas.

Monitoração, esta técnica, como o próprio nome sugere, consiste na observação (monitoração) de sistemas reais.

Dentre as técnicas citadas, esta é a que propicia maior fidelidade dos índices obtidos, pois não é feita nenhuma abstração (modelagem) do sistema em questão.

Porém, há algumas desvantagens visíveis desta abordagem, como por exemplo, a necessidade da existência do sistema a ser avaliado.

Isto pode gerar problemas em relação ao custo e ao tempo, pois o sistema implementado pode não satisfazer as necessidades, tendo que ser abandonado.

Uma outra desvantagem é a questão da amostragem.

É necessário que se faça o uso correto de técnicas de estatística para que os dados recolhidos tenham validade.

Simulação, esta abordagem consiste em construir um modelo que simule o funcionamento do sistema a ser avaliado.

Este modelo deve descrever as características funcionais do sistema em uma escala adequada de tempo.

Este modelo deve conter os detalhes importantes referentes ao sistema, mas não a sua totalidade.

Em outras palavras, há um certo nível de abstração.

Contudo, deve-se salientar que esta abstração não deve acarretar na inclusão de erros no modelo nem mesmo na exclusão de características importantes.

Comparativamente à monitoração, a simulação costuma ser menos dispendiosa e consumir menos tempo para que os índices sejam calculados, permitindo que sejam feitos quantos experimentos forem necessários.

Porém, por se tratar de uma abstração da realidade, a fidelidade das medidas tende a ser menor na simulação se compararmos com a monitoração.

Além disso, da mesma forma que na monitoração, a quantidade e representatividade das amostras consideradas é muito importante para a obtenção de resultados corretos.

Métodos Analíticos, esta técnica de avaliação de desempenho, assim como a simulação, também se baseia no desenvolvimento de um modelo do sistema real, porém com um nível de abstração mais alto.

Neste caso, o modelo é puramente matemático.

Neste tipo de modelo, o funcionamento do sistema real é reduzido a relações matemáticas.

Modelos analíticos podem ser determinísticos ou estocásticos.

Em um modelo determinístico, todos os parâmetros do sistema são previamente determinados.

Já em um modelo estocástico, o comportamento do sistema é analisado probabilisticamente, ou seja, os parâmetros do sistema são descritos por variáveis aleatórias, com distribuições de probabilidade convenientes.

No último caso, o sistema é descrito em termos de um conjunto de estados em que o mesmo pode se encontrar e de transições estocásticas entre esses estados (uma transição estocástica é aquela cuja ocorrência é descrita por uma variável aleatória).

Desenvolver modelos analíticos normalmente exige maior abstração de aspectos da realidade, se comparado a modelos de simulação.

Ainda, em alguns casos, não se consegue obter uma resolução numérica, mas sim uma resolução analítica1.

Algumas vezes a complexidade computacional do modelo pode tornar a resolução muito cara, ficando mais dispendiosa que uma resolução igualmente aceitável em simulação.

Mesmo assim, métodos analíticos podem ser empregados com maior facilidade que outros em vários casos.

Uma vantagem desta técnica em relação as outras descritas é que não há a necessidade de se preocupar com um conjunto específico de amostras de funcionamento do sistema para a obtenção dos índices de desempenho.

Desta forma, o domínio de métodos anlíticos para avaliação de sistemas compreende um ferramental importante para profissionais da área de Informática.

A avaliação de um sistema exige que sejam seguidos alguns passos.

Modelagem, nesta etapa, são realizadas as observações sobre o sistema e definem-se as abstrações com que se vai trabalhar.

A modelagem exige a definição de uma abordagem de modelagem de sistemas.

Ao final desta etapa, tem-se um modelo do sistema considerado.

Extração ou Resolução, nesta etapa, são realizados os cálculos e o processamento necessário à obtenção de resultados numéricos sobre o sistema a partir do modelo gerado na etapa anterior.

Interpretação, a última etapa compreende a análise dos resultados obtidos e a tomada de decisão sobre alterações e melhorias.

Desempenho pode ser definido como a maneira como um sistema se comporta.

Isto é, o desempenho de um sistema é determinado por suas características de execução.

Portanto, avaliar o desempenho de um sistema demanda definir quais características comportamentais interessam ser consideradas.

Por exemplo, se quisermos avaliar o desempenho de um automóvel, iremos considerar fatores tais como velocidade máxima, capacidade de aceleração (tempo necessário para ir de 0 Km/h a 100 Km/h), espaço de frenagem a uma dada velocidade, consumo médio de combustível, etc.

Para sistemas computacionais, em geral consideram-se 4 fatores para medida de desempenho.

Vazão (throughput), taxa de atendimento de pedidos pelo sistema.

Ex, sistemas em lotes, Jobs por segundo.

Sistemas interativos, requisições por segundo.

CPU, MIPS ou MFLOPS.

Redes, pacotes por segundo (pps) ou bits por segundo (bps).

Sistemas de processamento de transações, transações por segundo (TPS).

Utilização, fatia de tempo em que o sistema permanece ocupado, atendendo a pedidos.

População, quantidade de atendimentos a serem feitos em um determinado instante.

Tempo de resposta, intervalo de tempo entre o pedido e o início/conclusão do serviço.

Fenômeno Determinístico, é possível saber que evento irá acontecer no futuro.

Por exemplo, avanço de uma música em uma fita cassete.

Sempre se sabe qual será a música seguinte, pois a ordem já é previamente conhecida.

Fenômeno Aleatório, não é possível saber que evento irá acontecer no futuro.

Ao lançar uma moeda não há como saber-se qual lado ficará à vista quando a moeda chegar ao solo, mesmo após inúmeros lançamentos.

Evento discreto, considera-se a ocorrência de um fenômeno apenas em determinados instantes de tempo dentro de um período (verifica-se fenômeno a cada intervalo de 5 minutos, por exemplo).

Evento contínuo, fenômeno pode ocorrer em qualquer instante de tempo.

Variável aleatória, uma variável aleatória é uma função que reflete o resultado de uma experiência aleatória.

Podemos conhecer seu comportamento para um conjunto de valores, mas não sabemos o valor para uma ocorrência específica.

Por exemplo,lançar uma moeda.

Variável aleatória discreta, seu conjunto possível de valores é composto por um número finito ou infinito enumerável de elementos.

Variável aleatória contínua, quando pode assumir qualquer valor de um intervalo de números reais.

Distribuição de probabilidade, não é possível saber de antemão o valor de uma variável aleatória e, para estudá-la, é necessário identificar os valores que ela pode assumir e com que freqüência ela ocorre, ou seja, a sua distribuição de probabilidade.

Exemplos, Jogar moeda (P(cara), P(coroa)).

Jogar um dado (P(lado1), P(lado6)).

Jogar dois dados e obter uma determinada soma (P(soma=2), P(soma=3), P(soma=12)).

Probabilidade de obter a primeira cara somente na n=ésima jogada (exemplo de distribuição geométrica).

Estes são exemplos de distribuições discretas de probabilidade.

Temos também distribuições contínuas de probabilidade, quando o fenômeno observado pode assumir qualquer valor de uma escala.

Seja a experiência aleatória medir o tempo entre dois eventos, por exemplo, o tempo entre duas requisições chegarem a um servidor.

O tempo entre dois pacotes na rede.

O tempo entre dois pacotes errados recebidos.

Tempo entre falhas de um componente eletrônico.

Tempo decorrido para abrir a porta novamente.

Distribuição exponencial, as únicas distribuiçoes com característica "memoryless" são a geométrica (discreta) e a exponencial (contínua).

Memoryless significa, de forma intuitiva, que saber o que aconteceu no passado não ajuda a prever o futuro.

Assim, considerando um evento discreto como jogar moeda para cima, saber o resultados anteriores não afeta de maneira alguma as probabilidades associadas à próxima jogada de moeda.

Considere um evento contínuo, como por exemplo a chegada de trabalhos em um sistema com distribuição exponencial e média 5.

Se até o instante 4 não foi observada nenhuma chegada de trabalho, isto não aumenta a probabilidade de um trabalho chegar dentro do próximo segundo.

Assim, com a característica "memoryless"o próximo estado de um sistema não depende dos estados anteriores.

Esta característica propicia a utilização de métodos analíticos de avaliação.

Processo estocástico, um processo estocástico é utilizado para modelar fenômenos onde várias variáveis aleatórias ou distribuições são encontradas.

Tome-se como exemplo um servidor de requisições.

Temos duas distribuições envolvidas, a freqüência de chegada de requisições e o tempo de serviço do servidor.

Podemos considerar esta realidade, bem como o que desejamos observar dela, como um processo estocástico.

Isto dá origem a várias configurações.

Suponha que nosso interesse é saber o tamanho da fila de requisições a qualquer tempo, então temos espaço de estados discreto (número de requisições) e tempo contínuo (observado continuamente).

Suponha que o interesse é saber o tamanho da fila no momento que uma requisição acabou de ser atendida, então o espaço de estados é discreto (número de requisições) e o tempo é discreto também (pois só será medido o tamanho da fila quando uma requisição acabar de ser atendida).

Suponha que queiramos medir o tempo que uma requisição espera para ser atendida, então o processo estocásitico é estado contínuo (pois está se medindo algo contínuo, que é o tempo de espera) e o tempo é discreto (pois mede-se para cada requisição).

Suponha que queiramos medir o tempo para acabar todos os processos em qualquer instante, então temos um processo estocástico de tempo e espaço contínuos.

Às combinações são dados também os seguintes nomes, Estado Discreto x Tempo Discreto = Cadeia estocástica de tempo discreto.

Estado Discreto x Tempo Contínuo = Cadeia estocástica de tempo contínuo.

Estado Contínuo x Tempo Discreto = Processo de estado contínuo e espaço discreto.

Estado Contínuo x Tempo Contínuo = Processo de estado contínuo e tempo discreto.

Cadeias estocásticas são também chamadas de Cadeias de Markov (MC), dando origem a Cadeias de Markov de Tempo Discreto (DTMC) e de Tempo Contínuo (CTMC).

Processo estacionário, quando não muda com o avançar do tempo t.

Processo de Markov, se o próximo estado do processo depende somente do estado atual, os estados passados não importam na determinação do estado futuro.

Um sistema de filas com apenas uma fila, consiste de um fila de tamanho finito ou infinito e de um ou mais servidores identicos.

Um servidor atende apenas um cliente por vez, logo pode estar ocioso ou ocupado.

Se todos os servidores estão ocupados quando da chegada de um cliente, este será colocado em um buffer (assumindo que há espaço) e espera para ser atendido.

A seguinte notação, conhecida como notação de Kendall, é muito utilizada para decrever sistemas de filas A/B/m/K, onde A indica a distribuição da chegada de cliente, B denota a distribuição do tempo de serviço, m indica o número de servidores e K indica o tamanho máximo da fila (capacidade).

Os seguintes símbolos são normalmente utilizados para A e B M, Distribuição exponencial (Memoryless).

D, Distribuição determinística.

Ek, Distribuição Erlang com k-fases.

Hk, Distribuição Hyperexponential com k-fases.

Por exemplo, M/M/1/3 indica que o tempo entre chegadas e o tempo de serviço são regidos por distribuições exponenciais, há apenas 1 servidor e a capacidade da fila é de 3 clientes.

Processo de Nascimento e Morte.

Neste capítulo, apresenta-se as definições informal e formal de processo de nascimento de morte.

Em seguida, através de um exemplo, é mostrado como esse tipo de problema é resolvido.

Por fim, exercícios sobre o tema são sugeridos.

Processo de nascimento e morte é uma representação através de estados e transições entre esses estados de um sistema com uma fila simples.

O nascimento representa a chegada de mais um cliente na fila, enquanto a morte representa um cliente que foi atendido.

É importante frizar que o tamanho desta fila pode ser tanto infinito quanto finito.

Como pode ser observado representa a taxa que ocorrem nascimentos em um dado estado (taxa de nascimento) e representa a taxa que ocorrem mortes em um dado estado (taxa de morte).

Em outras palavras, podemos dizer que é a taxa de chegada de clientes é a taxa de serviço dos mesmos.

Logo, o tempo de chegada entre cliente é, em média, 1 e o tempo de serviço de cada cliente é, em média, 1 ¹.

Além disso, pode-se observar a razão (intensidade de tráfego) mostra que se ½ > 1, há mais chegadas do que saídas de clientes.

O número de clientes no sistema é ilimitado, o sistema é instável.

Se ½ < 1, há mais saídas do que chegadas de clientes.

Existe uma solução estacionária para o sistema.

Se ½ = 1, significa que chega, em média, o mesmo número de clientes que saem do sistema.

Qualquer número de clientes no sistema é equiprovável, o sistema é instável.

O Processo de Nascimento e Morte pode ser estado finito ou infinito, sendo que ambos os casos podem ser solucionados, como visto em seção a seguir.

Um Processo de Nascimento e Morte é caracterizado pela dupla (M, T), onde M é o conjunto de estados.

T é taxa de ocorrência da transição do estado x para o estado y.

T é a função de transição a qual associa uma taxa de ocorrência de uma transição de um estado para outro.

A função T possui domínio em M£M e contradomínio nos R+, a função é definida como T M£M! R+.

Note que no Processo de Nascimento e Morte somente são possíveis transições entre estados estados vizinhos.

Assim, a definição da função T deve ser restringida.

Seja R uma função de rotulação R, ou seja a função R associa um número natural a cada estado de M.

Restrição de T usando R a função T é válida para todo par de estados.

Neste documento seão apresentadas duas formas de resolver processos de nascimento e morte.

A primeira delas é quando o sistema possui capacidade infinita e um servidor (M/M/1/1), também chamado independente de carga.

A segunda é quando o sistema possui capacidade finita, podendo ter vários servidores (M/M/C/K), também chamado dependente de carga.

Mostra um processo de nascimento e morte M/M/1/1.

Intuição, a probabilidade de estar no estado i depende da probabilidade de estar no estado i1 e das taxas de saída de i1 para i e de retorno de i para i1.

Como o somatório de todas probabilidades tem que ser 1, a probabilidade do primeiro estado (estado 0) é determinada sabendo-se a soma de todas outras probabilidades.

Este caso pode ser dividido em duas situações, quando o sistema possui apenas um servidor (M/M/1/K) ou quando possui mais de um servidor (M/M/C > 1/K).

Ilustra a situação onde temos apenas 1 servidor no sistema e capacidade para 4 clientes.

Uma forma de solucionar (obter as probabilidades para cada estado) o sistema é como segue.

Primeiramente atribui-se um peso qualquer para o estado i = 0 (W0).

Para facilidade de cálculos pode-se utilizar W0 = 1.

Para obter os pesos dos estados onde i > 0 utiliza-se a fórmula para o cálculo de probabilidades.

Assim obtém-se pesos para os estados 0 a K.

Estes pesos mantém, entre eles, as mesmas proporções que as probabilidades.

Assim, deve-se normalizar os resultados obtidos para que a soma das probabilidades seja 1.

Quando C > 1 o modo de resolução é bastante similar, porém, após atribuir um peso ao estado i = 0 (por exemplo, W0 = 1).

A partir disso, os resultados são normalizados como no caso anterior para obter as probabilidades.

Supondo um processo de nascimento e morte M/M/1/4 com taxa de chegada de clientes igual a 2 taxa de serviço igual a 4.

Vamos calcular a probabilidade da fila estar em cada um dos estados.

A soma de todas as probabilidades é igual a 31, então, normalizando os valores obtidos chegamos as probabilidades de se encontrar em cada estado do sistema.

Neste capítulo, apresenta-se uma definição informal do formalismo de Cadeias de Markov (MC, Markov Chains).

Em seguida, apresenta-se a definição formal de MC à escala de tempo contínua (CTMC, Continuous Time Markov Chains) englobando os conceitos definidos informalmente.

Além disso, demonstra-se as regras necessárias para a obtenção do gerador infinitesimal de um modelo descrito pelo formalismo de MC, bem como um exemplo completo de obtenção do mesmo.

O formalismo de Cadeias de Markov é um formalismo matemático para modelagem de sistemas.

Através do uso de formalismo de MC, é possível descrever o funcionamento de um sistema utilizando um conjunto de estados e transições entre esses estados.

As transições entre os estados são modeladas por um processo estocástico de tempo contínuo ou discreto definidos por distribuições exponenciais ou geométricas respectivamente.

Um modelo descrito pelo formalismo de MC pode ser interpretado como uma máquina de estados, onde os nodos da mesma representam os estados e os arcos representam as transições entre os estados do modelo em MC.

No decorrer deste documento, adota-se a seguinte notação para a definição dos modelos em MC.

Seja x x-ésimo estado de um modelo, onde 0 é o primeiro estado do modelo.

A seguir, apresenta-se a definição das escalas de tempo utilizadas pelo formalismo de MC.

Um modelo descrito pelo formalismo de MC pode ser classificado de acordo com a sua escala de tempo em cadeias de Markov à escala de Tempo Contínua (CTMC, Continuous Time Markov Chains).

Cadeias de Markov à escala de Tempo Discreta (DTMC, Discrete Time Markov Chains).

Os modelos em CTMC diferem dos modelos em DTMC basicamente por suas transições entre os estados poderem ocorrer em qualquer instante de tempo e não em pontos discretos de tempo.

Apresenta-se a seguir as propriedades para a construção de um modelo descrito pelo formalismo de MC.

Os estados do modelo são discretos e enumeráveis.

Assim, o formalismo de MCpermite cadeias de infinitos estados.

A escala de tempo para a transição entre os estados do modelo pode ser de forma contínua (CTMC) ou discreta (DTMC).

A transição entre os estados do modelo depende exclusivamente do estado atual do modelo, sem importar quais foram os estados prévios ou serão os estados futuros do modelo.

A taxa (CTMC) ou probabilidade (DTMC) de transição de estados do modelo dá-se obedecendo a uma lei exponencial ou geométrica respectivamente.

A representação gráfica de um modelo em MC é feita por autômatos, onde é associado para cada estado do autômato um estado do modelo e para cada transição uma taxa (CTMC) ou uma probabilidade (DTMC).

Um modelo em MC é representado, matematicamente, por uma matriz de transição de estados.

A probabilidade de cada estado em regime estacionário solução de um modelo em MC é a solução do sistema da equação linear, onde Q é a matriz de transição de estados e vetor de probabilidade é o autovetor correspondente ao autovalor unitário da matriz de transição.

É importante ressaltar que a soma dos elementos do vetor de probabilidade deve ser igual a 1.

Para os modelos em CTMC, a matriz de transição de estados Q é denominada de gerador infinitesimal, onde cada elemento não diagonal da linha i e coluna j da matriz representa a taxa de transição do estado i para o estado j do modelo.

Os elementos diagonais de Q representam o ajuste necessário para que a soma dos elementos de cada linha seja igual a zero.

Para os modelos em DTMC, a matriz de transição de estados P é denominada de matriz estocástica, onde cada elemento não diagonal representa a probabilidade de transição entre os estados do modelo.

Os elementos diagonais de P representam o ajuste necessário para que a soma dos elementos de cada linha seja igual a um.

O foco principal deste documento é o formalismo de CTMC.

Por conseguinte, as explicações e exemplos apresentados no decorrer deste documento fazem menção para modelos descritos à escala de tempo contínua (taxas de ocorrência) e não à escala de tempo discreta (probabilidades de ocorrência).

Apresenta um modelo em CTMC com quatro estados e seis transições.

Cada transição entre um estado e outro possui associada uma taxa de ocorrência à mesma.

A seguir, apresenta-se a definição formal do formalismo de CTMC.

Apesar do formalismo de MC permitir cadeias infinitas, a solução para cadeias infinitas existe para um conjunto reduzido de casos.

Alguns exemplos podem ser encontrados no capítulo referente a Processo de Nascimento e Morte.

Por outro lado, toda MC finita tem solução tal como será apresentada na seção seguinte.

Assim, nesta seção considera-se a formalização de um modelo em CTMC compreendendo um conjunto finito de estados e transições.

O conjunto de estados M compreende jMj estados x.

T é a função de transição a qual associa uma taxa de ocorrência de uma transição de um estado para outro.

A função T possui domínio em M£M e contra-domínio nos R+, a função é definida como TM£M R+.

Seja T taxa de ocorrência da transição do estado x para o estado y.

Note que nem toda a transição de um estado x para um estado y possui uma taxa não nula determinada pela função T.

Seja succ(x) conjunto não vazio dos estados y, tais que possua uma transição do estado x para algum estado y, succ(x) = fy 2Mj T 6= 0g.

O conjunto de estados sucessores de um determinado estado x é importante para a definição do método de obtenção do gerador infinitesimal, o qual será apresentado na próxima seção.

Um modelo em CTMC, de estados finitos, é representado, matematicamente, por uma matriz de transição de estados, a qual também é denominada de gerador infinitesimal.

Logo, a matriz Q é conhecida tanto como matriz de transição de estados como gerador infinitesimal.

Neste trabalho, adota-se o termo gerador infinitesimal para descrever matematicamente um modelo descrito pelo formalismo de CTMC.

Seja Q elemento da linha expressa pelo estado x e coluna expressa pelo estado y do gerador infinitesimal Q.

Os elementos do gerador infinitesimal Q de um modelo em CTMC são definidos.

Corresponde aos elementos não diagonais do gerador infinitesimal, os quais possuem a taxa de ocorrência da transição do estado x para o estado y.

Os elementos diagonais (ajuste diagonal das taxas de ocorrência das transições entre os estados) do gerador infinitesimal estão descritos.

Define os elementos nulos do gerador infinitesimal.

Demonstra-se nesta seção um exemplo completo de obtenção do gerador infinitesimal de um modelo descrito pelo formalismo de CTMC.

Apresenta um modelo descrito pelo formalismo de CTMC, o qual possui oito estados.

Este modelo descreve um buffer de requisições de impressão.

Este buffer faz o gerenciamento de duas impressoras, laser e deskjet.

Este buffer recebe, em média, uma requisição a cada 5 minutos (12 requisições por hora).

A impressora laser leva em média 2 segundos (1800 folhas por hora) para imprimir uma folha, enquanto a impressora deskjet imprime uma folha em 5 segundos (720 folhas por hora).

Um pedido de impressão pode ser atendido tanto pela laser como pela deskjet, respeitando a razão de que para cada hora trabalhada pela impressora deskjet, a impressora laser trabalha por 4 horas.

Os estados 0, 1, 2 e 3 representam o número de requisições no buffer (0, 1, 2 e 3 requisições respectivamente) que estão sendo atendidas pela impressora laser.

Em contra partida, os estados 4, 5, 6 e 7 representam o número de requisições no buffer (0, 1, 2 e 3 requisições respectivamente) que estão sendo atendidas pela impressora deskjet.

É possível construir o gerador infinitesimal do modelo em CTMC, a partir da identificação das taxas de ocorrência das transições de um estado para outro.

Primeiramente, identifica-se o número de estados jMj do modelo para se construir o gerador infinitesimal do mesmo.

A partir desta informação, o gerador infinitesimal será uma matriz de ordem jMj £ jMj.

Preenche-se os elementos não diagonais do gerador infinitesimal, utilizando as taxas de ocorrência da transição de um estado para outro.

Sendo assim, tem o gerador infinitesimal com os elementos não diagonais preenchidos.

Observação, seja uma linha i e uma coluna j, lê-se que a transição do estado i para o estado j tem taxa dada pela célula (i,j) da matriz.

Posteriormente, preenche-se os elementos diagonais (ajuste diagonal das taxas de ocorrência das transições entre os estados) do gerador infinitesimal.

Como a soma de cada linha do gerador infinitesimal deve ser igual a zero, o mesmo fica da seguinte maneira após o ajuste da diagonal.

Por último, preenche-se os elementos nulos do gerador infinitesimal.

A partir do gerador infinitesimal completo de um modelo em CTMC, é possível obter-se a probabilidade de cada estado em regime estacionário (vetor de probabilidade) através da resolução da equação.

Sendo assim, por exemplo, somando a probabilidade (buffer encontra-se cheio e está sendo atendido pela impressora laser) com a probabilidade(buffer encontra-se cheio e está sendo atendido pela impressora deskjet), tem-se a probabilidade do buffer encontrar-se cheio independentemente de qual impressora está atendendo-o.

O formalismo de Redes de Filas de Espera foi introduzido por Jackson nos anos 50 e teve um grande avanço quando soluções à forma-produto foram propostas em meados de 70.

A popularidade deste formalismo está no fato de ser uma idéia bastante intuitiva, onde clientes (ou requisições) passam por filas (ou servidores).

Muitas extensões do formalismo apresentam aproximações e até mesmo propostas de soluções à forma-produto.

No entanto, é difícil combinar e utilizar todas as técnicas propostas na literatura afim de aumentar sistematicamente o escopo da tradicional Rede de Filas de Espera com solução à forma-produto.

Neste capítulo são apresentadas as definições formais e informais para redes de filas abertas e fechadas, bem como técnicas para sua solução.

Apesar da descrição formal apresentada ser genérica, serão apresentadas técnicas de solução somente para filas com uma única classe de clientes.

Qualquer sistema que consiste na chegada de requisições de serviço para um ou mais recursos (servidores) pode ser chamado sistema de filas de espera, ou sistema de filas.

Dependendo dos tempos de chegada dessas requisições, filas são formadas com clientes esperando pelo uso do recurso de interesse.

Em algumas situações supõe-se que servidores possuam capacidade infinita de armazenamento de requisições de serviço, afim de facilitar a modelagem do sistema em questão.

O comprimento das filas de um sistema de filas depende basicamente de dois aspectos, a taxa média com que as requisições são feitas e as flutuações estatísticas dessa taxa.

Obviamente, se a taxa de chegada de clientes é maior do que a taxa de atendimento dos mesmo, as filas crescerão indefinidamente.

Porém, mesmo quando a taxa de chegada de clientes é menor do que a taxa de atendimento, filas podem se formar devido a flutuações estatísticas e variações momentâneas da taxa de chegada de clientes, uma vez que essas duas taxas (chegada de clientes e atendimento) são definidas por variáveis aleatórias.

Quando num único sistema existem duas ou mais filas interligando os caminhos que os clientes podem percorrer, tal sistema é denominado rede de filas de espera, ou simplesmente rede de filas.

Apresenta os possíveis tipos de filas que um sistema de filas pode possuir.

Redes de filas de espera são classificadas segundo três critérios ortogonais, a saber permanência dos clientes na rede, quando o número total de clientes na rede é constante, não havendo entrada nem saída dos mesmos, diz-se tratar de uma rede de filas fechada.

Caso contrário, com entrada e saída de clientes causando uma variação no número total dos mesmos, trata-se de uma rede de filas aberta.

Número de seridores por estação, uma estação monoservidora possui apenas um servidor, enquanto que uma estação multiservidora possui mais de um.

Tipos de clientes, em uma rede monoclasse todos os clientes são iguais e recebem o mesmo tratamento pelas estações servidoras, já em uma rede multiclasse os clientes recebem tratamento diferenciado, de acordo com a classe que pertençam.

A estrutura de uma rede de filas de espera (QN) compreende um conjunto M de filas, um conjunto R de diferentes classes de clientes, uma função P que define as probabilidades de rotação entre filas e N clientes para cada classe.

Então, a estrutura de uma rede de filas de espera é uma tupla QN, onde M é um conjunto de filas Q, onde jMj representa o número de filas no modelo.

R é um conjunto de diferentes classes de clientes.

P µM£M com dom(M) e codom.

N é o número de clientes para cada classe, onde j N j=j R j.

Denota-se por Pr a probabilidade de um cliente de uma classe r, a qual recebeu serviço na fila Qi, ser roteado da fila Qi para a fila Qj.

Esses parâmetros podem ser utilizados para computar a taxa média de visita de clientes (V r i) da classe r na fila Qi.

Nr denota o número de clientes de cada classe.

Para redes de filas de espera fechadas, o valor de Nr é sempre finito, enquanto para redes abertas esses valores podem ser infinitos.

Uma fila é composta por no máximo K clientes (capacidade), por um número C de servidores, por um conjunto S com tempos médios de serviço para cada classe de clientes, por um conjunto L com a taxas médias de chegada de clientes de cada classe, por um conjunto B de comportamento de clientes em cada classe e um conjunto D de prioridades entre classes.

Então, a estrutura de uma fila é uma tupla Q, onde K é a capacidade da fila.

C é o número de servidores disponíveis.

S é um conjunto de tempos médios de serviço.

L é um conjunto de taxas médias de chegada de clientes.

B é um conjunto de comportamentos de clientes.

D é um conjunto de disciplinas de serviços (prioridade entre classes de clientes).

Define-se Ki como o número de clientes (capacidade) e Ci como o número de servidores disponíveis na fila Qi.

Sr i é o tempo médio de serviço necessário para atender um cliente de uma classe r na fila Qi.

A taxa média de chegada de clientes de uma classe r em uma fila Qi vinda do exterior do modelo é denotada.

J denota o comportamento dos clientes de uma classe r roteados da fila Qi para a fila Qj quando Qj está cheia, o comportamento pode ser de perda2 (o cliente deixa o sistema), ou bloqueio a fila Qi para de enviar clientes para a fila Qj até que esta não esteja cheia.

Di denota o conjunto de prioridades, onde o valor de cada prioridade é (o valor 1 é a maior prioridade, enquanto j R j é a mais baixa prioridade).

Os índices de desempenho que podem ser calculados de uma QN são vazão média de clientes da classe r saíndo da fila Qi.

A medida ut significa unidades de tempo.

Cli significa cliente, média de utilização dos servidores de Qi pelos clientes da classe r.

Nr i, número médio de clientes da classe r na fila Qi.

Wr i, tempo médio de resposta de clientes da classe r na fila Qi.

A cálculo dos índices de desempenho para redes abertas difere do cálculo dos índices para redes fechadas, pois, como mencionado anteriormente, redes abertas têm a característica de receber clientes de fora do modelo (Li), enquanto redes fechadas não recebem clientes de fora do modelo, possuindo um número fixo de clientes (N).

O primeiro passo para encontrar os índices de desempenho, tanto para redes abertas quanto para redes fechadas, é encontrar a taxa média de visita de cada fila (Vi).

A taxa de visita de uma fila i é a proporção de clientes do sistema que passa por essa fila.

Cálculo das taxas de visita para redes fechadas.

Para calcular as taxas de visita em uma rede fechada.

Pode-se notar que a quantidade de clientes que passa por uma determinada fila é relacionada às outras filas devido às probabilidades de rotação.

Fica direto observar que a quantidade de clientes que passa em na fila 3 é 20% da quantidade de clientes que passa na fila 1.

Com isto obtém-se um sistema de equações solúvel indeterminado.

Como a taxa de visita é uma proporção, pode-se assumir um valor qualquer para uma fila específica e calcular as taxas das outras filas levando o valor assumido em consideração.

Por exemplo, pode-se assumir V1 = 1 e calcular V2 e V3.

Cálculo das taxas de visita para redes abertas.

Em redes abertas, como não existe uma relação entre as saídas da rede e suas entradas, não se obtém um conjunto de equações que permita calcular as taxas de visita.

Assim, um artifício utilizado é fechar o sistema com uma fila auxiliar no modelo, a qual absorverá todas as saídas e servirá como entrada para as filas que recebem clientes de fora do modelo.

Intuitivamente, podemos entender a fila auxiliar, inserida no modelo, como representante do "ambiente"ou "resto do mundo"com relação àquela rede de filas aberta.

A rede aberta recebe e develove clientes do "resto do mundo".

Ao utilizar este artifício deve-se atentar para que a proporcionalidade nas entradas de clientes da rede aberta seja mantida.

Neste exemplo, a fila X é a fila auxiliar.

Assume-se que sua taxa de visita tem valor 1.

A fila 1 recebe 2 5 dos clientes que vêm de fora do sistema mais metade dos clientes da fila 3.

Resolvendo o sistema de equações, encontra-se V1, V2 e V3.

Tendo em mãos as taxas de visitas das filas, é possível calcular os índices de desempenho do modelo em questão.

Nas próximas seções, será apresentado como esses índices são obtidos tanto para redes abertas, quanto para redes fechadas.

Esta seção mostra como os ídices de desempenho podem ser obtidos para redes de filas abertas.

Fluxo Médio ou Vazão Média de uma fila i (di).

O primeiro índice a ser calculado é di, que representa o fluxo médio de clientes no sistema.

Intuição, o fluxo de clientes por uma fila depende do total de clientes que entram no sistema e da proporção de clientes que são roteados para esta fila no sistema.

Assim, este índice é obtido multiplicando-se a taxa de visita da fila em questão pelo total de entradas no sistema.

Índice de Utilização de uma fila i (ui).

Tendo-se o fluxo médio de cada fila, é possível calcular o índice de utilização de cada fila, ou seja a porcentagem de utilização de cada fila do sistema.

Intuição, o tempo que o servidor de uma fila fica ocupado depende do número de clientes que passam pela fila (fluxo médio) e do tempo necessário para servir cada cliente (tempo de serviço).

Assim ui não tem unidade, representando um índice de ocupação da fila.

Caso ui > 1, significa que a fila está acima da ocupação máxima possível 100e assim não é possível fazer uma análise estacionária do sistema, pois há pelo menos uma fila que recebe mais requisições do que ela pode atender.

Tempo de Resposta de uma fila i (wi).

Para se obter a fórmula para o cálculo do tempo de resposta utiliza-se a Lei de Little e o Teorema da Chegada.

A Lei de Little diz que a população de uma fila é igual ao tempo de resposta vezes o fluxo da mesma.

Essa fórmula pode ser entendida com o seguinte exemplo, supondo o um curso que possua 9 semestres e que entram 80 alunos por semestre.

Os 9 semestres são o tempo de resposta enquanto os 80 alunos por semestre é o fluxo.

Logo, tem-se a população de 720 alunos.

O Teorema da Chegada diz respeito ao tempo de resposta em uma determinada fila.

Essa fórmula pode ser entendida da seguinte forma, o tempo que demorará para um determinado cliente ser atendido é o tempo para atender os clientes que já estão na fila mais o tempo para o próprio cliente ser atendido.

A partir daí, é possível deduzir outra forma de calcular o tempo de resposta onde não se faz necessário conhecer ni.

Assim, wi é o número de unidades de tempo de espera por cliente.

População Média de uma fila i (ni).

A população média de cada fila pode ser obtida através da lei de Little.

Porém, é possível calcular a população média conhecendo apenas a taxa de utilização da fila em questão (sem precisar do tempo de espera, (Tempo de Resposta), (Lei de Little),(Taxa de Utilização), (usando Tempo de Resposta e Lei de Little), (usando Taxa de Utilização).

Como pode-se notar, em redes abertas os demais índices de desempenho dependem do fluxo di, e o fluxo depende das taxas de entrada.

Em redes fechadas não há entradas mas sim um número de clientes que "habitam"o sistema.

Assim, a forma de solução é diferente.

Os índices de desempenho para redes fechadas dependem do número de clientes no sistema.

Por exemplo, intuitivamente pode-se aceitar que a ocupação de uma fila de uma rede de filas fechada com 1 cliente é menor que a mesma rede com 10 clientes.

Assim, para redes fechadas calcula-se os índices de desempenho em função do número de clientes existentes no sistema (N).

Considerando N = 0, sabe-se que a população de cada fila é 0, ou seja ni(0) = 0.

Esta obviedade é útil ao ser combinada com o Teorema da Chegada.

O Teorema da Chegada diz que o tempo de espera de um cliente na fila depende do número de clientes na fila (população) e do tempo de serviço da fila.

Assim, o tempo de serviço de uma fila considerando 1 cliente no sistema depende do tempo de serviço da fila e da população da fila com 0 clientes, ou seja wi(1) = Si ¤ (1 + ni(0)).

Esta fórmula é generalizada como abaixo e utilizada para o cálculo incremental dos índices de desempenho até atingir o tamanho da população desejada para análise.

Ou seja, a partir de ni(N), é possível calcular o tempo de resposta para todas as filas quando há N + 1 clientes no sistema.

Para o cálculo dos demais índices de desempenho, faz-se necessário o fluxo de clientes.

Em um rede fechada, não faz sentido falar em fluxo de clientes do mesmo modo como nas redes abertas, pois não há clientes vindo de fora do sistema nem clientes que saem do sistema.

Em redes fechadas sempre temos N clientes na rede.

Intuição, considere a toda a rede fechada como um sistema fechado com uma única fila.

Para este sistema de uma única fila, a população é N (número de clientes no sistema).

Ainda, o tempo de espera da fila que representa o sistema como um todo é uma ponderação dos tempos de espera das diversas filas que compõem a rede considerando a proporcionalidade do seu uso (taxa de visitas).

Utilizando a Lei de Little podemos extrair um índice de fluxo para a rede como um todo.

Chamemos de d0(N) o fluxo da rede como um todo, considerando N clientes.

A partir de d0(N), o fluxo da rede como um todo considerando N clientes na rede, deriva-se o fluxo de cada fila i com N clientes na rede.

Agora, também através da lei de Little, é possível calcular a população média de uma fila i quando há N clientes na mesma.

Dessa forma, tendo a população média das filas quando temos N clientes no sistema, é possível calcular o tempo de resposta das filas com poplulação utilizando, como explicado acima.

A partir disso novamente o fluxo e a população média quando temos N + 1 clientes no sistema podem ser calculados.

E assim sucessivamente, até o número de clientes que se queira verificar os índices de desempenho.

Este algoritmo iterativo chama-se Algoritmo MVA para redes fechadas (Mean-Value Analysis).

A utilização de uma dada fila i quando há N clientes na rede é obtida através da mesma fórmula para redes abertas.

Trabalharemos com dois exemplos.

O primeiro com rede aberta e o segundo com rede fechada.

Para a rede fechada mostrada, vamos calcular os índices de desempenho para uma população de 3 clientes no sistema.

Assim como em redes abertas, o primeiro passo é calcular as taxas de visitas das filas do sistema, o que nesse caso é bastante intuitivo.

Neste momento temos os índices de desempenho quando o sistema possui 1 cliente.

Como queremos os índices quando o sistema possui 3 clientes, temos que continuar as iterações.

Note que é possível verificar se os cálculos estão corretos verificando a população média das filas.

Se a soma dos ni(N) de todas as filas resultar em um número diferente de N, significa que algum cálculo não foi feito corretamente.

Neste caso a soma não resultou exatamente o valor 1 devido aos arredondamentos.

No decorrer deste capítulo, é apresentada uma definição informal do formalismo de Redes de Autômatos Estocásticos (SAN, Stochastic Automata Network) através da descrição das primitivas utilizadas no formalismo.

Posteriormente, apresenta-se a definição formal de SAN à escala de tempo contínua englobando os conceitos definidos informalmente na Seção 1.

Para isso, mostra-se os termos necessários para a definição de um modelo em SAN.

Além disso, apresenta-se as restrições para a definição de uma SAN bem definida e as regras necessárias para a obtenção do Descritor Markoviano equivalente a mesma.

O formalismo de Redes de Autômatos Estocásticos foi proposto por Plateau.

A idéia principal do formalismo de SAN é modelar um sistema em vários subsistemas, ou seja, um sistema composto de módulos -quase independentes-.

A expressão -quase independente- denota a possibilidade de ocorrer interação entre cada subsistema.

SAN é um formalismo para modelagem de sistemas com grande espaço de estados.

Essa modularização definida pelo formalismo de SAN permite o armazenamento e a solução eficiente de sistemas complexos por evitar os prejuízos da explosão do espaço de estados que ocorre no formalismo de Cadeias de Markov, o qual SAN tem equivalência de representação.

Cada subsistema é representado por um autômato estocástico e por transições entre os estados deste autômato.

As transições entre os estados de cada autômato são modeladas por um processo estocástico de tempo contínuo ou discreto definidos por distribuições exponenciais ou geométricas respectivamente.

É interessante ressaltar que toda SAN pode ser representada por um único autômato estocástico que contém todos os estados possíveis do sistema.

Esse único autômato corresponde à cadeia de Markov equivalente ao modelo em SAN.

Note que a modelagem em SAN apresentada nesse capítulo se aplica tanto à escala de tempo contínua como à escala de tempo discreta.

Entretanto, as explicações e exemplos apresentados ao longo deste capítulo fazem referência à escala de tempo contínua (taxas de ocorrência) e não à escala de tempo discreta (probabilidades de ocorrência), visto que o foco principal deste trabalho é o formalismo de SAN à escala de tempo contínua.

A diferenciação entre as duas escalas de tempo dá-se apenas na obtenção do Descritor Markoviano de cada modelo.

Enquanto um modelo em SAN à escala de tempo contínua gera uma cadeia de Markov à escala de tempo contínua (CTMC, Continuous Time Markov Chain), um modelo em SAN descrito em escala de tempo discreta gera uma cadeia de Markov à escala de tempo discreta (DTMC, Discrete Time Markov Chain).

No decorrer deste capítulo, adota-se a seguinte notação para a definição dos modelos em SAN, sejam A i-ésimo autômato de um modelo em SAN, onde A(1) é o primeiro autômato.

X-ésimo estado do autômato A, onde 0(1) é o primeiro estado do autômato A(1).

Identificador de um evento (local ou sincronizante).

Identificador de um evento e com probabilidade constante.

Identificador de um evento e com probabilidade funcional definida pela função.

As probabilidades são utilizadas quando um evento possui duas ou mais alternativas de transição.

Dessa maneira, probabilidades são utilizadas para indicar em que proporções o evento seguirá por uma transição ou por outra.

A probabilidade pode ser omitida caso esta seja igual a 1 (100%).

Outro ponto importante é que a soma das probabilidades de um evento deve ser sempre igual a 1 (100%).

A seguir, cada primitiva de modelagem é explicada detalhadamente.

Autômato estocástico é um modelo matemático de um sistema que possui entradas e saídas discretas.

O sistema pode se encontrar em qualquer um dentre o número finito dos estados do sistema ou das configurações internas.

O estado interno em que o sistema se encontra sumariza as informações sobre as entradas anteriores e indica ainda o que é necessário para determinar o comportamento do sistema para as entradas seguintes.

Baseado nessa definição, pode-se descrever um autômato estocástico como um conjunto finito de estados e um conjunto finito de transições entre esses estados.

A denominação de estocásticos atribuída a esses autômatos dá-se pela razão do tempo ser tratado como uma variável aleatória, a qual obedece a uma distribuição exponencial à escala de tempo contínua e uma distribuição geométrica à escala de tempo discreta.

O estado local do sistema modelado em SAN é o estado individual de cada autômato do modelo.

Por sua vez, o estado global do mesmo é definido pela combinação dos estados locais de todos os autômatos que compõem o modelo.

A mudança do estado global do sistema dá-se pela mudança do estado local de qualquer um dos autômatos do modelo.

A mudança de um determinado estado local para outro é feita através de transições.

As transições são construções que indicam a possibilidade de mudança entre um estado e outro.

No entanto, cada transição necessita ter ao menos um evento associado a ela para que essa possa ser disparada.

Apresenta um modelo em SAN com dois autômatos completamente independentes.

Neste primeiro exemplo, o autômato A(1) do modelo possui três estados 0(1), 1(1) e 2(1), enquanto o autômato A(2) possui apenas dois estados 0(2) e 1(2).

Dos cinco eventos que são modelados neste exemplo, três eventos (e1, e2, e3) ocorrem no autômato A(1), enquanto outros dois eventos (e4, e5) ocorrem no autômato A(2).

Note que no modelo não há interação entre os dois autômatos, existe apenas eventos locais em cada um deles.

As definições e os tipos de eventos que podem ser utilizados nos modelos em SAN serão vistos na próxima seção.

Evento é a entidade do modelo responsável pela ocorrência de uma transição, a qual muda o estado global do modelo.

Um ou mais eventos podem estar associados a uma transição e esta é disparada através da ocorrência de qualquer um dos eventos a ela associada.

Dois tipos de eventos podem ser modelados no formalismo de SAN.

Um evento pode ser classificado como local ou sincronizante.

Os eventos locais são utilizados em SAN para alterar o estado local de um único autômato sem que essa alteração ocasione uma mudança de estado em qualquer outro autômato do modelo.

Esse tipo de evento é particularmente interessante, pois permite que vários autômatos tenham um comportamento paralelo, trabalhando independentemente sem que haja interação entre eles.

Pode-se observar exemplos de eventos locais, a qual é composta exclusivamente por esse tipo de evento.

Os eventos sincronizantes alteram o estado local de dois ou mais autômatos simultaneamente, a ocorrência de um evento sincronizante em um autômato força a ocorrência deste mesmo evento nos outros autômatos envolvidos.

Através dos eventos sincronizantes, é possível fazer a interação entre autômatos.

Essa interação dá-se sob a forma de sincronismo no disparo das transições.

Cada evento deve possuir uma taxa de ocorrência e uma probabilidade associada ao mesmo.

Tanto a taxa de ocorrência como a probabilidade podem ter associados valores constantes ou valores funcionais.

Taxas e probabilidades funcionais assumem valores diferentes conforme os estados dos outros autômatos do modelo.

A classificação de um evento como local ou sincronizante é dada pela aparição do identificador do evento e no conjunto de eventos de um autômato.

Caso o identificador do evento apareça apenas no conjunto de eventos de um único autômato, o evento é classificado como evento local.

Se o mesmo identificador aparecer no conjunto de eventos de vários autômatos, o evento é classificado como evento sincronizante.

Taxas e probabilidades funcionais constituem a segunda possibilidade de interação entre autômatos nos modelos em SAN.

Outra possibilidade é a utilização de eventos sincronizantes1.

A utilização de funções para definir taxas e/ou probabilidades permite associar a um mesmo evento diferentes valores conforme o estado global do modelo.

A utilização de taxas e probabilidades funcionais não está limitada aos eventos locais e podem ser empregadas nos eventos sincronizantes exatamente como nos eventos locais.

As taxas e probabilidades funcionais são expressas por funções que levam em consideração os estados atuais dos autômatos do modelo, podendo desta forma variar seu valor conforme os estados em que se encontram os autômatos envolvidos na função.

Apresenta um modelo em SAN com 2 autômatos de três e dois estados respectivamente.

Da mesma forma que o modelo em SAN, também utiliza-se cinco eventos no modelo em SAN.

Entretanto, o evento e4 é um evento sincronizante, visto que o mesmo está associado a mais de um autômato do modelo.

Este evento ainda possui probabilidades associadas a diferentes transições no autômato A(1).

Além disso, o evento e5 possui agora a função f associada a sua taxa de ocorrência.

Como pode-se observar na definição da função f, a taxa de ocorrência da transição do estado 0(2) para o estado 1(2) é igual a 1 (caso o autômato A(1) esteja no estado 0(1)), igual a 2 (caso o autômato A(1) esteja no estado 2(1)), e a transição não ocorrerá caso o autômato A(1) esteja no estado 1(1).

Apresenta a CTMC equivalente ao modelo em SAN.

Assim como as taxas de ocorrência podem ser expressas por funções, o mesmo pode ocorrer com as probabilidades de cada evento.

A definição de funções usadas para expressar as probabilidades funcionais são exatamente iguais as funções usadas para definir as taxas de ocorrência.

Outros dois tipos de funções ainda são utilizadas em SAN, Função de Atingibilidade e Funções de Integração.

As expressões que definem a função de atingibilidade e as funções de integração são descritas da mesma forma que as taxas e probabilidades funcionais.

Porém, esses dois tipos de funções desempenham papéis diferenciados conforme explicados a seguir.

Função de Atingibilidade.

Devido à representação em SAN ser de forma modular e o autômato global (equivalente à cadeia de Markov) se constituir pela combinação de todos os autômatos do modelo, é necessário especificar uma função que determina os estados atingíveis do autômato global de um modelo em SAN.

A definição de quais estados podem ser atingíveis ou alcançados em um modelo em SAN é dada pela função de atingibilidade.

Essa função é definida usando-se as mesmas regras adotadas para a definição de taxas e probabilidades funcionais.

A noção de função de atingibilidade fica mais clara ao se imaginar, por exemplo, um modelo de compartilhamento de recursos, onde se tem N clientes disputando R recursos.

Este sistema pode ser modelado em SAN usando um autômato com dois estados para cada cliente.

O estado 0 representa que o recurso não está sendo utilizado pelo cliente i, enquanto o estado 1 representa que o recurso está em uso pelo cliente i.

É fácil imaginar que, se o número R de recursos for menor do que o número N de clientes, o estado global que representa todos os clientes utilizando um recurso não poderá ser atingido, pois este estado não corresponde à realidade do modelo.

Os estados que possuem tal característica são chamados de estados inatingíveis e devem ser eliminados do modelo através da função de atingibilidade, pois a probabilidade do modelo encontrar-se em algum destes estados é igual a zero.

A função de atingibilidade correta para o modelo de compartilhamento de recursos descrito acima é reachability.

Funções de Integração.

Define-se funções de integração para a obtenção de resultados numéricos sobre o modelo em SAN.

As funções de integração avaliam qual a probabilidade do modelo em SAN encontrar-se em um determinado estado.

Com isso, pode-se compor funções de integração que levem em conta a probabilidade do modelo se encontrar em um conjunto de estados, podendo assim se obter índices de desempenho e confiabilidade do modelo.

Essas funções de integração são avaliadas sobre o vetor de probabilidade que contém a probabilidade do modelo se encontrar em cada um dos estados pertencente a ele.

Um exemplo de função de integração, tendo em mente o modelo de compartilhamento de recursos exposto anteriormente, é dado pela função u, onde se quer descobrir a probabilidade do autômato A(1) não estar utilizando o recurso, encontrar-se no estado 0(1).

Via de regra, todas as funções são modeladas em SAN da mesma forma, o que as diferenciam é como elas são empregadas no modelo.

Será considerada neste trabalho a formalização de um modelo em SAN compreendendo N autômatos e E eventos.

Sejam A conjunto de autômatos (jAj= N) E conjunto de eventos (jEj= E) F função de atingibilidade.

O conjunto de autômatos A compreende N autômatos nomeados A.

Sejam S conjunto de estados (locais) do autômato A, JSj número de estados de S, S espaço de estados produto do modelo em SAN definido como S(1), X um estado local do autômato A (x 2 S).

O estado global ~x de um modelo em SAN é obtido pela mudança dos estados locais dos N autômatos, ~x, onde x é o estado local de um autômato A (~x 2 S).

Sejam ~x composição dos estados locais x, estado global obtido pela substituição do estado local x pelo estado local y no autômato espaço de estados produto do conjunto de estados locais dos autômatos A, onde número de estados de S, onde ! é o conjunto de índices dos autômatos.

Note que a definição de um estado local do autômato (x) e a definição de um estado global (~x) podem ser vistas como casos particulares.

Um elemento funcional f(S) é uma função de S R+.

Os autômatos A com i são os parâmetros do elemento f.

Os elementos funcionais servem para definir probabilidades e taxas funcionais conforme descritos a seguir.

Seja f(~x) elemento funcional3 f(S) avaliado para a composição de estados ~x.

Elementos funcionais definem taxas e probabilidades funcionais.

Todas as taxas e probabilidades funcionais são consideradas como elementos funcionais, mesmo aqueles que possuem valor constante.

Obviamente, tal definição não representa uma restrição, visto que elementos constantes podem ser vistos como funções (constantes) com parâmetro.

Desta maneira, todos os elementos de um modelo em SAN podem ser considerados como funções de S R+.

O conjunto de eventos E é composto de E eventos nomeados ej.

Um evento em um modelo em SAN é definido por identificador.

Índice do autômato que possui a taxa do evento e.

Uma tupla de evento é composta de identificador do evento, elemento funcional definido, o qual define a taxa de ocorrência do evento e.

Caracterizam os eventos envolvidos em um modelo em SAN.

Mais especificamente, a Definição 27 identifica cada evento e a qual autômato é indicada a taxa do evento.

Associa uma taxa de ocorrência a um evento e.

O conjunto T contém todas as tuplas de transição.

Uma tupla de transição é definida por identificador do evento, elemento funcional definido de S, o qual representa a probabilidade de uma transição quando da ocorrência do evento e.

Um elemento funcional pode ser uma taxa ou uma probabilidade, e ele também pode ser expresso na forma avaliada.

O conjunto T contém ao menos uma tupla de transição para cada evento e no conjunto de eventos E.

Q é a função de transição de S, a qual contém os rótulos de transição do autômato A.

Não Q é a função de transição de S ! T ¤, a qual contém os rótulos de transição do autômato global.

Sejam Q rótulo de transição do estado local x para y em Q, contendo uma lista de tuplas de transição em T, Não Q rótulo de transição do estado global ~x para ~y em ~Q, contendo uma lista de tuplas de transição em T.

Conjunto dos índices i tal que o autômato A possui ao menos uma tupla de transição com o identificador do evento e em um dos elementos de Q.

A função de transição Q de um autômato A, informa a associação entre os estados do autômato e quais eventos podem dispará-lo.

Essa associação é feita através das tuplas de transição que compõem o conjunto de tuplas de transição T.

Cada tupla de transição define, além do identificador do evento, a probabilidade do evento para aquela transição.

O número de tuplas de transição associadas a um rótulo de transição é igual ao número de eventos que podem disparar a transição.

Um evento e é classificado como evento local, evento sincronizante.

O conjunto de eventos locais El é definido como El = fe 2 E jjj= 1g.

O conjunto de eventos sincronizantes Es é definido como Es = fe 2 E jjj> 1g.

O conjunto de eventos E é definido.

Faz a classificação de cada evento, o qual pode ser um evento local ou um evento sincronizante.

Essa diferenciação não é feita na definição do evento, mas é necessária para a construção dos tensores do Descritor Markoviano, o qual é composto por uma parte local (eventos locais) e por outra parte sincronizante (eventos sincronizantes).

Um autômato A é definido por um conjunto de estados S e uma função de transição Q.

Um autômato A tem como parâmetros a união dos parâmetros de todos os elementos funcionais contidos nos seus rótulos de transição.

Sejam A(A~(!)) autômato A que possui como parâmetros os autômatos A(j), onde j 2.

A(x~(!)) autômato A(A~) com todos seus elementos funcionais avaliados para composição dos estados locais ~x, taxa de ocorrência do evento e da tupla de transição associada ao rótulo de transição Q probabilidade da tupla de transição associada ao rótulo de transição Q, succe(x) conjunto dos estados sucessores y, tais que o rótulo Q possua uma tupla transição com o identificador e.

O conjunto dos estados sucessores do evento e em x pode ser vazio, caso a transição não possa ser disparada em x pelo evento e, o estado global obtido pela substituição de todos os estados locais x por y em todos os autômatos A (i 2 e y 2 succe(x)).

Um evento sincronizante e é realizável no estado global ~x, se e somente se 8i 2 o conjunto de estados sucessores y 2 succe(x) não for vazio.

A função de atingibilidade F é um elemento funcional definido de S.

A função associa aos estados globais de S o valor 1 se eles são atingíveis e o valor 0 caso contrário.

Seja R subconjunto de S que compreende todos os estados ~x tais que F(~x) = 1.

Um modelo em SAN composto de N autômatos e E eventos é definido por cada um dos autômatos A, cada um dos eventos e 2 E, e a função de atingibilidade F.

Para se avaliar a solução estacionária de um modelo em SAN, são necessárias algumas propriedades, vivacidade, irreducibilidade, ergodicidade, etc.

Para isso, algumas restrições devem ser respeitadas para assegurar tais propriedades.

Os modelos descritos em SAN que obedecem a estas restrições são conhecidos como SAN bem definidas.

Um autômato A é bem definido, se e somente se para todo ~x 2 S, para todo x 2 S e para todo e 2 E tal que succe(x) for diferente de vazio.

Esta primeira restrição impõe que as tuplas de transição referentes a um mesmo evento e e referentes às transições de A saindo de um mesmo estado devem possuir a mesma taxa de transição.

A soma das probabilidades de todas as transições saindo desse mesmo estado deve ser igual a 1 ou a um elemento funcional avaliado sobre.

Estas restrições têm por objetivo garantir a unicidade da definição das taxas de eventos em relação ao conjunto de transições em cada um dos autômatos.

Imposta aos eventos afirma que uma tupla de transição deve aparecer uma única vez no conjunto de tuplas de uma transição e o evento e deve pertencer ao conjunto de eventos E.

A função de atingibilidade F é bem definida, se e somente se o conjunto de estados atingíveis R é um grafo de transição fortemente conexo.

A terceira restrição assegura a irredutibilidade da cadeia de Markov correspondente ao modelo em SAN e permite empregar os teoremas padrões.

Uma SAN é bem definida, se e somente se todos seus autômatos são bem definidos, todos seus eventos são bem definidos, sua função de atingibilidade é bem definida.

Nesta seção, apresenta-se a definição informal do formalismo de Redes de Petri e as definições informais e formais do formalismo de Redes de Petri Estocásticas.

Para cada formalismo um exemplo é apresentado.

Finalmente, exercícios sobre o tema são sugeridos.

Uma Rede de Petri é uma abstração de um sistema real.

Ela é um modelo formal do fluxo de dados e controle do sistema modelado em questão.

As propriedades, conceitos e técnicas para modelagem de uma Rede de Petri foram desenvolvidas utilizando métodos simples e poderosos para descrição e análise do fluxo de sistema.

O formalismo de Redes de Petri (PN, Petri Nets) é utilizado principalmente em sistemas que possam apresentar atividades assíncronas e concorrentes.

Redes de Petri têm sido utilizadas principalmente para a modelagem de sistemas de eventos em que estes possam ocorrer concorrentemente, havendo obstáculos na concorrência, precedência ou freqüência desses eventos.

A estrutura de uma Rede de Petri é um grafo bipartido1 que compreende um conjunto de lugares P, um conjunto de transições T, e um conjunto de arcos direcionados A.

Os lugares são representados graficamente por círculos, as transições por barras e os arcos direcionados por setas.

Os arcos direcionados conectam os lugares às transições e as transições aos lugares.

Um exemplo da representação gráfica de uma Rede de Petri que possui 5 lugares e 6 transições.

Um lugar é uma entrada para uma transição se existe um arco direcionado do lugar para a transição em questão.

Analogamente, um lugar é uma saída de uma transição se existe um arco direcionado da transição para o lugar em questão.

Uma Rede de Petri pode ser considerada marcada quando ela possuir tokens ou marcas.

Tokens encontram-se nos lugares.

As transições, quando disparadas, consomem tokens dos lugares que as alimentam e geram marcas nos lugares por elas alimentadas.

Tokens são sinais em uma Rede de Petri representados graficamente por um ponto preto.

A quantidade e a posição dos tokens em uma Rede de Petri podem variar durante o funcionamento da mesma.

Uma Rede de Petri marcada é definida pelo número mn de tokens contidos em cada lugar pn da rede.

Uma marcação Mi de uma Rede de Petri é definida pelo conjunto de mn dos lugares da mesma, ou seja, a marcação inicial de uma Rede de Petri é M0.

Tem-se um exemplo de uma Rede de Petri marcada.

Uma Rede de Petri é executada através do disparo de transições.

Para ocorrer o disparo de uma transição, é necessário que esta transição esteja habilitada para isto.

Uma transição é considerada habilitada para disparar quando todos os lugares de entrada dela contiverem pelo menos um token.

Nota-se que a transição t1 possui apenas o lugar p1 como entrada, e este possui pelo menos um token.

Logo, a transição t1 está habilitada e pode ser disparada.

Quando uma transição é disparada remove-se um token de cada lugar de entrada da transição em questão e então coloca-se um token em cada lugar de saída da mesma.

Cada disparo de uma transição pode modificar a distribuição dos tokens nos lugares e conseqüentemente pode produzir uma nova marcação Mj para a Rede de Petri.

Tokens são considerados entidades atômicas (indivisíveis), ou seja, o disparo de uma transição pode desativar outros possíveis disparos, removendo tokens que poderiam ser consumidos por uma ou outra transição alimentada por um mesmo lugar de entrada.

Pode-se notar que após o disparo da transição t1, os lugares p2 e p3 receberam um token cada.

Por conseguinte, as transições t2 e t3 passaram a estar habilitadas para o disparo.

O disparo da transição t2 coloca um token no lugar p4 e habilita a transição t4.

O disparo da transição t3 coloca um token no lugar p5 e também habilita o disparo da transição t5.

Neste momento, as transições t4, t5 e t6 estão habilitadas a serem disparadas, porém apenas uma destas três transições pode ser disparada.

A seleção do disparo é não determinística e o disparo de uma transição desativa automaticamente o disparo da outra.

O resultado do disparo de uma transição de uma marcaçãoMi pode gerar uma nova marcação Mj.

A marcação Mj é dita imediatamente atingível de Mi se ela pode ser obtida do disparo de uma transição habilitada em Mi.

Uma marcação Mk é dita atingível de Mi se existir uma seqüência de disparo de transições que levem o estado da Rede de Petri em questão de Mi para Mk.

O funcionamento de uma Rede de Petri gera uma seqüência M de marcações {M0, M1, M2,} e uma seqüência T de transições.

O disparo de uma transição tk, habilitada em Mi, pode mudar o estado da Rede de Petri de Mi para Mj e assim por diante.

Com isso, pode-se definir o conjunto de atingibilidade de uma Rede de Petri.

O termo atingibilidade também é conhecido como reachability.

O conjunto de atingibilidade (RS, Reachability Set) é composto por todas as marcações distintas de M que são atingíveis a partir de M0.

As marcações do conjunto M podem ser representadas na forma de uma árvore.

A árvore de atingibilidade é construída a partir da marcação inicial M0 da Rede de Petri em questão.

Em seguida, leva-se em conta todas as marcações imediatamente atingíveis desta marcação inicial.

Somente M1 é imediatamente atingível a partir da marcação inicial.

A partir desta nova marcação, repete-se o mesmo procedimento.

Logo, M2 e M3 são as marcações imediatamente atingíveis a partir de M1.

Considerando M2 como a nova marcação, tem-se as marcações M1, obtida anteriormente, e M4.

A marcação M3 também gera as marcações M1 e M4.

Repetindo o mesmo procedimento para M4, consegue-se as marcações M0, M2 e M3.

Desta forma, obtém-se a árvore de atingibilidade do exemplo em questão.

A construção da árvore a partir da marcação inicial M0 poderia gerar uma árvore de tamanho infinito.

Entretanto, para se representar a árvore em um tamanho finito, quando encontra-se um marcação já atingida, não expande-se a marcação em questão, considerando-a como uma marcação duplicada.

As marcações duplicadas ou estados mortos são representados pelas folhas da árvore.

As folhas da árvore de atingibilidade são marcações as quais não são mais expandidas por já terem sido obtidas anteriormente.

Os estados mortos são estados finais do sistema os quais não possuem transições habilitadas para os mesmos.

Um lugar de uma Rede de Petri pode apresentar a propriedade de limitação.

O termo limitação também é conhecido como boundedness.

Um lugar pode ser dito como k-limitado ou simplesmente limitado se o número de tokens do lugar não excede o limite k do mesmo.

Para todos os lugares da Rede de Petri em questão, o limite k é igual a 1, pois nenhum lugar da Rede de Petri deste exemplo contém mais de 1 token.

Uma Rede de Petri também pode ser denominada limitada.

Diz-se que uma Rede de Petri é limitada se o limite de todos os lugares for menor que infinito.

Logo, pode-se concluir que a Rede de Petri é 1-limitada, pois nenhum lugar desta rede acumula mais do que 1 token em qualquer marcação possível da mesma.

Um lugar de uma Rede de Petri pode ser considerado seguro se ele tiver no máximo 1 token, ou seja, um lugar que é 1-limitado é considerado um lugar seguro.

O conceito de segurança é simplesmente uma particularização do conceito de limitação.

O termo segurança também é conhecido como safeness.

Esta propriedade é uma das mais importantes para a modelagem de sistemas digitais, visto que um lugar pode ser modelado como uma porta ou mesmo um flip-flop.

Logo, pode-se dizer que uma Rede de Petri é segura se o limite k de todos os lugares da mesma não exceder 1 token.

Como pode-se observar, a Rede de Petri apresentada no exemplo é uma rede segura, pois ela é uma rede 1-limitada.

Além disso, existe o conceito de vivacidade.

O conceito de vivacidade está definido em função das possibilidades de disparo das transições.

O termo vivacidade também é conhecido como liveness.

Vivacidade é uma propriedade fundamental para sistemas do mundo real.

Uma transição é potencialmente disparável em uma marcação M0 se existe uma marcação Mi atingível a partir de M0, ou seja, uma transição é considerada viva se esta não é passível de um impasse ou deadlock.

Impasse em uma Rede de Petri é a impossibilidade do disparo de qualquer transição da mesma.

Um exemplo de modelagem de uma Rede de Petri é o caso de compartilhamento de recursos entre componentes do sistema.

Tem-se um exemplo de modelagem de Rede de Petri para o compartilhamento de recursos com exclusão mútua.

Apresenta a Rede de Petri que representa o processo de produção em uma fábrica de água mineral.

Supõe-se que esta fábrica possua uma única máquina responsável pela manufatura da garrafa de água e da tampinha da mesma.

Portanto, quando esta máquina estiver sendo usada para fabricar as garrafas, o processo de manufatura das tampinhas deverá aguardar para que possa-se utilizar a mesma máquina, e vice-versa.

Tendo em vista a rede, o lugar p0 da rede representa o depósito de matériaprima e o lugar p9 a habilitação do sistema para a manufatura.

Os lugares p1 e p2 representam, respectivamente, os repositórios de matéria-prima para as garrafas e tampinhas.

Os lugares p3 e p4 representam o processo de manufatura das garrafas e o processo de manufatura das tampinhas respectivamente.

O lugar p7 representa a máquina responsável pela linha de produção da fábrica.

Um token neste lugar representa que a máquina está disponível.

Quando não se encontrar um token neste lugar, significa que a máquina não está disponível, ou seja, um dos dois processos está utilizando a máquina.

Os lugares p5 e p6 são, respectivamente, os depósitos das garrafas e das tampinhas.

Por último, o lugar p8 representa o processo de montagem da garrafa de água mineral.

A transição t0 representa o início do processo de manufatura.

Neste momento, é feita a distribuição de matéria-prima para os depósitos p1 e p2 para a manufatura de garrafas e tampinhas.

As transições t1 e t2 representam, respectivamente, o início dos processos de manufatura das garrafas e tampinhas.

Como o lugar p7 possui apenas um token, apenas uma das duas transições t1 ou t2 poderá ocorrer.

Quando uma dessas transições ocorrer, automaticamente o disparo da outra transição será impossibilitado, pois o token do lugar p7 será consumido.

A transição t3 representa o término da manufatura de garrafas e, conseqüentemente, a liberação da máquina.

Da mesma forma, a transição t4 libera a máquina e termina com o processo de manufatura de tampinhas.

O disparo da transição t3 colocará um token em p5 e o disparo da transição t4 colocará um token em p6.

Quando ocorrerem uma destas transições, automaticamente será colocado um token em p7, liberando a máquina para um novo processo de manufatura.

Quando ambos os lugares p5 e p6 contiverem pelo menos um token, então a transição t5 é disparada.

Quando isso ocorrer, um token é colocado no lugar p8 e outro no lugar p9, habilitando o processo de manufatura de outras garrafas e tampinhas, desde que haja matéria-prima.

Muitas outras áreas de estudo podem ser mencionadas como possíveis assuntos para a modelagem de Redes de Petri, incluindo alocação de recursos, sistemas operacionais, redes de filas, controle de tráfego, entre outros.

O formalismo de Redes de Petri é uma ferramenta de grande facilidade para modelagem de uma vasta variedade de sistemas.

Usando o formalismo de Redes de Petri, é possível descrever somente a estrutura lógica de sistemas, pois tal formalismo não inclui nenhum conceito de tempo.

Entretanto, freqüentemente, o conceito de tempo tem um papel importante na descrição do comportamento de sistemas.

A introdução do conceito de tempo no formalismo de Redes de Petri permite a descrição de um comportamento dinâmico de sistemas.

Usou-se o conceito de tempo para a modelagem do comportamento de sistemas computacionais.

Redes de Petri Temporizadas (TPN, Timed Petri Nets), associando um tempo fixo no disparo de transições.

O formalismo de Redes de Petri Temporizadas tem como sua principal característica a associação de um atraso fixo para cada transição do modelo.

Redes de Petri Temporizadas foram o passo inicial para a criação do formalismo de Redes de Petri Estocásticas (SPN, Stochastic Petri Nets).

O formalismo de Redes de Petri para descrever sincronização e concorrência com um modelo estocástico é o principal atrativo para obter-se uma avaliação quantitativa de sistemas computacionais complexos.

Os primeiros estudos sobre Redes de Petri Estocásticas foram desenvolvidos por Symons, Natkin e Molloy.

As Redes de Petri Estocásticas são obtidas através da associação de um tempo distribuído exponencialmente com o disparo de cada transição da rede.

O formalismo de Redes de Petri Estocásticas (SPN, Stochastic Petri Nets) é uma ferramenta para modelagem e avaliação de desempenho de sistemas envolvendo concorrência, não determinismo e sincronização.

Redes de Petri Estocásticas são definidas assumindo que todas as transições são temporizadas e que o atraso no disparo das transições é associado a uma variável aleatória distribuída exponencialmente.

Dada uma Rede de Petri Estocástica com uma marcação que possua diversas transições habilitadas a serem disparas, uma das transições ocorre.

Quando uma transição de uma Rede de Petri Estocástica é disparada, assim como no formalismo de Redes de Petri, uma nova marcação pode ser gerada.

Esta nova marcação pode conter transições que já encontravam-se habilitadas na marcação anterior, mas não foram disparadas.

Por causa da propriedade de ausência de memória da distribuição exponencial, pode-se assumir que a atividade associada a cada transição é recomeçada para qualquer nova marcação.

A estrutura de uma Rede de Petri Estocástica possui os mesmos elementos contidos na estrutura de uma Rede de Petri acrescido do conjunto L de taxas de disparos, possivelmente dependente de marcação, associadas às transições.

Segundo Molloy, devido à propriedade de ausência de memória da distribuição exponencial do atraso dos disparos, o formalismo de Redes de Petri Estocásticas é isomórfico5 ao formalismo de Cadeias É possível mostrar que uma Rede de Petri Estocástica é ergódica.

Ergódica significa que para qualquer marcação desta rede atingida a partir da marcação inicial, pode-se novamente atingir a marcação inicial.

Logo, se uma Rede de Petri Estocástica é ergódica, é possível calcular a distribuição da probabilidade de solução estacionária das marcações da mesma resolvendo a equação.

Onde Q é o gerador infinitesimal cujos os elementos são obtidos através das taxas de disparos correspondentes às transições e ¼ é o vetor de probabilidade de solução estacionária.

Para auxiliar na construção da Cadeia de Markov equivalente à Rede de Petri Estocástica, constrói-se a árvore de atingibilidade da rede em questão.

O processo para a construção da árvore de atingibilidade de uma Rede de Petri Estocástica segue o mesmo processo da construção da árvore de uma Rede de Petri.

Representa a árvore de atingibilidade da Rede de Petri Estocástica.

A partir da árvore de atingibilidade, pode-se construir a Cadeia de Markov equivalente ao modelo.

O espaço de estados da Cadeia de Markov correspondente à árvore de atingibilidade de uma Rede de Petri Estocástica é equivalente às marcações encontradas na mesma.

Por conseguinte, a árvore de atingibilidade possui 6 marcações que são equivalentes aos estados da Cadeia de Markov.

Constata-se que a taxa de transição do estado 0 para o estado 1 é igual a t1(2).

O valor entre parênteses corresponde ao número de tokens do lugar p1 na marcação M0, visto que esta transição é dependente de m1.

Por conseguinte, a taxa de transição do estado 1 para o estado 2 e do estado 3 para o estado 4 é igual a t1(1), visto que m1 é igual a 1 em M1 e M3.

Uma transição pode ter associada a ela uma condição de disparo chamada de controlador6.

Sendo assim, um controlador associa uma condição a uma transição de modo que o disparo da mesma fique dependente da condição especificada.

Com isso, o disparo da transição fica dependente não somente do número de tokens de um lugar, mas de qualquer condição associada ao número de tokens do mesmo, o número de tokens maior ou igual a uma determinada quantia de tokens de um lugar.

Assumindo que as taxas de transição, pode-se obter o gerador infinitesimal Q a partir da árvore de atingibilidade.

O gerador infinitesimal é uma matriz cujos elementos qij são obtidos através do somatório das taxas de disparo das transições habilitadas na marcação Mi as quais os disparos geram a marcação Mj.

Cabe ressaltar que em se tratando de gerador infinitesimal, os elementos da diagonal principal da matriz (qii) correspondem a valores negativos de forma que a soma dos elementos de uma linha seja igual a zero.

Tem-se a matriz do gerador infinitesimal da Rede de Petri Estocástica.

Utilizando o gerador infinitesimal Q obtido, pode-se resolver a equação e obter os valores do vetor de probabilidade.

É possível, a partir do vetor de probabilidade ¼, obter uma avaliação quantitativa do comportamento da Rede de Petri Estocástica.

A probabilidade de uma condição em especial de uma Rede de Petri Estocástica pode ser calculada pela equação onde A é o subconjunto de marcações atingíveis a partir da marcação inicial que satisfaça a condição requerida.

Também é possível calcular, através da equação, o número médio de tokens em um determinado lugar.

Onde A é o subconjunto de marcações atingíveis a partir da marcação inicial as quais o número de tokens do lugar pi é igual a n, e k é o limite máximo de tokens do lugar em questão.

Logo, o lugar pi é k-limitado.

Como exemplo, pode-se calcular o número médio de tokens do lugar p1 da Rede de Petri Estocástica.

A taxa média de disparo da transição tj por unidade de tempo é calculada pela equação.

Como demonstração, usando a equação, pode-se calcular a taxa de disparo da transição t2, habilitada somente nas marcações M1, M2 e M4.

Seja C o conjunto de condições associadas aos disparos das transições de T.

C é uma condição que pode ser associada a uma transição t 2 T, a qual depende das marcas dos lugares p 2 P.

Esta condição é uma função com domínio nas marcas dos lugares p 2 P e contra-domínio em falso e verdadeiro.

Estas condições permitem que o disparo de uma transição tenha um dependência em relação à quantidade de tokens de um determinado lugar do mesmo componente SPN.

Um componente SPN é definido pela tupla (P, T, I, O, W, G, M0), onde P é um conjunto não vazio de lugares.

T é um conjunto não vazio de transições.

I e O são funções de entrada e saída das transições para um conjunto de lugares.

Função de associação de um processo estocástico distribuído exponencialmente para cada transição.

Função, chamada de controlador8, que determina uma condição c 2 C necessária (mas não suficiente) ao disparo de cada transição t 2 T.

Número inicial de tokens em cada lugar.

Um exemplo de modelagem de Rede de Petri Estocástica é dado, a qual representa uma variação do exemplo apresentado.

A Rede de Petri Estocástica modelada continua representando o processo de produção em uma fábrica de água mineral.

Porém, taxas de disparos estão associadas às transições da rede.

Para manter-se a relação de ergodicidade da Rede de Petri Estocástica com a Cadeia de Markov que a representa, os lugares p8 e p9 da Rede de Petri original foram retirados.

Esta Rede de Petri Estocástica possui 30 marcações, geradas a partir do disparo das transições.

Representa a árvore de atingibilidade do exemplo em questão.

Neste exemplo, supõe-se que a máquina, responsável pela manufatura da garrafa de água e pela tampinha da mesma, não suporta a produção sobreposta9 de mais do que 2 unidades de 7O valor numérico expressado é a taxa média de ocorrência da transição.

Logo, o lugar p0 da rede possui apenas 2 tokens, porém a manufatura das garrafas e tampinhas depende apenas do estoque de matéria-prima destes elementos, os quais não estão sendo representados.

Os lugares p1 e p2 representam os repositórios de matéria-prima já alocada para as garrafas e para as tampinhas respectivamente.

Os lugares p3 e p4 representam, respectivamente, o processo de manufatura das garrafas e o processo de manufatura das tampinhas.

O lugar p7 representa a máquina responsável pela linha de produção da fábrica.

A máquina suporta apenas uma tarefa por vez, ou seja, um token no lugar p7 indica que a máquina está disponível.

Se este lugar não possuir um token, significa que um dos dois processos de produção está utilizando a máquina.

Os lugares p5 e p6 são os depósitos das garrafas e das tampinhas respectivamente.

Ao contrário do exemplo modelado, este exemplo não possui um lugar representando a junção da garrafa e tampinha de água mineral.

Este passo é tratado de forma abstrata na transição t5, onde esta ocorre à medida que haja tokens nos lugares p5 e p6.

Conseqüentemente, um token é retirado dos lugares p5 e p6 (depósitos de garrafas e tampinhas) e colocado no lugar p0, liberando o processo de manufatura de uma nova garrafa e nova tampinha.

A transição t0 representa o início do processo de manufatura.

Esta transição está associada a uma taxa de disparo dependente da marcação de m1.

Quando a transição t0 é disparada, um token é removido de p0 e adicionado em p1 e p2, habilitando o processo de manufatura das garrafas e tampinhas.

Como as transições t1 e t2 encontram-se em conflito, quando a máquina estiver produzindo garrafas (lugar p3), ela não estará produzindo tampinhas (lugar p4), e vice-versa.

Quando uma das transições t3 ou t4 ocorrer, um token será colocado em p7 disponibilizando a máquina para um novo processo de manufatura.

Quando ambos os lugares p5 e p6 contiverem ao menos um token cada, então a transição t5 é disparada.

Isso caracteriza o fim do processo de manufatura de garrafas e tampinhas, possibilitando uma possível continuação do processo.

Com isso, um token é colocado em p0 permitindo a produção de uma nova garrafa e tampinha.

O formalismo de Redes de Petri Estocásticas é uma ferramenta muito útil para análise de sistemas de computadores, visto que permite às atividades de sistemas serem precisamente descritas através de um gráfico.

Este gráfico pode ser convertido para um modelo Markoviano utilizado para obter-se avaliação quantitativa do sistema em questão.

O Descritor Markoviano é uma fórmula algébrica que permite escrever de forma compacta o gerador infinitesimal da cadeia de Markov correspondente a um modelo em SAN pelo viés de uma fórmula matemática.

Esta fórmula matemática descreve, a partir dos tensores de transição de cada autômato, o gerador infinitesimal da cadeia de Markov associado ao modelo em SAN.

Para cada autômato A é associado um tensor Q l, agrupando todas as taxas das tuplas de transição dos eventos locais do conjunto El e 2jEsj tensores Q e+ e Q, agrupando todas as taxas das tuplas de transição dos eventos sincronizantes do conjunto Es.

Corresponde aos elementos não diagonais do tensor de transição local (taxas dos eventos locais), ao passo que a corresponde aos elementos diagonais (ajuste diagonal das taxas dos eventos locais).

Define os elementos nulos do tensor de transição local.

Os elementos do tensor das transições sincronizadas que representam a ocorrência do evento sincronizante e 2 Es são definidas.

Corresponde aos autômatos que não dizem respeito ao evento sincronizante e.

Define os elementos não nulos (diagonais ou não) dos tensores para o autômato mestre referentes ao evento e.

Define os elementos não nulos (diagonais ou não) dos tensores para os autômatos escravos referentes ao evento e.

Define os elementos nulos dos tensores para os autômatos envolvidos no evento e.

Os elementos do tensor das transições sincronizadas que representam o ajuste necessário à ocorrência do evento e 2 Es são definidas.

Corresponde aos autômatos que não dizem respeito ao evento sincronizante e.

Corresponde aos elementos não nulos do tensor do autômato mestre do evento e, ao passo que a corresponde aos autômatos escravos.

Corresponde aos elementos nulos dos tensores dos autômatos referentes ao evento sincronizante e (esses tensores são diagonais).

O gerador infinitesimal Q correspondente à cadeia de Markov associada a uma SAN bem definida é representado pela fórmula tensorial chamada Descritor Markoviano.

Uma vez que toda soma tensorial é equivalente a uma soma de produtos tensoriais particulares, o Descritor Markoviano pode ser apresentado.

Representa os tensores de transição necessárias à escrita da equação.

A parte superior da tabela contém os tensores com as transições locais dos autômatos e corresponde à soma tensorial LN.

A parte inferior da tabela é subdivida nos tensores contendo as taxas de ocorrência dos eventos sincronizantes (e+) e os tensores diagonais que fazem o ajuste (tornam a soma das linhas igual a zero) dos mesmos.

Nesta seção, apresenta-se um exemplo completo de obtenção do gerador infinitesimal de um modelo descrito pelo formalismo de SAN.

Demonstra-se detalhadamente a geração dos tensores envolvidos na construção do Descritor Markoviano do modelo.

Apresenta um modelo descrito pelo formalismo de SAN, o qual possui três autômatos.

Como pode ser observado o autômato A(1) possui dois estados 0(1) e 1(1), um evento local e4 e um evento sincronizante e3.

Assim como, autômato A(2) possui três estados 0(2), 1(2) e 2(2), dois eventos locais e1 e e2, e dois eventos sincronizantes e3 e e5.

O autômato A(3) possui dois estados 0(3) e 1(3), um evento local e6 e um evento sincronizante e5.

Após a identificação do tipo dos eventos (locais e sincronizantes), é possível gerar os tensores necessários para a obtenção do Descritor Markoviano do exemplo apresentado.

Identificado o número de autômatos N = 3, bem como o número de eventos sincronizantes jEsj= 2 do modelo, pode-se calcular o número de tensores envolvidos no Descritor Markoviano descrito pela equação.

A seguir, demonstra-se detalhadamente a obtenção de todos os tensores envolvidos na equação.

Primeiramente, identifica-se o conjunto de eventos locais El do modelo.

Com isso, pode-se construir os tensores locais Q correspondentes aos autômatos A.

Em seguida, identifica-se o conjunto de eventos sincronizantes Es.

A partir da identificação do mesmo, constrói-se os tensores das transições sincronizadas que representam a ocorrência dos eventos sincronizantes em cada autômato.

Sendo assim, tem-se os tensores das transições sincronizadas Q e+ correspondentes aos autômatos A.

Note que o autômato A(1) é o autômato mestre do evento sincronizante e3 e o autômato A(3) é o autômato mestre do evento sincronizante e5, pois a taxa de ocorrência de cada um está presente no respectivo tensor do autômato mestre.

Assim como, as probabilidades dos eventos se encontram no autômato escravo A(2).

Por último, constrói-se os tensores das transições sincronizadas que representam o ajuste necessário à ocorrência dos eventos sincronizantes em cada autômato.

Uma vez obtido todos os tensores do Descritor Markoviano, pode-se obter o gerador infinitesimal Q.

Os índices de Q são compostos pela ordem lexicográfica da composição dos estados de ambos os autômatos.

O gerador infinitesimal Q do modelo descrito pelo formalismo de SAN é obtido através da equação.

