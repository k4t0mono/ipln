Este trabalho apresenta uma visão geral do formalismo de Redes de AutômatosEstocásticos (SAN) através da modelagem de exemplos e análise de diferentes formas dedescricão para os mesmos.

Este formalismo permite a descricão de modelos ondeautômatos interagem uns com os outros através de primitivas de sincronismo eparalelismo, como é o caso dos eventos sincronizantes e das taxas funcionais.

O objetivodeste trabalho é estabelecer uma análise comparativa destas duas formas de descricãodos modelos, ressaltando suas vantagens e desvantagens.

A modelagem de problemasda realidade nos faz observar, dentre as alternativas de representacão, as diversascaracterísticas particulares para modelar e solucionar estes problemas.

As conclusõesnos permitem vislumbrar os benefícios e a aplicabilidade destas abordagens na busca dedesempenho e confiabilidade de sistemas complexos.

A complexidade inerente às aplicações computacionais atuais tem tornadoessencial a utilizacão de técnicas de avaliacão de desempenho.

A escolha da técnicamais adequada em uma determinada situacão é um aspecto chave em qualquer projetoligado a esta área, e deve considerar alguns critérios como o estágio atual dedesenvolvimento do sistema, disponibilidade de tempo e de ferramentas para realizar aavaliacão, mas sobretudo o nível de precisão requerido nos resultados.

Um dos aspectos relevantes do uso destas técnicas é que, muitas vezes, pode serfundamental a avaliacão dos resultados esperados de um projeto através de simulações eestimativas de desempenho em situações de aplicacão real, principalmente no âmbito dodesenvolvimento de sistemas paralelos e distribuídos.

Esta perspectiva pode reduzirsubstancialmente o tempo de projeto e desenvolvimento dos sistemas, avaliando odesempenho de um sistema antes mesmo de implementá-lo.

Existe uma grande variedade de técnicas de avaliacão de desempenhoatualmente, porém para cada situacão específica pode ser mais vantajoso utilizar uma ououtra abordagem.

Ou ainda, pode ser interessante utilizar-se de combinações entre estastécnicas, buscando resultados mais efetivos em termos de avaliacão de desempenho.

Contudo, dentre as muitas técnicas conhecidas, recentemente sobressaiu-se umformalismo chamado Redes de Autômatos Estocásticos (SAN, Stochastic Automata Networks), que vem com soluções numéricas mais eficientes do que asalcancadas até agora com outros métodos analíticos.

O estudo deste formalismo e a experimentacão com problemas reais tornam-se essenciais para testar sua aplicabilidade.

O formalismo SAN utiliza-se das noções de estado e de transições entre estadospara representacão dos eventos.

Estes eventos podem estar relacionados a um únicoautômato, ou a vários ao mesmo tempo, ocorrendo de acordo com taxas específicas.

Para este segundo caso, existem duas possibilidades de representar eventos que são disparados em mais de um autômato ao mesmo tempo, ou que dependem do estado de outros autômatos para realizar uma determinada transição, dentro deste contexto optou-se, neste Trabalho Individual I, pelo estudo aprofundado deste método analítico de avaliacão de desempenho, o formalismo SAN,modelando alguns estudos de caso selecionados.

O objetivo desta pesquisa é fornecersubsídios teóricos para futuros trabalhos, tanto na área de avaliacão de desempenho,quanto em projetos ligados ao PPGCC na área de teste e validacão, como o projetoCPTS (HP Brasil/PUCRS) ­ Centro de Pesquisa em Teste de Software.

O método de pesquisa utilizado neste TI1 baseou-se na coleta de material relativoà área de avaliacão de desempenho de sistemas, enfatizando um dos métodos analíticos(formalismo SAN).

Posteriormente, este formalismo foi utilizado como base para modelaralguns exemplos, e estes foram escolhidos e modelados diferentemente, tendo porobjetivo mostrar uma utilizacão mais prática do mesmo, explorando suas característicaspara a obtencão de soluções eficientes através da ferramenta PEPS2002.

Os exemplos escolhidos foramuma Rede de Filas de Espera Aberta, Compartilhamento de Recursos, Problema do "Jantar dos Filósofos".

Todos estes exemplos serão abordados de forma a sugerir alternativas demodelagem para os mesmos, ressaltando as vantagens e desvantagens das opcõesescolhidas em relacão ao tamanho do modelo e outras características que afetam odesempenho.

Este trabalho foi dividido em dois grandes capítulos (2 e 3).

O Capítulo 2 abordauma visão geral sobre a área de avaliacão de desempenho descrevendo alguns tipos detécnicas utilizadas atualmente, com ênfase no formalismo SAN que é o foco destetrabalho.

Basicamente será feita uma conceituacão do formalismo, explicitando suascaracterísticas para modelagem de problemas da realidade e formas de representacãoutilizando noções de sincronismo e paralelismo.

No Capítulo 3, os exemplos selecionados serão especificados e, posteriormente,modelados utilizando o formalismo SAN.

Nesta segunda parte, os eventos modelados eos valores relacionados às suas taxas de ocorrência, serão discutidos e apresentados deformas diferentes, demonstrando a versatilidade do formalismo.

Finalmente, nas conclusões serão colocadas as considerações finais destetrabalho ressaltando a sua contribuicão positiva em relacão à divulgacão do formalismoSAN para a modelagem de realidades complexas.

As conclusões englobam aspectosrelevantes das modelagens de exemplos realizadas no Capítulo 3 em relacão àsalternativas de uso das características do formalismo.

Em anexo, a este trabalho, encontra-se o material relativo à modelagem completa dos exemplos apresentados, bem como os resultados obtidos através da ferramenta PEPS2002.

Nas próximas seções teremos uma breve descricão de algumas técnicas deavaliacão de desempenho de sistemas, destacando algumas de suas vantagens edesvantagens.

Será dada uma atencão especial ao formalismo SAN, pois este é o foco deestudo deste trabalho.

As técnicas de avaliacão de desempenho são consideradas essenciaisatualmente, principalmente devido ao grande número de aplicações implementaremcaracterísticas como paralelismo e sincronismo.

Para exemplificar, pode-se citar problemas clássicos como o de comunicacão entre processos concorrentes, distribuicão de recursos disponíveis, entre outros.

O fato é que estes tipos de problemas têm ocasionado a ampliacão do uso de métodos de análise e avaliacão de desempenho, no intuito de melhor realizarem seus propósitos.

O uso de técnicas de avaliacão dedesempenho pode, como citado anteriormente, reduzir consideravelmente o tempo gastocom o desenvolvimento de sistemas, visto que possibilitam uma avaliacão prévia dodesempenho dos mesmos.

As técnicas existentes podem ser divididas em três abordagens distintas, monitoracão, simulacão e métodos analíticos.

Segue uma visão geral de cada uma destas abordagens, fazendo-se uma comparacão entre as vantagens e aspectos negativos que cada uma delas apresenta.

A técnica de monitoracão, também chamada de experimentacão direta, baseia-se na simples observacão de um sistema real em funcionamento.

Apesar de apresentarmaior confiabilidade nos dados obtidos, pois não há abstracão quanto ao funcionamentodo modelo, esta abordagem apresenta algumas desvantagens como alto custo e tempoexcessivo para uma aplicacão confiável da técnica.

Além disto, este tipo deabordagem supõe a existência física do sistema para que este possa ser avaliado.

Outro problema é que o sistema construído para obtencão das medidas podeapresentar uma certa instabilidade visto que podem ocorrer influências externas nãoesperadas.

Além disto, com esta técnica é muito difícil replicar um experimento específico,pois há uma imensa dificuldade em manter o controle das variáveis envolvidas noexperimento.

As amostras de funcionamento obtidas através da utilizacão desta abordagem, só serão consideradas significativas se com técnicas estatísticas, devidamente utilizadas,comprovar-se a representatividade das amostras obtidas.

Esta desvantagem não éexclusiva desta abordagem como será visto a seguir.

A técnica de simulacão consiste no desenvolvimento de um modelo que, como opróprio nome caracteriza, simula o funcionamento do sistema real levando emconsideracão as características funcionais do mesmo em uma escala de tempo adequadaà realidade.

Nesta abordagem deverá ser considerado um certo nível de abstracão pois omodelo não conterá a totalidade das características do sistema, somente as maisrelevantes.

Devido a este fato, os atributos devem ser cuidadosamenteselecionados e representados, para que não ocorram certos tipos de erros, normalmenteconsiderados como de modelagem.

Da mesma forma, é necessário avaliar também, sealgumas características relevantes do sistema real foram desconsideradas indevidamente.

Comparando-a com a primeira abordagem citada, esta tem o custo minimizado, geralmente consome menos tempo para obter resultados similarmente significativos, masprincipalmente permite repetições de experimentos quantas vezes forem necessárias,mantendo-se bastante estável, pois evita influências externas não previstas.

Nestas duas abordagens apresentadas até o momento, a quantidade e arepresentatividade das amostras consideradas são relevantes para a obtencão deresultados precisos através da aplicacão de técnicas estatísticas sobre esta amostragem.

A técnica de análises ou métodos analíticos consiste em modelar um sistema real,através das relações matemáticas existentes no funcionamento do sistema, ou seja, énecessário um nível mais alto de abstracão se comparada à abordagem anterior.

Através de relações matemáticas pode-se descrever o sistema como um conjunto de estadospossíveis e definir transições entre estes estados.

Esta abordagem é consideradabem mais complexa do que as anteriores, entretanto não é necessário que se obtenha um conjunto específico de amostras de funcionamento do sistema modelado, como seobserva nas técnicas citadas anteriormente.

O princípio básico desta técnica é obter uma visão simplificada do sistema a seravaliado, o qual será denominado modelo.

Para isto, utiliza-se de abstrações de alto nívelque fornecem o comportamento real do sistema, contendo características funcionaissuficientes para realizar uma avaliacão segura, apesar de considerar um certo nível detolerância.

Existem diferentes métodos analíticos, mas os mais utilizados baseiam-se em Cadeias de Markov por se tratar de um formalismo matematicamente não tão complexo e de modelagem rápida.

Ou seja, o tempo para construcão dos modelosbaseados em Cadeias de Markov é relativamente reduzido em relacão às outras técnicas,e a confiabilidade, em termos de ausência de erros de modelagem, é maior do que emoutros formalismos considerados mais complexos do que este.

As Cadeias de Markov descrevem o funcionamento de um sistema através de um conjunto de estados possíveis e de transições entre estes estados, seguindo taxasdefinidas por leis exponenciais.

Porém, um de seus aspectos negativos é que podeocorrer uma explosão do espaco de estados, o que torna intratável o modelo em particulare, consequentemente, a matriz de transicão correspondente.

Outro formalismo, as Redes de Filas de Espera (QN ­ Queueing Networks),surgiu no final dos anos 50, e é provavelmente o mais popular dos formalismos paraavaliacão de desempenho via métodos analíticos, principalmente pela idéia de clientes efilas (estações de servico) que este formalismo introduz.

QN são fáceis de modelar, ealém disto podem ser facilmente traduzidas para uma representacão em Cadeias deMarkov.

A desvantagem é que as duas técnicas sofrem limitações referentes ao espacototal de estados gerado, pois quanto maior este for, mais difícil se torna a suarepresentacão.

Na década de 80, as Redes de Autômatos Estocásticos (SAN) introduzem umformalismo com grande poder de resolucão quando comparado às QN, além deapresentar mecanismos de sincronismo e paralelismo.

Uma das suas principaiscaracterísticas é prover soluções numéricas eficientes, evitando também os prejuízos daexplosão do espaco de estados das Cadeias de Markov, o que já representa uma grandevantagem ao optar-se por sua utilizacão.

Na próxima Secão serão abordados aspectos do formalismo SAN, para queposteriormente sejam modelados alguns exemplos de problemas da realidade, verificandoa flexibilidade e a modularidade de representacão através deste formalismo.

O formalismo de Redes de Autômatos Estocásticos, ou simplesmente SAN, ébaseado em Cadeias de Markov com grandes espacos de estados, e propicia uma formacompacta e modular para descrever realidades complexas, contribuindo para a busca desoluções numéricas mais eficazes.

Logo, este formalismo mantém o poder de modelagemque se tinha com as Cadeias de Markov, porém tem a vantagem de eliminar problemascomo o da explosão do espaco de estados.

O princípio do formalismo SAN é descrever um sistema complexo dividindo-o em subsistemas quase independentes, pois estes interagirão ocasionalmente.

Nestesistema, cada subsistema é modelado por um autômato.

Um autômato é um modelo matemático com entradas e saídas discretas, ou seja,o sistema pode se encontrar em qualquer estado dentro de um número finito de estadosque compõem este sistema.

Nas SAN as interações entre os autômatos sãomodeladas através de regras de transicão específicas como veremos mais adiante.

Adenominacão de estocásticos atribuída aos autômatos, neste formalismo, deve-se ao fatode que o tempo é tratado como uma variável aleatória com distribuicão exponencial.

Nas próximas seções serão expostos alguns conceitos relacionados às SAN ondepoderemos observar como esta abordagem, dita modular, permite descrever primitivas deparalelismo e sincronismo.

O estado de um autômato resume toda a informacão referente a seu passado, poisas entradas passadas são necessárias para determinar qual será o próximocomportamento adotado pelo autômato mediante novas entradas.

Ou seja, para um determinado conjunto de estados, um sistema poderá assumir somente um estado a cadamomento, e este estado irá variar de acordo com a nova entrada recebida.

O estado individual de cada autômato é chamado de estado local.

O estado globalde uma SAN é definido como a combinacão de todos os estados locais de cada autômatocomponente da SAN.

A seguir veremos um exemplo em que estas definições poderão serentendidas.

Modela um sistema através de dois autômatos estocásticos, o autômato A (1)com três estados e o autômato A (2)com dois estados.

Exemplo de Redes de Autômatos Estocásticos (SAN) A cada unidade de tempo t transcorrida é possível verificar o estado em que cadaautômato modelado se encontra.

Este estado é denominado estado local, sendo que noautômato A(1)há a possibilidade de estarmos em apenas três estados (D, A ou S) e noautômato A(2)em apenas dois estados (no estado I ou no estado O).

Ainda observando o exemplo acima, pode-se notar diferentes tipos de transicões entre os estados.

Estas transições existentes em cada autômato podem ser divididas emtransições locais e transições sincronizadas.

No exemplo, as transições locais recebem onome li e as transições sincronizadas ei.

As transições locais alteram o estado global pela mudanca de um estado emapenas um autômato, enquanto as transições sincronizadas alteram o estado global pelamudanca de estado em dois ou mais autômatos simultaneamente.

A vantagemdas transições locais é permitir que os autômatos tenham comportamentos paralelosatravés de eventos locais, ou seja, elas mudam somente o estado local do autômato emque ocorreram e não têm interferências por parte dos estados dos outros autômatos.

Apesar de os eventos serem ditos independentes, eles são disparados um de cada vez,pois em uma escala de tempo contínua não ocorrem dois ou mais eventos ao mesmotempo.

As transições sincronizadas permitem que seja representado um certo sincronismono disparo de transições entre os autômatos, constituindo eventos sincronizantes entre osmesmos.

Sua ocorrência se dá simultaneamente em todos os autômatos envolvidos,pressupondo a existência de um autômato mestre, que coordenará a sincronizacão.

Tem-se então um ou mais autômatos escravos, estes disparados pelo mestre correspondente.

Para cada evento sincronizante têm-se a definicão de um único autômato mestre, sendoas transicões, nos demais autômatos, do tipo escravo.

Cabe salientar, que um autômato pode ser mestre de um determinado eventosincronizante e, ao mesmo tempo, escravo em relacão a outro.

Vejamos a seguir oautômato global equivalente à SAN visualizada anteriormente.

O autômato tem cada um dos seus estados como umadupla de estados locais de cada autômato.

A configuracão deste sistema acada instante definirá seu estado global.

Da mesma forma, levando em consideracão aSAN, o estado global é dado pela combinacão de todos os estados locais decada um dos dois autômatos constituintes da mesma.

Os eventos sincronizantes representam as possíveis interações existentes entreos autômatos, cujas taxas de ocorrência são, muitas vezes, constantes.

Porém, existe outra forma de representar estas interacões, utilizando taxas e probabilidades funcionais.

Um outro tipo de denominacão para as transições locais e sincronizadas é queambas podem ser chamadas de transições funcionais.

Isto ocorrerá quando suas taxasnão forem constantes, ou seja, tem-se uma funcão do estado local de outros autômatos da SAN, avaliada conforme os estados atuais do modelo.

Logo, as taxas funcionaispodem ser colocadas tanto em transições locais como em transições sincronizadas (no autômato mestre), e estas podem ser definidas por funções que refletem a avaliacão dosestados atuais da rede de autômatos estocásticos em questão.

Por exemplo, se no autômato A(2)quiséssemos representar uma transicão localfuncional (dependente do estado interno do autômato A(1)), teríamos, por exemplo, adefinicão de uma funcão f como segue abaixo.

Temos então duas taxas de transicão distintas dependendo do estado em que se encontra o modelo.

Outra possibilidade dentro do formalismo é que para cada modelo pode-se definir uma funcão de atingibilidade, que em poucas palavras, é uma funcão booleana que determina os estados atingíveis do modelo dentro do espaco total de estados.

Esta funcão definirá, então, o espaco de estados atingível do modelo SAN.

Quando esta forigual a 1, significa que todos os estados do modelo são atingíveis.

Normalmente, isto não é o que acontece na prática, pois em exemplos da realidade facilmente identificamoscondições para que determinados eventos ocorram ou não, dentre estas o estado deoutros autômatos.

Isto quer dizer que provavelmente quando estas condições não foremcumpridas alguns estados globais terão probabilidade nula ou quase nula de ocorrerem.

Para o exemplo podemos supor que quando o A(1)estiver noestado A, o autômato A(2)deve estar no estado I, ou se o A(1)estiver no estado S, oautômato A(2) deve estar no estado O, por exemplo.

Para isto é definida a seguinte funcãode atingibilidade.

Como se pode notar, o uso de transições funcionais é uma primitiva poderosa doformalismo SAN, permitindo a representacão de comportamentos complexos de formabem mais compacta.

A demonstracão desta característica do formalismo SAN serárealizada no Capítulo 3 através da modelagem dos exemplos, e posteriormente discutidana conclusão deste trabalho.

É possível que se faca uma descricão textual de cada SAN modeladagraficamente.

Esta abordagem considera cada autômato como um grafo, onde seusnodos são os estados e os arcos representam a ocorrência de eventos.

A descricãotextual é muito simples, flexível, e permite a insercão rápida de novos módulos(autômatos) ou mesmo a variacão das características da rede.

Também apresentaestruturas para replicacão de autômatos idênticos ou de blocos com mesmocomportamento, otimizando ainda mais a representacão do modelo.

O software que auxilia na modelagem deste formalismo é conhecido comoPEPS2002, e esta é a ferramenta que permite a avaliacão de desempenho das realidadesmodeladas através da descricão das SAN textualmente.

Formalmente, as SAN sãodescritas através de álgebra tensorial.

Maiores informações a respeito podem serencontradas em.

A modelagem dos exemplos deste TI1 será realizada de forma gráfica e textual,onde as descrições no formato para a gramática do software PEPS2002 encontram-se emanexos ao final deste documento, bem como os arquivos de resultados gerados atravésdestes modelos.

Nesta Secão serão discutidos alguns exemplos modelados através de diferentesperspectivas, demonstrando a flexibilidade do formalismo SAN.

Cada exemplo modeladoapresenta pelo menos duas abordagens distintas de representacão, permitindo a realizacão de uma análise comparativa de seus aspectos relevantes e dos resultados obtidos através da ferramenta PEPS2002.

O método de solucão utilizado para osexemplos foi o da Potência, uma das opções oferecidas pela ferramenta.

Nas representações gráficas dos modelos ficaram implícitas as probabilidades deocorrência dos eventos quando estas eram iguais a 1, facilitando a visualizacão dosparâmetros envolvidos em cada um dos exemplos.

As representações completas dos modelos no formato SAN, e os seus respectivos arquivos de resultados, encontram-se nos anexos ao final deste documento.

As Redes de Filas de Espera (QN, Queueing Networks) são bastante utilizadaspor sua facilidade de modelagem.

No entanto, os seus usuários sofrem com suas limitações (QN à forma-produto)que podem ser superadas representando-se estemodelo através do formalismo SAN, menos limitado em termos de poder de resolucão.

O exemplo que será modelado consta de uma rede de filas de espera aberta, comtrês estações de servico, capacidade limitada e perda de clientes.

A idéia básica étransformar cada fila do modelo QN em um autômato estocástico no modelo SAN equivalente.

O modelo QN que será transformado em SAN.

Modelo exemplo de QNN este exemplo temos três filas, onde todos os clientes entram através da fila 1 edividem-se posteriormente entre a fila 2 e a fila 3, com probabilidades 1 e 2,respectivamente.

Logo, apresenta i como tempo médio de atendimento na fila i.

Ki é o número máximo de clientes na fila i Ci é o número de servidores na fila iSegue abaixo uma tabela com os valores declarados nas modelagens textuais dos exemplos da próxima seção.

Parâmetros da QN estabelecidos para a modelagem textual.

Tem-se então três autômatos sendo o primeiro com 11 estados, estes referentesao total de clientes da fila 1 (10 clientes) mais o estado 0, correspondente a nenhumcliente na fila.

Este autômato será chamado de F(1).

O segundo autômato representa a fila2, e tem seis estados possíveis (5 clientes mais o estado 0) e é denominado F(2).

O terceiro autômato, assim como o anterior, apresenta também seis estados, pois tambémrepresenta uma fila de capacidade 5, ou seja, que comporta cinco clientes, chamado deF(3).

A taxa de saída da fila 1 para a fila 2 será denominada de f12, e para a fila 3 de f13,sendo definidas da seguinte maneira, no caso de f12 é extremamente necessária a utilizacão desta fórmula, pois é aúnica fila que apresenta dois servidores, logo conforme o número de clientes presentes nafila, a taxa pode sofrer variacões.

Nas outras situacões, como o número de servidores éigual a 1, a taxa permanece constante para todas as transições.

Maiores informações arespeito de QN podem ser encontradas.

Na próxima Secão abordaremos três opções de modelagem para este problema,podendo visualizar a versatilidade do formalismo SAN em relacão às diferentes formas dedeclaracão dos modelos e de suas taxas.

As modelagens textuais destes exemplos encontram-se em anexo no final deste documento.

Para todos estes modelos será definida a funcão de atingibilidade igual a um,pois nas QN abertas todos os estados são atingíveis, não havendo possibilidade deque algum estado não ocorra.

O modelo SAN correspondente a este exemplo possui um autômato para cada filae um evento sincronizante para cada passagem possível de clientes entre as filas.

Estasincronizacão entre dois autômatos em uma QN modela a saída de um cliente de umafila, e a chegada deste mesmo em outra fila.

Neste exemplo não foram utilizadas taxas funcionais, somente eventos sincronizantes.

Adotou-se também as seguintes probabilidades constantes, 1=60% e2=40%.

Note que as chegadas de clientes na primeira fila e as saídas de clientes daúltima fila são representadas por eventos locais, pois são independentes dos estados dosdemais autômatos.

A saída de clientes da fila 2 ocorre a uma taxa µ2, e a saída declientes da fila 3 ocorre a uma taxa.

Modelo SAN para rede de filas de espera abertaO autômato F(1)coordena a saída de clientes da fila 1 e a chegada de clientes nasfilas 2 e 3, ou seja, ele é o mestre desta sincronizacão na medida em que saem clientes,sendo as outras duas filas, escravos nas transições que representam a chegada declientes em cada uma delas.

Definindo a funcão de atingibilidade igual a 1, temos o tamanho do espaco deestados igual ao total de estados atingíveis no modelo.

Na próxima Secão, modelaremos as mesmas filas, porém utilizaremos funcõespara definir as probabilidades de passagem de clientes para as filas 2 e 3 ao invés deutilizarmos constantes para 1 e 2.

No modelo anterior utilizamos probabilidades constantes de os clientes da fila 1migrarem para as filas 2 e 3.

Porém é possível estabelecermos uma probabilidadefuncional nestas transicões, e esta será variável conforme o fluxo destas duas filasdestino, balanceando a carga das mesmas.

Vejamos a definicão de 1 e 2 para estaalternativa.

Estas funções definem que quanto mais clientes tivermos na fila 3 maior aprobabilidade dos clientes que saem da fila 1 irem para a fila 2 e vice-versa.

Nestemodelo os eventos sincronizantes são representados por si e os eventos locais por ei.

Todas transições ocorrem através de eventos locais que obedecem a taxas deocorrência específicas (f12 e f 13) e probabilidades funcionais (1 e 2).

Observemos arepresentacão gráfica desta alternativa de modelagem.

Redes de Filas de Espera com probabilidades funcionais.

Após realizar a descricão textual deste modelo, obteve-se os seguintes resultadosno PEPS2002.

Resultados da modelagem utilizando Funções.

Observou-se um aumento significativo do tempo por iteracão nesta modelagem emrelacão à anterior.

Entretanto em termos de utilizacão da memória, o tamanho do descritorda SAN não teve variacões.

Neste modelo utilizaremos apenas eventos sincronizantes entre os autômatos, eestes definirão o fluxo de clientes que irão para a fila 2 e para a fila 3.

O objetivo eradistribuir a carga entre as filas de forma a não sobrecarregar uma determinada fila.

Como o número total de transições e eventos sincronizantes para esta abordagem é muito grande utilizou-se uma tabela de combinações de estados das filas 2 e 3 para facilitar arepresentacão gráfica posteriormente.

Probabilidades de Rotacão para Filas 2 e 3 Os eventos locais são representados por l(i).

A nomenclatura estabelecida paraos eventos sincronizantes que ocorrem entre a fila 1 e a fila 2 é a seguinte, para facilitar a implementacão visto que temos muitas probabilidades a considerar,assim como no modelo anterior, utilizamos as funções que representam 1 e 2.

Segue então a representacão gráfica deste modelo.

Os resultados obtidos com esta modelagem foram os seguintes, resultados para rede de filas de espera com sincronizantes.

Na próxima Secão será feita uma análise comparativa destes três modelos,abordando os resultados obtidos nas três estratégias de descricão do problema.

As três abordagens implementam de diferentes maneiras a mesma QN Aberta, e sobre estas podemos agora realizar uma análise dos resultados avaliando as vantagens edesvantagens de cada alternativa de modelagem proposta através do quadro comparativo.

Quadro comparativo para QN Abertas Como a funcão de atingibilidade em todos os modelos não é diferente de um, poisestamos tratando de QN abertas onde todos os estados são atingíveis, não faz sentidotecermos considerações a respeito deste dado.

Porém, quanto a outros pontos avaliados, é notável o ganho em termos de espacode memória utilizado para armazenar o descritor normalizado das SAN que não utilizameventos sincronizantes.

Tivemos o mesmo resultado com as modelagens com constantese com taxas funcionais em relacão a este parâmetro, e estes foram significativamentemelhores do que com eventos sincronizantes, com tamanho relativamente oito vezesmenor.

Quanto ao tempo médio por iteracão observou-se que com taxas funcionais a solucão foi dez vezes mais lenta do que com constantes, e a com eventossincronizantes cento e cinquenta vezes mais lenta aproximadamente.

Nos próximos exemplos a serem modelados veremos como estes parâmetros podem variar e como a complexidade do problema deve ser considerada no momento emque se adota uma destas estratégias.

O primeiro exemplo de modelagem escolhido é o clássico problema de compartilhamento de recursos entre processos.

Tem-se, então, N diferentes processos compartilhando a utilizacão de R recursos idênticos entre si, onde qualquer processopode utilizar qualquer recurso, mas cada recurso só é utilizado por um único processo decada vez.

Os processos podem refletir somente duas situações possíveis neste exemplo, estar ou não usando algum recurso.

A representacão dos processos foi realizada através da modelagem de autômatos estocásticos, um para cada processo, totalizando N autômatos no modelo.

Estes autômatos foram modelados com dois estados cada um, o estado S (sleep) e o estado U(using).

Além disto, cada estado contém apenas um arco de saída, ou seja, existe umaúnica transicão (que sai do estado S e vai para o estado U) modelada para representar asituacão de requisicão de um recurso, e uma transicão que tem origem no estado U etermina no estado S representando a liberacão do recurso.

A partir de agora serão apresentadas duas alternativas para a modelagem deste exemplo através do formalismo SAN, uma utiliza apenas eventos sincronizantes entre os autômatos e, a outra utiliza somente eventos locais e funções.

Considerou-se também que os processos têm diferentes taxas de requisicão (N) eliberacãodos recursos no intuito de prover uma representacão mais fiel da realidade proposta para análise.

Como uma primeira alternativa de modelagem para este problema, teremos, além dos N autômatos P que representam os processos, um autômato representando a quantidade de recursos em utilizacão.

Este autômato, que chamaremos de Recs(1), terá onúmero de estados compatível com a quantidade de recursos disponíveis estabelecidos para este exemplo.

Porém torna-se necessária a adicão de um estado para a situacãoreferente a nenhum recurso em utilizacão, isto porque não necessariamente teremossempre algum recurso sendo utilizado.

Portanto, tem-se R+1 estados possíveis para esteautômato.

Para representar a interacão entre os autômatos modelados, são utilizados apenaseventos sincronizantes entre os autômatos P(i)e o autômato Recs(1).

Na modelagem textual, estabeleceu-se um total de doze processos (N=12)compartilhando os recursos (a princípio, R=4), ou seja, o modelo representa dozeautômatos com dois estados cada um, e mais um autômato com cinco estados.

Os autômatos que representam os processos foram declarados mestres dasincronizacão com os recursos, sendo estabelecidas as seguintes taxas de ocorrênciapara as transições entre os estados destes autômatos.

Taxas utilizadas para Compartilhamento de Recursos.

Como podemos observar na descricão do modelo no Anexo I, uma funcão deatingibilidade também é definida no intuito de manter a coerência entre os estados dosautômatos P e o estado do autômato Recs, respeitando as limitações do modelo emtermos de quantidade de recursos disponíveis.

Tem-se então que o somatório dosautômatos P que estão no estado U deve ser coerente com o estado onde o autômato Recs se encontra.

Logo, a funcão de atingibilidade para este modelo pode ser o espaco de estados atingíveis neste modelo é obtido através da funcão deatingibilidade.

Se neste exemplo a funcão de atingibilidade fosse f =1, significaria quetodos os estados seriam atingíveis.

O espaco de estados total é obtido através doprodutório do total de estados de cada autômato.

Segue abaixo uma tabela com algumasdas características deste modelo, obtidas através da ferramenta PEPS2002.

Características do modelo com eventos sincronizantes.

Contudo, existe a possibilidade de modelarmos este exemplo sem a utilizacão deeventos sincronizantes entre os autômatos podendo reduzir o espaco de estados total.

Neste exemplo será ilustrada a utilizacão de elementos funcionais em um modelosem eventos sincronizantes.

O número de autômatos P que contêm estes dois estadosrepresentará o número total de processos do modelo.

Modelo SAN com funções para compartilhamento de recursos.

Nota-se que a liberacão de um recurso é representada poreventos locais l1(N)que ocorrem, por exemplo, a uma taxa µN, e representam a transicãoexistente entre o estado U e o estado S em cada um dos autômatos.

Já a requisicão de um recurso é modelada pelos eventos locais l2(N), onde além da taxa de ocorrência N,tem-se também uma probabilidade funcional associada a este evento.

Esta probabilidade funcional é definida por esta funcão retorna True (1) caso exista pelo menos um recurso disponível(número de autômatos utilizando algum recurso é menor do que o total de recursos, R),ou retorna False (0) no caso contrário.

As taxas de requisicão e liberacão dos recursos, respectivamente N e µN, sãoestabelecidas como constantes assim como na primeira abordagem apresentada.

Alémdisto, a funcão de atingibilidade deve ser redefinida de forma a continuar mantendo acoerência entre os estados dos autômatos P e a quantidade de recursos disponíveis acada momento.

A funcão de atingibilidade declarada avaliará os autômatos de modo a garantir queo número máximo de processos que estão utilizando os recursos seja equivalente à R(número de recursos disponíveis).

Logo a definicão da funcão de atingibilidade para este modelo é a que segue.

Assim sendo, este modelo descreve toda a interacão entre os autômatos atravésdo uso de probabilidades funcionais, sem a necessidade de utilizacão de eventossincronizantes, mesmo assim tendo os mesmos resultados obtidos anteriormente.

Características do modelo utilizando funcões.

Como podemos observar o espaco de estados total reduziu consideravelmente ao excluirmos o autômato correspondente aos recursos.

Nota-se que vários aspectos devemser considerados ao optarmos por uma ou outra alternativa de modelagem.

Na primeira alternativa, o modelo representa estados globais, sendo Nprocessos compartilhando R recursos.

Porém nem todos estes são atingíveis devido àdefinicão de uma funcão de atingibilidade diferente de 1.

Assim como, na segunda abordagem, tem-se estados globais.

O número de estados atingíveis para estes modelos com N processoscompartilhando R recursos será o mesmo independente da modelagem adotada,considerando que as funções de atingibilidade definidas são semanticamente idênticas.

Tem-se então o número de estados atingíveis igual a uma diferenca notável entre estas abordagens é o espaco de estados total, vistoque na modelagem com eventos sincronizantes tem-se um autômato a mais a serconsiderado.

Apesar do número de iterações realizado para solucionar os modelos seja omesmo nas duas alternativas, o tempo médio gasto por iteracão foi reduzido no modeloem que utilizamos funcões, convergindo mais rapidamente para a solucão do problema.

Alternativamente,foram modeladas algumas variacões nestes exemplos utilizando-se outras quantidades de recursos disponíveis para N processos (N=12),podendo então realizar mais análises comparativas.

Compartilhamento de Recursos variando a quantidade de recursos.

O número de iterações a serem realizadas não depende das escolhas demodelagem, tanto com a utilizacão de eventos sincronizantes quanto com a utilizacão de funções deve-se esperar o mesmo número de iteracões.

O que varia, na realidade, é o tempo médio despendido em cada iteracão.

No caso da modelagem com eventossincronizantes com somente um único recurso disponível obtivemos um tempo melhor doque o obtido em outras alternativas.

Em todos os outros casos, a modelagem utilizandofunções mostrou um ganho significativo em termos de tempo de processamento.

Considerando o espaco de memória utilizado para armazenar o descritor dosmodelos, sem dúvida este tem relacão direta com a quantidade de autômatos modeladose seus respectivos conjuntos de estados, bem como com o tipo de evento escolhido paracada transicão.

Observemos um gráfico que mostra a variacão dos valores referentes ao espaco de estados total em relacão aos estados atingíveis.

Analisando os modelos pode-se concluir que para valores pequenos de R, temos o espaco de estados atingíveis minimizado em relacão ao número total de estados.

Na modelagem com funções o espaco total de estados não se altera, ou seja, é independentedo número de recursos utilizados, porém a quantidade de estados atingíveis varia assimcomo no outro modelo.

Logo, estes modelos são mais eficientes nos casos em que R nãoé muito menor do que N.

Note que a representacão completa destes autômatos e suas transições noformato da gramática para a ferramenta PEPS2002 pode ser observada nos anexos aofinal deste documento.

Cabe salientar, que a quantidade de recursos disponíveis e a quantidade de processos existentes, podem ser ambas redefinidas alterando-se alguns parâmetros de descricão nos arquivos SAN correspondentes.

Este exemplo descreve o "Jantar dos Filósofos", um problema clássico desincronizacão entre processos simultâneos.

Supõe-se que existem cinco filósofos em torno de uma mesa.

Nesta mesa encontram-se apenas cinco garfos e cinco pratos cheios de macarrão.

A vida de um filósofo consiste em pensar e comer.

Porém, para comer, cada filósofo necessita de dois garfos, pois o macarrão é muito difícil de comer com um único garfo.

Assim, se um filósofo está comendo, seus dois vizinhos não podem comer.

Neste problema são cinco filósofos, e estes serão representados por cinco autômatos chamados de F, contendo três estados cada um pensar (P), segurar o garfo direito (D) e segurar o garfo esquerdo (E).

A modelagem supõe que para comer, um filósofo necessita efetivamente estar com dois garfos em mãos e, logo depois, voltar apensar liberando os dois garfos.

As alternativas de modelagens que serão mostradas, a seguir, sugerem diferentes soluções para garantir esta sincronizacão.

Ressalta-se que aescolha dos estados de cada autômato pode variar dependendo do nível de detalhe quese deseja aplicar ao modelo, por exemplo, um quarto estado (C) representando o filósofocomendo poderia ter sido incluído no modelo.

Contudo considerou-se que quando umfilósofo estiver com os dois garfos em mãos, o tempo que o mesmo leva para libera-los jápressupõe o tempo gasto comendo, não necessitando então modelar mais um estado.

O problema ocorre exatamente quando dois filósofos vizinhos ficam com fome etentam pegar o mesmo garfo para comer.

Esta situacão remonta o que ocorreria com doisprocessos concorrentes que querem utilizar um mesmo recurso, se a sincronizacão não for resolvida, estes processos poderão ficar em espera infinita, um pelo outro, situacão conhecida como deadlock.

Para solucionar este problema, na modelagem dos autômatosdos filósofos estabelece-se um filósofo "canhoto" que, ao contrário dos outros, seguraprimeiro o garfo à sua esquerda e após o da direita.

As taxas que descrevem o tempo gasto pelos filósofos em cada um de seus possíveis estados são as seguintes, cada filósofo demora 2 ut (unidades de tempo) para segurar cada um dos garfos que necessita, respectivamente.

Um filósofo passa 4 ut comendo e, logo depois, solta os garfos e volta apensar.

Nas próximas secões, serão modeladas duas alternativas para o problema emquestão, uma utilizando eventos sincronizantes e outra com taxas funcionais.

Considerando a modelagem dos autômatos dos filósofos proposta na Secãoanterior, para solucionar a modelagem dos cinco garfos optou-se por um autômato paracada garfo, cada um com dois estados (L e U, livre e em uso, respectivamente).

Além disto, estaalternativa demodelagemutilizarásomenteeventossincronizantes entre os autômatos, tanto para requisicão dos garfos quanto para liberacãodos mesmos.

Os autômatos dos filósofos foram definidos como mestres da sincronizacão darequisicão dos garfos utilizando uma taxa, sincronizando com a transicão do estado Lpara o estado U nos autômatos dos garfos.

Já a liberacão dos mesmos ocorrerá com taxaµ, sendo os autômatos dos garfos os mestres nesta sincronizacão.

Nota-se que o filósoforepresentado pelo autômato F(5)é representado diferentemente dos demais, justamentepara contornar o problema da espera infinita pelo recurso, que neste caso é um garfo.

A funcão de atingibilidade definida garante que quando um filósofo estivercomendo (no estado E, ou no D no caso de F(5)), os seus vizinhos não podem estarcomendo também.

Da mesma forma que, para cada garfo, se um filósofo o tem, este nãopoderá ser usado por outro filósofo ao mesmo tempo, apenas na liberacão do mesmo.

Além disto, a funcão de atingibilidade apresenta condições que estabelecem os estados possíveis dos garfos em relacão aos demais autômatos, se um garfo está livre,os filósofos que podem pegá-lo estão em estados que não correspondem à acão de pegareste determinado garfo.

Podemos observar a funcão de atingibilidadedefinida para este problema.

Funcão de Atingibilidade para o "Jantar dos Filósofos".

Vejamos agora os resultados obtidos através da modelagem textual para aferramenta PEPS2002.

Resultados do "Jantar dos Filósofos" com Eventos Sincronizantes.

A próxima alternativa de modelagem será baseada em funcões, tendo algumasdiferencas em termos de espaco de estados total e definicão da funcão de atingibilidade.

A outra alternativa para modelagem deste problema é a utilizacão de taxasfuncionais em cada transicão ao invés de utilizarmos eventos sincronizantes entre osautômatos.

Eliminam-se, neste caso, os autômatos que representavam os garfos, ficandosomente com os autômatos que representam os filósofos.

Teremos, então, taxasfuncionais que verificam, para cada transicão do autômato, os estados dos seusautômatos vizinhos buscando saber se estes filósofos estão segurando os seus garfos ounão.

A taxa de requisicãoe de liberacão dos garfos será a mesma para todos osfilósofos, como na modelagem anterior.

Porém para cada transicão de requisicão queocorrer nos autômatos, estas obedecerão a cada uma das funções definidas para talocorrência multiplicada pela taxa de requisicãoestabelecida.

Estas taxas funcionais garantem que os filósofos só poderão comer se seusvizinhos não estiverem comendo.

Por exemplo, F(1)depende do estado de F(2)e de F(5), ou seja, o filósofo F(2) não poderá estar com o garfo esquerdo em mãos, e o filósofo F (5)não poderá estar segurando o garfo direito.

Vejamos como estas funções foram descritas textualmente para os filósofos noformato SAN.

Funções para as transições de requisicão dos garfos.

As funções f1 representam a acão de segurar o primeiro garfo e as f2 representamque o filósofo estará com os dois garfos neste momento, podendo comer.

A ordem derequisicão dos garfos depende do filósofo, pois como citado anteriormente, no autômatoF(5) representamos um filósofo "canhoto".

A funcão de atingibilidade para este modelo é basicamente a mesma damodelagem anterior, exceto pelas inserções relativas aos garfos, autômatos que foramexcluídos nesta segunda abordagem.

Segue uma tabela que contém os resultadosobtidos através da descricão textual do modelo.

Resultados do "Jantar dos Filósofos" com Funcões.

Na próxima secão serão discutidos os resultados obtidos com estas duasmodelagens para o problema, considerando-se que o espaco de estados atingíveismanteve-se o mesmo já que as funções de atingibilidade declaradas nas duas alternativasforam semanticamente idênticas, permitindo então a realizacão desta análisecomparativa.

O espaco de estados total foi reduzido com a modelagem através de funções pelanão necessidade de representacão dos garfos através de autômatos.

Além disto, comocitado anteriormente, a funcão de atingibilidade declarada em ambas modelagens é amesma em termos semânticos, garantindo o mesmo número de estados atingíveis.

Estareducão no número de autômatos ocasionou também a diminuicão considerável doespaco de memória a ser utilizado para armazenamento do descritor normalizado querepresenta a rede.

A modelagem deste exemplo variando o número de filósofos e respectivosrecursos (garfos) foi realizada no intuito de melhor podermos visualizar as diferencasexistentes em termos de resultados obtidos quando se utiliza uma ou outra abordagem.

Pode-se perceber a economia em termos de espaco dememória utilizado quando opta-se pela abordagem de taxas funcionais.

Da mesma forma,o espaco total de estados fica notavelmente reduzido, obtendo-se o mesmo número deestados atingíveis que a abordagem por eventos sincronizantes.

Nota-se nestes exemplos que o tempo médio gasto por iteracão, na abordagemque se utiliza de taxas funcionais apresentou vantagens em relacão à outra que se utilizaapenas eventos sincronizantes.

Porém, o número de iterações relativo à modelagem comcinco filósofos não apresentou o mesmo resultado nas duas implementações propostas, oque nos leva a considerar que exista alguma diferenca nos próprios modelos, ou mesmo,alguma limitacão na ferramenta PEPS2002 para solucionar este modelo, não sendopossível tecer conclusões definitivas com base somente neste caso específico.

Temos um gráfico que mostra a variacão dos valores referentes aoespaco de estados total em relacão aos estados atingíveis, para o modelo com eventos sincronizantes, analisando os gráficos comparativos destes modelos pode-se concluir que quandodiminuímos o total de filósofos, temos o espaco de estados atingíveis mais próximo aonúmero total de estados.

A representacão completa destes autômatos e suas transições no formato dagramática para a ferramenta PEPS2002 pode ser observada nos anexos ao final destedocumento.

O problema do "Jantar dos Filósofos" foi apresentado até o momento como umconjunto de processos (filósofos) compartilhando cinco recursos de um único tipo (osgarfos).

Porém as modelagens realizadas anteriormente agora serão estendidas com oacréscimo de outros tipos de recursos ­ as bebidas.

Portanto, teremos agora três tipos debebidas disponíveis B1, B2 e B3, uma de cada, sendo que qualquer filósofo pode requisitarqualquer um destes novos recursos enquanto os mesmos estiverem no estado P, e orecurso não estiver em uso por outro filósofo.

Assume-se, como na modelagem apresentada na secão anterior, que à esquerdado filósofo F(1)temos o filósofo F(2), e à sua direita temos o filósofo F(5),estando o garfo.

Para a modelagem dos novos autômatos e seus eventos no formato da gramáticapara o PEPS2002, optou-se pelas seguintes taxas, cada filósofo demora 2 ut (unidades de tempo) para conseguir uma bebida.

Um filósofo passa 2,5 ut bebendo e, logo depois solta a bebida, voltando a pensar.

Cabe salientar que mais uma vez o problema será modelado através de duas alternativas, apresentando posteriormente alguns resultados.

Considerando a modelagem apresentada na Secão 331, serão acrescentadostrês estados nos autômatos dos filósofos representando cada uma das possibilidades debebidas disponíveis.

Além disto, os recursos (bebidas) serão modelados através de três autômatos C(i), sendo i = 1, 2 ou 3, com dois estados cada um (L e U), assim como osautômatos dos garfos.

O uso das taxas de requisicão (fb) e liberacão das bebidas (lb) foirealizado através de eventos locais.

Na descricão textual estas taxas foram definidascomo constantes atribuindo-se às mesmas o valor estabelecido na Secão 33.

A funcão de atingibilidade definida para este exemplo segue a mesma idéia damodelagem discutida na Secão 331, porém com o acréscimo de condições queestabelecem mais alguns estados possíveis relacionados às bebidas.

Ou seja, parabeber, um filósofo deve estar pensando previamente, podendo apenas consumir algumadas três bebidas disponíveis se esta não estiver em mãos de outro filósofo.

Funcão de atingibilidade para o modelo com eventos sincronizantes.

Da mesma forma, os autômatos que representam as bebidas só estarão no estadode uso (U) se apenas um filósofo estiver no estado "bebendo" relacionado a cada bebida.

Se estiverem no estado livre (L), nenhum filósofo estará bebendo naquele determinadomomento.

Resultados do Modelo com Bebidas e Eventos Sincronizantes.

Assim como na modelagem da Secão 332, teremos cinco autômatosrepresentando os filósofos.

Porém esta modelagem tem o acréscimo de outros recursos ­três tipos de bebidas disponíveis B1, B2 e B3, uma de cada, sendo que qualquer filósofopode requisitar qualquer um destes novos recursos enquanto os mesmos estiverem noestado P, e o recurso não estiver em uso por outro filósofo.

Excluem-se, neste caso, os autômatos que representavam os garfos e as bebidas,ficando somente com os autômatos que representam os filósofos.

Teremos, então, taxasfuncionais que verificam, para cada transicão do autômato, os estados dos seusautômatos vizinhos buscando saber se estes filósofos estão segurando os seus garfos, oubebendo, ou pensando.

A taxa de requisicãoe de liberacão dos garfos será a mesma para todos osfilósofos, como na modelagem anterior.

Porém para cada transicão de requisicão queocorrer nos autômatos, estas obedecerão a cada uma das funções definidas para talocorrência multiplicada pela taxa de requisicãoestabelecida.

As taxas de requisicão (fb)e liberacão (lb) das bebidas também são utilizadas nas respectivas taxas funcionais.

Vejamos as taxas funcionais definidas para cada transicão de cada autômato domodelo.

Funções definidas para as transições dos autômatos dos filósofos.

A funcão de atingibilidade é semanticamente idêntica à declarada no modelobásico com funções deste problema.

A diferenca está que com o acréscimo destes trêsnovos estados em cada autômato, toda vez que um filósofo estiver pensando ele poderáalternativamente passar para o estado bebendo se o recurso (bebida) estiver livre.

Funcão de Atingibilidade do modelo com Taxas Funcionais.

A resolucão do modelo terminou em um total de iterações divergente de seumodelo similar que utiliza eventos sincronizantes, inclusive retorna um valor não numéricocomo resultado.

Estas diferencas e outras considerações serão colocadas analiticamentena próxima Secão.

As modelagens básicas com a inclusão de novos estados e autômatos pararepresentacão dos novos recursos, as bebidas, sofreram um aumento significativo nonúmero total de estados.

Porém, este espaco de estados total foi reduzido com amodelagem através de funções pela não necessidade de representacão dos autômatosdos garfos dos autômatos das bebidas.

Um outro fator a ser considerado, como citado anteriormente, a funcão deatingibilidade declarada em ambas as modelagens é a mesma em termos semânticos,garantindo o mesmo número de estados atingíveis, independente da alternativa demodelagem escolhida.

Nos modelos básicos da Secão anterior variamos o total de filósofos a fim decomprovar as vantagens do uso de taxas funcionais ao invés de eventos sincronizantesem casos como este, onde o número total de estados cresce radicalmente e emconsequência, o espaco de memória a ser utilizado é bem maior.

Análise comparativa dos modelos com BebidasÉ evidente a economia de memória obtida através da reducão no número deautômatos e eventos quando se utilizam taxas funcionais para representacão dastransições entre os autômatos.

Um fator interessante que pode ser observado no arquivo de resultados do modelocom taxas funcionais é que com esta modelagem em particular o modelo não convergiupara um valor numérico, retornando "nan" (not a number) como resultado, isto indica quetalvez por algum problema de implementacão do PEPS2002 este resultado foi obtido nãocompletando o mesmo número de iterações realizado no modelo com eventossincronizantes.

Logo, sabendo dos resultados obtidos nas modelagens básicas do problema apresentadas e analisando não se achou necessário avaliar algumas variações para estes modelos, pois os modelos básicos descritos já servirampara comprovar que dependendo da complexidade do problema e do tipo de interacõesque são necessárias entre os autômatos.

Pode tornar-se muito trabalhosa a utilizacão deeventos sincronizantes, bem como, muitas vezes, inviável em termos de limitações derecursos físicos e/ou da própria ferramenta PEPS2002.

A utilizacão de Redes de Autômatos Estocásticos (o formalismo SAN) para a avaliacão de desempenho de sistemas tem sido largamente difundida desde os anos 80, quando efetivamente iniciaram seu estudo e foram publicados diversos trabalhos na área, tendo como resultado atualmente, o surgimento de aplicações desenvolvidas com o uso desta técnica.

Dentro deste contexto, foi realizado um estudo deste método analítico,modelando estudos de caso e enfocando principalmente na representacão de eventos dependentes de mais de um autômato para ocorrer.

Como observamos no decorrer destetrabalho, existem duas possibilidades de representar estes eventos, ou com a utilizacãode eventos sincronizantes ou com o uso de taxas funcionais.

Cada um dos exemplosmostrados nas seções anteriores foi propositadamente modelado de diferentes maneirasatravés do formalismo SAN, permitindo uma análise comparativa dos mesmos em relacãoaos resultados obtidos com cada modelagem.

Concluiu-se que o uso de taxas funcionais proporcionou a reducão da maioria dosmodelos em termos de espaco de estados total, pois evitou a modelagem de autômatosextras para representar os problemas corretamente.

Também substituiu, em algunscasos, uma grande variedade de eventos sincronizantes necessários entre dois ou maisautômatos, por um único evento local orientado pela taxa funcional definida.

Um fator importante a ser considerado é que em ambas alternativas derepresentacão pode-se chegar ao resultado esperado igualmente, porém para cada casopode ser melhor usar uma ou outra abordagem.

Somado a estas vantagens, a utilizacãode taxas funcionais proporciona uma reducão considerável do espaco de memórianecessário para o armazenamento do descritor de cada SAN modelada.

Entretanto,existem parâmetros que não variam em decorrência da abordagem escolhida, como porexemplo, o número de iterações e o total de estados atingíveis.

Utilizar eventos sincronizantes também pode ser uma boa escolha, principalmenteem problemas de menor de complexidade, pois a diferenca numérica entre parâmetroscomo tempo por iteracão, tamanho em Kbytes do descritor normalizado e espaco deestados total não chega a ser significativa.

Além disto, dependendo do modelo descrito, autilizacão de eventos sincronizantes pode representá-lo mais claramente.

Contudo, autilizacão de taxas funcionais não apresentou muitas desvantagens, pelo contrário,mostrou-se uma alternativa eficiente para a solucão de problemas complicados e que têmum maior custo computacional.

Logo, a escolha correta, ou mais adequada para cada problema, dependeexclusivamente do tempo que pode ser despendido, dos recursos computacionaisdisponíveis e da complexidade do problema a ser modelado.

