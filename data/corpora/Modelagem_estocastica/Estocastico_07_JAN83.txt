A maior parte dos mecanismos de compartilhamento de recursos desenvolvidos para tornar os serviços de vídeo sob demanda (VoD) escaláveis tem sido avaliados considerando que o acesso dos usuários é seqüencial.

É comum em alguns tipos de aplicações, como ensino a distância, que os usuários realizem ações interativas como parada, avanço e retorno do vídeo.

Portanto é importante desenvolver modelos que permitam avaliar o desempenho de servidores VoD em um cenário de interatividade.

Neste trabalho apresentamos um novo modelo para representar o comportamento interativo de usuários acessando um servidor multimídia para ensino a distância.

O modelo é um HMM hierárquico onde, no primeiro nível, são representadas as depend ências em uma escala de tempo proporcional a duração de um slide e, no segundo nível, são representadas as dependências em uma escala de tempo que corresponde a duração de uma sessão.

Resultados obtidos quando o modelo, parametrizado por logs reais, é usado para dimensionar um servidor mostram a boa acurácia do modelo proposto.

Atualmente, aplicações mídia contínua têm se tornado cada vez mais populares, tanto para fins educacionais quanto para de entretenimento.

Aplicações deste tipo enfrentam desafios em função da largura de banda necessária, aos requisitos de tempo real sobre a entrega de mídia e da possibilidade de acesso parcial ou interativo à mídia.

O foco deste trabalho está em aplicações de ensino à distância, onde as aulas são previamente gravadas e armazenadas em servidores.

O conteúdo das aulas é composto de áudio e vídeo sincronizado com slides.

Os alunos acessam as aulas através de um software cliente, que possui controles tais como pausar, avançar e retroceder a aula.

Também é comum disponibilizar um índice, que é uma lista com os tópicos da aula para facilitar a navegação do aluno entre diferentes pontos de interesse da aula.

Estas aplicações geralmente armazenam em traces as ações realizadas pelos usuários durante uma sessão, tempo em que o aluno fica assistindo uma determinada aula.

A forma mais simples de atender os clientes que utilizam um serviço de vídeo sob demanda (VoD) é através do escalonamento de um fluxo unicast para cada requisição dos clientes.

O resultado é então um crescimento linear da banda do servidor.

Como esta banda é um recurso limitado, o uso de mecanismos de compartilhamento de recursos passa a ser importante para permitir a escalabilidade do sistema.

Muitos trabalhos na literatura tratam da caracterização do tráfego total a que um sistema é submetido, sem se preocupar em como esta carga foi gerada.

Entretanto, a carga de trabalho é função do comportamento dos usuários do sistema.

Estudos mostram que um alto grau de interatividade tem sido observado em diversos tipos de cargas reais, principalmente nas aplicações de ensino a distância, onde ações como parada, avanço e retorno do vídeo são muito comuns.

Entretanto, a maioria das técnicas propostas na literatura foram avaliadas considerando a premissa de acesso seqüencial, acesso à mídia completa, do início ao fim sem qualquer interrupção.

Um ambiente com um alto grau de interatividade pode comprometer a eficiência de mecanismos de compartilhamento de recursos, aumentando o tempo de acesso ao material armazenado e em conseqüência diminuindo drasticamente a qualidade do serviço fornecida ao usuário.

Existem poucos trabalhos na literatura que avaliam o desempenho de técnicas de compartilhamento de banda na presença de usuários com interatividade.

O uso de modelos que capturem o comportamento interativo dos usuários é importante para avaliar e desenvolver técnicas para prover serviços de VoD com interatividade.

Na literatura encontramos apenas alguns modelos de usuários interativos que são baseados em traces coletados de servidores multimídia em operação.

Neste trabalho estudamos o comportamento de usuários acessando um servidor de ensino a distância em operação com o objetivo de criar um modelo para geração de carga sintética.

A geração de carga sintética é importante para que a avaliação dos protocolos possa ser realizada com uma quantidade bastante grande de logs, já que não se tem disponível tantos logs reais.

Existem trabalhos na literatura que utilizam modelos deste tipo para a busca antecipada de conteúdo no servidor através de um modelo de previsão da próxima ação e para analisar técnicas de compartilhamento de banda.

Nosso modelo é baseado em logs de ações interativas de alunos acessando as aulas do curso de graduação de Tecnologia em Sistemas de Computação do Consórcio CEDERJ (Centro de Educação Superior a Distância do Rio de Janeiro), iniciado em Março de 2005 e contando atualmente com mais de 1000 alunos matriculados.

O modelo é uma variação da abordagem clássica de modelos de Markov ocultos, onde restringimos a distribuição das observações dentro de um estado oculto.

Propôs este novo modelo, além de avaliar diferentes modelos de Markov ocultos como preditores de estatísticas de perda de pacotes em redes de computadores de curto prazo.

O modelo resultante pode ser visto como um HMM hierárquico, com uma cadeia de Markov de 2 estados operando dentro de cada estado oculto.

A estrutura deste modelo possui duas propriedades interessantes.

Primeiramente, restringindo o modelo, o número total de parâmetros a serem estimados é diminuído, reduzindo assim a complexidade da fase de treinamento.

Em segundo, supondo tais padrões no conjunto de parâmetros, as dependências de curto prazo são capturadas nos eventos da perda com um modelo de Gilbert, enquanto a dinâmica de longo prazo é governada por uma cadeia de Markov oculta.

Neste trabalho, realizamos duas adaptações no modelo proposto em para utilizá-lo para caracterizar o comportamento de usuários interativos, permitir que dinâmica de curto prazo fosse capturada por uma cadeia de Markov discreta qualquer, e não apenas por um modelo de Gilbert, que limita a aplicabilidade do modelo, permitir que o número de observações geradas em cada estado oculto fosse variável, e não mais uma constante como no trabalho original.

Vale ressaltar que o modelo resultante deste trabalho é genérico, podendo se adequar a outros sistemas devido às adaptações que realizamos no mesmo.

Algumas vantagens deste modelo em relação a outras propostas da literatura são a capacidade infinita de memória do modelo (em contraste com modelos Markovianos que possuem memória finita), um número reduzido de estados diminuindo a sua complexidade e, parametrização usando uma quantidade bastante grande de logs de comportamento de usuários de um servidor real.

Validamos o modelo, apresentando o desempenho do mesmo em comparação com a abordagem clássica de modelos de Markov ocultos, e analisamos estatísticas de interatividade da carga gerada a partir do modelo proposto em comparação com a carga gerada pelo modelo probabilístico desenvolvido.

Mostramos ainda, ao parametrizar o modelo com logs reais dos sistemas de ensino a distância CEDERJ e MANIC, que nosso modelo é acurado para dimensionar um servidor.

Esta dissertação está organizada da seguinte forma.

Apresentamos alguns conceitos e notações relevantes, além do modelo em que nosso trabalho foi baseado.

Faremos uma revisão de trabalhos na literatura que estão relacionados com nosso estudo.

Apresentamos o modelo proposto e o procedimento para geração de logs sintéticos.

Validamos o modelo e apresentamos uma análise comparativa do modelo proposto em relação a outro modelo encontrado na literatura.

Neste capítulo apresentamos os conceitos básicos de modelos de Markov ocultos, muito utilizados neste trabalho, e o detalhamento de um modelo no qual este trabalho foi baseado.

Modelos de Markov ocultos têm sido usados para modelar séries temporais tais como reconhecimento de palavras, perdas de pacotes em uma rede, dentre outras aplicações.

Um modelo de Markov oculto, de forma geral, é composto por dois processos estocásticos dependentes entre si.

O primeiro deles é uma cadeia de Markov.

O segundo é um processo de observações, cuja distribuição, a qualquer instante de tempo, é completamente determinada pelo estado atual da cadeia.

Neste tipo de modelo, os parâmetros desconhecidos são determinados através do processo de observações.

Uma referência concisa sobre modelos de Markov ocultos pode ser encontrada.

Seja o seguinte exemplo para ilustrar o significado de uma cadeia de Markov oculta, consideremos três moedas.

Uma moeda tem 0,5 de probabilidade de sair cada face.

A segunda moeda é viciada e a probabilidade de sair cara é de 0,7 e coroa 0,3.

A terceira moeda também é viciada e possui menor probabilidade de sair cara, 0,3, do que coroa, 0,7.

Caso um jogador esteja utilizando mais de uma moeda, observaremos apenas o resultado, a seqüência de observações, cara e coroa.

Como não sabemos quando ocorre a troca de moedas, podemos apenas inferir sobre este processo oculto.

Formalmente, um modelo de Markov oculto é definido pelos elementos descritos a seguir.

Seja a cadeia de Markov de N estados.

A distribuição do estado inicial é dada pelo vetor de N dimensões.

As probabilidades de transição entre estados são controladas pela matriz N x N.

O processo de observações, tem M estados e é governado pela matriz N x M.

Dados os significados probabilísticos.

As restrições a seguir serão sempre satisfeitas.

O modelo pode então ser representado através da tripla.

Um primeiro passo em criar um modelo é especificar os espaços de estados sobre os quais e estão definidos.

Uma vez que é o processo de observações, seus estados são geralmente determinados pelo que está sendo modelado.

Por outro 6 lado, caracterizar os estados da cadeia oculta, pode ser um pouco mais abstrato.

Por exemplo, em modelos para perdas de pacotes, os estados ocultos podem ser vistos como "estados da rede", guardando informação sobre as estatísticas de perdas em um dado momento.

Consideremos um vetor com T valores para o processo de observações.

Sempre que não houver ambigüidade, usaremos a forma abreviada para denotar o evento composto que cada variável Xt assume o valor xt.

No caso particular em que i = j, escreveremos Xi (ou de maneira equivalente, Yi).

Por outro lado, usaremos X (ou Y) quando os sub-índices se referem a todas as variáveis.

Onde são calculados através do algoritmo forward-backward e as seguintes identidades podem ser estabelecidas.

A principal dificuldade da abordagem de modelos de Markov ocultos é o problema de estimação de parâmetros, isto é, como inferir valores para dado um caminho amostral do processo de observações.

Apesar dessa dificuldade, o algoritmo Baum-Welch é uma técnica muito bem sucedida para estimação iterativa de parâmetros de máxima verossimilhança para modelos de Markov ocultos.

O método começa a partir de uma atribuição arbitrária de valores produz estimativas sucessivamente melhores, garantindo convergência para um máximo local na função de verossimilhança, sempre que um existir.

Onde a medida é chamada verossimilhança dos dados completos, uma vez que envolve dados observáveis e ocultos, representados por x1T e y1T, respectivamente.

Para um modelo de Markov oculto, essa função é definida como A cada iteração, o algoritmo Baum-Welch maximiza a função auxiliar, em relação a, fazendo uso da estimativa atual dos parâmetros, usando a definição da verossimilhança conjunta, a Equação pode ser dividida em três termos independentes.

Na Equação, utilizamos a notação I, para representar a função indicadora de uma condição c, que vale 1 quando a condição é satisfeita, ou 0 no caso contrário.

Maximizando cada termo de e levando em consideração as restrições estoc ásticas chegamos às fórmulas de estimação de parâmetros.

O modelo é uma variação da abordagem clássica de modelos de Markov ocultos, onde restringimos a distribuição das observa ções dentro de um estado oculto.

Este modelo foi inicialmente definido em, que propôs este novo modelo, além de avaliar diferentes modelos de Markov ocultos como preditores de estatísticas de perda de pacotes em redes de computadores de curto prazo.

O raciocínio por trás do modelo HMM hierárquico é que as correlações de curto prazo podem ser capturadas por um processo simples, enquanto a dinâmica em escalas de tempo maiores é governada pela cadeia de Markov oculta.

Um resumo dos resultados daquele trabalho também podem ser encontrados em.

O modelo resultante pode ser visto como um HMM hierárquico, com uma cadeia de Markov de 2 estados operando dentro de cada estado oculto.

Ilustra o modelo proposto onde as as dependências de curto prazo são capturadas nos eventos da perda com um modelo de Gilbert, enquanto a dinâmica de longo prazo é governada por uma cadeia de Markov oculta.

A estrutura deste modelo possui duas propriedades interessantes.

Primeiramente, restringindo o modelo, o número total de parâmetros a serem estimados é diminuído, reduzindo assim a complexidade da fase de treinamento.

Em segundo, supondo tais padrões no conjunto de parâmetros, as dependências de curto prazo são capturadas nos eventos da perda com um modelo de Gilbert, enquanto a dinâmica de longo prazo é governada por uma cadeia de Markov oculta.

Suponhamos que as transições entre estados ocultos ocorram apenas a cada S observações, sendo assim as medições de pacotes estão segmentadas em conjuntos de tamanho S.

Mais especificamente, o símbolo xt denota um vetor de medições, representando o resultado para cada um dos pacotes no t-ésimo grupo.

De forma análoga, redefinimos as variáveis das observações, Xt, como vetores das variáveis.

Para cada estado oculto, i, temos os parâmetros da cadeia de Markov de 2 estados, e dados.

Nos referimos ao modelo como a tupla, onde r, p, e q são vetores, contendo os respectivos parâmetros ri, pi, qi, para cada estado, i.

Para calcular a probabilidade de uma observação, não é necessário o conhecimento completo da medição de perda para cada pacote.

É suficiente manter registro apenas das seguintes estatísticas, em cada grupo de medidas, xtxt,1 = resultado do primeiro pacote em xt.

Dada uma instância de xt, estamos interessados em computar a probabilidade do evento Xt = xt, dado o estado oculto no t-ésimo lote, yt.

Foi mostrado que é possível encontrar de forma eficiente os parâmetros do modelo de Gilbert do modelo HMM hierárquico proposto.

Nesta dissertação, estenderemos o modelo HMM hierárquico de 2 estados para uma cadeia qualquer.

Ainda são poucos os trabalhos que caracterizam o comportamento interativo de usuários acessando um servidor de vídeo, principalmente para vídeos educacionais, e propõem um modelo para representar o comportamento desses usuários.

Neste capítulo apresentamos trabalhos encontrados na literatura sobre modelos parametrizados através de cargas reais.

Em foi feita a análise de logs coletados do sistema MANIC de aulas com conteúdo de áudio sincronizado com slides.

Naquele trabalho foi proposto o uso de um modelo HMM para capturar o comportamento individual de cada aluno.

Os autores estudaram o uso de modelos HMMs para implementar algoritmos de predição com o objetivo de realizar a busca antecipada de slides.

Os registros dos usuários foram transformados em uma seqüência de símbolos que representam as suas ações,próximo slide, slide anterior, índice e início.

A predição das ações dos usuários é realizada em duas etapas, a cadeia é re-treinada a partir dos logs reais, a próxima ação é prevista.

Em análises feitas neste trabalho, foi verificado que em torno de 70% das observações geradas pelo modelo coincidiam com as reais.

Sendo que, das ações next observadas aproximadamente 60% foram previstas corretamente e das ações diferentes de next aproximadamente 70% foram previstas erroneamente.

O modelo de tem como objetivo caracterizar o comportamento de usuários individuais para predizer a próxima ação do mesmo.

Sendo assim, o modelo especi fica apenas ações interativas relacionadas a movimentações entre os slides, não sendo possível por exemplo obter informações sobre as ações de pausa realizadas pelo usuário.

Outros dados importantes para a geração de carga sintética também não estão disponíveis, tais como a duração dos tempos em play e em pausa.

O modelo também não prevê o fim da sessão do usuário.

Desta maneira, para que o modelo de possa ser usado para gerar carga sintética, seriam necessários estudos para realizar algumas adaptações no mesmo.

O objetivo principal do modelo de é avaliar o desempenho de protocolos de compartilhamento de banda, em particular o Bandwith Skimming, utilizando cargas de mídia contínua realistas.

As cargas de mídia contínua realistas são geradas por um modelo probabilístico que captura os aspectos essenciais dos perfis de comportamento interativo, e que tem como entradas um trace real de sessões para um certo objeto, além da taxa de chegada de sessões.

As cargas reais são oriundas de diversos domínios de aplicação de sistemas de mídia contínua e incluem diversos perfis de comportamento interativo.

Estes perfis incluem cargas de áudio (com baixo nível de interatividade), vídeos curtos (de entretenimento e educacionais, ambos com nível médio de interatividade), e vídeos longos (educacionais, com alto nível de interatividade).

O trabalho descreve como foi feita esta classificação de acordo com níveis de interatividade.

Os perfis de alta interatividade são aqueles em que a duração média das requisições está abaixo de 20% da duração da mídia, a posição média inicial está entre 30% e 60% do tamanho da mídia e o número de requisições por sessão é de no mínimo 3.

Nos perfis de média interatividade, a duração média das requisições está abaixo de 20% da duração da mídia, a posição média inicial está abaixo de 30% ou acima 60% do tamanho da mídia e o número de requisições por sessão é menor que 3.

Já os perfis de baixa interatividade, a duração média das requisições são mais longas (pelo menos 20% da duração da mídia), a posição média inicial está concentrada no início da mídia e o número de requisições por sessão é menor que 2.

Esta variedade de perfis permite cobrir as características de uma carga que afetam significamente a escalabilidade do protocolo de compartilhamento de banda Bandwith Skimming, posição inicial (o ponto, na mídia, onde uma requisição se inicia), a duração do segmento de mídia requisitado, o tamanho dos saltos, o tipo de requisição (salto, pausa), número de requisições por sessão.

Uma carga de mídia contínua contém um conjunto de sessões de clientes e cada sessão é composta por uma ou mais requisições interativas.

A chegada de sessões foi modelada por um processo de Poisson.

A chegada de requisições em uma sessão, a posição inicial da requisição e a sua duração são geradas pelo modelo probabilístico.

O modelo probabilístico é representado por meio de um diagrama de estados e a mídia é representada por segmentos de 10 segundos.

Com a varredura da carga, são determinados os estados, as transições possíveis a partir de cada estado, a duração média de cada estado e a freqüência de cada transição.

Todas as probabilidades de transição são calculadas a partir das freqüências relativas medidas na carga real.

Os tipo de estados presentes no diagrama são Início de Sessão, é o estado inicial do diagrama e não tem duração associada.

A ele sempre segue a exibição de um segmento (Segmento Comum ou Fim de Requisição).

Segmento Comum (representado no diagrama pelos círculos), é um segmento que é seguido por outro, com duração fixa de 10 segundos (tamanho dos segmentos).

Esse estado pode ser seguido por outro estado Segmento Comum, ou um estado Fim de Requisição, caso a requisição termine, ou um estado Fim de Sessão, caso a sessão e a requisição terminem.

Fim de Requisição, este estado termina uma requisição, mas não a sessão.

Possui duração exponencial, onde seu parâmetro é igual à média da duração deste estado.

Este estado é seguido pelo estado Pausa ou pelo estado de Fim de Sessão.

Pausa, representa o período de pausa após um estado de Fim de Requisição e antes do início da próxima requisição.

Possui duração exponencial, onde seu parâmetro é igual à média dos tempos de pausa das requisições que percorreram este estado.

Fim de Sessão é o estado final do diagrama.

Como resultado, pôde-se constatar que a posição inicial das requisições geradas pelo modelo é similar à posição inicial da carga real.

No caso da duração média das requisições, esta similaridade é mais evidente nos perfis de interatividade média e baixa.

Como a duração média das requisições é um fator muito importante para a análise do protocolo de compartilhamento, foi determinada a sua distribuição e constatou-se que estas coincidem com as distribuições e faixas de valores encontrados na caracterização ampla das cargas de mídia contínua.

Foi realizada uma validação deste modelo, comparando um conjunto de cargas reais com um conjunto de cargas sintéticas (com taxas de chegadas similares).

Foram computadas as distribuições acumuladas da posição inicial das requisições e da duração das requisições, para cada par dos traces real e sintético, e constatou-se que o erro médio quadrático estava sempre abaixo de 0,03.

Em seguida, foram calculados o número médio de fluxos simultâneos transmitidos pelo servidor para cada par de traces e obteve-se uma aproximação da carga sintética à real com erro abaixo de 27%.

Como conclusão de, dada a complexidade dos padrões de interatividade da carga real, espera-se que a carga gerada pelo modelo, pelo menos com relação às estatísticas de primeira ordem, capture as características essenciais da carga real.

O modelo probabilístico de possui algumas limitações dentre as quais podemos citar quando o usuário assiste continuamente o vídeo, ele percorre uma seqüência de estados de tamanho fixo de 10 s.
O tempo em pausa é caracterizado por uma distribuição exponencial (a caracterização da carga do CEDERJ feita, mostrou que o tempo em pausa é melhor caracterizado por uma distribui ção hiperexponencial de 4 estágios), os saltos estão associados a ocorrência de pausas (quando o estado de retorno da pausa é diferente do estado de origem).

Foi analisado um conjunto de logs do MANIC, com conteúdo de vídeo e áudio sincronizados com slides.

Aquele trabalho apresentou a caracterização da carga dos usuários acessando o sistema multimídia, através de um conjunto de estatísticas que descrevem a interatividade dos usuários.

O trabalho foi além da caracterização da carga e também sugeriu um modelo para capturar as estatísticas de comportamento do usuário, e gerar carga sintética para análise do desempenho de um sistema multim ídia.

O modelo consiste em um HMM embutido nos instantes em que o usuário realiza interações ou transiciona entre os slides.

A parametrização do modelo foi realizada através de cargas reais e buscava especi ficar a posição do usuário a cada instante de tempo.

As observações do HMM são símbolos em um alfabeto com 7 elementos, próximo slide, pausa, salto de 1 slide para frente, salto de 1 slide para trás, salto de 2 slides para frente, salto de 2 slides para trás e final da sessão.

Experimentos foram realizados com as cargas real e sintética de forma a validar o modelo.

O modelo HMM hierárquico proposto neste trabalho também é parametrizado através de cargas reais e busca especificar a posição do usuário a cada instante de tempo.

Podemos citar algumas propriedades interessantes da estrutura do modelo HMM hierárquico em relação a abordagem clássica de modelos de Markov ocultos, diminuição do número total de parâmetros a serem estimados, reduzindo assim a complexidade da fase de treinamento, capturar as dependências de curto prazo através da cadeia de Markov discreta que governa os estados ocultos do modelo.

Neste capítulo descrevemos o modelo proposto para representar o comportamento interativo de usuários acessando um servidor multimídia para ensino a distância.

Primeiramente, apresentamos uma visão geral do modelo proposto, antes de apresentá-lo em maiores detalhes.

Apresentamos a metodologia utilizada para geração de carga sintética, a partir de cargas reais, usando o modelo proposto.

Neste trabalho estudamos o comportamento de usuários acessando um servidor de ensino a distância em operação com o objetivo de criar um modelo para geração de carga sintética.

Nosso modelo é baseado em logs de ações interativas de alunos acessando as aulas no servidor multimídia do CEDERJ.

Vale ressaltar que nosso modelo é genérico, podendo se adequar a outros sistemas multimídia.

Maiores detalhes sobre o sistema multimídia usado no CEDERJ e dos logs de interatividade dos alunos serão apresentados.

O modelo proposto é um modelo HMM hierárquico.

Neste trabalho, realizamos duas adaptações no modelo proposto em para utilizá-lo para caracterizar o comportamento de usuários interativos.

Em nosso modelo, a cadeia de Markov oculta governa a dinâmica de uma sessão do usuário.

Geralmente, em sistemas educacionais, as aulas são compostas de vários slides.

Optamos então por usar os estados ocultos para capturar a dependência de curto prazo das ações do usuário no contexto de um slide.

Sendo assim, dentro de um estado oculto temos que representar as possíveis ações interativas do usuário.

Para isso, adaptamos o modelo para permitir que, dentro de cada estado oculto, esta dinâmica de curto prazo fosse capturada por uma cadeia de Markov discreta qualquer.

Como dentro de cada slide, o número de ações interativas realizadas pelo usuário é variável, a segunda modificação no modelo permitiu que o número de símbolos emitidos em cada estado oculto pudesse ser variável ao invés de uma constante.

A primeira adaptação realizada no modelo HMM hierárquico, foi permitir que dinâmica de curto prazo fosse capturada por uma cadeia de Markov discreta qualquer, e não apenas por um modelo de Gilbert.

Ilustra o modelo HMM hierárquico proposto neste trabalho.

Como citado, os passos necessários para a adaptação do modelo são semelhantes aos realizados no trabalho.

As transições entre estados ocultos ocorrem apenas a cada S observações, sendo assim as observações estão segmentadas em conjuntos de tamanho S.

Mais especificamente, o símbolo xt denota um vetor de medições representando o resultado para cada uma das observações no t-ésimo grupo.

Seja portanto Xt, o vetor das variáveis.

Exemplo de um modelo HMM hierárquico Primeiramente, definiremos os parâmetros da cadeia de Markov discreta que governa os estados ocultos.

Sejam r e p, os parâmetros da cadeia de Markov de M estados dentro de cada estado oculto.

Ilustra a cadeia de Markov de M estados e seus respectivos parâmetros.

Parâmetros da cadeia de Markov de M estados para cada estado oculto do modelo proposto.

Dada uma instância de xt, estamos interessados em computar a probabilidade do evento Xt = xt, dado o estado oculto no t-ésimo grupo, yt.

Usando as estat ísticas definidas acima, reescrevemos o parâmetro bij, que governa o processo de observações, dada pela Equação em função dos parâmetros r e p, definidos em.

Com a adoção da cadeia de Markov discreta para governar os estados ocultos, restringimos o processo de observações dado por byt,xt, de maneira que esta será a probabilidade de iniciar a cadeia de Markov discreta no estado k 2 e realizar S transições entre estados i, j 2, dado que está no estado oculto yt.

Procedemos calculando as estatísticas e e usando esses valores em conjunto com a Equação, no procedimento forward-backward.

Maiores detalhes sobre o algoritmo forward-backward podem ser verificados.

Estendemos o algoritmo Baum-Welch para adicionar restrições à Equação.

A cada iteração, este algoritmo maximiza a função auxiliar, Q dada pela Equação, e fazendo uso da estimativa atual dos parâmetros.

Usando a definição da verossimilhança conjunta, P, esta função pode ser dividida em três termos independentes, Q1, Q2 e Q3, dados pelas Equações.

Maximizando cada um destes termos, chegamos às fórmulas de estimação de parâmetros.

Uma vez que restringimos apenas os parâmetros de observação, as fórmulas permanecerão idênticas àquelas das equações.

Sendo assim, podemos restringir a nossa análise apenas à função auxiliar correspondente.

Na Equação, utilizamos a notação I, para representar a função indicadora de uma condição c, que vale 1 quando a condição é satisfeita, ou 0 caso contrário.

Aplicando a definição da probabilidade de observação de um grupo, dada pela Equação, no termo da função auxiliar correspondente aos parâmetros de observa ção, dada pela Equação.

É fácil verificar que podemos dividir a função auxiliar dada em dois termos independentes, cada um em função de um dos parâmetros de observação r e p.

Temos portanto que redefinir, a tupla que representa o nosso modelo.

As expressões que buscamos são os pontos de máximos das seguintes funções, para cada estado oculto i.

Para efeito dos futuros cálculos, vale atentar para a validade da seguinte igualdade, para toda instância xt.

Após algumas manipulações algébricas podemos reescrever os sub-problemas.

Fixando k na Equação para maximizar pik, a probabilidade de transição a partir do estado k, dado o estado oculto i.

Resolveremos os sub-problemas e como problemas de otimização, através da aplicação do Lema 2 do trabalho.

Como resultado temos as seguintes equações para r e p.

As transições entre os estados ocultos ocorriam a cada S emissões de símbolos.

Para a nossa aplicação do modelo, o número de interações que ocorrem dentro de um slide é variável.

Precisamos adaptar o modelo para o caso geral onde o número de símbolos emitidos em cada estado oculto possa ser variável.

Para isso, incluímos um símbolo para marcar a saída de um estado oculto, ou seja, fim do slide, que será representado na cadeia de Markov dentro do estado oculto como um estado absorvente.

Agora temos que S, o número de símbolos dentro de um grupo de medições, é uma variável aleatória que depende do grupo.

Seja Zt o tamanho do t-ésimo grupo, podemos reescrever a restrição da seguinte forma, esta alteração não invalida os resultados das equações.

Porém deve-se atentar ao fato de que no desenvolvimento realizado a partir das equações e, os valores de j dependem do tamanho do t-ésimo grupo.

É fácil verificar que, j será tal que S = Zt, e não mais uma constante como anteriormente.

Como última etapa para a definição do modelo, apresentamos os símbolos que serão emitidos em cada estado oculto.

Cabe ressaltar que cada um destes símbolos representa um estado da cadeia de Markov discreta que governa os estados ocultos.

Os símbolos usados neste modelo são play, pausa, salto para frente, salto para trás, próximo slide e saída da sessão.

Este conjunto foi escolhido baseado na caracteriza ção do comportamento dos usuários do sistema multimídia do CEDERJ.

A cadeia de Markov discreta que governa o estado oculto sempre é iniciada no estado play.

O símbolo próximo slide causa uma transição entre os estados ocultos, já que representa o fim de um slide.

A partir dos estados salto para frente e salto para trás é possível voltar para o estado de play (caso o salto não gere uma mudan ça de slide) ou transicionar para o estado próximo slide (caso contrário).

Como dito anteriormente, em nosso modelo, as dependências a curto prazo das interações realizadas dentro de um slide são capturadas pela cadeia de Markov que governa o estado oculto, já a dinâmica da sessão do usuário é capturada pela cadeia de Markov oculta.

Uma vantagem do modelo HMM hierárquico, comparado com a abordagem clássica de HMM é que a estrutura da cadeia dentro do estado oculto não permite que seqüências de ações que notadamente não ocorrem na aplicação real sejam geradas.

Modelo HMM hierárquico Um exemplo de seqüência inválida é a ocorrência de duas pausas sem que haja um play entre elas.

No modelo HMM clássico existe a possibilidade de ocorrência destes tipos de seqüências.

Dada a definição do modelo HMM hierárquico e a determinação da cadeia de Markov discreta que governa os estados ocultos, é necessário ainda especificar a quantidade de estados da cadeia de Markov oculta.

Vale ressaltar que nem sempre o ganho em precisão do modelo dado por um número grande de estados ocultos, pode compensar o aumento em complexidade do modelo (o tempo para treinar o modelo também será maior).

O valor apropriado depende do tipo de aplicação do modelo e da carga usada para parametrizá-lo, pois em alguns casos, mesmo com poucos estados ocultos é possível se obter bons resultados.

Utilizamos diversos valores para o número de estados ocultos durante a análise das medidas de interesse para avaliar o ganho em precisão do modelo.

Para gerar carga sintética com o modelo proposto, usamos um conjunto de logs reais para treiná-lo.

Após a etapa de treinamento do modelo podemos usá-lo para simular uma seqüência de ações interativas realizadas pelo usuário.

Esta seqüência de ações é composta pelos símbolos play, pausa, salto para frente, salto para trás, próximo slide e fim de sessão.

Porém, não estão especificados o instante e a posição no vídeo associados a cada uma das ações interativas.

Ilustra um trecho de uma sessão de usuário gerado pelo modelo.

Neste exemplo, pode-se perceber que o modelo não fornece quanto tempo o vídeo ficou pausado, qual o tamanho do salto realizado nem quanto tempo o vídeo ficou em play.

Precisamos então analisar dados dos logs reais tais como o tamanho dos saltos, tempo em play e tempo em pause, para inserir esses dados na geração da carga sintética.

Para obter as distribuições de probabilidade dos tempos associados às ações interativas do usuário, procedemos com uma metodologia similar a adotada.

Mostra um exemplo de uma sessão de usuário após a obtenção das medidas através das distribuições de probabilidade.

Exemplo de uma sessão de usuário gerada pelo modelo após a obtenção das medidas de tempo através das distribuições de probabilidade Primeiramente, calculamos os parâmetros para diversas famílias de distribuições, a partir das amostras coletadas para as medidas de interesse, e depois usamos um método para escolher a distribuição mais adequada.

Os parâmetros das distribuições de probabilidade são calculados pelo método de estimação por máxima verossimilhança.

Este método consiste em selecionar, como estimativa, valores para os parâmetros de forma a maximizar a probabilidade da amostra ocorrer.

Sejam as amostras, a função likelihood L é a função de probabilidade de massa conjunta das amostras e o valor de p, digamos bp, que maximiza o logaritmo natural de L é o maximum likelihood estimate de p.

Calculamos o MLE para as seguintes distribuições Uniforme, Exponencial, Gamma, Weibull, Normal e Lognormal.

Para estes cálculos utilizamos o software MATLAB.

Parametrizamos também a distribuição hiperexponencial com o software EMpht, que realiza a estimação iterativa dos parâmetros da distribuição através de um algoritmo EM, que também é baseado na máxima verossimilhança.

Para determinar o tipo de distribuição que melhor aproxima os dados empíricos de uma dada variável fizemos uma análise visual e quantitativa.

A análise visual consiste em plotar os gráficos da distribuição complementar com o eixo das ordenadas em escala logarítmica para evidenciar a cauda da distribuição e avaliarmos visualmente aquela que mais se assemelha à distribuição empírica.

Entretanto, esta simples análise não deve ser considerada decisiva.

Para complementar a análise visual, comparamos o erro médio quadrático entre as distribuições empírica e estimada.

Além disso, aplicamos o teste de Kolmogorov-Smirnov, no qual testamos a hipótese nula de que o conjunto de amostras pertencia a alguma das distribuições escolhidas.

Utilizamos um grau de significância de 5%, o que corresponde à probabilidade de rejeitarmos a hipótese nula erroneamente.

Outra análise realizada foi o teste gráfico chamado QQPlot.

Este mostra se dois conjuntos de amostras vêm de uma mesma população, ou seja, se possuem distribuições provenientes de uma mesma família.

Inicialmente são calculados os quantiles (fração de amostras menores que um dado valor) usando dois conjuntos de amostras, o conjunto de amostras empíricas e o de amostras geradas segundo uma distribuição escolhida.

No QQPlot são representados os valores dos quantiles obtidos para ambos os conjuntos de amostras.

Se os dois conjuntos de amostras são provenientes de uma mesma distribuição, os pontos do gráfico devem formar, aproximadamente, uma reta com inclinação de 45 graus.

Através destes métodos, que permitem a análise visual da cauda das distribuições (gráficos da distribuição complementar), calcular a distância quadrática média entre as curvas da distribuição, computar os pontos mais distantes entre elas, e permitir avaliar se dois conjuntos de amostras pertencem a uma mesma distribuição, acreditamos que podemos obter resultados bastantes confiáveis.

Uma questão surge quando as métricas possuem correlação com a posição do vídeo.

Um exemplo é o tamanho de um salto, no qual o seu ponto de destino não deve ultrapassar os limites do vídeo.

A princípio seria necessário obter uma distribuição para cada intervalo do vídeo.

No entanto, preferimos testar a hipótese de utilizarmos uma única distribuição, a partir de todas as amostras.

Sendo assim, geramos amostras a partir de uma única distribuição e, caso a amostra sorteada ultrapasse os limites do vídeo sugerimos três abordagens distintas.

A primeira consiste em truncar o seu valor nos limites do vídeo.

A segunda, que denominamos reestimação, consiste em realizar sorteios consecutivos até que uma amostra que não ultrapasse os limites do vídeo seja gerada.

A terceira abordagem consiste em descartar as sessões onde isto ocorra.

Em suma, determinamos as distribuições segundo os métodos descritos e geramos as cargas utilizando cada uma das três abordagens sugeridas.

Para escolher dentre as três cargas geradas usamos os métodos já apresentados, além de comparar métricas das cargas sintéticas em relação à carga real, tais como como número médio de interações por sessão, as distribuições dos tempos em play e em pausa, o número médio Neste capítulo primeiramente apresentamos os sistemas educacionais que disponibilizaram os logs de interatividade de usuários utilizados para parametrizar os modelos.

Em seguida, realizamos uma validação do modelo proposto, comparando o seu desempenho com a abordagem clássica de HMM.

Posteriormente, verificamos se a carga sintética gerada pelo modelo proposto e pelo modelo probabilístico apresentado em são estatisticamente similares à carga real.

Além disso, comparamos o impacto gerado por ambas as cargas usando um simulador de um servidor multimídia desenvolvido.

Nesta seção apresentamos maiores detalhes sobre os sistemas multimídia CEDERJ e MANIC, e os logs de interatividade de usuários utilizados para parametrizar os modelos de geração de carga sintética.

Neste trabalho são utilizados logs com registros de ações e acessos dos usuários do sistema multimídia do Consórcio CEDERJ (Centro de Educação Superior a Distância do Rio de Janeiro).

Este projeto, gerenciado pelo Governo do Estado do Rio de Janeiro, visa possibilitar o acesso à educação, de forma semi-presencial, de alunos de cidades do interior do estado.

Foram estudados logs de alunos acessando as aulas do curso de graduação de Tecnologia em Sistemas de Computação, elaborado em parceria entre a UFRJ e a UFF.

Este curso de graduação foi iniciado no primeiro semestre de 2005 e conta atualmente com mais de 1000 alunos matriculados.

Para assistir às aulas, os alunos visitam o pólo onde estão matriculados, acessam a plataforma educacional do CEDERJ e, a partir desta, se conectam no servidor RIO para acessar a aula desejada.

Consideramos como uma sessão, à visualização de uma aula do curso.

Cada interação do aluno com a aula é gravada em um arquivo e, quando a sessão é encerrada, este arquivo é armazenado no servidor do pólo.

O sistema que armazena, gerencia e disponibiliza o conteúdo do curso foi desenvolvido pelo Laboratório LAND da COPPE/UFRJ, a partir de um protótipo inicial projetado em parceria com a UCLA e a UFMG.

O servidor multimídia RIO é um sistema de armazenamento multimídia universal que usa alocação aleatória e replicação de blocos.

Sendo um servidor universal, o RIO suporta vários tipos de mídias, vídeo, áudio, texto, imagem, além de ser capaz de gerenciar aplicações com ou sem restrição de tempo.

Para o servidor, todos os tipos de mídias são chamados de objetos e são armazenados da mesma forma.

Os objetos são divididos em blocos de dados e estes são aleatoriamente armazenados.

O Servidor RIO é composto por um servidor principal que gerencia os pedidos dos clientes e os repassa a um ou mais servidores de armazenamento que enviam diretamente ao cliente os dados solicitados, não sobrecarregando o servidor principal.

O servidor principal e os de armazenamento não precisam estar localizados na mesma máquina, permitindo uma arquitetura totalmente distribuída, com os componentes em localidades distintas interligadas por rede.

Para acessar o conteúdo armazenado no servidor, os usuários utilizam um software cliente que possibilita a interação do aluno com o conteúdo que está sendo apresentado.

Cliente do servidor RIO As aulas usadas no projeto CEDERJ são compostas por vídeo e slides sincronizados e a transmissão se dá sob demanda em tempo real.

Também está disponível a todo momento para o aluno um índice com os tópicos apresentados na aula, através do qual o aluno pode selecionar o tópico que deseja ver da aula.

Através do cliente os usuários podem paralisar a exibição da aula (pressionar pause), saltar para outro ponto da aula através dos controles fast forward, fast rewind, arrastar a barra de progresso ou clicar no índice de um slide, e parar (através do comando stop) a exibição do conteúdo a qualquer instante.

Quando o usuário deseja encerrar a sessão ele clica no comando quit.

Para este trabalho tínhamos disponíveis um conjunto de mais de 11000 logs, sendo aproximadamente 5100 deles com duração da sessão maior do que 5 minutos.

Os logs correspondem as aulas de todos os cursos ministrados entre o primeiro período de 2005 e o primeiro período de 2007.

Foram analisadas características de interatividade dos usuários do sistema multimídia RIO, no ambiente CEDERJ.

Naquele trabalho pode ser encontrada uma descrição detalhada de diversas medidas de interatividade.

O trabalho revelou que o usuários do sistema CEDERJ mostraram ser bem mais interativos do que os estudados em trabalhos anteriores, o que torna muito interessante o uso de sua carga para parametrizar o nosso modelo.

Apenas logs de sessões de alunos acessando o sistema, com duração maior do que 5 minutos serão utilizados em nosso trabalho.

Neste trabalho também utilizamos logs de comportamento de usuário acessando vídeos educativos, coletados do sistema MANIC.

Duas versões do sistema MANIC foram desenvolvidas.

Na primeira o conteúdo das aulas fica pré-armazenado em um servidor multim ídia e é enviado pela Internet até os usuários.

Os logs foram obtidos deste sistema, quando ele possuía integração apenas entre os slides e o áudio.

Versões mais recentes possuem integração também com vídeo.

Os registros dos usuários acessando as aulas são armazenados localmente e depois enviados pela rede para um servidor.

Os logs utilizados neste trabalho foram obtidos a partir do CD-MANIC.

O sistema possui diversos comandos como pause, index, fast forward, rewind, que possibilitam a interação do aluno com a aula.

Os logs são gerados a cada interação do usuário, ou quando há um evento de mudança de tópico, e contém informações tais como, a data, o tipo de ação e o slide em que o aluno se encontra.

O final de uma sessão pode ser identificado por uma ação explícita de saída do usuário.

Assim como no trabalho consideramos que o aluno também pode sair da sessão corrente ao solicitar um slide de outra aula, assistir até o final do último slide da aula em questão ou ultrapassar 30 minutos sem fazer interação alguma.

No nosso trabalho utilizamos registros de usuários acessando o curso Computer Networking ministrado pelo Professor Jim Kurose da Universidade de Massachusetts.

Tínhamos disponíveis um total de 1100 logs, sendo 980 com duração da sessão maior do que 5 minutos.

Neste capítulo apresentamos a validação do modelo HMM hierárquico proposto.

Para isso, realizamos uma comparação entre nosso modelo e uma variação do modelo HMM proposto em.

Desta maneira pretendemos avaliar o ganho em usar o modelo HMM hierárquico com relação a abordagem clássica de HMM.

Neste ponto não comparamos com outros modelos Markovianos pois estes possuem capacidade finita de memória, em contraste com modelos de Markov ocultos.

Para parametrizar o modelo, utilizamos logs reais de aulas do curso de graduação de Tecnologia da Computação do CEDERJ.

Filtros foram aplicados para que apenas fossem considerados logs de alunos com duração da sessão maior do que 5 minutos.

O modelo originalmente proposto em possui os seguintes símbolos observáveis, próximo slide, pausa, salto de 1 slide para frente, salto de 1 slide para trás, salto de 2 slides para frente, salto de 2 slides para trás e final da sessão.

Analisando a carga do CEDERJ, observamos que saltos dentro de um slide são muito freqüentes.

Temos que 24% dos saltos para frente e 37% dos saltos para trás são deste tipo.

É de nosso interesse que estes saltos ocorram também nos logs sintéticos gerados pelo modelo HMM, portanto incluímos um novo símbolo para representar saltos dentro dos limites de um slide.

Ilustra a adaptação realizada no modelo HMM proposto em, onde o símbolo salto 0 representa um salto dentro do mesmo slide.

Modelo HMM proposto em com a inclusão do símbolo salto dentro dos limites de um slide Para realizar a validação, separamos os logs disponíveis do CEDERJ em 2 conjuntos.

O primeiro foi utilizado para treinar os modelos, composto de 3580 logs e o outro, com os 1559 restantes, para calcular a probabilidade dos mesmos terem sido gerados pelos modelos previamente treinados.

Realizamos 20 treinamentos independentes para cada modelo e escolhemos aquele cujo o logaritmo da medida de verossimilhança, log P, fosse maior.

Posteriormente, calculamos a probabilidade dos logs do segundo conjunto terem sido gerados por cada um dos modelos.

Realizamos este procedimento variando a quantidade de estados ocultos nos valores entre 2 e 10.

Mostra a comparação entre os modelos.

Claramente o modelo HMM hierárquico tem melhor desempenho, mesmo para poucos estados ocultos.

Probabilidade das observações terem sido geradas pelo modelo para cada número de estados ocultos Nesta seção apresentamos uma análise comparativa do modelo HMM hierárquico proposto.

Avaliamos a acurácia do modelo quando este é utilizado para dimensionar um servidor que implementa técnicas de compartilhamento de banda.

Utilizamos para parametrizar o modelo logs reais de aulas do curso de graduação de Tecnologia da Computação do CEDERJ e logs reais do sistema MANIC.

Comparamos o nosso modelo com o modelo proposto.

Não comparamos o modelo proposto com o modelo HMM de, pois o mesmo é usado para modelar uma versão do sistema MANIC com apenas áudio sincronizado com transparências (não há vídeo).

A comparação entre o modelo HMM hierárquico e o modelo de foi feita de duas formas, cálculo das estatísticas das cargas sintéticas geradas pelos modelos e comparação com estatísticas da carga real, comparação da taxa de chegada de requisições e da banda média no servidor obtida através do modelo de quando este é alimentado pelas cargas sintéticas e real.

O modelo de simulação de um servidor multimídia foi criado usando a ferramenta Tangram-II e consiste de diversos clientes acessando um único objeto de um servidor de vídeo que implementa uma técnica para compartilhar o canal de transmissão do servidor, denominada PIE.

Os clientes executam comandos como avanço, retrocesso e pausa do vídeo, de acordo com os logs.

Por sua vez, o servidor é responsável pelo envio dos dados solicitados pelos clientes segundo a técnica de compartilhamento de banda implementada.

Os logs sintéticos gerados pelo modelo HMM hierárquico foram obtidos através da metodologia descrita.

O modelo é alimentado com um conjunto de logs reais, e posteriormente é usado para simular uma seqüência de ações interativas realizadas pelo usuário.

As informações relacionadas ao instante e a posição no vídeo associados a cada uma das ações interativas são calculados através de distribuições que melhor caracterizem os dados reais.

A escolha destas distribuições foi realizada da seguinte maneira, um conjunto de distribuições tem os seus parâmetros estimados através do método MLE.

Através de métodos, que permitem a análise visual da cauda das distribuições (gráficos da distribuição complementar), calcular a distância quadrática média entre as curvas da distribuição, computar os pontos mais distantes entre elas, e permitir avaliar se dois conjuntos de amostras pertencem a uma mesma distribuição, escolhemos a distribuição que mais se aproximasse aos dados reais.

Variamos o número de estados ocultos na faixa de valores entre 2 e 20, para também avaliar o ganho em precisão do modelo HMM hierárquico ao usarmos mais estados ocultos.

A escolha do número de estados ocultos mais adequado para cada tipo de carga, foi feita através da análise de algumas métricas de interatividade.

Comentamos que existe um problema a ser contornado na geração dos logs sintéticos.

Aquele que diz respeito a ultrapassar os limites do vídeo no momento em que inserimos as informações de tempo e posição no vídeo, para cada ação interativa.

Geramos logs sintéticos adotando cada uma das abordagens anteriormente citadas.

São elas descartar a seqüência de ações referente a sessão onde ocorreu o problema de limite, realizar sorteios consecutivos de novas amostras até que seja encontrada uma que não ultrapasse os limites do vídeo ou truncar a amostra nos limites do vídeo.

Os resultados obtidos neste trabalho com a abordagem de descartar, para todos os conjuntos de logs utilizados não foram tão satisfatórios quanto para as demais abordagens.

Por isso, preferimos omitir esses dados e apenas mostrar os resultados para as abordagens de truncar e reestimar.

Geramos carga sintética com o modelo probabilístico como descrito no próprio trabalho.

Por fim, realizamos simulações usando o modelo usando as cargas sintéticas geradas pelos modelos, além da própria carga real.

Também variamos os valores para a taxa de chegada de clientes e, não houveram alterações significativas nos resultados.

Para comparar os resultados, calculamos a taxa de chegada de requisições e a banda média no servidor das cargas real e sintética.

A banda é medida em número de canais de transmissão de dados simultâneos em uso no sistema.

Com relação às métricas de interatividade calculadas para as cargas sintéticas e real, computamos o número médio de requisições, número de interações de cada tipo e tamanho médio do segmento.

Comparamos também a distribuição obtida para o tempo em play e tempo em pause, para as cargas real e sintéticas.

Primeiramente apresentamos os resultados obtidos com os modelos ao serem alimentados com os logs do CEDERJ e depois para os logs do sistema MANIC.

Dispúnhamos de um conjunto de aproximadamente 11000 logs reais de comportamento de usuários utilizando o sistema CEDERJ.

Primeiramente analisamos os logs das duas aulas mais populares e em seguida, agrupamos logs de aulas diferentes mas que possuíssem sua duração dentro de um intervalo pré-determinado, que denominamos logs com duração parecida.

Desta maneira, analisamos um conjunto maior de logs do que os disponíveis para cada aula individualmente.

Realizamos simulações com as cargas sintéticas, além da carga real.

Cada simula ção foi feita com o mesmo número de sessões que o da carga real.

Assim como em outros trabalhos, as chegadas eram determinadas por um processo de Poisson.

Em nosso trabalho, utilizamos uma taxa de aproximadamente 3 sessões por minuto.

O processo de chegadas ainda não foi estudado utilizando os dados dos logs reais pois este dado não estava disponível em uma parte dos logs, e o conjunto restante não totalizava uma quantidade suficiente para realizar este tipo de análise.

Aulas mais populares Dentre os logs disponíveis do CEDERJ, selecionamos as aulas mais populares.

As distribuições de probabilidade para as métricas de interatividade da carga real destas aulas pode ser verificada.

Treinamos o modelo HMM hierárquico para diferentes valores de estados ocultos.

Apresenta o gráfico do logaritmo da medida de verossimilhança.

É possível verificar que após 10 estados ocultos, o ganho em precisão do modelo cresce mais lentamente.

É importante avaliar se este ganho compensa o aumento em complexidade e de tempo de treinamento do modelo.

Neste trabalho, optamos por realizar a escolha do número de estados ocultos mais adequado para o modelo, através da análise de algumas métricas de interatividade da carga sintética em comparação com a real.

Logaritmo da verossimilhança para cada número de estados ocultos.

Além de variar o número de estados ocultos, geramos a carga sintética utilizando as diferentes abordagens, para resolver a questão das métricas correlacionadas com a posição do vídeo.

Para simplificar a comparação com o modelo, escolhemos o melhor resultado dentre as diferentes abordagens e limitamos nossa análise a apenas 2 valores de estados ocultos, 4 e 20 estados.

Mostram algumas estatísticas das cargas sintéticas e real com relação a interatividade dos alunos.

As estatísticas referentes ao número médio de saltos foi calculada incluindo os saltos dentro do mesmo slide e saltos para fora do slide.

A técnica de reestimar apresentou resultados melhores e não houve diferença significativa entre as métricas geradas pelos modelos de 4 e 20 estados.

Para a carga do modelo HMM hierárquico, selecionamos a abordagem de reestimar para 4 estados ocultos.

Escolhemos a abordagem de reestimar para 20 estados ocultos.

Esta escolha foi feita através da análise das métricas de interatividade, e não somente através do ganho do logaritmo da verossimilhança.

Apresentam estas mesmas métricas computadas para a carga gerada.

Alimentamos o modelo de simulação de com as cargas sintéticas de ambos os modelos, além da carga real.

Mostram a comparação entre diversas métricas da carga real e das cargas sintéticas.

Pode-se verificar que a carga sintética gerada pelo modelo HMM hierárquico mostrou-se similar à carga real para ambas as aulas, com uma boa estimativa para o número médio de interações, número médio de pausas, número médio de saltos, distribuições dos tempos em play e pausa e para a taxa de chegada de requisições no servidor.

Apresentou um número médio de interações sensivelmente menor do que o da carga real.

Por outro lado, o número de pausas do modelo é maior do que o de pausas da carga real, enquanto que o número médio de saltos é aproximadamente 2 vezes menor do que o da carga real.

Com relação a distribuição dos tempos em play e em pausa, o modelo de não conseguiu uma boa aproximação das curvas das distribuições da carga real.

Como o modelo de subestimou o número de interações, conseqüentemente a taxa de chegada de requisições ao servidor também foi subestimada.

Comparação entre métricas geradas pelo modelo HMM hierárquico Comparação entre métricas geradas pelo modelo de Realizamos outra análise com a finalidade de verificar o comportamento do modelo com o aumento de clientes acessando um mesmo objeto no servidor.

Como não dispúnhamos de um grande número de sessões para uma mesma aula, agregamos logs de sessões de diversas aulas que tivessem sua duração dentro de um determinado intervalo.

Escolhemos um conjunto de 476 logs, de mais de 90 aulas diferentes, onde a aula de maior duração possui 57 minutos e a menor, 37.

Outro filtro usado neste conjunto, para torná-lo mais homogêneo foi restringir o tamanho da sessão do usuário entre aproximadamente 10 e 20 minutos.

Mostra o histograma do tamanho das sessões para este conjunto de logs.

Histograma da duração da sessão para o conjunto de 476 logs do CEDERJ As distribuições de probabilidade para as métricas de interatividade da carga real podem ser verificadas.

Assim como para as aulas mais populares, geramos carga sintética com o modelo HMM hierárquico para as abordagens de truncar e reestimar, além de utilizar dois valores extremos para a quantidade de estados ocultos.

Apresenta estes resultados para diferentes métricas.

A técnica de reestimar é ligeiramente melhor do que a de truncar e não houve diferença significativa entre as métricas geradas pelos modelos de 4 e 20 estados.

A comparação entre as métricas do modelo HMM hierárquico pode ser verificada.

Para a carga do modelo HMM hierárquico, selecionamos a abordagem de reestimar para 4 estados ocultos.

Alimentamos o modelo de simulação de com as cargas sintéticas e real.

Apresenta a comparação entre diversas métricas da carga real e das cargas sintéticas.

Para este conjunto de logs, o modelo HMM hierárquico apresentou uma boa aproximação na geração de carga sintética.

O nosso modelo mostrou uma boa estimativa para o número médio de interações, número médio de pausas, número médio de saltos, distribuições dos tempos em play e em pausa e para a taxa de chegada de requisições no servidor.

Já o modelo de subestimou o número de requisições que chegam ao servidor.

Este resultado é uma conseqüência das seguintes características do modelo, o número médio de interações de saltos para frente e saltos para trás da carga real é aproximadamente 3 vezes maior do que o valor encontrado para o modelo, por outro lado, o número médio de pausas do modelo é 3 vezes maior do que as pausas da carga real.

Como o modelo de gerou uma carga com menor interatividade, menor será a taxa de chegada de requisições ao servidor.

Distribuições de probabilidade para as métricas da carga real.

Conjunto de 476 logs do CEDERJ, comparação entre métricas geradas pelo modelo HMM hierárquico.

Um outro conjunto de logs foi criado para mostrar o desempenho dos modelos quando a carga usada para parametrizá-los não é submetida a uma análise adequada.

Este conjunto possuía 290 logs com duração da aula entre 52 e 53 minutos.

Mesmo com uma diferença pequena entre a duração das aulas, as sessões dos usuários estavam entre 5 e 80 minutos.

Uma diferença muito grande entre o tamanho das sessões influencia diretamente no nível de interatividade.

Mostra o histograma do tamanho das sessões para este conjunto de logs.

As distribuições de probabilidade para as métricas de interatividade da carga real podem ser verificadas.

Histograma da duração da sessão para o conjunto de 290 logs.

As métricas de interatividade obtidas das cargas sintéticas geradas pelo modelo HMM hierárquico, variando o número de estados ocultos e utilizando diferentes abordagens podem ser analisadas.

A técnica de reestimar apresentou melhores resultados que a de truncar para os dois valores de estados ocultos.

Não houve grande diferença entre os resultados para 4 e 20 estados ocultos.

A comparação entre as métricas do modelo HMM hierárquico e o modelo de pode ser verificada.

Para a carga do modelo HMM hierárquico, selecionamos a abordagem de reestimar com 4 estados ocultos.

Alimentamos o modelo de simulação de com as cargas sintéticas e real.

Apresenta a comparação entre diversas métricas da carga real e das cargas sintéticas.

Para este conjunto, a carga gerada pelo modelo HMM hierárquico não conseguiu uma aproximação tão boa quanto para os conjuntos anteriores.

O nosso modelo apresentou um número médio de interações e número médio de saltos para frente 20% inferior ao da carga real.

Em contrapartida, apresentou uma boa estimativa para o número médio de pausas, número médio de saltos para trás e para a distribuição do tempo em pausa.

Com relação a distribuição do tempo em play, nenhuma das distribuições escolhidas conseguiu uma boa aproximação a da carga real.

Vale lembrar que as distribuições dos tempos em play e em pausa não são uma saída do modelo HMM hierárquico, elas são estimadas segundo a metodologia descrita.

Sendo assim, é possível que se consiga obter uma melhor aproximação à carga real através da escolha de uma outra distribuição, que não pertença ao conjunto que utilizamos neste trabalho.

O modelo de também não apresentou boas estatísticas, o número médio de interações e o número médio de saltos foi menor do que o da carga real e o número médios de pausas foi maior.

Este conjunto serve como exemplo do que ocorre quando não há um estudo e tratamento adequado dos dados usados para parametrizar os modelos.

As características de interatividade de um usuário que efetuou uma sessão de 5 minutos podem ser muito diferentes das caracter ísticas de um usuário de uma sessão de 60 minutos.

Portanto, logs gerados por estes dois usuários não devem ser usados em conjunto para parametrizar os modelos pois podem reduzir a acurácia das cargas sintéticas geradas pelos modelos.

Neste caso, uma possível abordagem para melhorar a saída dos modelos, seria classificar o conjunto de logs em diferentes grupos, onde cada grupo seria usado para treinar um modelo distinto.

Cada modelo seria responsável por gerar carga sintética similar ao grupo de logs utilizado para treiná-lo.

Posteriormente, as cargas sintéticas geradas pelos modelos poderiam ser usadas em conjunto para representar a carga real.

Distribuições de probabilidade para as métricas da carga real.

Comparação entre métricas geradas pelo modelo HMM hierárquico Parametrizamos o modelo com cargas do sistema MANIC.

Como o conjunto de logs disponíveis é menor do que o do CEDERJ analisamos apenas os resultados para a aula mais popular e para o conjunto completo de logs.

Assim como para os logs do CEDERJ, realizamos simulações com as cargas sintéticas, além da carga real.

Cada simulação foi feita com o mesmo número de sessões que o da carga real e as chegadas eram determinadas por um processo de Poisson com taxa de aproximadamente 3 sessões por minuto.

A aula mais popular do MANIC, com 65 acessos, possuía duração de aproximadamente 1 hora.

As distribuições de probabilidade para as métricas de interatividade da carga real podem ser verificadas.

Os resultados variando o número de estados ocultos e utilizando diferentes abordagens podem ser analisados.

Novamente a técnica de reestimar apresentou resultados melhores.

Para este exemplo, o modelo de 20 estados apresentou valores médios mais próximos da carga real do que o modelo de 4 estados.

A comparação entre as métricas do modelo HMM hierárquico e o modelo de pode ser verificada.

Para a carga do modelo HMM hierárquico, selecionamos a abordagem de reestimar para 20 estados ocultos.

Alimentamos o modelo de simulação de com as cargas sintéticas e real.

Apresenta a comparação entre diversas métricas da carga real e das cargas sintéticas.

A carga gerada pelo modelo HMM hierárquico apresentou uma boa aproximação para a carga real, porém não foi tão preciso para estimar a distribuição dos tempos em play e pausa, como ocorreu para os logs do CEDERJ.

Estas distribuições não são resultado do modelo HMM hierárquico, pois foram obtidas através de estimadores de máxima verossimilhança.

Para este exemplo, podemos notar que as estatísticas obtidas para a carga do modelo de estão mais próximas das estatísticas da carga real quando comparamos com os exemplos apresentados anteriormente.

O número médio de pausas não foi superestimado e o número médio de saltos para frente é um pouco menor do que o encontrado para a carga real.

Observamos tamb ém um melhor casamento entre as distribuições dos tempos em play e em pausa.

Porém, podemos notar que o modelo de ainda continuou subestimando a taxa de chegada de requisições no servidor, o que é conseqüência do número médio de interações do modelo ser 40% inferior à média de interações da carga real.

Distribuições de probabilidade para as métricas da carga real Comparação entre métricas geradas pelo modelo HMM hierárquico Métricas para a aula mais popular do MANIC O conjunto completo de logs que tínhamos disponíveis do sistema MANIC com duração da sessão maior do que 5 minutos era composto de 980 logs.

As aulas referentes a estes logs tem duração entre 27 minutos e 1 hora e 10 minutos.

Este conjunto possui logs bastante heterogêneos, de 28 aulas distintas e com duração da sessão variando entre 5 e 140 minutos.

As distribuições de probabilidade para as métricas de interatividade da carga real podem ser verificadas.

Histograma da duração da sessão para o conjunto completo de logs do MANIC Os resultados para o modelo HMM hierárquico variando o número de estados ocultos e utilizando diferentes abordagens podem ser analisados.

A técnica de reestimar apresentou melhores resultados do que a de truncar para ambos os valores de estados ocultos.

Não houve diferença significativa entre as estatísticas para 4 e 20 estados ocultos.

A comparação entre as métricas do modelo HMM hierárquico e o modelo de pode ser verificada.

Para a carga do modelo HMM hierárquico, selecionamos a abordagem de reestimar para 4 estados ocultos.

Alimentamos o modelo de simulação de com as cargas sintéticas e real.

Apresenta a comparação entre diversas métricas da carga real e das cargas sintéticas.

Neste conjunto de logs, o modelo HMM hierárquico não obteve uma aproximação tão boa das métricas quando comparamos aos demais conjuntos de logs.

Nosso modelo apresentou um número médio de interações, número médio de pausas e número médio de saltos inferiores ao da carga real.

Como conseqüência, a taxa de chegada de requisições ao servidor foi subestimada.

Com relação as distribuições dos tempo em play e em pausa, nenhum dos modelos aproximou-se da curva da carga real.

O modelo de também não apresentou uma boa aproximação da carga real.

Um ponto importante a ser ressaltado é que para conjuntos de logs com dados muito heterogêneos, principalmente quando o tamanho da sessão apresenta uma variância muito alta, os modelos não conseguem capturar as características de interatividade de maneira satisfatória.

Este mesmo resultado foi observado para a carga de 290 logs do CEDERJ com duração da sessão bastante diferente.

Para estes tipos de cargas sugerimos que o conjunto de logs seja separado em diferentes grupos, classificado segundo alguma métrica de interatividade adequada.

Posteriormente à classificação, cada conjunto de logs poderia ser usado separadamente para treinar diferentes modelos.

Sendo assim, cada modelo geraria cargas sintéticas similares ao conjunto de logs utilizado para treiná-lo.

Por fim, poderia-se utilizar as cargas sintéticas geradas pelos diferentes modelos, para representar o conjunto original.

Distribuições de probabilidade para as métricas da carga real Métricas para o conjunto completo de logs do MANIC Por fim, calculamos usando o modelo de, os requisitos de banda média no servidor tanto para um servidor que não implementa nenhuma técnica de compartilhamento de banda (abre um fluxo unicast para cada cliente), quanto para um implementando o protocolo de compartilhamento de banda PIE.

Ilustra os gráficos, onde cada coordenada do eixo X corresponde a uma das cargas utilizadas nesta seção.

Os pontos representam um par de valores composto pela banda média da carga real e da sintética gerada por um dos modelos.

Logo, quanto mais próximo um ponto da reta de 45 graus, melhor a aproximação da banda média da carga sintética.

Para esta métrica, podemos verificar que o modelo de é melhor para a carga composta pelo conjunto completo de logs do MANIC.

Já para as cargas da aula mais popular do sistema MANIC, o modelo HMM hierárquico apresentou uma melhor aproximação.

Para a carga, o modelo HMM hierárquico apresentou melhor resultado para o servidor com o protocolo PIE implementado.

Já para o servidor com nenhum protocolo de compartilhamento de banda implementado, os modelos apresentaram o mesmo resultado.

Ambos os modelos não conseguiram uma boa aproximação para a carga composta pelo conjunto de 290 logs do CEDERJ.

Banda média no servidor com fluxos unicast Neste trabalho propomos um novo modelo para geração de carga sintética de usuários interativos acessando um servidor multimídia com conteúdo educacional.

O modelo proposto consiste em um HMM hierárquico, inicialmente, onde dependências de curto prazo são representadas dentro de um estado oculto e dependências de longo prazo são representadas pela cadeia oculta.

Neste trabalho, realizamos duas adaptações no modelo proposto em para utilizá-lo para caracterizar o comportamento de usuários interativos, permitir que dinâmica de curto prazo fosse capturada por uma cadeia de Markov discreta qualquer, e não apenas por um modelo de Gilbert, que limita a aplicabilidade do modelo, permitir que o número de observações geradas em cada estado oculto fosse variável, e não mais uma constante como no trabalho original.

Com estas modificações no modelo original, o modelo HMM hierárquico tornou-se genérico, podendo ser facilmente utilizado em outros tipos de aplicações.

Para parametrizar o modelo utilizamos um conjunto bastante grande de logs reais de aulas do curso de graduação de Tecnologia em Sistemas de Computação do CEDERJ.

Validamos o uso do novo modelo HMM hierárquico em comparação a abordagem clássica de modelos de Markov ocultos.

Comparamos diversas métricas relacionadas à interatividade das cargas sintéticas geradas pelo modelo proposto e pelo modelo probabilístico de.

Também parametrizamos ambos os modelos com logs de outro sistema educacional, MANIC.

Nosso modelo apresentou métricas com valores próximos ao das cargas reais e mostrou-se bastante acurado quando usado para dimensionar um servidor multimídia, mesmo considerando um número reduzido de estados.

Verificamos também que se a carga usada para treinar o modelo apresentar logs com características muito diferentes, em especial o tamanho da sessão, as cargas sintéticas geradas pelo modelo podem ter características diferentes da real.

Para contornar esta questão sugerimos que a carga real seja classificada em diferentes grupos, de acordo com alguma característica significativa.

Cada grupo seria então usado para treinar um modelo individual, e não mais um único para todo o conjunto de logs.

Desta maneira, a carga real seria representada pelo conjunto de logs sintéticos gerados por diferentes modelos.

Sugerimos como trabalho futuro usar o modelo proposto em outros tipos de aplica ções multimídia, como por exemplo mídia para entretenimento.

Atualmente, trabalhos estão sendo desenvolvidos no laboratório LAND da COPPE/UFRJ, usando este modelo para emular clientes em um estudo de escalabilidade do servidor RIO para aplicação de educação à distância.

Ainda no escopo de aplicações para ensino a distância, uma possível aplicação do modelo é como uma ferramenta para auxiliar o estudo do comportamento de alunos em determinadas aulas ou cursos.

O estudo do comportamento dos alunos, pode por exemplo, ajudar a detectar aulas onde os alunos sentem mais dificuldades.

Outros trabalhos futuros estão relacionados ao aumento do número de usuários acessando o sistema CEDERJ.

A caracterização das chegadas de clientes no servidor poderá ser realizada, de maneira a complementar o estudo do impacto desta carga no servidor.

Por outro lado, o modelo proposto no presente trabalho pode ser usado com diferentes parâmetros para a chegada de clientes no servidor, já que este dado não é uma saída do modelo.

O uso de técnicas de validação cruzada também será possível com o aumento de logs disponíveis.

Nesta seção, mostraremos como é possível chegar as fórmulas da extensão do algoritmo Baum-Welch a partir do problema de maximização dos termos da função auxiliar, conforme dispostos nas Equações.

Há outras formas de se chegar às mesmas expressões que não levam em consideração a resolução explícita de um problema de otimização.

