Modelos Markovianos com recompensa tem sido amplamente abordados na literatura.

Nestes modelos, recompensas de taxa são associadas aos estados e/ou recompensas de impulso são atribuídas às transiç ões entre estados.

Modelos com recompensa têm sido usados para o estudo de sistemas mulimídea.

Nestes sistemas, o tráfego de entrada e as taxas de transmissão possuem valores bem maiores quando comparados com os valores dos demais eventos do sistema.

Devido a esta característica, modelos com recompensa podem ser computacionalmente mais atrativos que os métodos tradicionais.

A ênfase do nosso trabalho é desenvolver algoritmos que permitam obter medidas de performance a partir de modelos Markovianos com recompensa.

O primeiro método estudado calcula o valor esperado da recompensa acumulada em um intervalo finito.

A técnica utilizada aproxima o valor esperado da recompensa acumulada de taxa no tempo a partir do tempo aleatório com distribuição erlangiana.

Um exemplo de medida de performance que pode ser obtida é o tamanho médio do buffer em um intervalo de tempo.

Mostramos, também, que recompensas de impulso podem ser associadas a modelos Markovianos para a obtenção da distribuição do tamanho do buffer em estado transiente.

O método utilizado para obter esta distribuição é baseado em técnicas encontradas na literatura.

Desenvolvemos um algoritmo que calcula medidas de interesse para estado estacionário, baseado em recompensas de impulso.

A matriz gerada a partir deste modelo possui uma estrutura especial que é a chave da nossa técnica.

O algoritmo desenvolvido se baseia no algoritmo apresentado para resolução de modelos que possuam esta estrutura.

O algoritmo possui vantagens computacionais quando comparado com outros métodos encontrados na literatura.

Modelagem de sistemas de comunicação/computação é importante para uma análise preliminar do comportamento destes, sendo possível o estudo detalhado e minucioso antes mesmo da implementação real.

Desta forma, após a determinação de algumas medidas de interesse, podemos obter resultados precisos de como o sistema reage a certas condições, bem como de características inerentes da sua natureza.

Para representação destes sistemas, modelos matemáticos podem ser utilizados.

Dentre estes modelos, os processos estocásticos se destacam.

Entende-se como processo estocástico um conjunto de variáveis aleatórias indexadas por um parâmetro de tempo.

Assim, em um processo estocástico, o índice é interpretado como tempo e corresponde ao estado do processo no instante.

Entre os diversos processos estocásticos encontrados na literatura destacase o processo Markoviano.

No caso dos processos Markovianos, o comportamento do sistema depende apenas do estado atual do sistema, ou seja, o estado do modelo fornece todas as informações necessárias sobre o sistema.

Juntamente com os processos Markovianos, pode-se utilizar o paradigma de recompensas, onde o processo em estudo recebe uma recompensa quando transiciona entre estados ou quando passa uma unidade de tempo em um certo estado do modelo.

A abordagem de modelos Markovianos com recompensa tem sido amplamente usada devido à eficiência na determinação de certas medidas de interesse para o estudo do sistema mod2 elado.

Como aplicação de modelos Markovianos com recompensa, consideremos, por exemplo, modelos de confiabilidade.

Se associarmos a recompensa para todos os estados que representam que o sistema está operacional e para todos os outros estados, a recompensa acumulada pelo processo é o tempo em que este se encontra operacional.

Modelos com recompensa podem ser resolvidos usandométodos de solução analíticos ou simulação.

Considerando os métodos de solução matemáticos, dois grandes grupos podem ser especificados, os métodos que se destinam ao cálculo de medidas em estado transiente, onde o tempo de observação é considerado curto em relação aos demais tempos de ocorrência de eventos, e os métodos que se destinam ao cálculo de medidas em estado estacionário, onde o tempo de observação é considerado extremamente longo em relação aos demais tempos de ocorrência de eventos, mais precisamente, quando o tempo.

A especificação de um novo método de solução deve ter como principais objetivos a diminuição da complexidade algorítmica, a exploração de estruturas especiais das matrizes de probabilidade e, se possível, a definição de métodos que possibilitem a resolução de modelos que possuem uma grande quantidade de estados.

Nestes casos, recursões e mecanismos especiais devem ser definidos.

Finalmente, com o advento das redes de alta velocidade, as aplicações multimídia se tornaram alvo de estudo.

Especificações de modelos que representem o tráfego gerado por estas aplicações têm sido encontradas na literatura.

Uma das abordagens utilizadas para modelagem desse tráfego é a utilização de modelos de fluido.

Nestes, as altas taxas de transmissão de informações, bem como as altas taxas de geração de informações possibilita utilizarmos a abstração de fluidos para o estudo do comportamento dos buffers alimentados por este tráfego.

Métodos que utilizam equações diferenciais e transformada de Laplace têm sido utilizados para obtenção das medidas de interesse a partir de modelos de fluido.

No entanto, modelos Markovianos com recompensa podem ser utilizados para a obtenção destas medidas.

Em geral, os métodos para resolução de modelos com recompensa são matematicamente mais simples e se mostram extremamente eficientes.

O objetivo desta tese é apresentar métodos de solução matemáticos utilizados para a resolução de modelos Markovianos com recompensa tanto em estado estacionário quanto em estado transiente.

No caso do estudo em estado transiente, será apresentado um método para o cálculo do valor esperado da recompensa de taxa acumulada e mostramos como pode ser obtida a distribuição de probabilidade da ocupação do buffer baseada em métodos de solução para modelos com impulso existentes na literatura.

Para o estudo em estado estacionário, um novo método de solução para o cálculo da distribuição de probabilidades da ocupação do buffer baseado em modelos com impulso é proposto.

Todos os métodos apresentados são considerados métodos de aproximação, onde o resultado calculado difere de um pequeno erro em relação ao resultado calculado pelos métodos exatos.

Soluções calculadas com baixo custo computacional, mesmo que aproximadas, são extremamente atraentes, especialmente nos casos em que os métodos exatos requerem alto custo computacional, invibializando a utilização destes.

A seguir apresentamos a organização da tese, seguida de um breve comentário de cada um dos capítulos.

Nos capítulos 2 e 3 apresentamos a implementação e o estudo de um método de solução para obtenção do valor esperado da recompensa acumulada de taxa em um instante de tempo de observação.

Neste método o valor esperado da recompensa acumulada em é aproximado por uma variável aleatória com distribuição erlangiana de R estágios.

Este método de aproximação é indicado para a resolução de modelos onde as taxas de ocorrência dos eventos diferem em muitas ordens de grandeza.

Nestes casos, o custo computacional do método de aproximação é significativamente menor que o custo computacional da técnica de uniformização.

No capítulo 4 mostramos como podemos calcular a distribuição transiente da ocupação do buffer baseada em um método da literatura para o cálculo da distribuição da recompensa acumulada de impulso.

A modelagem proposta possibilita a determinação da distribuição da ocupação do buffer alimentado por uma fonte de tráfego, sem que o buffer seja modelado.

Neste caso, é atribuída uma recompensa de impulso com limites préestabelecidos ao processo modelado.

No caso particular do buffer, estes limites passam a ser iguais a zero e ao seu tamanho total.

Este também é um método de aproximação e é indicado para modelos onde o tempo que representa o total da fase transiente do modelo é expressivo.

No capítulo 5 apresentamos a proposta de um novo método de solução para estudo do comportamento estacionário de um buffer alimentado por um fluido.

A abordagem é semelhante à apresentada no capítulo 4.

São atribuídas recompensas de impulso ao modelo de forma que a matriz de transição de probabilidades (matriz P), gerada a partir do modelo possua estrutura especial.

O algoritmo proposto é uma extensão do método apresentado e possui vantagens computacionais quando comparado com outros métodos da literatura.

No capítulo 6 são feitas considerações finais sobre esta tese e propostas para trabalhos futuros.

O estudo do comportamento de um sistema de computação e comunicação em sua fase transiente tem importância quando o foco de interesse está direcionado à análise de medidas que sofrem variações significativas durante um amplo intervalo de observação.

Nestes casos, a utilização de resultados em estado estacionário impossibilita o estudo e a análise minuciosa do comportamento do sistema.

Por este motivo, diversos métodos para obtenção de resultados em estado transiente têm sido propostos na literatura.

Alguns desses métodos utilizam equações diferenciais para o cálculo da probabilidade do sistema se encontrar em um determinado estado em um instante específico no tempo.

No entanto, estes métodos possuem altos custos computacionais, já que requerem pequenos intervalos de observação para se obter resultados precisos (no caso das equações diferenciais) ou possuem problemas numéricos (no caso de exponenciais de matrizes).

Em alternativa aos métodos tradicionais de análise transiente, novas abordagens têm sido propostas.

Uma dessas abordagens utiliza a especificação de recompensas para obtenção de medidas de interesse que refletem o comportamento do sistema.

Para a resolução de modelos com recompensas, a técnica de uniformização é amplamente utilizada e aceita.

No entanto, quando os modelos possuem característica stiff, onde a diferença entre as taxas de transição possui um valor com elevada ordem de grandeza, esta se mostra ineficiente já que o custo computacional é diretamente proporcional à taxa de uniformização do modelo.

Em contrapartida, o custo computacional do método proposto, baseado na aproximação de Ross e que também utiliza o paradigma de recompensas, está dissasociado da taxa de uniformização do modelo, estando relacionado a outros fatores espec íficos.

Entre estes fatores específicos destacam-se o custo de se reduzir matrizes ou o custo de se obter o resultado de um sistema de equações utilizando métodos iterativos.

O principal objetivo deste capítulo é implementar e apresentar ométodo de aproximação proposto, utilizado no cálculo do valor esperado da recompensa de taxa acumulada, descrevendo suas principais características e vantagens.

A equação utilizada pela técnica de uniformização para obter o valor esperado da recompensa de taxa acumulada e o seu custo computacional também serão abordados.

A organização do capítulo é descrita a seguir.

Apresentamos os principais conceitos que envolvem a utilização de recompensas em modelos Markovianos.

Mostramos a técnica de uniformização sendo utilizada para o cálculo do valor esperado da recompensa acumulada.

Discutimos a aproximação proposta por Ross para a obtenção de medidas transientes.

Apresentamos o método proposto, baseado na aproximação de Ross, e as diferentes técnicas utilizadas para o cálculo do valor esperado da recompensa de taxa acumulada.

A utilização do paradigma de recompensas para o cálculo de medidas de performance, confiabilidade e performability em conjunto com a representação destes sistemas através da utilização de cadeias de Markov, começa a ser amplamente adotado.

Este fato se deve à afirmação de que a definição de recompensas é global o suficiente para se adequar ao cálculo da medida em estudo.

Entre estas medidas, podemos citar throughput, disponibilidade do sistema, tamanho de filas, etc.

A recompensa atribuída a um processo Markoviano pode se classificar em duas categorias distintas.

Recompensas de Taxa, a cada estado da cadeia é atribuída uma recompensa, sendo que o acúmulo dessa recompensa está relacionado com o tempo de perman ência no estado em questão.

Recompensas de Impulso, a recompensa está associada a transições entre os estados da cadeia.

Para melhor definirmos modelos Markovianos com recompensas de taxa, consideremos uma cadeia de Markov homogênea de tempo contínuo, com espaço de estados finito.

A cada estado está associado uma recompensa de taxa de um conjunto, onde representa a recompensa ganha por unidade de tempo em que o sistema se encontra no estado.

Consideremos, também, a variável aleatória que representa a recompensa instântanea no tempo, se.

As seguintes medidas de interesse podem ser definidas.

Recompensa de Taxa Acumulada, seja o período de observação de um sistema em particular.

Podemos definir a recompensa acumulada, neste intervalo.

Se dividirmos a recompensa acumulada pelo período de observação, obtemos a média da recompensa acumulada.

Consideremos, por exemplo, modelos de confiabilidade onde podemos associar para todos os estados onde o sistema está operacional e para os estados onde o sistema não está operacional.

Neste caso, a recompensa acumulada é o tempo total em que o sistema está operacional neste intervalo de observação.

Além da recompensa acumulada, podemos também estimar o valor esperado da recompensa acumulada que está associada a uma medida de interesse.

Para calcular tal medida, utiliza-se a determinação de todos os caminhos amostrais pelos quais o modelo evolui com o tempo, baseados em conceitos de probabilidade.

O valor esperado da recompensa acumulada pode ser definida onde representa o número de estados do modelo.

A técnica de uniformização ou técnica de randomização é amplamente utilizada na análise de modelos de performance, confiabilidade e performability.

Esta técnica foi proposta por Jensen em 1953, e tem-se tornado muito popular nos últimos anos para obtenção de medidas transientes em modelos Markovianos.

O principal objetivo desta técnica é transformar uma cadeia de Markov de tempo contínuo em uma cadeia de Markov de tempo discreto, o que facilita o cálculo de diversas medidas transientes.

Além disso, a utilização da matriz P definida como a matriz de probabilidades de transição em um passo no lugar do gerador infinitesimalQ evita problemas com erros de arredondamento, provenientes da manipulação dos elementos negativos da diagonal principal de Q.

Diversos métodos para o cálculo de medidas transientes utilizando a matriz Q podem ser encontrados.

Para a análise da técnica de uniformização, consideremos uma cadeia de Markov X com espaço de estados finito S, constituída por M estados.

O tempo de permanência em cada estado da cadeia é exponencialmente distribuído e a probabilidade de transição entre estados pode ser definida como sendo igual a, onde é a taxa de transição entre os estados e é a taxa de saída do estado.

Seja um parâmetro cujo o valor, em módulo, é maior ou igual à maior taxa de saída encontrada na matriz Q.

O valor sempre pode ser calculado, já que o espaço de estados é finito.

Assim, podemos definir um processo com as seguintes características, x possui o mesmo espaço de estados de X, o tempo de residência em qualquer estado da cadeia antes de uma transição é exponencialmente distribuído com taxa.

Portanto, o número de transições em é dado por uma distribuição de Poisson com a mesma taxa.

A probabilidade de X- transicionar de um estado para um estado é igual a.

Todavia, pode existir a transição para o mesmo estado.

Observando o processo X-, podemos notar que tanto a probabilidade de transição entre os estados, como o tempo de permanência em cada estado da cadeia e o espaço de estados são semelhantes aos do processo X, o que nos possibilita afirmar que os processos X e X- são semelhantes.

Seja, a matriz que fornece as transições de probabilidade entre os estados do processo X-.

Assim, o processo X é equivalente à cadeia de Markov de tempo discreto subordinado a um processo de Poisson.

Consideremos uma cadeia de Markov de tempo discreto com espaço de estados finito S e matriz de transições de probabilidade P, e seja o processo de Poisson com taxa independente de X.

A transição de tempos de X- ocorre de acordo com o processo de Poisson, e as transições entre estados ocorrem de acordo com a cadeia discreta e são dadas pela matriz P.

A partir destas considerações, podemos calcular a fração de visitas a cada estado após transições utilizando a matriz P, onde, e a seguinte equação, em notação vetorial é o vetor distribuição inicial de probabilidades, ou, alternativamente, utilizando a seguinte equação recursiva.

Descondicionando-se no número total de transições, temos que a distribuição de probabilidade em um instante, que é a equação básica da técnica de uniformização.

Consideremos o cálculo do valor esperado de CR(t).

Sabemos que a variável aleatória representa a recompensa instântanea no tempo.

Assim, o valor esperado para a recompensa instântanea pode ser designado, onde o vetor r é o vetor com as recompensas de taxa em cada estado do modelo e o vetor (t) é o vetor distribuição de probabilidade no instante, sendo o produto interno entre estes vetores definido como, onde é o número total de estados do processo.

Para obtermos o valor esperado da recompensa acumulada, basta integramos o valor esperado da recompensa instântanea neste intervalo de observação.

Observando que o termo de integração é a função de densidade da distribuição erlangiana com estágios.

A equação possui a seguinte interpretação probabilística, dado que ocorreram transições do processo uniformizado entre, o período de observação é dividido em intervalos, que são determinados pelo processo de Poisson.

Considerando que a distribuição de probabilidade no ésimo intervalo é v(j), o produto de pelo termo entre colchetes é o valor esperado da recompensa acumulada dado transições.

Tanto para o cálculo de probabilidade quanto para o cálculo do valor esperado, as equações contêm uma série infinita que deve ser truncada.

Este limite N é estimado através do erro tolerado para a medida, e é obtido utilizando a seguinte equação.

A partir da definição de N, pode-se estimar o custo computacional do cálculo do valor esperado da recompensa acumulada utilizando a técnica de uniformização.

O custo computacional depende tanto do valor de N, ponto de truncagem da série de Poisson, quanto da estrutura esparsa da matriz P.

Se o número médio de transições para fora do estado é (número total de entradas diferentes de zero em um linha de P) e o total de estados é igual, então o número de multiplicações necessárias para obtenção das medidas tem a ordem de grandeza limitada superiormente.

Se considerarmos valores elevados, a distribuição de Poisson pode ser aproximada por uma curva normal de parâmetros.

Logo, pode-se mostrar que N, e conseqüentemente o custo do método são proporcionais.

Em razão disso, para modelos onde as taxas têm valores que diferem por diversas ordens de grandezas, o custo da uniformização é bem alto.

Ross propõe uma nova equação para o cálculo da probabilidade de estado em um instante e, com pequenas modificações, esta equação pode ser aplicada ao cálculo do valor esperado da recompensa de taxa acumulada.

Nesta nova abordagem a probabilidade dos estados do modelo passa a ser calculada para um intervalo de tempo aleatório com distribuição erlangiana.

Ou seja, o tempo de interesse deixa de ser um tempo determinístico e passa a ser um tempo aproximado através de uma soma de diversas variáveis com distribuição exponencial.

Mostra-se que o cálculo da probabilidade para este último caso é bem mais fácil do que para o caso em que o tempo é determinístico.

Para tal, consideremos um sistema modelado por uma cadeia de Markov de tempo contínuo X.

Suponhamos que este sistema esteja sendo observado a intervalos que são representados pelas variáveis aleatórias.

Estas possuem distribuição exponencial com taxa e são independentes de X.

Se considerarmos que X está no estado, podemos dizer que o evento transição em X ocorre anteriormente ao evento de observação com a probabilidade.

Da mesma maneira, o evento observação ocorrerá anteriormente a uma transição em com a probabilidade.

Estas probabilidades são, respectivamente, a probabilidade de saída do estado e a probabilidade de permanência neste estado antes de uma nova observação.

Caso ocorra a saída do estado, a probabilidade de transicionar para o estado é.

Ilustra os processos e e a relação entre as transições e os eventos de observação.

Condicionando à ocorrência de um dos eventos, isto é, ao evento ou ao evento transição em X, e usando a propriedade Markoviana podemos definir.

Seja a variável aleatória erlangiana independente de X.

A partir da equação a seguinte equação recursiva pode ser obtida, lembrando que X permanece no mesmo estado se ocorre antes de uma transição em X.

O cálculo da probabilidade pode ser efetuado através da aplicação recursiva da equação acima, no total de R vezes.

Como é uma variável erlangiana de parâmetros o seu valor médio.

Definindo, fazemos com que o tempo de observação seja igual.

Assim, quando fazemos, a variância tende a 0 e tende a com probabilidade 1, o que, conseqüentemente.

Portanto, podemos escolher R grande o suficiente para que a precisão desejada no cálculo de seja alcançada.

A equação para o cálculo do valor esperado da recompensa de taxa acumulada pode ser obtida a partir da equação.

No entanto, a equação proposta por Ross possui um inconveniente, deve-se inverter a matriz obtida através da subtração de Q da matriz identidade de mesma ordem, resultando em um alto custo computacional.

Em razão disto, o método se torna eficiente somente para modelos onde o espaço de estados é reduzido.

Uma nova equação baseada no método de aproximação de Ross é apresentada.

Nesta, a recompensa acumulada é calculada levando em conta as características da matriz Q, sua estrutura especial (matrizes banda) ou sua estrutura esparsa, reduzindo o custo de processamento e de armazenamento.

Inicialmente, o processo Markoviano X que representa o modelo é discretizado e a matriz de transições de estados P, obtida através de Q, passa a ser utilizada.

Uma equação recursiva do tipo Ax = b é obtida.

Esta equação pode ser resolvida por métodos iterativos tradicionais ou por um método direto também proposto.

Com esta nova equação, o custo computacional para o cálculo do valor esperado da recompensa de taxa acumulada, diferentemente do custo computacional da uniformização, está mais relacionado com a estrutura da matriz de transição de probabilidades do modelo em estudo.

Assim, o custo passa a estar relacionado com o custo de um método iterativo para resolução de sistemas de equação ou com a redução de uma matriz, no caso do método direto.

Estaremos mostrando que a equação, proposta e implementada, é extremamente atraente para o cálculo da recompensa em modelos com características stiff.

Consideremos o conjunto de recompensas.

A cada estado é associada uma recompensa específica, que é acumulada a cada instante de tempo em que a cadeia permanece neste estado.

Seja X- o processo discretizado que representa o processo original X e P a matriz de transição de estados, onde cada elemento representa a probabilidade de transição do estado para o estado.

O tempo que o processo X- passa em cada estado antes de uma transição é e o tempo entre ocorrências de um evento de observação é.

Assim, o valor esperado do tempo entre ocorrências de eventos no modelo, sendo este uma transição na cadeia ou um evento de observação.

Podemos notar que o primeiro termo do lado direito da equação representa a recompensa que está sendo acumulada a cada unidade de tempo em que a cadeia se encontra no mesmo estado.

Esta situação acontece quando a transição da cadeia ocorre para o mesmo estado.

O segundo termo representa a ocorrência de uma transição na cadeia.

Como a equação é uma equação do tipo backward, temos um acúmulo de recompensas do estado para um estado intermediário.

Para este termo, devemos considerar todos os estados da cadeia como possíveis estados intermediários.

O terceiro termo representa a ocorrência do evento de observação.

Neste caso, não existem transições na cadeia e a recompensa de taxa acumulada no estágio anterior é somada ao ganho obtido no estágio atual.

A equação pode ser escrita na seguinte forma matricial, onde a matriz R é uma matriz diagonal, cujo o -ésimo elemento da diagonal representa a taxa e C é a matriz onde os elementos representam a recompensa acumulada em cada estado, considerando todos os possíveis estados iniciais.

Consideremos o vetor coluna como sendo o vetor onde o -ésimo elemento é igual a 1 e os demais elementos são iguais a zero.

Sendo e substituindo este termo na equação, temos, se considerarmos que o tempo de observação está sendo aproximado por uma distribuição erlangiana com R estágios, o vetor se torna uma boa aproximação para a -ésima coluna da matriz de recompensa acumulada e o -ésimo elemento do vetor se torna uma boa aproximação.

A partir da equação é possível a obtenção do valor esperado da recompensa de taxa acumulada para um subconjunto de estados dentro do espaço de estados da cadeia de Markov.

Para tal, basta preenchermos as entradas do vetor correspondentes aos estados pertencentes ao subconjunto com o valor 1.

As demais entradas permanecerão com o valor zero.

Assim, fazendo = e substituindo na equação, obtemos o valor esperado da recompensa de taxa acumulada considerando um subconjunto.

Isto é verdadeiro dado que o vetor é a soma das colunas da matriz que representam os estados pertencentes ao subconjunto.

Ao analisarmos a equação podemos notar que esta possui a forma Ax = b, onde a matriz é a matriz resultante do cálculo, o vetor x é representado por e b é representado.

Dessa maneira, podemos utilizar alguns métodos iterativos propostos na literatura para a resolução do sistema de equações apresentado.

Os métodos iterativos clássicos são adequados para modelos onde a matriz de taxas Q é esparsa e possui uma ordem elevada.

Assim, a matriz P será esparsa e, conseqüentemente, a matriz A também será esparsa.

As iterações realizadas não promovem o enchimento da matriz, evitando problemas de armazenamento.

Alguns dos métodos iterativos utilizados são os métodos de Jacobi, Gauss-Seidel, Sucessive Over-Relaxation, SOR e o Power.

Estes métodos possuem pequenas variações, sendo que o principal objetivo é obter de maneira mais eficiente as soluções do sistema.

Para cada iteração, em todos os métodos, o custo computacional é aproximadamente igual ao custo da multiplicação de um vetor por uma matriz esparsa.

Assim, o número total de iterações é determinante para o custo computacional de cada método iterativo.

Seja a -ésima equação pertencente ao sistemas de equação.

Resolvendo para a variável obtemos a cada iteração um novo valor que é calculado.

O número total de iterações está relacionado com o critério de parada escolhido, número máximo de iterações, o erro entre soluções de iterações consecutivas, número de iterações baseados no autovalor subdominante da matriz, etc.

Método de Jacobi Neste método, os valores na equação são valores que foram previamente calculados no passo anterior.

Assim, na equação somente os valores de calculados durante a iteração anterior são utilizados para o cálculo de na iteração atual.

No entanto, valores para, estão disponíveis na iteração atual e espera-se que estejam bem mais próximos da resposta esperada.

Em razão disso, o método de Gauss-Siedel utiliza para o cálculo de todas as soluções já calculadas na iteração atual.

Assim, uma consideração a ser feita é que no método de Gauss somente as mais recentes estimativas para cada devem ser armazenadas.

Desde que a matriz original permaneça inalterada, os requerimentos de armazenamento do método de Gauss-Seidel são mínimos, o que é importante para resolver sistemas com muitas variáveis.

A utilização de valores mais recentes para o cálculo de pode fazer com que o método de Gauss-Seidel convirja mais rapidamente para solução esperada do que ométodo de Jacobi.

No entanto, este fato nem sempre é verdadeiro, já que a taxa de convergência depende dos autovalores e autovetores da matriz P.

Método Sucessive Over-Relaxation, SOR Através de uma pequena modificação no método de Gauss-Seidel, podemos definir o método SOR.

Esta modificação visa promover uma convergência mais rápida para a solução esperada.

Neste método iterativo, tanto a solução obtida no passo quanto todos os valores obtidos no passo para são utilizados para a obtenção do valor de no passo atual.

A importância de cada componente da solução para o resultado no passo atual é dada através de um coeficiente denominado parâmetro de relaxação.

Podemos notar que o método de Gauss é um caso particular do método SOR, para o parâmetro de relaxação igual a 1.

O maior desafio do método SOR é a obtenção de um valor ótimo para o parâmetro.

Este valor deve proporcionar a maior diferença possível entre o autovalor dominante e o autovalor sub-dominante, resultando assim, em uma taxa de convergência mais rápida para a solução.

Estudos mostram que o método SOR somente converge.

Método Power Neste método iterativo a solução é obtida através de sucessivas multiplicações de um vetor x por uma matriz A.

Este método sempre converge para solução desejada.

No entanto, na grande maioria das vezes, a taxa de convergência para solução final é extremamente lenta.

Uma outra maneira de se resolver a equação é através da utilização do método direto que é baseado na eliminação de blocos.

A eliminação de blocos é indicada para modelos onde a matriz possui uma estrutura regular ou simétrica, como por exemplo matrizes do tipo banda.

Matrizes do tipo banda são aquelas em que os elementos não-nulos se organizam em torno da diagonal principal, ficando os elementos nulos na parte mais periférica da matriz.

Assim, a estrutura em banda da matriz permite a manipulação de seus blocos sem que haja o preenchimento do blocos originais com valores não-nulos, resultando em importante economia de espaço em memória.

O método direto proposto para a resolução do sistema de equações primeiramente particiona a matriz em diversos blocos.

Baseado nesta partição, a cada passo é eliminado um bloco, resultando em operações de multiplicações entre os blocos e de inversões dos blocos diagonais.

Ao final da eliminação um pequeno sistemas de equações é resolvido e juntamente com os blocos modificados os valores de são determinados.

Em razão da matriz A ser previamente dividida em blocos e da intensa manipulação destes é que este método possui um performance melhor quando o modelo possui uma matriz P com estrutura do tipo banda.

A descrição da técnica direta é feita a seguir.

Consideremos que a matriz A esteja inicialmente particionada em blocos da seguinte maneira.

Consideremos, também, que o vetor esteja particionado em blocos com as mesmas dimensões das partições em A.

A partir dessas considerações, podemos reescrever a equação da seguinte maneira.

Sendo os blocos da diagonal inversíveis, podemos obter o valor, utilizando a equação.

Assim é a equação base do método de redução.

Esta pode ser reescrita da seguinte forma, onde é idêntico a sem o primeiro bloco, possui dimensão x e possui dimensão.

O procedimento de redução da matriz passa a ser aplicado recursivamente.

Após passos, a matriz é obtida.

Ilustra a matriz A e os vetores c(r) e t(r), após a redução.

Matriz e vetores e após a redução.

Pode ser resolvida por um método direto, como por exemplo, a eliminação gaussiana.

Os outros blocos do vetor podem ser obtidos através da fórmula.

Podemos reescrever o algoritmo de redução da matriz.

A através dos passos descritos a seguir.

Devemos ressaltar que o processo da redução da matriz é realizado somente uma única vez.

Inicialização onde c(0) possui todos os valores iguais a zero, já que no início do período de observação não existe o acúmulo de recompensa.

Procedimento de redução da matriz A.

Cálculo do vetor de recompensa acumulada c(r), para os R estágios da distribuição erlangiana Atualização de t(r).

Mostra os diversos blocos da matriz A envolvidos no cálculo.

Manipulação dos blocos pelo algoritmo.

Para o cálculo do custo computacional da técnica direta, consideremos, sem perda de generalidade, que a matriz A possua blocos de dimensão x e que a matriz original tenha um número elevado de elementos não-nulos.

Além disso, consideremos também que a matriz original não tenha uma estrutura especial, caracterizando, com isso, a análise do custo no pior caso.

Tendo estabelecido as considerações anteriores, podemos dividir o custo computacional da técnica direta em três pontos principais, o cálculo da matriz, realizado no processo de redução, o cálculo do vetor c(r), que representa a recompensa acumulada até o estágio r da distribuição erlangiana e o cálculo do vetor t(r).

Para o cálculo da redução da matriz são necessárias multiplicações, já que devemos realizar multiplicações entre matrizes para um loop alinhado com três laços (o primeiro variando entre 1 e o número total de blocos e os demais variando para as linhas e colunas relacionadas).

Para a obtenção dos valores dos blocos do vetor t(r), são necessárias multiplicações e para computar o valor do vetor c(r) são necessárias multiplicações.

É válido ressaltar que o processo de redução da matriz A é efetuado uma única vez.

O cálculo de c(r) e t(r) é realizado R vezes.

Assim, o peso do custo computacional do cálculo de c(r) e t(r) será diretamente proporcional ao número total de estágios da distribuição erlangiana utilizado para aproximar o tempo determinístico.

Para o estudo da precisão do método de aproximação apresentado, suponha que a medida de interesse seja o vetor r onde o -ésimo elemento representa a recompensa acumulada pelo processo em um subconjunto de estados no tempo começando do estado.

O erro do método de aproximação depende da variabilidade da medida r em torno do tempo aproximado e da variabilidade da variável aleatória erlangiana em torno da sua média.

Assim, considerando que o desvio padrão da distribuição erlangiana com taxa, podemos definir, fazendo e substituindo na equação.

O valor é uma estimativa de erro no tempo, onde a segunda igualdade é obtida através da Kolmogorov-s backward equation.

A modelagem e análise de sistemas de computação têm recebido crescente atenção de pesquisadores que desejam entender e estudar o comportamento destes sistemas.

Assim, a modelagem tem como principal objetivo responder perguntas a respeito da performance e confiabilidade de sistemas e protocolos que ainda não foram efetivamente desenvolvidos.

A partir do estudo dos modelos e dos resultados obtidos, e se estes se mostram satisfatórios, podemos implementar o novo protocolo ou tornar realidade o projeto de um novo sistema.

O processo de modelagem se subdivide em várias etapas.

Primeiramente, devemos promover um estudo minucioso do sistema ou protocolo a ser modelado.

A partir deste estudo, podemos passar à especificação do modelo.

Com o modelo especificado, passamos para a fase de solução e obtenção de medidas de interesse.

Nesta etapa podemos optar pela solução matemática, onde o modelo é mapeado para um processo estocástico, como, por exemplo, o processo Markoviano, ou podemos optar pela utilização da simulação.

Caso o caminho escolhido seja a solução matemática, métodos analíticos devem ser utilizados.

Ao final, a solução matemática e a simulação convergem para a obtenção das medidas de interesse.

Os principais passos da modelagem.

Devido a complexidade do processo de modelagem, ferramentas são implementadas para possibilitar a geração de um ambiente integrado onde todos os passos da modelagem possam ser executados.

Além da integração e da utilização de uma interface amigável para o usuário, a ferramenta deve prover uma maneira natural de especificação do modelo, ou seja, o modelo deve ser especificado da maneira mais próxima possível da forma como o usuário pensa.

Uma outra questão importante é a integração de métodos de solução que se adequam a análise do modelo em estado transiente e/ou estacionário.

TANGRAM-II é uma importante ferramenta de modelagem e análise de sistemas de computação e comunicação.

Desenvolvida pelo Laboratório de Análise e Desempenho de Sistemas de Computação e Comunicação da Universidade Federal do Rio de Janeiro, visa propósitos educacionais e de pesquisa e tem como principais objetivos fornecer um ambiente integrado e amigável para a modelagem de sistemas, bem como oferecer um conjunto de ferramentas multimídia para serem utilizadas no processo de modelagem e no trabalho em grupo.

Escrita nas linguagens C, C++ e com interface em Java, a ferramenta TANGRAM-II permite a especificação dos modelos através da utilização do paradigma de orientação a objetos.

Além disso, permite ao usuário obter medidas de interesse em estado estacionário e/ou transiente através de um amplo conjunto de métodos de solução.

Neste capítulo usaremos a ferramenta TANGRAM-II para modelagem de três sistemas de computação que serão utilizados para o estudo comparativo entre o método de aproximação para obtenção do valor esperado da recompensa de taxa acumulada no intervalo e a técnica tradicional de uniformização.

Estes dois métodos se encontram integrados a ferramenta.

A organização deste capítulo é descrita a seguir.

Estaremos mostrando algumas considerações a respeito da implementação do método de aproximação, usando as técnicas direta e iterativa.

Apresenta três sistemas de computação juntamente com resultados numéricos da aplicação do método de aproximação e da técnica de uniformização.

Apresenta um exemplo do estudo da estimativa do erro originado pela utilização do método de aproximação apresentado neste trabalho.

O método de aproximação para o cálculo do valor esperado da recompensa de taxa acumulada, técnicas direta e iterativa, se encontra integrado a ferramenta TANGRAMII.

Como os demais métodos de solução analítica, o método proposto também está implementado utilizando a linguagem C, tendo a interface de entrada dos dados escrita na linguagem Java.

Para a implementação do método, rotinas anteriormente desenvolvidas foram utilizadas (rotinas para redução de matrizes, alocação de matrizes esparsas, manipulação de elementos na matriz).

No entanto, uma série de modificações foram realizadas para a obtenção da equação proposta.

Criação de rotinas para o cálculo dos vetores da recompensa acumulada c(r) e do elemento independente t(r).

Estruturação e manipulação dos arquivos de entrada para ométodo de solução, entre eles, arquivo com probabilidade inicial, arquivo com o intervalo de observação, arquivo com os estados destinos (utilizado para o cálculo da recompensa acumulada em um subconjunto de estados).

Adaptação dos métodos iterativos.

Novo critério de parada, número máximo de iterações.

Nesta nova opção, o usuário pode determinar um número máximo de iterações que devem ser realizadas pelo o método iterativo escolhido (SOR, Gauss, Siedel, Power ou Jacobi).

Este critério de parada é útil para os modelos onde a matriz A possui um autovalor sub-dominante próximo a 1, pois esta característica faz com que a convergência do método seja lenta.

Caso o método convirja antes do número total de iterações estabelecido, a execução do método é dada como encerrada.

Na técnica iterativa o usuário pode especificar diferentes valores de R para diferentes intervalos de observação.

Esta flexibilidade possibilita aproximar os primeiros intervalos, onde existem uma maior variabilidade das medidas, com um número maior de estágios exponenciais, ficando os últimos intervalos de tempo com um número de estágios relativamente menor.

Esta especificação também resulta em uma diminuição do custo computacional para o cálculo da medida de interesse.

Na técnica direta esta opção não está disponibilizada, pois para cada novo valor de R uma nova redução matricial deve ser feita, o que elevaria o custo computacional a valores exorbitantes, visto que, conforme veremos nos exemplos a seguir, a redução matricial é o passo com maior custo computacional.

A interface da técnica direta para o cálculo da recompensa acumulada no intervalo pode ser visualizada.

A utilização do método, bem como a especificação de cada parâmetro de entrada podem ser encontrados.

A técnica direta para obtenção do valor esperado da recompensa de taxa acumulada.

Nesta seção são mostrados resultados numéricos da comparação de custos entre o método de aproximação e a técnica de uniformização para o cálculo do valor esperado da recompensa de taxa acumulada, bem como a eficácia do resultado produzido pelo método proposto.

Para tal, três modelos com características stiff foram utilizados.

O primeiro modelo representa um canal multiplexador que alterna o envio de pacotes de duas filas com tráfegos distintos.

Este tipo de modelo pode representar um canal de comunicação que serve duas filas tratando de forma diferenciada os tráfegos, fazendo, por exemplo, com que um deles tenha uma maior prioridade no envio de pacotes.

Este tipo de modelo também pode representar uma fila que implementa a disciplina de serviço WFQ (Wheighted Fair Queuing).

A técnica iterativa para obtenção do valor esperado da recompensa de taxa acumulada.

O segundo modelo estuda o comportamento de um sistema composto por duas filas, cujos pacotes de dados armazenados são servidos por um conjunto de servidores.

Estes servidores possuem uma característica especial, em intervalos de tempo exponencialmente distribuídos, interrompem o serviço de pacotes.

Estes servidores são denominados vacation servers.

Após um intervalo de tempo, também exponencialmente distribuído, os servidores retornam a servir pacotes.

O terceiro modelo estuda o comportamento de um sistema que está sendo sobrecarregado por pacotes de dados.

Para tal, modelamos uma fonte de pacotes cuja a taxa de geração de pacotes é maior que a taxa de serviço.

Assim, a fila que armazena os pacotes de dados fica, na maior parte do tempo, com uma grande quantidade de pacotes.

Este cenário é ideal para estudo e dimensionamento de buffers em redes de dados.

Variáveis de estado do modelo canal multiplexador.

O sistema modelado neste primeiro exemplo consiste em um canal multiplexador que alterna o envio de pacotes pertencentes a duas filas, denominadas e, que recebem tráfego de origens diferentes.

O comportamento do canal multiplexador, que opera pelo sistema de polling, é descrito a seguir.

A fila é servida enquanto houver pacotes ou até expirar o seu tempo máximo de serviço (timeout).

Logo após o serviço à fila, a fila passa a enviar os seus pacotes, reiniciando todo o processo descrito.

Quando as filas se encontram vazias, o servidor entra em estado de espera e serve imediatamente a fila que primeiramente receber um novo pacote.

Seguindo o paradigma utilizado pela ferramenta TANGRAM-II, cada estado do modelo possui as variáveis de estado que podem ser visualizadas.

Listamos os parâmetros utilizados no modelo.

Podemos notar que a alta taxa de comutação (tempo decorrido entre o fim do serviço à fila i e o começo do serviço à fila seguinte, i + 1) e as baixas taxas de timeout, fazem com que o modelo tenha características stiff.

Como o principal objetivo deste modelo é estabelecer um estudo do comportamento do método de aproximação e da técnica de uniformização para o cálculo do valor esperado da recompensa de taxa acumulada, as seguintes medidas são definidas.

Erro absoluto, módulo da diferença entre a solução real (técnica de uniformização) e a solução aproximada (método proposto).

Erro relativo, erro absoluto dividido pela solução real.

A seguir apresentamos o desempenho do método proposto, considerando a técnica iterativa e a técnica direta.

Um estudo comparativo entre o custo computacional alcançado pelo método de aproximação para o cálculo do valor esperado da recompensa de taxa acumulada e a técnica de uniformização também é realizado.

Para este estudo, a medida de interesse utilizada foi a proporção de tempo em que permanece com o token, representando, assim, a proporção de tempo em que o serviço foi oferecido à fila em questão.

Desempenho da Técnica Iterativa Nesta seção estaremos estudando o comportamento do erro absoluto, do erro relativo e do custo computacional dométodo de aproximação, técnica iterativa, utilizando o modelo do canal multiplexador e o método iterativo de Gauss-Siedel.

Para tal, duas situações foram consideradas, onde variamos o número total de estágios R e fixamos o tempo final de observação e o número total de instantes de interesse, variamos o número total de instantes de interesse e fixamos o tempo final de observação e o número total de estágios R.

Considerando a primeira situação, estabelecemos como tempo final de observação o instante e como o número total de instantes de interesse.

A variação do valor do total de estágios R está estabelecida dentro do intervalo.

Variação de R.

Erro absoluto, Erro Relativo, Número total de iterações.

Analisando a figura podemos notar que o erro absoluto juntamente com o erro relativo decaem quase que exponencialmente a medida em que aumentamos o valor de R.

Este comportamento reflete exatamente a idéia de que se fizermos, a variância tende a e a variável erlangiana tende ao valor do tempo determinístico.

Em relação ao número total de iterações, podemos observar que este tem um aumento linear, fazendo com que o número total de multiplicações necessárias varie dentro do intervalo.

Para a técnica de uniformização o total de multiplicações necessárias foi de, o que demonstra que para se obter um erro na ordem o número total de multiplicações, utilizando o método de aproximação, é duas ordens de grandeza menor que o número total alcançado pela técnica de uniformização.

Para se ter uma maior precisão o custo total alcançado pelo método de aproximação é 93 vezes menor.

Este fato mostra que o método proposto é extremamente atraente para os modelos com características stiff.

Para a segunda situação, calculamos a medida de interesse para o mesmo instante final de observação.

Variamos o total de instantes de interesse dentro do intervalo.

Para cada instante de interesse foram utilizados 10 estágios exponenciais.

Variação do total de instantes.

Erro absoluto.

Erro Relativo.

Número total de iterações.

Segundo a implementação do método de aproximação, para cada um dos instantes de interesse R estágios exponenciais estão sendo utilizados.

A recompensa obtida no instante é utilizada como recompensa inicial para o instante de interesse posterior.

Dessa maneira, se para um instante final de interesse temos n instantes de interesse intermedi ários aproximados por R estágios exponenciais, podemos afirmar que está sendo aproximado por nR estágios exponenciais.

Assim, o tempo está sendo aproximado por um número total de estágios que varia no intervalo.

Desta maneira, o erro absoluto, o erro relativo e o total de iterações necessárias possuem comportamento semelhante ao comportamento da variação no número total de estágios R.

Através destes dois cenários, podemos observar que o método de aproximação possibilita calcularmos medidas de interesse com uma alta precisão, mesmo para a técnica iterativa, onde a solução difere de um erro em relação a solução real do problema.

Além disso, o custo computacional do método de aproximação se mostra significativamente menor que o custo computacional da técnica de uniformização.

Diferentes particionamentos e os respectivos custos computacionais.

Para estudar o desempenho da técnica direta, estaremos computando o custo computacional para diferentes configurações de divisão de blocos.

Os erros absoluto e relativo não serão abordados nesta seção, já que possuem o mesmo comportamento descrito no estudo da técnica iterativa.

As diferentes divisões de blocos utilizadas, escolhidas aleatoriamente, foram as seguintes.

Partição 1, 10 blocos de dimensão 44 e 1 bloco de dimensão 5.

Partição 2, 20 blocos de dimensão 22 e 1 bloco de dimensão 5.

Partição 3, 1 bloco de dimensão 445.

Partição 4, 2 blocos de dimensão 200 e 1 bloco de dimensão 45.

Partição 5, 1 bloco de dimensão 300 e 1 bloco de dimensão 145.

O número total de multiplicações necessárias para o procedimento de redução da matriz A estão listadas na tabela.

Conforme podemos observar na tabela, o particionamento da matriz A influencia diretamente no número total de multiplicações necessárias para obtenção da solução utilizando a técnica direta.

A partição 2 resulta em um menor custo computacional, enquanto a partição 5 resulta em um custo 18 vezes maior do que o custo alcançado pela partição que gera o menor custo computacional.

No entanto, é extremamente difícil estabelecer um particionamento favorável a obtenção de um custo computacional reduzido, a não ser que tenhamos uma ferramenta que possibilite a visualização da estrutura da matriz utilizada, bem como vibialize uma possível divisão em blocos que seja favorável a utilização de técnicas diretas.

Na próxima seção apresentamos uma ferramenta integrada ao TANGRAM-II, que permite a visualização da estrutura da matriz P e o seu particionamento em blocos.

A descrição do segundo modelo é feita a seguir.

Consideremos o sistema composto por duas fontes de dados, uma do tipo Poisson que continuamente envia pacotes com intervalos de geração exponencialmente distribuídos e outra fonte do tipo ONOFF, onde existem dois períodos distintos, um período ativo de envio de pacotes e um período de silêncio, onde não existe envio de pacotes.

O tempo de permanência em cada período da fonte ONOFF e o intervalo de chegada entre pacotes são exponencialmente distribuídos.

Cada uma das fontes envia os seus pacotes para buffers distintos.

Cada buffer possui no máximo cinco servidores.

Assim, a formação de fila no buffer somente ocorre se o número de pacotes for maior que o número máximo de servidores.

O buffer ligado a fonte ONOFF repassa os pacotes de dados ao outro buffer quando atinge a sua ocupação total.

Além dessas características, os servidores possuem períodos exponencialmente distribu ídos onde os pacotes deixam de ser servidos, e por esta razão o buffer se enche.

Após este período de -férias-, os servidores retornam a servir os pacotes, diminuindo, assim, o número de pacotes nos buffers.

É devido a este período de recesso no serviço de pacotes que estes servidores são denominados Vacation Servers.

Os parâmetros utilizados se encontram listados.

Podemos notar que é devido as altas taxas de envio e serviço de pacotes e as baixas taxas do período de -férias- que temos um modelo stiff.

Para o estudo do comportamento deste sistema, duas medidas de interesse foram utilizadas, o tamanho médio do buffer ligado a fonte Poisson e o tamanho do buffer ligado a fonte ONOFF.

Para tal, devemos definir uma recompensa que acumula o tamanho do buffer a cada instante de tempo que permanecemos em um determinado estado.

Ao final, se dividirmos o valor esperado da recompensa de taxa acumulada pelo tempo total de observação, teremos o tamanho médio do buffer.

Parâmetros do modelo vacation servers.

As recompensas são assim definidas, utilizando a linguagem de especificação de modelos da ferramenta TANGRAM-II, rate_reward = média_buffer1 condition = (TRUE) value = buffer, rate_reward = média_buffer2 condition = (TRUE) value = buffer.

Observamos o comportamento transiente da medida no intervalo de tempo.

Subdividimos o intervalo de tempo entre e em 10 subintervalos aproximados individualmente por 10 estágios exponenciais.

Assim, estamos aproximando o tempo determinístico através da utilização de 100 estágios exponenciais.

Para o tempo entre e foram utilizados 20 subintervalos que também foram aproximados individualmente por 10 estágios exponenciais.

Esta estratégia de obtenção de resultados foi utilizada para que pudéssemos acompanhar os primeiros intervalos de tempo com uma maior precisão, visto que são nestes intervalos que a medida de interesse sofre uma variação mais brusca.

Para a obtenção dos resultados, foi utilizada a técnica direta.

Tamanho médio do buffer1 e buffer2.

Podemos observar que, a princípio, o buffer ligado a fonte ONOFF atinge no instante 90% da sua ocupação total.

Este fato decorre da fonte estar inicialmente no período ativo e enviar uma rajada de pacotes.

Além disso, a capacidade total de serviço dos servidores ligados ao buffer1 é de, no máximo, 365550 pacotes/s, o que equivale a 50% da taxa de pacotes enviados pela fonte quando em período ativo, o que também influencia no enchimento acelerado do buffer.

A partir do tempo, o buffer já se encontra com um número médio de pacotes abaixo de 50% de sua capacidade.

Esta diminuição do número de pacotes reflete a transição da fonte para o período de silêncio.

O buffer ligado a fonte Poisson atinge no instante 80% da sua ocupação total, apesar da taxa de envio de pacotes pela fonte Poisson não chegar a 50% da capacidade máxima dos seus servidores.

Os seguintes fatos influenciam diretamente no comportamento do buffer2, o enchimento do buffer1 ocasiona a transferência dos pacotes para o buffer2, a fonte Poisson envia continuamente pacotes ao buffer2, o período de recesso no serviço de pacotes.

Estes fatos fazem com que a média do buffer2 seja maior que a média do buffer 1 no instante.

Para completar a análise do sistema, calculamos, em estado estacionário, o tamanho médio do buffer1.

Obtivemos um valor de, aproximadamente, 6,45 pacotes armazenados no buffer.

Ora, podemos observar pela figura que a medida da média de recompensa acumulada tende ao resultado em estado estacionário.

Este fato era de se esperar, pois quando analisamos o processo em estado estacionário temos a proporção de tempo em que passamos em cada estado do processo.

Assim, os valores de média e de média da recompensa acumulada convergem.

Uma outra observação a ser feita é a importância da análise em estado transiente.

O valor em estado estacionário, neste caso, não reflete satisfatoriamente o comportamento dos buffers ao longo do tempo.

Assim, o resultado em estado estacionário não seria útil, por exemplo, para estudo do comportamento de buffers em casos de congestionamento em redes.

Esta afirmação é aplicada a sistemas onde o tempo para se atingir o estado estacionário é considerado longo e as medidas possuem uma alta variação.

Caso contrário, a análise em estado estacionário se mostra satisfatória, acarretando, para alguns casos, um custo computacional menor.

O Custo Computacional e a Comparação com a Técnica de Uniformização.

Passemos ao estudo do custo computacional alcançado pelo método de aproximação.

Para a obtenção de cada medida, considerando o primeiro subintervalo de observação e dividindo a matriz A em 11 blocos, sendo 10 blocos com 350 estados cada e 1 bloco com 28 estados, foram necessárias 995008596 multiplicações para a redução da matriz A, 471174900 multiplicações para o cálculo do vetor de recompensa acumulada c(100) (já que o tempo foi aproximado utilizando R = 100) e 593958400 multiplicações para o cálculo do vetor independente t(100).

Assim, o custo total do método ficou na ordem de multiplicações.

No entanto, este custo computacional pode ter uma redução significativa.

Sabemos que a técnica direta para resolução de sistemas é indicada para sistemas onde a matriz possui uma estrutura especial, cujos elementos não-nulos estejam posicionados bem próximos a diagonal principal.

Assim, cada iteração dométodo não provoca o enchimento da matriz original que ocasiona o aumento de espaço de memória para armazenamento dos elementos, bem como não provoca o aumento do número total de multiplicações.

Iremos agora ilustrar como o fato de reorganizar a matriz pode reduzir o custo computacional dométodo.

Mostra a matriz P originalmente gerada pelo TANGRAMII.

Para determinar novas estruturas para esta matriz, a fim de serem utilizadas pelos métodos de solução com intuito de diminuição do número total de multiplicações, os estados do modelo devem ser reordenados.

Esta reordenação pode ser alcançada através do modulo de visualização e permutação de matrizes, integrado a ferramenta TANGRAM-II.

Estrutura original da matriz P.

A nova estrutura para a matriz P, após a permutação das variáveis do modelo.

Podemos observar que a nova matriz P possui uma estrutura onde os elementos não-nulos se localizam próximos a diagonal.

Utilizando esta nova estrutura e para uma divisão em blocos idêntica a da matriz original, foram necessárias 453604226 multiplicações para o procedimento de redução da matriz A, 111181350 multiplicações para o cálculo do vetor de recompensa acumulada e 233808400 multiplicações para o cálculo do vetor independente.

O custo total do método passou a ser de multiplicações, com uma queda de uma ordem de grandeza em relação ao proporcionado pela matriz original do modelo.

Com esta nova estrutura, o custo do processo de redução diminui pela metade, o custo do cálculo do vetor de recompensa acumulada diminui em vezes e o custo do cálculo do vetor independente diminui em vezes.

Nova estrutura da matriz P.

Esta flexibilidade na obtenção de novas estruturas, que acarreta um aumento da eficiência no cálculo da solução desejada, é uma das vantagens do método de aproximação.

No caso da utilização da técnica de uniformização, esta flexibilidade não pode ser alcançada, já que o número total de multiplicações está relacionada com o número total de elementos não-nulos da matriz P.

Passemos ao estudo do custo da técnica de uniformização utilizando as mesmas medidas já definidas.

Devido ao alto custo computacional da técnica de uniformização, a resolução da medida de interesse para este modelo foi limitada ao intervalo de observação.

O custo computacional é descrito a seguir.

Sabemos que o número total de multiplicações necessárias pela técnica de uniformização é da ordem, onde N representa o ponto onde o termo de Poisson é truncado, d é o número médio de entradas não-nulas em uma coluna da matriz de transição de probabilidade P e M é o número total de estados do modelo.

Além disso, o valor de N é proporcional ao valor de obtido no processo de uniformização da cadeia de Markov de tempo contínuo e ao tempo de observação do processo.

Tendo feito estas considerações, podemos efetuar o custo computacional da técnica de uniformização para o cálculo do valor esperado da recompensa de taxa acumulada no tempo de observação.

Temos, para este modelo, x e, fazendo x.

O número total de entradas não-nulas da matriz P é de 22512.

Assim, o custo total da técnica de uniformização é da ordem de multiplicações, ou seja, duas ordens de grandeza acima do custo do método de aproximação, sendo que o custo do método de aproximação apresentado está relacionado a um intervalo de observação 10 vezes maior que o intervalo de observação abrangido pela técnica de uniformização.

Vale ressaltar que o custo do método de uniformização é diretamente proporcional ao tempo de observação.

Assim, se calculássemos o comportamento da medida para um intervalo de tempo até, o custo computacional aumentaria duas ordens de grandeza, chegando a multiplicações.

Os resultados obtidos pelo método de aproximação e a técnica de uniformização, no instante de tempo.

Podemos observar que o resultado obtido pelo método proposto está bem próximo ao valor obtido pela técnica de uniformização.

A diferença entre os resultados é da ordem, o que mostra a eficácia do método de aproximação.

Parâmetros do modelo Servidor Erlangiano.

Neste modelo estamos representando uma fonte ONOFF que envia pacotes para serem servidos por um servidor erlangiano.

Para esta categoria de servidores, o pacote de dados é servido em R estágios distintos e consecutivos.

Cada estágio possui um tempo de serviço exponencialmente distribuído.

Se o número de estágios for grande o suficiente, estaremos aproximando o tempo de serviço por um tempo determinístico.

O comportamento do modelo é descrito a seguir.

O período ativo da fonte é, em média, maior que o seu período de silêncio.

Este tipo de fonte pode ser utilizado para representação de tráfego com períodos de rajada de pacotes.

Além disso, uma outra caracter ística é que a taxa de envio de pacotes é maior que a taxa de serviço.

Este cenário foi proposto para que pudéssemos estudar o comportamento do buffer quando estamos sobrecarregando o sistema.

Para este estudo duas medidas foram calculadas, tamanho médio do buffer e proporção de tempo em que o buffer possui uma ocupação acima de 70% da sua ocupação total.

Estas medidas, dentro da análise do modelo, podem parecer redundantes.

No entanto, a medida de proporção de tempo acima de 70% de ocupação é extremamente atraente se estamos interessados, por exemplo, em promover algum tipo de controle de congestionamento em uma rede de dados sem estarmos interessados no número médio de pacotes que estão no buffer.

Sem a utilização de recompensas, a obtenção deste tipo de medida seria bem mais complicada.

As recompensas foram assim definidas, rate_reward = média_buffer condition = (TRUE) value = buffer, rate_reward = buffer_acima_35 condition = (buffer>= 35) value = 1.

O principal objetivo deste modelo é apresentar um estudo comparativo do erro entre a solução fornecida pelométodo proposto e a solução fornecida pela técnica de uniformização.

Analisemos primeiramente a medida que calcula o tamanho médio do buffer em um instante do tempo.

Cada subintervalo de tempo observado foi aproximado através de 15 estágios exponenciais.

Tamanho médio do buffer em um instante de tempo.

Observando o gráfico, podemos notar que o resultado obtido pelométodo de aproximação possui uma margem de erro muito baixa em relação ao resultado da técnica de uniformização.

Os valores para os erros absoluto e relativo são mostrados.

Erros absoluto e relativo (tamanho médio do buffer), método de aproximação.

Mesmo com um erro absoluto na ordem de nos dois primeiros instantes de tempo, podemos dizer que este fato não compromete a eficácia do método, já que este erro representa um valor menor que 5% do valor real da medida.

Além disso, podemos notar que para os demais intervalos de tempo, o método de aproximação possui um erro absoluto da ordem de, chegando a um erro relativo da ordem de em alguns intervalos de observação.

Estes resultados comprovam a eficácia do método proposto.

Apesar dos erros absoluto e relativo diminuírem com o aumento do número de estágios exponenciais (conforme vimos no modelo do canal multiplexador), observamos que, por exemplo, no tempo o erro absoluto é numericamente maior do que o erro produzido no tempo.

Este fato ocorre porque o erro relativo e absoluto estão relacionados tanto com aumento do número total de estágios quanto com a variação da medida nas proximidades do tempo em que estamos observando.

No entanto, apesar da variação da medida, podemos dizer que o aumento de R tende a produzir, na grande maioria dos casos, resultados cada vez mais próximos dos resultados obtidos com a técnica de uniformização.

Passemos a análise da medida de interesse onde calculamos a proporção de tempo em que passamos com o buffer acima de 70% da sua capacidade total.

O tempo de observação está definido.

Cada subintervalo de tempo observado foi aproximado através de 20 estágios exponenciais.

Os resultados obtidos através dométodo proposto e através da técnica de uniformização podem ser visualizados no gráfico.

Mais uma vez podemos observar, com o auxílio da tabela, que os erros absoluto e relativo variam entre e, provando a eficácia do método de aproximação.

Para exemplificar o cálculo da estimativa do erro do método de aproximação para a obtenção do valor esperado da recompensa de taxa acumulada, utilizamos a cadeia de Markov apresentada.

Esta cadeia representa os estágios de uma distribuição erlangiana, e a recompensa calculada foi a proporção de tempo que o processo passa nos cinqüenta primeiros estágios da distribuição, considerando como estado inicial cada um dos duzentos estados da cadeia.

Para este exemplo foi utilizado o parâmetro R com valor igual a 1.

Apresenta os resultados obtidos.

Nele, apresentamos o valor real da recompensa, obtido através da utilização do método de uniformização, o valor aproximado da recompensa, obtido através do método de aproximação proposto, o valor do erro estimado e o valor do erro absoluto entre as medidas.

Podemos notar que o erro estimado possui comportamento similar ao erro real, ou seja, para valores de onde a medida possui uma grande variabilidade o erro é maior.

Assim, caso seja utilizado um valor de R que não proporcione uma boa aproximação para o tempo determinístico, obteremos para o erro estimado um valor significativo.

Dessa maneira, podemos recalcular a medida de interesse aumentando o valor de R e obter um resultado mais aproximado do resultado real da medida de interesse.

Uma das maiores restrições encontradas durante o processo de modelagem está relacionada à cardinalidade do espaço de estados que representa o modelo alvo de estudo.

Assim, modelos que exibem um amplo conjunto de possíveis estados requerem métodos eficientes para obtenção do espaço de estados, bem como métodos matemáticos eficientes para a solução dos mesmos.

Consideremos, por exemplo, a obtenção da distribuição de probabilidade, em estado transiente, de um buffer alimentado por uma fonte de tráfego.

Tradicionalmente esta medida é obtida através da especificação de um modelo onde tanto a fonte quanto o buffer são representados, o que faz com que a cardinalidade do espaço de estados seja diretamente proporcional ao tamanho do buffer e das diferentes fases da fonte.

Após a especificação do modelo e a geração do modelo matemático, utilizamos um método de solução, como por exemplo a técnica de uniformização, para a obtenção da distribuição de probabilidade.

Caso tenhamos uma fonte que possua cinco diferentes níveis de taxa de transmissão e um roteador com capacidade para 20000 pacotes, o espaço de estados seria aproximadamente igual a 100000.

Este valor em conjunto com os parâmetros do modelo, como por exemplo altas taxas de transmissão, podem ocasionar um alto custo computacional para a obtenção de diversas medidas de interesse.

Uma maneira de amenizar o problema descrito acima é o estudo de métodos de solução que proporcionam a obtenção de diversas medidas de interesse sem que haja a descrição de todo o espaço de estados ou a realização de um grande número de operações.

Neste capítulo mostramos como a distribuição transiente do buffer pode ser obtida usando o paradigma de recompensas de impulso juntamente com os conceitos de limites inferior e superior impostos a recompensa máxima acumulada.

Desta forma, podemos modelar buffers com várias capacidades de armazenamento, sem nos preocuparmos com a modelagem do seu tamanho total.

Um outra particularidade do método é que este pode ser utilizado para a resolução de modelos de fluido de uma maneira bem mais eficiente.

Os modelos de fluido se adequam perfeitamente às redes multimídia, onde a quantidade de informação transportada é bem elevada.

A organização deste capítulo é descrita a seguir.

Apresentamos os principais conceitos de modelos de fluido e o mapeamento destes para os modelos Markovianos com recompensas.

Apresentamos a utilização de limites para as recompensas atribuídas ao modelo.

Comentamos brevemente o método proposto para o cálculo da distribuição da recompensa de taxa acumulada, limitada superiormente e inferiormente.

Apresentamos a equação proposta e a modelagem sugerida para obtenção da distribuição de probabilidade da ocupação do buffer em um tempo finito.

Calculamos o custo computacional do método e avaliamos em que condições ele apresenta ganho computacional em relação ao método baseado em recompensa de taxa.

Apresenta alguns exemplos onde foi estudado a precisão do método e o seu custo computacional.

Consideremos o tráfego gerado pelas aplicações multimídia, tais como vídeo-conferência, ensino à distância, mundos virtuais entre outras.

Este tipo de tráfego se caracteriza por uma grande quantidade de informação e uma grande variabilidade na taxa de transmissão.

Para o estudo do comportamento de um buffer alimentado pelo tipo de tráfego descrito acima, os modelos de fluido (fluid flow models) têm sido muito utilizados.

Neste caso, o fluxo de chegada e saída de pacotes em um roteador é aproximado por um fluido contínuo.

Este tipo de modelo se adequa bem ao estudo da variação do tamanho do buffer, já que o tempo entre chegadas de informações é pequeno em relação à duração de uma rajada e o tempo de serviço e o tempo entre chegada de informações são constantes.

Dessa maneira, o tráfego passa a se comportar como um fluido contínuo de informação.

Sob estas condições, seja a quantidade de pacotes armazenados no buffer associado a um canal de saída de um roteador, no instante de tempo.

Seja o processo que modela a fonte que alimentam o canal, isto é, fornece a taxa de transmissão no instante de tempo.

Supondo que é uma cadeia de Markov.

É possível obter a seguinte equação matricial diferencial parcial, onde D é uma matriz diagonal cujo o -ésimo elemento representa a taxa de transmissão no estado do processo Markoviano, subtraída da capacidade do canal.

Dessa maneira, este elemento representa o quanto de informação está sendo acrescida/decrementada do buffer.

A equação pode ser resolvida usando análise espectral, envolvendo, também, a inversão numérica da transformada de Laplace de uma equação obtida.

Já a solução em estado estacionário envolve o cálculo dos autovalores e autovetores de D Q, o que não é uma tarefa trivial a não ser para casos particulares.

Não é difícil ver que o modelo de fluido pode ser imaginado como um modelo de recompensa.

Suponha, como indicado acima, que o conjunto de fontes alimentando o buffer de um roteador seja modelado por uma cadeia de Markov, onde a taxa de transmissão (constante) no estado é igual a (bits, células, pacotes, etc).

Seja a capacidade do canal.

Assim, se associarmos uma recompensa de taxa ao modelo, a recompensa de taxa acumulada é igual ao tamanho do buffer em, desde que os valores de estejam limitados entre 0 e o tamanho máximo do buffer.

Conforme observamos na seção podemos mapear o modelo de fluido, que tradicionalmente é resolvido através de métodos de transformada de Laplace ou cálculo de autovalores e autovetores, em modelos que utilizam recompensas que devem ter os seus possíveis valores limitados.

No entanto, até o momento estudamos a aplicação de recompensas sem estarmos preocupados em estabelecer limites aos seus possíveis valores.

Conseqüentemente, a recompensa acumulada pode atingir diversos valores, aumentando gradativamente, caso somente recompensas positivas estejam presentes no modelo, ou assumindo valores negativos, caso existam recompensas negativas.

Para que seja possível o mapeamento entre o modelo de fluido e o modelo de recompensa sem a modelagem do buffer, devemos estabelecer limites para que o buffer nunca tenha uma ocupação negativa ou uma ocupação acima da sua capacidade máxima.

Apresenta a utilização de limites à recompensa acumulada, quando consideramos o mesmo caminho para um determinado processo.

Conforme podemos ver, a recompensa acumulada passa a ter valores entre os limites estabelecidos.

Conseqüentemente, podemos realizar o estudo do comportamento de um buffer sem a sua modelagem explícita, já que podemos garantir, através da utilização de limites, que o buffer nunca terá ocupação negativa ou acima do seu valor máximo.

Além disso, a partir da introdução de limites, podemos resolver modelos de fluido de uma maneira bem mais simples e eficiente em termos computacionais, diferentemente da maioria dos métodos propostos que envolvem resoluções de equações diferenciais, possuindo, assim, alta complexidade e problemas numéricos.

Diferença entre processos com recompensa ilimitada e limitada.

Foi proposto um algoritmo para determinação da distribuição complementar da recompensa de taxa acumulada, isto é.

Foi mostrado que com a utilização de argumentos probabilísticos, é possível limitar tanto inferiormente quanto superiormente a recompensa acumulada de taxa acumulada e com isso pode-se calcular a distribuição transiente da ocupação de um buffer.

Dois aspectos devem ser ressaltados em relação ao método.

O primeiro é relativo à restrição que deve ser satisfeita quando são impostos limites à variável aleatória.

A seguinte condição deve ser satisfeita neste caso, onde é a menor recompensa positiva do modelo.

Isto significa que, para os modelos onde o tamanho do buffer é muito grande em relação a menor recompensa positiva e o tempo de observação é pequeno, não conseguimos determinar a distribuição complementar exata da ocupação do buffer.

Nestes casos, somente conseguimos valores que sejam limites inferior e superior para a medida original.

Para estabelecermos o intervalo em que a medida verdadeira se encontra, devemos executar o algoritmo por duas vezes, aumentando seu custo computacional.

Um outro problema é que nem sempre os limites inferior e superior estão próximos um do outro, não fornecendo uma boa precisão para a medida real.

Um outro ponto a ser ressaltado está relacionado a complexidade computacional do método.

A ordem de complexidade é de, onde é o ponto em que a série de Poisson é truncada, é o número médio de saídas de um estado e é o total de estados que representam a fonte.

O custo computacional pode ser elevado nos casos em que tem valor elevado, ou seja, modelos onde a taxa de uniformização é alta ou que demoram para atingir o estado estacionário.

Na próxima seção apresentamos um método de solução que utiliza recompensa acumulada de impulso, limitada superiormente e inferiormente, para o cálculo da distribuição de ocupação de um buffer em um instante.

Este fato somente é possível através de uma aproximação à recompensa acumulada de taxa.

Definimos modelos Markovianos com recompensas de impulso os modelos em que a uma dada transição particular ocorrida de um estado para um estado, uma recompensa é atribuída ao processo.

Como a recompensa de impulso está disassociada do tempo, tradicionalmente esta é utilizada para contabilizar eventos que ocorrem durante o processo, já que são os eventos que desencadeiam as transições.

No entanto, apresentamos nesta seção uma maneira de aplicarmos a recompensa acumulada de impulso para obtenção da distribuição da ocupação do buffer em um instante de tempo.

No modelo a ser utilizado iremos associar a cada transição uma recompensa de impulso que deve ser igual à variação do buffer em um curto intervalo de tempo.

Consideremos o modelo definido anteriormente onde associa-se uma recompensa de taxa, sendo a taxa da fonte e a capacidade do canal de comunicação.

Neste modelo, se o processo permanece no estado unidades de tempo, o buffer aumenta de unidades de informação, caso seja positiva.

Caso seja negativa, o buffer decresce de unidades de informação.

Considere o processo que representa uma fonte de tráfego ONOFF.

Neste modelo associamos uma recompensa de impulso a uma transição do estado para o estado, sendo que esta deve ser igual a variação do buffer em um intervalo.

Suponha agora que tenha sido uniformizado com taxa.

Logo, o tempo de perman ência em cada estado do modelo é exponencialmente distribuído com média.

No estado ON temos a transmissão de informação a uma taxa de.

Neste mesmo estado, o canal, no qual as informações estão sendo enviadas, -serve- o tráfego com uma taxa.

Dessa forma, podemos dizer que o buffer está aumentando em média o seu tamanho de, a cada visita ao estado ON.

Este valor deve ser atribuído a recompensa de impulso.

No caso do estado OFF, o tamanho do buffer decresce.

Assim, este valor deve ser atribuído a recompensa de impulso.

Podemos observar que o comportamento do buffer é totalmente representado no modelo descrito acima, o que possibilita a diminuição do espaço de estados do modelo e, conseqüentemente, a diminuição, na grande maioria dos casos, do custo computacional.

Generalizando o exemplo descrito acima, considere um processo, uniformizado, que representa uma fonte de tráfego.

Para cada transição de um estado do modelo para um estado, associa-se uma recompensa de impulso, onde é a taxa da fonte no estado, é a capacidade do canal e é a taxa de uniformização do processo.

Desta forma a variável aleatória, recompensa de impulso acumulada, representa o tamanho do buffer no instante de tempo.

Representação da fonte ONOFF para modelos com recompensa de impulso.

É apresentada uma equação para o cálculo de distribuição da recompensa acumulada de impulso.

No trabalho apresentado é mostrado que a recompensa pode ser limitada inferiormente e superiormente de forma simplificada.

Limitando a variável aleatória e utilizando o modelo descrito, é possível calcularmos a distribuição da ocupação de um buffer em um instante de tempo, sem nos preocuparmos com a modelagem de sua capacidade.

Para obtermos a distribuição de, condicionamos a no número de transições ocorridas no processo e no valor da recompensa acumulada.

Seja a probabilidade da recompensa total acumulada ser igual a dado a ocorrência de n transições e que o estado visitado após a última transição seja o estado s.

Podemos calcular através da seguinte recursão, sabendo que e representam, respectivamente, os limites inferior e superior impostos ao valor da recompensa acumulada de impulso, onde s- é o estado visitado pelo processo antes da última transição, r- é a recompensa acumulada anteriormente a última transição, é a recompensa de impulso relacionada com a transição do estado s- para o estado s e representa a probabilidade de transição de s- para s.

Esta recursão deve ser aplicada para valores de maiores que 1.

Onde é a probalidade do processo se encontrar inicialmente no estado s.

Para finalizar, definimos o vetor, considerando para cada estado do modelo a probabilidade de acumularmos todos os possíveis valores de recompensa menores que o valor.

Algumas considerações podem ser feitas com relação a recursão, principalmente quando a recompensa atinge os valores do limite inferior e do limite superior.

Limite Inferior, para que a recompensa atinja o valor do limite inferior na ésima transição, o valor da recompensa acumulada até a transição deve assumir valores maiores que e a recompensa recebida através da transição do estado para o estado deve ser, obrigatoriamente, menor que zero.

Este fato explica a restrição do primeiro somatório e a restrição imposta ao segundo somatório.

Limite Superior, da mesma maneira, para que a recompensa atinja o valor do limite superior na -ésima transição, o valor da recompensa acumulada até a transição deve assumir valores menores que e a recompensa recebida através da transição do estado para o estado deve ser, obrigatoriamente, maior que zero.

Este fato explica a restrição do primeiro somatório e a restrição imposta ao segundo somatório.

Para completarmos a compreensão da recursão, consideremos, como exemplo, a cadeia hipotética mostrada.

Nesta, ocorrem recompensas de impulso que assumem valores positivos, negativos e nulos.

Para esse processo, limites superior e inferior para o total da recompensa acumulada pelo processo são estabelecidos.

Podemos notar que os únicos valores que precisam ser mantidos durante a recursão são aqueles que se encontram entre os limites estabelecidos.

Caso a recompensa acumulada atinja valores fora desses limites, esta é descartada.

Observando a recursão podemos verificar que um dos parâmetros a ser determinado são os possíveis níveis r-.

Neste modelo os possíveis valores de recompensa de impulso que podem ser adicionados/subtraídos da recompensa acumulada cada vez que o processo faz uma transiçãoModelo de fonte com três estados.

Dois casos devem ser considerados.

Este é o caso dos modelos de fluido onde a taxa da fonte e a taxa de serviço são muito maiores que as taxas de transição entre os estados da fonte.

Assim, é maior do que uma unidade de informação o que significa que o buffer poderá ser acrescido/decrementado de valores elevados.

Logo, o custo computacional deve ser reduzido sensivelmente.

Para esta classe de modelos, é menor do que uma unidade de informação.

Logo, não devemos ter ganho computacional em relação aos modelos em que o buffer é explicitamente representado.

Consideremos, agora, como obter os possíveis valores de r-, baseado no modelo apresentado.

Denominamos granularidade o valor mínimo que pode ser adicionado/subtraído da recompensa acumulada cada vez que o processo faz uma transição.

Desta forma, todos os possíveis valores de r- serão múltiplos da granularidade escolhida.

Para que possamos determinar a granularidade, os seguintes procedimentos podem ser utilizados.

Podemos fazer com que a granularidade seja igual ao mínimo entre todas as recompensas de impulso atribuídas ao processo.

Podemos fazer com que a granularidade seja igual ao máximo divisor comum das recompensas recebidas pelo processo.

Neste caso, estaremos aumentando o número total de níveis r- e estabelecendo um universo maior de possíveis múltiplos pelos quais as recompensas reais devem ser aproximadas.

Este procedimento faz com que o resultado calculado fique bem próximo ao resultado real da medida.

O custo computacional atinge valores proporcionais ao tamanho do buffer e do máximo divisor comum das recompensas associadas ao processo.

Podemos fazer com que a granularidade seja igual a média ponderada das diversas recompensas pela proporção do tempo que o processo permanece em cada fase da fonte, considerando o instante de observação.

A média ponderada é obtida através da multiplicação entre as recompensas associadas a cada fase da fonte e a proporção de tempo em que o processo permanece em cada fase da fonte.

Para se obter o segundo fator da multiplicação, devemos definir, para cada fase da fonte, uma recompensa de taxa onde atribuimos o valor 1 quando estamos na fase considerada e 0, caso contrário.

Ao final do tempo de observação, temos o tempo total passado em cada fase da fonte e a divisão deste valor pelo tempo resulta na proporção de tempo procurada.

Este resultado pode ser obtido através do método de aproximação apresentado no capítulo 2.

O fato de utilizarmos este artifício para o cálculo da proporção de tempo em cada fase da fonte requer um custo computacional bastante pequeno, devido ao espaço de estados reduzido do modelo da fonte.

Se o tamanho do buffer a ser modelado é igual, teremos que o total de níveis.

A partir dos resultados obtidos, duas situações podem ocorrer.

Neste caso, a granularidade é proporcional ao tamanho do buffer (mesma ordem de grandeza).

O fato da granularidade assumir valores maiores é um indicativo de que não será necessário um grande número de níveis de recompensa.

No entanto, um novo valor de deve ser calculado para que o crescimento/decrescimento do buffer assuma um comportamento mais contínuo.

Este novo valor de deve ser, por exemplo, tal que.

Assim, consideremos um processo onde as recompensas assumam valores da ordem de grandeza.

Se o tamanho do buffer é da ordem de grandeza, por exemplo igual, podemos escolher um novo, tal que o crescimento/ decrescimento seja da ordem.

Neste caso, o valor do da uniformização pode ser mantido.

As considerações citadas acima se mostraram eficientes para determinação do número total de níveis para um conjunto de modelos estudado.

Para o cálculo do custo computacional do método proposto devemos observar que o somatório terá um total de elementos igual ao utilizado para truncar a série infinita.

A cada transição do processo, devemos calcular a probabilidade da recompensa acumulada ser menor que um valor qualquer, representado pelo termo.

Para a obtenção deste termo, devemos considerar todos os possíveis estados do processo como sendo o último estado visitado após a -ésima transição.

Dessa forma para todo diferente de zero, devemos calcular o termo, considerando todos os possíveis níveis de recompensa acumulada.

Assim, o custo do método proposto é da ordem de, onde é o ponto onde o termo de Poisson é truncado, é o número médio de transições ocorridas a partir de um estado qualquer do processo, é o número de estados da fonte modelada e é o número total de níveis de recompensa.

O termo pode ser considerado como o número total de entradas não-nulas da matriz de probabilidades.

Nos casos em que o buffer é modelado, a cadeia de Markov relacionada com o modelo possui estados, onde é o total de fases da fonte e representa o tamanho do buffer.

Como já citado anteriormente, o custo da resolução deste modelo usando, por exemplo, a uniformização é da ordem de.

Assim, o custo computacional do método proposto será menor quando.

Esta condição não é difícil de ser alcançada, já que para os modelos de fluido, o número total de níveis de recompensa é, em geral, bem menor que o tamanho do buffer.

Como foi citado na seção, o custo computacional do método que utiliza recompensas de taxa para calcular a distribuição da ocupação do buffer é da ordem de.

Para a comparação com ométodo de impulsos, devemos considerar dois casos específicos.

Nos casos onde um novo valor deve ser considerado para o cálculo de, temos que o método de recompensa de impulso será mais vantajoso.

O valor do parâmetro passa a ter valores diferentes para os dois métodos fato este decorrente dos valores distintos do parâmetro.

Nos casos onde é usado o da uniformização para o cálculo, temos que o método de impulsos será mais vantajoso se e somente se.

O ganho computacional é imediato, caso o valor de seja elevado.

Este fato ocorre quando o de uniformização possui valor elevado ou quando o modelo atinge o estado estacionário para valores elevados.

O fato de estarmos aplicando este método para resolução de modelos onde as taxas de recompensas são bem mais elevadas que as taxas de transição entre os estados torna possível estabelecermos valores de bem menores que o tamanho real do buffer, produzindo, além de uma boa aproximação para o resultado, um custo computacional reduzido.

Esta seção apresenta resultados numéricos da utilização do algoritmo de recompensa de impulso com limites para o cálculo da distribuição transiente do buffer.

Para tal, três exemplos de modelagem de tráfego são utilizados.

No primeiro exemplo temos a modelagem de uma fonte ONOFF que alimenta um buffer.

Os demais exemplos representam fontes de dados que modelam seqüências reais de vídeos e que serão utilizados para o estudo do custo computacional, bem como do erro alcançado quando o método de recompensa de impulso é utilizado.

Em todos os exemplos o erro foi estimado em relação ao método de recompensas de taxa encontrado.

Considere uma fonte ONOFF que alimenta um buffer de capacidade igual a.

O tempo de permanência no estado ON e no estado OFF são exponencialmente distribu ídos com média igual a e a, respectivamente.

A taxa de transmissão da fonte, no estado ON, é de bits/s e a capacidade do canal de comunicação é de bits/s.

O principal objetivo deste exemplo é avaliar o erro obtido quando variamos o número total de níveis de recompensa.

Para tal, estabelecemos o instante e variamos o número total de níveis de recompensa entre 10 e 100.

A definição da recompensa de impulso, utilizando a sintaxe da ferramenta TANGRAM-II é a seguinte, impulse_reward = buffer bounds= 0, 20000 event = On_Off,1 value = taxa_transmissão, taxa_serviço, event = Off_On,1 value = taxa_serviço.

Mostra o comportamento do erro absoluto e do erro relativo, resultante da variação do número total de níveis de recompensa, para o cálculo da probabilidade do buffer atingir o seu valor máximo.

Conforme esperado, o aumento do número de níveis possibilita uma maior precisão da medida resultante.

Podemos observar que o erro absoluto sempre se encontra abaixo de 5% da medida real, chegando a quase 1% para igual a 100.

Mesmo com um número reduzido de níveis, o método de recompensas de impulso proporciona uma boa aproximação em relação a solução exata (resultante da utilização do método de recompensa de taxa).

A razão de um número reduzido de níveis proporcionar uma boa aproximação se deve ao fato da fonte modelada possuir taxas de envio e serviço de informações bem maiores que as taxas de mudança entre os estados ON e OFF, situação que representa uma típica fonte de fluido, favorecendo, assim, a utilização do algoritmo de recompensas de impulso.

Para este exemplo de modelagem de tráfego utilizamos o trace de uma partida de futebol, disponibilizada.

Esta seqüência está codificada em MPEG-I e para a modelagem da fonte de tráfego todos os três tipos de quadros (I,P,B) foram utilizados.

Além disso, consideramos que o tráfego total é, na verdade, um agregado de 40 seqüências individuais, que, hipoteticamente estão sincronizadas no tempo.

Assim, o tamanho de cada frame da seqüência original passa a ser multiplicado por 40, representando a transmissão simultânea de todas as seqüências individuais.

No próximo exemplo é considerado o caso da não sincronização no tempo da apresentação de uma seqüência de filmes agregados.

O modelo de fonte de tráfego utilizado para representar a seqüência é o apresentado.

A parametrização foi feita confome sugerido, onde os valores para as taxas de transmissão em cada estado da fonte são apresentados.

As taxas estão em pacotes, onde cada pacote tem bytes.

A capacidade considerada para o canal de comunicação é de pacotes/s.

Em um primeiro cenário, foi considerado um buffer com capacidade total de pacotes, cada um com o tamanho igual a bytes.

Primeiramente, obtivemos a distribuição complementar da ocupação do buffer para o instante de tempo.

Em um segundo teste, variamos o intervalo de observação de a e obtivemos a probabilidade da ocupação do buffer ser maior que da sua ocupação total.

Em relação ao parâmetro total de níveis de recompensa, os seguintes valores foram utilizados.

Para um primeiro valor foi utilizado o cálculo da média ponderada entre as diversas taxas de transmissão de dados.

Neste caso, calculamos a proporção de tempo em cada fase da fonte e obtivemos o valor da média ponderada, utilizando, primeiramente, o da uniformização.

No entanto, este valor era da mesma ordem de grandeza do tamanho do buffer, fato este que não proporciona uma boa aproximação para o resultado obtido pelo método de recompensa de impulso.

Assim, um novo valor foi calculado conforme apresentado na seção.

Neste caso, para o valor de, a média ponderada foi de (valor do parâmetro).

Como segundo valor foi considerado o parâmetro como sendo igual a divisão da recompensa mínima.

Finalmente atribuímos um valor aleatório a (igual a 35) menor do que o calculado.

A utilização de diversos valores para o parâmetro tem como finalidade realizar um estudo comparativo entre as diversas propostas mostradas na seção.

O gráfico mostra a distribuição complementar da ocupação do buffer para o instante de tempo, utilizando os métodos de recompensa de taxa e de impulso.

Conforme podemos observar, a utilização do método de recompensa de impulso para a determinação da distribuição complementar oferece uma boa aproximação para o método de recompensa de taxa.

Além disso, podemos também observar que o fato de aumentarmos o total de níveis resulta em uma melhor aproximação em relação a solução exata.

O erro absoluto da medida variou entre, considerando todos os níveis apresentados.

Assim, o erro máximo alcançado foi menor que da medida original, chegando aproximadamente a da medida original para a probabilidade do buffer estar cheio, fato este que reafirma a eficácia do método proposto.

Distribuição complementar da ocupação do buffer no instante.

Para uma segunda análise do método de recompensa de impulso, foi considerado o cálculo da probabilidade da ocupação do buffer ser maior que do seu tamanho total, em diversos instantes de tempo.

Mostra os resultados obtidos.

Podemos observar que a probabilidade do buffer ultrapassar da sua ocupação diminui com o tempo, aproximando-se do valor de (para R-= 35), (para R-= 39) e considerando o método de recompensa de taxa, quando em estado estacionário (o que ocorre aproximadamente no tempo).

Mais uma vez, o método de recompensas de impulso obteve resultados bem próximos ao resultado exato fornecido pelo método de recompensas de taxa, fato este confirmado pela quase sobreposição das curvas no gráfico.

Para finalizar a análise deste primeiro cenário, mostra o gráfico com o custo computacional, expresso em número total de multiplicações, dos métodos de recompensa de impulso e de taxa.

O gráfico a apresenta o custo computacional considerando.

Podemos observar que o custo computacional é até cinco vezes menor no caso da utilização do método de recompensa de impulso.

Além disso, a variação do custo do método de recompensa de taxa é exponencial em relação ao parâmetro, enquanto que para o método de recompensa de impulso essa variação é linear.

Apresenta o custo computacional para o caso em que o total de níveis R- é igual a 233.

Para este valor de R-, o custo do método de recompensas de impulso atinge valores maiores que o método de recompensas de taxa, proporcionando, no entanto, uma solução mais aproximada da solução exata.

Em relação ao método de uniformização, o ganho computacional é imediato.

Esta afirmação se deve por dois motivos.

O primeiro é que a taxa de uniformização, que influencia diretamente no valor final de, é proporcional as taxas do modelo.

Assim, altas taxas de transmissão de informação (uma das características principais do modelo de fluido) resultam em altas taxas de uniformização.

O segundo ponto é que o fato de modelarmos o buffer gera uma matriz de probabilidade com diversas entradas não-nulas, influenciando diretamente no custo computacional do método.

Para este exemplo em específico, caso o buffer seja modelado, a taxa seria aproximadamente igual a, enquanto o número de entradas não nulas da matriz P seria igual a.

Estes parâmetros resultam em alto custo computacional, da ordem de, para o método de uniformização.

Finalizando, vale ressaltar que o custo da obtenção da medida para um determinado menor que o tempo final de observação é o custo para o cálculo, e não a soma do custo.

Em um segundo cenário, iremos considerar um buffer com capacidade bastante grande de forma que a probabilidade do buffer atingir a sua capacidade total seja bem pequena.

Desta forma podemos verificar a precisão do método para valores pequenos de probabilidade.

Assim, consideramos um buffer com capacidade total de pacotes de tamanho igual a 48 bytes cada e calculamos a probabilidade do buffer atingir a sua capacidade total no instante de tempo.

Neste caso o método de recompensa de taxa teve que ser executado por duas vezes, em razão das restrições do próprio algoritmo.

O resultado da medida, pelo algoritmo de recompensa de taxa, varia entre.

Neste caso, os limites são bem próximos.

O resultado da medida, pelo algoritmo de recompensa de impulso foi de, o que mostra a eficácia do método, mesmo para valores pequenos de probabilidade.

Em relação aos custos, o custo do método de recompensa de taxa ficou em multiplicações, enquanto o custo do método de recompensa de impulso ficou em multiplicações (havendo redução de uma ordem de grandeza).

Como uma segunda aplicação real para a utilização do método de recompensas de impulso, modelamos um agregado de filmes codificados em MJPEG e que podem ser encontrados.

Neste segundo agregado, diferentemente do primeiro apresentado na seção, foi considerado a não-sincronização temporal da demonstração dos filmes.

Deste modo, os filmes começam em pontos aleatórios do tempo, representando melhor sistemas como vídeo-sob-demanda, por exemplo.

Como fonte modeladora do tráfego utilizamos novamente a fonte apresentada.

Os parâmetros da fonte são apresentados.

As taxas são em pacotes por segundo, onde cada pacote tem bytes.

A capacidade do canal de comunicação é de pacotes/s.

Para a determinação da probabilidade do buffer estar com a sua ocupação total, foi considerado um buffer com capacidade pacotes.

O intervalo total de observação considerado foi de.

Este amplo intervalo é justificado pelo fato do modelo demorar a atingir o estado estacionário.

Comparações entre o método de recompensas de impulso e o método de uniformização foram realizadas.

Para o valor do parâmetro total de níveis de recompensa, foram consideradas três situações.

Para um primeiro valor foi utilizado o cálculo da média ponderada entre as diversas taxas de transmissão de dados.

Neste caso, calculamos a proporção de tempo em cada fase da fonte e obtivemos o valor da média ponderada, utilizando, primeiramente, o da uniformização.

Este valor de resultou em uma média ponderada elevada, sendo necessário o cálculo de um novo valor que proporcione um crescimento/decrescimento mais contínuo do buffer.

Assim, um novo valor foi calculado conforme apresentado na seção.

Neste caso, considerando que as recompensas atribuídas sejam da ordem, a média ponderada foi de (valor do parâmetro) e o total de níveis.

Em um segundo caso consideramos o parâmetro como sendo igual a divisão da recompensa mínima.

Finalmente atribuímos aleatoriamente um valor para como sendo igual a 30, que é inferior ao valor definido.

Consideremos o cálculo da probabilidade da ocupação do buffer ser igual a sua capacidade total.

Mostra os resultados dos métodos de recompensas de taxa e impulso, que, conforme podemos ver, estão bem próximos.

Apresenta o erro da medida em questão, reforçando a boa aproximação oferecida pelo método de recompensas de impulso.

Foram considerados os erros para os valores de e.

O valor do erro absoluto para não foi apresentado devido a ser aproximadamente igual ao erro absoluto para.

Probabilidade da ocupação do buffer ser igual ao tamanho total.

Para finalizar a comparação com o método de recompensas de taxa, apresentamos o custo computacional, em total de multiplicações.

Conforme podemos observar, o custo computacional do método de recompensas de impulso é superior somente nos dois primeiros intervalos de tempo.

Nos demais, o custo do método de recompensas de impulso sempre é menor, proporcionando diferenças extremamente significativas nos intervalos de tempo maiores que, chegando a uma ordem de grandeza de diferença.

No ponto, o custo do método de recompensas de impulso foi de multiplicações, enquanto o custo total alcançado pelo método de recompensas de taxa foi de multiplicações.

Conforme podemos ver, o custo do método de recompensas de impulso foi duas ordens de grandeza inferior ao custo obtido pelo método de recompensas de taxa.

Este resultado apresenta um ganho computacional considerável.

Comparação II, Método de Recompensa de Impulso e Uniformização.

Para completar o estudo do método proposto, realizamos uma comparação entre a utilização do método da uniformização, com a especificação e modelagem explícita do buffer, e o método de recompensas de impulso.

Cabe lembrar que para que o método de uniformização seja usado, todos os eventos do modelo devem ser exponencialmente distribuídos.

Logo, no modelo resolvido com a uniformização, tanto o intervalo entre chegadas quanto o tempo de serviço dos pacotes têm distribuição exponencial, o que o diferencia do modelo considerado nos métodos de recompensa, onde os tempos (entre chegadas e serviço dos pacotes) são determinísticos.

Neste cenário consideramos dois modelos, o modelo A onde todos os eventos são exponenciais e o modelo B onde alguns eventos são determinísticos.

Para que a comparação seja válida, tanto o modelo A quanto o modelo B devem fornecer resultados aproximados para a distribuição complementar da ocupação do buffer.

Apresenta os resultados da distribuição complementar do buffer tanto para o método de uniformização quanto para o método de recompensas de taxa.

Neste exemplo, a diferença entre os resultados obtidos com o método de recompensas de taxa e de uniformização sempre foram inferiores a.

Podemos concluir que os modelos A e B fornecem resultado semelhante para a distribuição complementar do buffer.

Consideremos agora que ao invés da chegada/serviço de um pacote de cada vez no modelo A, ocorram chegadas/serviço de pacotes.

Com isso, estaremos reduzindo o custo da uniformização (que é diretamente proporcional ao tamanho do buffer).

A motivação para a realização deste experimento é que no método de impulso o buffer é dividido em níveis.

Isto significa que estamos considerando, no modelo B, a chegada/serviço de pacotes.

Com base neste fato podemos supor que se considerássemos a chegada/serviço de pacotes no modelo A, poderíamos obter resultados semelhantes para diferentes valores.

Concluindo, a utilização de níveis para a execução do método de recompensas de impulso pode nos levar a pensar que se utilizarmos o método de uniformização, devidamente escalonado, teremos o mesmo resultado.

Para verificar o comportamento dos dois modelos quando o buffer é truncado, realizamos o teste descrito a seguir.

Consideramos um buffer de tamanho e o total de níveis de recompensa igual.

Logo, o buffer truncado é igual a pacotes para o modelo B.

No caso do modelo A, o tamanho do buffer também será e as taxas de chegada e serviço de pacotes foram divididas, o que significa que estaremos considerando a chegada/serviço de pacotes de cada vez.

Conforme podemos observar, o tamanho reduzido do buffer, bem como a redução das taxas de envio/serviço de pacotes, fornece um resultado bastante diferente do resultado obtido quando o buffer é representado em sua totalidade.

Em relação ao custo computacional, mesmo que o modelo A truncado produzisse um resultado semelhante ao modelo com o buffer total, o custo do método de uniformização é quase vezes maior do que o custo do método de impulsos.

Distribuição complementar da ocupação do buffer para, utilizando o método de impulso, método de taxa e o método de uniformização.

A partir dos resultados dos exemplos, podemos observar que o fato de utilizarmos um número de níveis, baseado na recompensa mínima, bastante superior ao escolhido baseado na média ponderada não apresenta redução significativa do erro obtido.

Isto indica que o valor de baseado na média ponderada fornece a melhor relação entre o custo computacional e a precisão obtidos no cálculo da medida.

Os exemplos mostram também que o método de recompensas de impulso é extremamente eficiente para um conjunto de modelos onde as taxas de envio de informação são extremamente elevadas e o tempo de permanência em cada estado é bem maior que o intervalo entre chegadas/partidas de unidades de informação.

Conforme apresentado nos capítulos anteriores, a análise de sistemas computacionais em estado transiente é de extrema importância para o estudo do comportamento em tais sistemas.

No entanto, não podemos deixar de prever também o seu comportamento em estado estacionário, principalmente quando estamos analisando sistemas em que as medidas de interesse se estabilizam em tempos considerados curtos.

Diversos métodos de solução para obtenção de distribuição de probabilidades dos estados de um sistema em regime estacionário são apresentados na literatura.

Estes métodos visam a resolução do sistema linear, ou, em alguns casos, uma pequena variação deste.

Alguns destes métodos exploram a estrutura especial da matriz de probabilidades, dividindo-a em blocos, manipulando estes através de eliminações e encontrando, finalmente, a solução desejada.

Para os modelos de fluido, a análise em estado estacionário também é importante, apesar de não ser muito explorada na literatura, fato este devido a complexidade da análise destes modelos.

Considerando modelos de fonte de tráfego encontrados na literatura, podemos explorar a estrutura da matriz de probabilidades e estabelecer novos métodos de solução que se beneficiem de todas as suas características.

O principal objetivo deste capítulo é apresentar um novo método de solução para obtenção da distribuição em estado estacionário de um buffer baseado em modelos com recompensas de impulso e na estrutura da matriz gerada a partir desses modelos.

O método proposto é baseado e não se restringe à aplicação de modelagem de tráfego, podendo ser usado em modelos que possuam a matriz de probabilidade de transição com uma estrutura especial.

A organização deste capítulo é descrita a seguir.

São apresentados alguns métodos de solução utilizados para o estudo de modelos em estado estacionário.

Estes métodos são baseados na redução da matriz P através da eliminação de blocos.

Na seção é apresentada a modelagem utilizada, bem como um novo método de solução cujo o principal objetivo é a obtenção da solução do sistema, sendo a matriz P uma matriz com estrutura típica de sistemas de redes multimídia.

Nesta seção também são apresentadas algumas considerações adicionais sobre o novo método proposto.

Finalmente, a seção apresenta alguns exemplos.

Diversosmétodos de solução para obtenção de resultados em estado estacionário estão presentes na literatura.

A grande maioria deles é utilizada para a resolução da equação, onde representa o vetor de probabilidades e P a matriz de probabilidades,uma transição e são aplicados em modelos Markovianos ou não-Markovianos.

Entre os diversos métodos, estamos dando ênfase particularmente a dois métodos, já que estes são os mais próximos ao novo método de solução apresentado neste trabalho.

Estes métodos podem ser utilizados para resolução de modelos de tráfegos com as seguintes características, o buffer é explicitamente modelado, o intervalo entre chegadas de pacotes da fonte tem distribuição exponencial (as taxas da fonte deixam de ser um fluido) e o tempo de serviço tem distribuição exponencial.

Podemos observar que os métodos descritos nesta seção resolvem uma classe de modelos de tráfego onde todos os eventos tem distribuição exponencial.

Contudo, em alguns casos, tanto o modelo onde todos os eventos tem distribuição exponencial quanto o modelo de fluido são uma boa aproximação para a seqüência de tráfego sendo modelada.

O primeiro método é o proposto por Grassman, Taksar e Heyman, conhecido como GTH ou método de eliminação de estados.

O segundo é o método proposto por Michella Meo, Edmundo de Souza e Silva e M Ajmone Marsan, que propõe uma solução mais eficiente para uma classe de modelos Markovianos encontrados em sistemas de telecomunicações.

Grassman, Taksar e Heyman propuseram este método direto para solução de cadeias de Markov em geral.

Estemétodo é, na verdade, uma inteligente modificação da eliminação de Gauss e possui diversas características positivas.

Uma delas é que somente adições e multiplicações são utilizadas, ou seja, não são realizadas subtrações que são as maiores responsáveis por erros de arredondamento.

Outra característica presente no método é a interpretação probabilística do procedimento de eliminação.

Para a comparação com o método proposto neste trabalho, estamos utilizando a versão para solução de matrizes divididas em blocos.

Neste caso, subconjuntos de estados são eliminados a cada passo, ao invés de um único estado, como no algoritmo original.

Para cada passo da redução, o complemento estocástico para um subconjunto de estados é obtido.

Basicamente, o GTH é dividido em duas etapas, cada uma com passos, sendo N o número total de blocos no qual a matriz original foi dividida.

Na primeira etapa, a cada passo do algoritmo um subconjunto de estados é eliminado e as probabilidades de transição entre os demais blocos são recalculadas de forma que as probabilidades estacion árias dos estados da nova cadeia de Markov correspondam as probabilidades condicionais dos mesmos estados na cadeia original para o subconjunto restante.

Na segunda etapa, as probabilidades para os estados de cada bloco são calculadas a partir da obtenção de probabilidades não-normalizadas do bloco resultante do passo do algoritmo.

Como último passo, todas as probabilidades são normalizadas resultando na distribuição de probabilidades estacionária do modelo estudado.

Formalmente, consideremos a matriz P x.

Assumindo que esta matriz está dividida em N x blocos diagonais.

Eliminando o último bloco, através do cálculo do complemento estocástico de P e considerando este complemento, temos o algoritmo que continua calculando o complemento estocástico de para o bloco, até o cálculo do complemento.

As probabilidades não-normalizadas para os estados do primeiro subconjunto de estados são obtidas a partir, através da resolução do seguinte sistema linear.

Os demais vetores são obtidos.

O último passo consiste na normalização.

O custo total do método GTH pode ser expresso através do total de blocos N e da ordem, neste caso quadrada e de valor igual a B, de cada bloco.

Assim, a expressão de custo do algoritmo é de, considerando que cada inversão de possui um custo para solução do sistema.

É evidente que o custo computacional expresso pode ser reduzido, principalmente quando este método é aplicado a matrizes com estruturas especiais, do tipo banda, por exemplo.

Um novo custo computacional, considerando a estrutura da matriz gerada por um modelo de fonte de tráfego alimentando um buffer, será apresentado na seção.

O método proposto por Michella Meo, Edmundo de Souza e Silva e M.

Ajmone Marsan também pode ser visto como uma pequena modificação da eliminação de Gauss, de maneira similar ao GTH.

No entanto, para a classe de modelos que são típicos das redes de telecomunicações de alta velocidade este método se mostra extremamente atraente, já que somente uma única inversa de matriz é calculada, em oposição ao GTH onde N inversas são necessárias.

Isto é possível já que neste novo método as matrizes abaixo da diagonal principal é que são invertidas, ao passo que no método GTH as matrizes da diagonal é que sofrem inversão.

Mostra-se que as matrizes abaixo da diagonal não se modificam no decorrer da execução do algoritmo, proporcionando uma única inversão matricial inicial.

O sistema a ser resolvido por este método é o sistema.

A matriz é dividida em N blocos de ordem x cada.

Para cada passo da redução, as seguintes multiplicações são efetuadas, sendo que o processo de redução é realizado várias vezes.

Os demais vetores são obtidos.

O último passo consiste na normalização do vetor.

O custo deste método também está relacionado com o número total de blocos em que a matriz A foi dividida, bem como da ordem de cada partição.

Devemos ressaltar que para este método somente uma única inversão deve ser realizada.

Mais uma vez, o custo computacional pode ser reduzido através da utilização de matrizes com estruturas especiais.

Para estas matrizes, um novo custo computacional será mostrado na seção.

Conforme sabemos, os modelos de fluido se caracterizam pelas altas taxas de envio/serviço de informações, em oposição as baixas taxas de mudanças entre as fases da fonte geradora de informações.

Mais precisamente, temos que a fonte fica um tempo grande enviando altas taxas de informação, enquanto estas também são retiradas das filas dos servidores a altas taxas.

Sabemos também que a variação proporcionada ao tamanho do buffer é sempre uma variação constante, que depende da taxa de envio/serviço de informações e do tempo passado em uma determinada fase da fonte.

Realizamos um estudo em estado estacion ário da distribuição de um buffer submetido a uma fonte que possui as características descritas acima.

Novamente estamos utilizando o paradigma de recompensas de impulso, aproximando estas de um comportamento contínuo, ou seja, ao comportamento similar aos modelos onde são utilizadas recompensas de taxa.

Iremos basear o nosso modelo no modelo previamente definido no capítulo 4, onde a cada transição entre o estado da fonte e o estado é associada uma recompensa de impulso.

Neste modelo, as recompensas de impulso podem assumir valores diferentes já que o valor de é igual para todos os estados.

Nosso objetivo é definir um modelo onde, em todas as fases da fonte, independentemente da recompensa associada a uma determinada fase, o buffer acumule ou perca a mesma quantidade de informação.

Desta forma estaremos limitando as transições entre os estados do modelo o que dará origem a uma matriz P com estrutura especial.

Nos parágrafos seguintes iremos mostrar, através de um exemplo, como o novo modelo é construído a partir de um modelo de uma fonte de tráfego.

Considere o modelo da fonte de tráfego representado.

Seja a capacidade do canal de comunicação (igual a 15 unidades de informação/s).

O nosso objetivo é que o buffer seja sempre incrementado ou decrementado da mesma quantidade de informação.

Para isso iremos definir uma taxa para cada estado, onde é a quantidade de informação que será acrescida/retirada do buffer cada vez que o processo fizer uma transição a partir do estado.

Modelo de uma fonte de tráfego.

Para o cálculo de a seguinte restrição dever ser imposta, onde é a taxa de saída do estado.

Esta restrição não deve acarretar problemas para os modelos de fluido, já que para esta classe de modelos.

O estado do novo modelo será definido como o par ordenado, onde é a fase da fonte e é o nível de recompensa (no caso do exemplo, o estado do buffer).

Considerando para o modelo um buffer igual a e, temos o seguinte espaço de estados.

Apresenta a matriz P do modelo.

As transições entre os estados da matriz e os impulsos associados às transições são obtidos da forma descrita abaixo.

Seja o número de fases da fonte e é o tamanho do buffer (valor máximo que a recompensa pode atingir).

Para todos os casos em que as condições ou não são satisfeitas, nesta nova modelagem, o processo passa em cada fase da fonte/nível de recompensa um tempo médio diferente.

Desta forma, a matriz P passa a ser definida como sendo P= I + Q, onde a matriz é uma matriz diagonal com os tempos médios de permanência em cada estado do processo.

Como vimos anteriormente, cada estado do modelo passa a ser representado pela fase da fonte e pelo nível de recompensa acumulada.

O número de níveis pode ser bem menor que o tamanho real do buffer alimentado pela fonte de informação, o que diminui sensivelmente a complexidade computacional do método apresentado.

O nosso objetivo é o cálculo da distribuição em estado estacionário da ocupação de um buffer alimentado por uma fonte de dados quando tanto a taxa da fonte quanto a taxa de serviço são representadas por um fluido.

Iremos considerar os estados ordenados da seguinte forma, fixamos o nível de recompensa e variamos as fases da fonte, iniciando com as fases da fonte com recompensa negativa.

A matriz P apresentada pode ser organizada em blocos conforme a figura.

Analisando a divisão em blocos da matriz P apresentada, as seguintes observações devem ser feitas.

Os blocos e representam, respectivamente, as transições entre estados de recompensa negativa e as transições de um estado em que a recompensa é negativa para um estado em que a recompensa é positiva.

Em ambos os casos, o buffer está com o nível igual ao limite inferior.

Portanto, não é possível a mudança de nível (a recompensa associada às transições entre estados pertencentes a estes blocos é zero).

Os blocos e representam, respectivamente, as transições de um estado em que a recompensa é positiva para um estado em que a recompensa é negativa e a as transições entre estados em que a recompensa é positiva.

Em ambos os casos, o buffer está com o nível igual ao limite superior.

Portanto, não é possível mudança de nível (a recompensa associada às transições entre estados pertencentes a estes blocos é zero).

Os blocos representam transições entre níveis vizinhos de recompensa.

Nos blocos e parte-se de estados em que a recompensa é positiva para estados em que, respectivamente, a recompensa é negativa e para estados em que a recompensa é positiva (a recompensa associada às transições entre estados pertencentes a estes blocos tem valor).

Já nos blocos e parte-se de estados onde a recompensa é negativa para estados em que, respectivamente, a recompensa é negativa e estados em que a recompensa é positiva (a recompensa associada às transições entre estados pertencentes a estes blocos tem valor).

Os blocos diagonais são todos nulos, excetuando o primeiro e o último blocos.

Este fato ocorre devido as características do modelo especificado, onde à toda transição do processo é associada uma recompensa.

Dessa maneira, nunca é possível, exceto para os casos de contorno (limites inferior e superior), que se transicione para a mesma fase da fonte sem a mudança do nível de recompensa.

O objetivo do método proposto é resolver o sistema de equações dado por.

Consideremos o número total de níveis de recompensa igual a e o vetor particionado em blocos onde representa a fase da fonte e representa o nível de recompensa acumulada.

Definiremos para as fases onde a recompensa é negativa (decremento do buffer) e para as fases onde a recompensa é positiva (incremento do buffer).

Apresenta os blocos que devem ser eliminados a cada passo do algoritmo, bem como o vetor devidamente particionado.

Como característica deste novo método, a cada passo da redução da matriz P estaremos eliminando duas partições do vetor de probabilidades, ou seja, dois subconjuntos de estados.

Ao final da redução, todas as equações estarão em função.

O próximo passo é a eliminação de e através da substituição em todas as demais equações, obtendo o seguinte sistema reduzido.

O processo de redução da matriz P passa a ser aplicado recursivamente, até que o conjunto de equações seja obtido.

A partir do valor de as demais partições do vetor são calculadas.

Para o algoritmo apresentado, deveremos calcular a inversa da matriz.

Para tal, o seguinte teorema é utilizado para provar a existência da inversa Teorema 2 Toda matriz da forma sendo uma matriz subestoc ástica, possui inversa.

Prova.

Temos pelo próprio algoritmo, que a matriz é uma partição da matriz P de probabilidades que representa o modelo estudado.

Desta forma, cada linha da matriz quando somada resulta em um valor inferior a 1, o que a caracteriza como uma matriz subestocástica.

É mostrado que toda a matriz da forma é uma matriz não singular, possuindo inversa.

Logo, a inversa de sempre existe.

A inversa da matriz também existe.

O processo modelado passa em cada estado um tempo médio de permanência.

Assim, como o processo fica um tempo médio quando este visita um determinado estado, podemos obter o que resulta na função distribuição de probabilidade final.

O custo do algoritmo apresentado está relacionado com o número total de passos para reduzir a matriz P, sendo que este número é igual ao total de níveis de recompensa acumulada, ou seja.

Além disso, cada partição da matriz P é de ordem x, sendo esta proporcional ao número de fases da fonte em que a recompensa é maior que zero e ao número de fases da fonte em que a recompensa é menor que zero.

Assumiremos que o número de fases em que a recompensa é maior que zero é igual o número de fases em que a recompensa é menor que zero.

Portanto, temos sempre o mesmo valor para.

O custo pode ser expresso através da seguinte expressão, sendo o custo para resolução do sistema.

O fato de termos um termo que se repete no cálculo de e (ver passo do algoritmo) reduz o custo do algoritmo proposto.

A respeito do custo computacional do método proposto, devemos ressaltar que somente uma única inversão é realizada.

As demais inversões, relacionadas com o termo não são realizadas, devido a seguinte propriedade matricial.

Se A e B são matrizes quadradas de mesma ordem, ambas inversíveis, então AB é inversível.

Nas seções foram apresentados os custos computacionais para o método GTH.

No entanto, as equações de custo apresentadas não levavam em conta a estrutura especial da matriz a ser resolvida.

Nos casos em que o buffer é modelado em sua totalidade, a matriz P é uma matriz tridiagonal, fato este que reduz sensivelmente o custo computacional dos métodos citados.

Além deste fator, podemos também considerar a característica esparsa da matriz que representa o modelo.

No caso do GTH, a nova expressão de custo passa a ser, sendo N o tamanho total do buffer e B a ordem das matrizes multiplicadas, sendo esta ordem proporcional ao número total de fases da fonte.

A queda no custo computacional se deve principalmente ao fato de que a estrutura tridiagonal da matriz P resulta no máximo em três multiplicações matriciais para cada linha considerada durante o processo de redução.

No caso das inversas a serem calculadas, o fator computacional relacionado se mostra invariante, visto que os blocos diagonais continuam presentes.

No caso do método proposto, a estrutura tridiagonal da matriz favorece ainda mais a queda do custo computacional.

Isto ocorre dado que a matriz abaixo da diagonal, a única matriz que é invertida é uma matriz diagonal, não necessitando de nenhum processo de inversão.

A estrutura tridiagonal também resulta em no máximo três multiplicações matriciais para cada linha considerada no procedimento de redução.

Considerando a característica esparsa da matriz P temos, sendo N o tamanho total do buffer e B a ordem das matrizes multiplicadas, sendo esta ordem proporcional ao número total de fases da fonte.

Um outro ponto a ser ressaltado é a relação entre os parâmetros N e B dos quais o custo computacional dos três algoritmos analisados é proporcional.

No caso do algoritmo proposto, o parâmetro N representa o total de níveis da recompensa de impulso acumulada e o parâmetro B representa o número de fases da fonte em que a recompensa é positiva ou negativa.

Nos outros algoritmos apresentados, o parâmetro N representa o tamanho do buffer enquanto o parâmetro B representa o total de fases da fonte.

Considerando que podemos reduzir o tamanho do buffer através da definição de níveis, o custo do método proposto se reduzirá bastante, o que o torna extremamente atraente para os modelos de fluido considerados.

Além disso, se considerarmos que o número total de fases da fonte em que a recompensa é positiva é igual ao número total de fases da fonte em que a recompensa é negativa, temos que o parâmetro B passa a ser a metade do valor considerado para o algoritmo GTH e para o algoritmo proposto.

Finalizando, as condições para que o custo do método proposto neste trabalho seja menor que os custos do método GTH.

Para utilizarmos o método proposto devemos mapear a fonte original de dados para um novo modelo, onde o estado é definido pela fase da fonte e o nível da recompensa acumulada.

Conforme vimos anteriormente na seção, devemos calcular a probabilidade de mudança entre as fases da fonte utilizando a taxa original de mudança entre fases e a nova taxa de uniformização que possui um valor diferente para cada estado do modelo.

Mediante estas especificações, ressaltamos que o método proposto somente pode ser utilizado quando as taxas originais de transição entre os estados da fonte são menores que a nova taxa de uniformização para cada estado da cadeia, proporcionando, assim, após a divisão destes parâmetros, valores válidos para a probabilidade.

Esta restrição não causa grandes problemas para o método proposto, já que a caracter ística principal dos modelos de fluido está fundamentada no fato da fonte a ser modelada possuir taxas de envio e serviço de informações bem maiores que as taxas de transição entre as suas fases.

Assim, na grande maioria dos modelos a serem estudados, esta restrição não acontece, o que permite a utilização do método proposto.

Uma outra consideração a ser feita é no caso em que existam fases da fonte em que a recompensa acumulada é igual a zero.

Para tratarmos destes casos, podemos considerar que estes estados se enquadram na categoria das fases onde se ganha recompensa, sendo que este ganho é igual a zero.

Analogamente, podemos considerar como sendo da categoria onde se perde recompensa, sendo que esta perda é igual a zero.

O valor para pode ser considerado igual a taxa de uniformização original do modelo.

Esta maneira particular de tratar modelos onde a fonte acumula recompensa igual a zero em uma das suas fases, não altera a definição do método proposto para estudo de modelos de fluido em estado estacionário visto que ao fim da execução do método, sempre consideramos a média ponderada de permanência em cada estado do modelo.

Podemos, assim, aplicar este tratamento particular, sem nos preocuparmos se estamos infringindo a corretude do método.

Finalmente, devemos ressaltar que a estrutura da matriz de probabilidades P proposta na seção não pode ser resolvida pelos métodos apresentados na seção.

No caso do método GTH, é necessária a inversão das matrizes diagonais.

A estrutura da matriz proposta possui na diagonal matrizes nulas e, portanto, não possuem inversas.

No caso do método encontrado, é necessária a inversão das matrizes abaixo da diagonal.

Da mesma forma, as matrizes abaixo da diagonal também não podem ser invertidas, o que inviabiliza a utilização deste segundo método para a resolução dos modelos estudados.

Esta seção apresentará alguns resultados provenientes de estudos de modelos de tráfego em estado estacionário.

Serão utilizados dois exemplos com o objetivo de avaliar o custo computacional e o erro obtidos com o método proposto.

No primeiro exemplo estaremos utilizando a fonte ONOFF alimentando um buffer conforme apresentado no capítulo 4.

O principal objetivo deste primeiro exemplo é mostrar o erro obtido com este novo método.

O segundo exemplo apresenta uma fonte geradora de tráfego que modela uma seqüência de vídeo alimentando um buffer de dados.

O principal objetivo deste segundo exemplo é realizar um estudo comparativo do custo computacional com relação a outros métodos da literatura.

O exemplo apresentado nesta seção é o mesmo exemplo referenciado no capítulo 4, com os mesmos parâmetros e considerando o mesmo tamanho de buffer, sendo este igual a 20000 posições.

Para comparar e avaliar os resultados obtidos, estaremos utilizando o algoritmo de recompensa de taxas apresentado no capítulo 4, considerando um tempo bastante superior aos demais tempos de ocorrências de eventos.

Esta não é a melhor maneira de se obter resultados em estado estacionário, no entanto, este é o método mais adequado para o propósito apresentado.

Primeiramente, foi encontrada a matriz de probabilidades P, onde cada linha representa um estado formado por duas variáveis aleatórias, fase da fonte de dados e nível de recompensa acumulada.

Para tal, consideramos que o tempo de permanência em cada fase da fonte (ON ou OFF) é diferente e está relacionado com o parâmetro especificado anteriormente.

A partir dessas considerações, foi calculada a probabilidade do buffer se encontrar com a ocupação igual a sua capacidade total.

A quantidade de níveis de recompensa acumulada variou dentro do conjunto.

Isto significa que os valores considerados para foram.

Esta variação tem como objetivo apresentar o erro encontrado pela aplicação do método e a queda do custo computacional quando podemos considerar a representação do buffer através de níveis cada vez menores em relação ao seu tamanho original.

Apresenta o erro obtido para diferentes níveis de recompensa de impulso acumulada.

Conforme podemos observar, o erro absoluto se encontra na quarta casa decimal.

Considerando que a medida original tem o seu valor na ordem de, podemos concluir que o método proposto é uma boa aproximação para o método que utiliza recompensa de taxa.

A redução do tamanho original do buffer em vezes se tornou possível devido as características do modelo apresentado.

Assim, mesmo com a redução do tamanho do buffer, o valor do erro absoluto foi menor que do valor da medida real.

Erro absoluto da probabilidade do buffer estar com a capacidade total ocupada.

Finalizando, consideremos este buffer dividido em níveis.

Mostra a distribuição complementar da ocupação do buffer em estado estacion ário.

Conforme podemos observar, o método proposto é uma boa aproximação para cálculo da distribuição complementar em estado estacionário.

Distribuição complementar da ocupação do buffer.

Para o estudo do custo computacional do algoritmo proposto e comparação com o custo dométodo GTH e dométodo encontrado, foi modelada uma fonte composta por oito fases distintas de envio de dados, sendo que na metade delas o processo ganha recompensa e na outra metade o processo perde recompensa.

A seqüência modelada é a seqüência do filme Asterix e pode ser encontrada.

O modelo foi parametrizado e os parâmetros (em bits/s) estão apresentados.

A capacidade do canal é de bits/s e consideraremos, originalmente, que o buffer possui posições.

A matriz P de dois modelos diferentes pode ser visualizada.

A matriz representa a matriz P do modelo onde o buffer é representado.

A matriz representa a matriz P do modelo proposto.

Podemos visualizar, de maneira mais clara, o motivo pelo qual o método GTH e o método propost não podem ser utilizados para a resolução de matrizes com a estrutura especial apresentada em b.

A utilização do método GTH se torna impossível devido as matrizes diagonais serem matrizes nulas (deveriam ser invertidas).

Em relação ao método proposto a restrição se deve ao fato das matrizes abaixo da diagonal principal não serem inversíveis pois são nulas.

Mostra o custo computacional de cada método apresentado.

Para o cálculo, redimensionamos o buffer para 10 níveis diferentes e consideramos, para o método GTH e o método encontrado, e para o método proposto.

Podemos notar que o custo do método proposto sempre se encontra abaixo do custo dos outros métodos apresentados.

O fator principal, entre outros, que possibilita este quadro está relacionado com a multiplicação de matrizes de ordem menor do que as matrizes do método GTH e do método.

Além disso, mesmo que em alguns casos o método proposto necessite de um número maior de multiplicações do que os outros métodos, devemos estar atentos para o fato de que a modelagem de uma seqüência de vídeo alimentando um buffer usando somente taxas exponenciais nem sempre fornece uma boa aproximação do comportamento do sistema.

Nestes casos, os modelos de fluido podem fonecer um resultado melhor, sendo, portanto, importante a investigação de métodos para resolver essa classe de modelos.

Finalizando, consideremos a distribuição complementar da ocupação do buffer sendo que este é redimensionado de para níveis.

Assim, o de cada fase da fonte passa a ter o valor tal que o crescimento/descrescimento do buffer seja igual.

Apresenta os resultados obtidos.

Podemos observar que o método de aproximação apresenta resultados bem próximos ao resultado exato, com erros menores que da medida exata.

Custo Comparativo entre os métodos estudados.

Distribuição complementar da ocupação do buffer.

O estudo de métodos de solução para obtenção de medidas de interesse que visam a análise de sistemas de computação e comunicação é uma área de pesquisa extremamente importante.

Definir e propor métodos que explorem características especiais de uma classe de modelos possibilita resolver de maneira mais eficiente e, conseqüentemente, com um menor custo computacional o sistema em questão.

Em alguns casos o algoritmo proposto pode proporcionar maneiras mais simples de definir e de obter as medidas de interesse a serem estudadas.

O objetivo principal desta tese foi apresentar um conjunto de métodos para solução de modelos baseados em recompensa.

Doismétodos previamente propostos na literatura, um para obtenção do valor esperado da recompensa de taxa acumulada em e outro para o cálculo da distribuição da recompensa de impulso em foram implementados e foram avaliados o custo computacional e erro obtidos.

Além desse estudo, apresentamos um novo método de solução para matrizes com uma certa estrutura que visa a resolução de modelos de fluido em estado estacionário.

Todos os métodos apresentados visam a resolução de modelos Markovianos que utilizam o paradigma de recompensa, o que possibilita definirmos com maior flexibilidade diversas medidas de interesse relevantes ao sistema em estudo.

No capítulo 2 é apresentado um método para o cálculo do valor esperado da recompensa de taxa acumulada em um intervalo.

A utilização da distribuição erlangiana para aproximar o tempo de observação determinístico, neste método apresentado, proporciona ganhos computacionais amplamente significativos para a classe especial de modelos do tipo stiff.

Conforme mostrado, em alguns casos, a técnica de uniformização possui complexidade extremamente elevada, o que, em termos práticos, a torna inviável.

Dessa forma, utilizar métodos de aproximação torna possível o estudo de sistemas com caracter ísticas consideradas desfavoráveis para os métodos de solução tradicionais.

Um outro ponto inerente ao método proposto é que a estrutura da matriz de probabilidades pode ser explorada, mais precisamente na técnica direta, como meio de diminuição do custo computacional.

Esta flexibilidade não se aplica ao método tradicional de uniformização.

Com relação ao erro obtido com o método, foi proposta uma estimativa do erro que mostra ser uma boa indicação do erro real.

A definição de novos métodos de solução de modelos requer a consideração de dois aspectos, o custo computacional, relacionado com a capacidade de processamento para a resolução do modelo, e o espaço de mémoria e a capacidade de processamento necessários para a geração do espaço de estados do modelo que representa o sistema a ser analisado.

O método de solução apresentado no capítulo 4 considera estes dois aspectos e possibilita o estudo do comportamento de buffers com alta capacidade de armazenamento e alimentados por um tráfego de fluido.

A modelagem introduzida permite o mapeamento de modelos com recompensa de taxa em modelos com recompensa de impulso.

O método apresentado é aplicado na obtenção da distribuição de probabilidades em estado transiente da ocupação de um buffer, sem que este seja modelado e representado no espaço de estados.

Concluimos, através do estudo realizado, que o método de recompensa de impulso, tradicionalmente utilizado em medidas discretas e que foi mapeado para uma medida contínua, é extremamente atraente nos casos em que o período transiente da medida é longo, o que acarreta um alto custo computacional quando o método de recompensas de taxa é utilizado.

O método também apresenta vantagens computacionais quando o método de recompensa de taxa somente permite a obtenção de limites para a medida considerada.

Através dos exemplos analisados, pôde-se constatar que mesmo com um número reduzido de níveis de impulso (o que garante baixo custo computacional) obtém-se um erro bastante razoável.

Como continuidade dos estudos dos modelos de fluido, propomos um novo método de solução para a obtenção da distribuição de probabilidades da ocupação do buffer em estado estacionário.

A modelagem utilizada é baseada na atribuição de recompensas de impulso às transições entre os estados do modelo de forma que a matriz de probabilidade de transição obtida possua uma estrutura especial.

O método proposto é baseado na eliminação de blocos e possibilita a resolução de uma classe de modelos que possuem a matriz de probabilidades de transição com uma certa estrutura.

Os modelos de fluido são um exemplo de modelos desta classe.

Para estes modelos, os métodos tradicionais como o GTH e o método proposto não são aplicáveis, já que se destinam a resolução de uma outra classe de modelos.

Os exemplos estudados mostram que o erro obtido é bem pequeno e o custo computacional é inferior quando comparado ao custo de métodos tradicionais como o GTH.

Este novo método é uma contribuição ao estudo de modelos de fluido, não havendo, do nosso conhecimento, métodos similares na literatura.

A partir do trabalho desenvolvido nesta tese podemos relacionar alguns estudos que poderiam ser realizados.

Poderíamos investigar o cálculo de um outra medida de interesse a partir do método apresentado no capítulo 4 para obtenção da distribuição transiente do buffer.

A medida de interesse é a distribuição do tempo em que o buffer fica acima do seu valor total.

Esta medida é importante pois permite estimar, entre outros parâmetros, a quantidade de informação descartada pelo buffer durante um intervalo.

Em relação ao método proposto para análise em estado estacionário de modelos de fluido, podemos investigar outras classes de modelos que possuam a matriz P com a estrutura utilizada pelo método, favorecendo a diminuição do custo computacional para a obtenção da medida.

Um outro estudo que pode ser realizado é uma possível extensão do método para o caso de matrizes infinitas, baseado no trabalho apresentado.

Estudos prévios mostram que o método apresentado no capítulo 5 possui todas as características que possibilitam a sua aplicação para esta classe de problemas.

Neste apêndice apresentamos os modelos utilizados nos diversos exemplos apresentados no decorrer da tese.

Todos os sistemas foram modelados utilizando a ferramenta TANGRAM-II.

Modelo 1, canal Multiplexador.

Modelo 2, Vacation Servers.

Modelo 3, Servidor Erlangiano.

Modelo 4, Modelagem de Tráfego, Seqüência I.

Modelo 5, Modelagem de Tráfego, Seqüência II.

