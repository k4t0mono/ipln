Este trabalho descreve um modelo para gerar comportamentos guiados de grupos de personagens inspirado biologicamente no algoritmo de colonização do espaço para simulação de multidões Biocrowds.
A proposta consiste em criar uma extensão para o BioCrowds com o objetivo de simular comportamentos guiados conforme descrito por Craig Reynolds.
Esta abordagem é chamada Tree Paths e é responsável por o controle de movimentos de personagens de forma robusta e realística.
Enfim, são estudados e implementados alguns comportamentos que também complementam o BioCrowds, os quais, denominam- se de alinhamento e formação, que constituem uma classe de comportamentos emergentes útil em computação gráfica e entretenimento.
Palavras-chave: Steering behaviors, computação gráfica, simulação.
Introdução A área de simulação de multidões visa o realismo dos resultados tanto numéricos quanto visuais.
Os desafios são grandes, e entre eles estão, movimentação individual dos agentes, tratamento de colisões, comportamento de grupos, simulação afetiva, situações de emergência, etc..
Apesar de vários modelos já terem sido propostos, nenhum foi capaz de obter bons resultados em situações genéricas.
Para aplicações, em computação gráfica e realidade virtual, é necessário que a modelagem de agentes com níveis de autonomia seja suficiente para simular um &quot;teatro improvisado «ou o comportamento de quaisquer entidades simuladas, sejam humanos, animais ou seres inanimados.
Por outro lado, a movimentação de agentes em ambientes virtuais pode ser considerada parte primordial do sistema de inteligência artificial de um game, ou ainda, importante na dinâmica e no desafio imposto ao jogador.
Para Reynolds, estes agentes podem ter um caráter deliberativo ou reativo em suas ações.
Além disso, o comportamento de agentes autônomos pode servir como aplicação na área de segurança, uma vez que modelos de simulação de multidões são usados para realização de simulação de evacuações ou emergência em projetos arquitetônicos, também podem ser incorporados em softwares interativos que servem como simuladores para treinamento, com aplicação na área de defesa.
Apesar de as pesquisas na área, ainda é um desafio tentar simular corretamente o tratamento de colisão entre os personagens.
Alguns modelos conhecidos na literatura propuseram diferentes soluções para o problema, conforme destacado a seguir:
Reynolds descreveu o primeiro modelo comportamental distribuído onde simulava pássaros, rebanhos e cardumes, por meio de um modelo de regras e percepção dos agentes.
Helbing, propuseram um modelo de forças físicas e sócio-psicológicas para descrever o comportamento de multidões humanas em situações de pânico.
Ele considerou cada indivíduo como sendo uma partícula, sujeita às forças de repulsão, atração e restauradoras de objetivo, presentes no seu modelo.
Treuille e Popovic usaram dinâmica de fluidos para construção de campos potenciais, simulando os comportamentos das multidões a partir de diferentes densidades em tempo real.
Embora os modelos citados, assim como outros existentes na literatura, obtenham bons resultados, a colisão entre humanóides, em altas densidades, ainda é um problema em aberto.
Assim, nesta dissertação procurou- se inspiração em outras áreas do conhecimento, de maneira a reproduzir um comportamento realista e não determinístico.
Uma das contribuições deste trabalho é prover um modelo para simulação de multidões baseado em biologia.
Durante o período deste trabalho, foi desenvolvido um modelo denominado BioCrowds, baseado no algoritmo de canalização de nervura de plantas, capaz de simular uma série de comportamentos emergentes, observados nas multidões.
Como extensão deste modelo, propôs- se um conjunto de comportamentos de controle de grupos (steering behaviors), que são apresentados na literatura, como básicos para a locomoção de agentes em ambientes virtuais.
Estes comportamentos são de extrema importância para o realismo das simulações.
A abordagem proposta é denominada Tree Paths, um algoritmo de planejamento de rota baseado em colonização do espaço.
Tree Paths integrado com o BioCrowds, propicia ao agente analisar o ambiente com uma percepção mais abrangente.
De esta maneira, os modelos assumem tarefas mais globais do agente, por exemplo, definição de rota, enquanto BioCrowds assume um caráter mais local, como variação de velocidade e evitar colisão.
O controle global é essencial para que se possa reproduzir os comportamentos guiados conhecidos como steering behaviors, pois é por meio de eles que o agente se torna capaz, por exemplo, de fugir de algum lugar, perseguir um alvo, achar um caminho ou uma porta num ambiente complexo.
Por fim, foram abordados também um conjunto de comportamentos emergentes denominados formação e alinhamento entre agentes, propondo modificações em BioCrowds.
O problema Desenvolver um modelo de simulação de personagens, robusto e eficiente para diversas situações, ainda é uma tarefa árdua para os pesquisadores da área.
Diferentes técnicas já foram usadas por os pesquisadores, inspiradas em sistemas de partículas, fluidos, entre outras, e serão apresentados no de aplicações.
Além disso, os modelos tendem a crescer em sua complexidade, e o número grande de parâmetros implica em diferentes calibrações dos mesmos para realização de simulações às vezes parecidas Objetivo Em um primeiro momento, desenvolveu- se no âmbito do laboratório VHLab, o modelo BioCrowds, um modelo para simulação de multidões capaz de simular uma grande gama de comportamentos inerentes e emergentes de uma multidão.
Este foi inspirado na teoria da competição por oCrowds, buscou- se incluir novas propriedades neste a fim de tornar- lo capaz de simular um conjunto de comportamentos guiados conforme definidos por Reynolds em como steering behaviors.
Desta forma, o principal objetivo deste trabalho é a reprodução dos steering behaviors em BioCrowds.
A abordagem feita foi nomeada Tree Paths, e propõem um modelo de navegação em ambientes virtuais, utilizando um algoritmo de colonização do espaço.
Entre os objetivos específicos desta dissertação, estão:·
realizar estudo do estado da arte na área de simulação de multidões;·
elaborar um modelo de simulação de multidões baseado no algoritmo de colonização de espaço, (em conjunto com outros pesquisadores do VHLab);·
avaliar os resultados do modelo;·
expandir o modelo incluindo uma camada responsável por os comportamentos guiados (steering behaviors);·
desenvolver um protótipo;·
testar e avaliar os resultados.
Organização da dissertação Este trabalho foi desenvolvido dentro de o laboratório VHLab, no Projeto VHSimul, no PPGCC na PUC, e contou com o financiamento da Hp Brazil.
Inicialmente, este trabalho tem como área principal a computação gráfica, encaixando- se numa subárea conhecida como animação comportamental.
Após uma introdução ao tema no Capítulo 1, é apresentado, no Capítulo 2, uma revisão bibliográfica sobre o tema incluindo os principais trabalhos para simulação de multidões, bem como alguns fundamentos para o desenvolvimento deste trabalho a saber:
A conceituação dada por Reynolds para comportamentos guiados de grupos (steering behaviors) e o algoritmo de canalização de nervuras que serviu de inspiração para este trabalho.
Em o Capítulo 3 é apresentado o modelo para simulação de multidões de inspiração biológica BioCrowds desenvolvido no âmbito do laboratório VHLab.
Em seguida, no Capítulo 4, é apresentado o modelo Tree Paths e como este foi integrado ao BioCrowds para prover controle global de grupos de personagens.
Enfim, no Capítulo 6 são apresentados os resultados obtidos, e no Capítulo 7 algumas considerações finais e problemas ainda em aberto.
Trabalhos relacionados Em esta seção são abordados os trabalhos e modelos que serviram como base para esta pesquisa e entendimento do estado da arte.
São abordados os principais modelos para simulação de multidões, categoria a qual BioCrowds pertence, o conceito de steering behaviors, abordado por Reynolds, ao qual esta dissertação se propõem a estender BioCrowds para simulação destes.
E o algoritmo de canalização de nervuras que serviu como inspiração, tanto para BioCrowds, quanto para a extensão Tree Paths proposta nesta dissertação.
Simulação de multidões Em esta seção alguns trabalhos serão brevemente descritos.
No entanto, alguns de eles, por a importância no desenvolvimento deste, serão detalhados posteriormente.
Alguns importantes trabalhos relacionados à área de simulação comportamental de grupos, contexto em o qual o presente trabalho está inserido, são a seguir apresentados.
Reynolds descreveu o primeiro modelo comportamental distribuído para simular bandos de pássaros, rebanhos e cardumes formados por agentes com habilidades de percepção.
Em esse modelo, os animais virtuais mantêm posição e orientação próprias dentro de o grupo, contrabalançando seu desejo de evitar colisão com os demais, igualar sua velocidade à de seus vizinhos e dirigir- se para o centro do grupo.
Helbing e seus colaboradores, propuseram um modelo de forças físicas e sócio-psicológicas a fim de descrever o comportamento de multidões humanas em situações de pânico.
Em 1994, Still desenvolveu um conjunto de programas denominado LEGION para analisar a dinâmica de uma multidão em situações de evacuação de ambientes restritos e complexos, utilizando um algoritmo de &quot;mínimo esforço».
Em esse sistema são consideradas quatro regras comportamentais:
Objetivo, mobilidade, limitação e assimilação.
Para evitar o comportamento homogêneo da população, foi introduzido um ruído na velocidade dos agentes.
O sistema foi utilizado para simular multidões em vários locais e eventos como as Olimpíadas de Sydney, por exemplo.
Bouvier e seus colaboradores, usaram um sistema de partículas adaptadas para o estudo de multidões humanas, em o qual as pessoas são modeladas como um grupo de partículas interagentes.
O seu movimento, assim como seus objetivos e decisões, são baseados em forças newtonianas.
Goldenstein Desenvolveram um modelo dinâmico não linear para simular grandes quantidades de agentes num ambiente que pode ser alterado em tempo real.
Esse modelo contempla comportamentos de baixo nível dos agentes, tal como evitar colisão e encontrar um caminho até um alvo fixo ou móvel.
Thomas e Donikian apresentam um modelo de ambiente urbano virtual usando estruturas e informações apropriadas para animação comportamental.
Foi projetado para este trabalho um modelador de cidades que permite a produção automática de ambientes urbanos complexos para realizarem- se animações comportamentais.
O principal objetivo é simular vida em ruas e calçadas e não dentro de prédios e locais fechados.
O principal interesse é buscar informações das construções baseado no seu exterior, definindo suas funcionalidades (se são casas, lojas, etc) e os dados de entrada e saída do fluxo dos pedestres dependendo da hora do dia.
Musse e Thalmann propuseram um modelo hierárquico para descrever multidões com diferentes níveis de autonomia:
Guiados, programados ou autônomos.
Em esse modelo, foram utilizados conceitos sociológicos para representar comportamentos específicos.
Musse apresentou o ViCrowd, um sistema que gera automaticamente multidões humanas baseadas em grupos.
O comportamento da multidão é obtido por meio de regras estabelecidas de acordo com as informações contidas nos grupos de indivíduos.
Ming Lin apresentou um novo algoritmo para navegação de um grande número de agentes independente da complexidade e dinamismo do ambiente.
Propôs a representação chamada &quot;Adaptative Elastic ROadmaps «(Aero) que realiza a conectividade e deformação de um grafo baseado na interação entre agentes e movimentação dos obstáculos.
Lavalle apresentou um algoritmo de conceito semelhante ao usado nesta dissertação intitulado Rapidly--exploring Random Tree (RRT), que com uma estrutura de dados aleatória designada para uma classe de problemas de rotas, obteve bons resultados para definição de geração de rotas, através da geração de árvores aleatórias representadas por grafos.
No entanto, de maneira geral, o algoritmo é insuficiente para resolver o problema de encontrar o melhor caminho, mas pode ser um componente importante para a definição deste.
Modelos mais consolidados de Simulação de Multidões Como toda a pesquisa de cunho científico, a criação de modelos de simulação é fortemente embasada em trabalhos já realizados.
Alguns trabalhos pioneiros da área mostraram que esse processo não é fácil, e sua complexidade pode aumentar conforme são inseridas características no modelo.
Os trabalhos descritos nessa seção representam a evolução nesse processo, apresentada na literatura.
Para tanto, foram selecionados quatro modelos considerados básicos para a introdução da área de modelos de simulação, são eles:
Flock boids de Reynolds que implementou um sistema comportamental a partir de dinâmica de partículas, Helbing que transformou forças físicas em forças sociológicas, Musse, que tratou sobre o problema de níveis de autonomia e complexidade como fator crítico para performance, e Treuille que usou dinâmica de fluidos para construção de campos potenciais para simulação de altas densidades em tempo real.
Flocks , Herds , and Schools de Reynolds Em 1987 , Craig Reynolds publica um artigo pioneiro sobre a dinâmica de pássaros e peixes simulando um comportamento de grupos num modelo de movimento polarizado , agregado e evitando colisão. O modelo simula pássaros e peixes, onde cada pássaro ou peixe é um agente autônomo que se comporta de acordo com sua própria percepção do ambiente dinâmico.
Este modelo apresentou resultados bastante relevantes para a área, sendo certamente um dos modelos que mais gerou impacto em termos de algoritmos implementados e aplicados em áreas, como jogos e cinema.
O comportamento emerge em função de as interações de três regras principais:·
evitar colisão;·
igualar a velocidade com os vizinhos;
E· tentar ir ao centro do grupo.
O modelo de Reynolds propõe a implementação que inclui regras locais de comportamento, conforme especificado acima.
É usada uma abordagem de partículas inspirada no trabalho de Reeves, onde cada uma é representada por um objeto modelado geometricamente, tornando mais complexa a estrutura de cada partícula, tanto em termos de movimentação, quanto no tratamento das colisões.
Os resultados de cada uma das regras locais de comportamento são recombinados, em tempo de processamento e em função de os dados percebidos por cada entidade da simulação.
Este processo acontece em todos os vizinhos de cada entidade, permitindo resultados mais coerentes e realistas.
Prevenção de colisão e a dinâmica de nivelamento de velocidade são aspectos complementares.
Juntos, eles asseguram que os agentes da simulação sejam livres para se movimentar, e ao mesmo tempo, mantenham a integridade do bando sem a necessidade de que um vá ao encontro de o outro.
A prevenção de colisão é um dos mais difíceis comportamentos ao tratar- se de um eminente impacto.
A colisão estática, descrita em seu modelo, é baseada na posição relativa do bando, desconsiderando suas velocidades.
De a mesma forma, o nivelamento da velocidade é feito desconsiderando a posição.
Se um pássaro, ou indivíduo, não consegue êxito no nivelamento de sua velocidade com seus vizinhos, este colidirá com seu vizinho num curto espaço de tempo.
Com o processo de nivelamento da velocidade, as distâncias entre os pássaros são também niveladas.
A prevenção de colisão estática serve para estabelecer a distância mínima requerida, sendo assim, a equivalência das velocidades tende a manter este comportamento, evitando colisões.
Às vezes, bandos reais dividem- se em grupos com o fim de desviar- se de obstáculos.
Para ser realista, o modelo também precisa simular este efeito.
O conceito de flock não desrespeita este processo, uma vez que as entidades que fazem parte do mesmo flock, respeitam as regras locais do flock, enquanto não houver colisões com obstáculos.
Dinâmicas de pedestres de Helbing Helbing propôs um modelo (Figura 2.2), também baseado em sistema de partículas, para representar o fenômeno de pânico em situações de emergência.
Suas simulações da dinâmica de multidões são baseadas em modelos de força generalizada, que se aplicam a descrição das formações e movimentações das pessoas, observadas durante casos de pânicos.
Em seus modelos, Helbing destaca sua abordagem por meio de forças sociais traduzidas em equações da dinâmica, que caracterizam comportamentos automáticos das partículas.
Essas equações constituem em definições como &quot;forças sociais «que descrevem a influência do ambiente nos pedestres.
A equação de movimentação (distinta para cada indivíduo), além de métodos de flutuação, correspondem à equações que definem o comportamento dos pedestres com um certo nível de aleatoriedade.
As forças sociais nos modelos de Helbing operam baseadas em três princípios.·
A movimentação de um pedestre é influenciada por os pedestres próximos.
Estas forças permitem ao indivíduo a realização de &quot;manobras evasivas «ou diminuição de velocidades, a fim de manter uma distância coerente dos outros indivíduos.
Modelo hierárquico de Musse -- ViCrowd O modelo proposto por Musse et al, consolidou a ferramenta ViCrowd (Figura 2.3) baseada na conjunção de abordagens de modelos mais tradicionais, propondo o conceito de níveis de autonomia em multidões.
Este modelo hierárquico inova em como relacionar a multidão numa estrutura hierárquica que vai de um indivíduo, aos grupos e a multidão inteira.
Em este ponto, defendese a idéia de que um sistema deve ter níveis de complexidade para criação de animações realísticas, onde, um indivíduo é o elemento mais simples e a multidão é o mais complexo.
Dependendo da complexidade proposta por a simulação, simples comportamentos podem ser suficientes.
No entanto, regras de comportamento mais complexas podem ser necessárias, neste caso, é possível incluir- las na simulação, aprimorando seu realismo.
O presente modelo possibilita o controle de multidões de diferentes maneiras, podendo ser guiado, programado ou por meio de regras de comportamento, baseadas em eventos e reações.
Em a Figura 2.4 pode ser visto diferentes maneiras de caminhar resultante de distintas emoções em ViCrowd.
ViCrowd apresenta um modelo para geração automática de multidões baseadas em grupos, ao invés de agentes individuais.
Comparando com outros trabalhos no domínio de &quot;autonomia «e &quot;inteligência», pode- se dizer que estes são sempre baseados em indivíduos, enquanto ViCrowd é baseado no grupo.
ViCrowd ainda é baseado em Flocking Systems, mas também inclui simples definições de regras de comportamento usando eventos condicionais e reações.
Em a Figura 2.5 pode ser visto a ação de uma área de atração e repulsão em ViCrowd.
Define- se como nível de autonomia a capacidade do agente criar comportamentos de forma autônoma.
Em ViCrowd, a abordagem de controle possui três níveis, guiados, programados e autônomos, indo da total interatividade em agentes guiados, a total autonomia em agentes autônomos.
Multidões guiadas são dirigidas usando um controle externo para interação (mouse, teclado, etc).
Ainda, ViCrowd pode ser parte de um sistema cliente/ servidor, que é chamado de City--Server, dedicado ao tratamento das multidões.
Alguns clientes diferentes deste framework podem ser implementados independentemente de ViCrowd.
Multidões programadas, fazem parte da implementação de regras baseadas em scripts, estes scripts definem eventos e como reagir a cada estímulo específico, sem necessidade de intervenção do usuário durante a simulação.
Já em agentes autônomos, comportamentos emergentes surgem de regras definidas, baseadas numa base de conhecimento e informação do ambiente.
Continnum Crowds de Treuille Continnum Crowds (Figura 2.6) é um dos últimos trabalhos importantes da área na literatura.
Zoran Popovic apresenta uma abordagem para grandes quantidades de indivíduos usando um método baseado em sistema de partículas.
Por meio de conceitos de dinâmicas de fluidos, o autor propõe a construção de campos potenciais que são atualizados conforme a direção, fluxo e densidade de indivíduos naquela região.
A dinâmica do modelo construído funciona por intermédio de três regras fundamentais:·
Todo indivíduo tenta chegar a um objetivo.·
Os indivíduos tentam mover- se na maior velocidade possível, havendo um limite de velocidade imposta no ambiente;
Esse princípio levou os autores a um equacionamento que permita com que os indivíduos optem por caminhos em que possam manter velocidade máxima, evitando caminhos congestionados;·
Os indivíduos tentam evitar campos de desconforto, que podem ser uma região com alta densidade de personagens, obstáculos, etc..
Estas idéias sumarizam a escolha do caminho por um indivíduo, tentando minimizar a combinação linear entre três termos:·
Tamanho do caminho;·
Quantidade de tempo até destino;
Sterring Behaviors Steering Behaviors pode ser traduzido como &quot;controle de comportamento «ou &quot;comportamentos guiados».
As pesquisas nesta área já possuem uma longa data e vão desde 1940.
De maneira geral, são três as áreas do conhecimento que pesquisam sobre este assunto.
São elas:·
robótica;· inteligência artificial;
E· vida artificial (artificial life).
Conforme Reynolds, o termo behavior (comportamento), pode ter vários significados:
Ações de um humano ou outro animal, ações premeditadas de um simples sistema mecânico, ou complexas de um sistema caótico.
Em realidade virtual, isto pode ser sinônimo de &quot;animação».
Para fins de estudo, estas entidades são descritas como agentes ou personagens autônomos, e possuem suas representações num mundo virtual (realidade virtual, por meio de personagens virtuais) ou robôs (que atuam no mundo real).
Ainda em, é proposta uma série de camadas hierárquicas para descrever especificamente o sistema comportamental de locomoção de um agente, conforme pode ser visto na Figura 2.7.
Comportamentos básicos classificados como Steering Behaviors Trata-se de uma série de comportamentos relacionados à locomoção de um agente que podem ser também observados na vida real, quando realizados por humanos ou animais.
Em seu trabalho, Reynolds aborda os seguintes comportamentos definidos como básicos.
Já o comportamento de evitar (flee) é exatamente o inverso do chegar (seek), e age de maneira que sua velocidade é radialmente alinhada para longe do alvo, assim como a velocidade desejada é apontada para direção inversa.
Ambos comportamentos podem ser observados na Figura 2.8.
Em esta, observa- se a representação de um vetor de velocidade instantânea (current velocity).
Já a velocidade deseja (desired velocity) é representada para ambos comportamentos seek/ flee assim como as respectivas forças de steering resultantes (seek steering e flee steering).
Como consequência da simulação, observa- se ainda na mesma Figura 2.8, a trajetória que será realizada por o agente na linha curva denominada seek path para o comportamento seek e flee path para o comportamento flee.
Reynolds, em, cita que estas predições possuem caráter estritamente básico e salienta que uma técnica ótima para os comportamentos pursuit/ evasion podem ser encontradas em.
O modelo de canalização de nervuras de plantas A área de modelagem biológica computacional sempre teve um importante papel na ciência da computação.
Em os últimos anos, ganhou força com o aperfeiçoamento das técnicas de render e o desempenho das atuais arquiteturas de computador.
Em modelagem biológica, têm- se usado técnicas de visualização da Computação Gráfica como ferramenta para os estudiosos teóricos da morfogênese.
Exemplos são as pesquisas apresentadas por da área da botânica, o que inclui modelos de reação/ difusão de padrões de pelagem de animais, até a pigmentação de conchas do mar Especificamente, a canalização de nervura de plantas usadas em BioCrowds é um modelo matemático, biologicamente inspirado na atração que o hormônio auxina exerce sobre o desenvolvimento dos canais, por onde irá fluir o alimento da planta.
O modelo que serviu de inspiração para BioCrowds pode ser encontrado em.
Em a Figura 2.11, num primeiro momento, são geradas auxinas (círculos em vermelho), aleatoriamente sobre a superfície da folha virtual 2.11, respeitando certa distância entre elas e as ramificações das nervuras (círculos pretos com centros branco).
O próximo passo, e também o mais custoso do processo, é verificar qual auxina está mais perto de qual ramificação das nervuras, como ilustrado por meio de retas entre o nó da nervura e a auxina.
Consideram- se essas retas como vetores normalizados que são somados para cada nó das nervuras, e então na Figura 2.11 são calculados os vetores resultantes que tiveram influência de auxinas.
Desta forma são criados novos nós em direção a as auxinas.
O próximo passo, é excluir as auxinas que estão mais próximos que uma determinada distância das nervuras.
E, novamente são criadas novas auxinas, respeitando as distâncias com as que sobraram, por fim, recalculando a proximidade de elas com os nós das nervuras, repetindo assim a iteração.
Este processo é síncrono com o de crescimento da folha, sendo assim, completa- se o modelo que simula o crescimento de uma folha e o desenvolvimento de suas nervuras.
O resultado do algoritmo pode ser observado na Figura 2.12.
O próximo capítulo apresenta detalhes do modelo BioCrowds.
Fundamentação do modelo BioCrowds Este capítulo apresenta o modelo BioCrowds para simulação de multidões desenvolvido no âmbito do laboratório VHLab, com a participação do autor deste trabalho.
O modelo foi inspirado no trabalho de Runions et al descrito na seção 2.4, através da adaptação da teoria de competição por o espaço, observada nas nervuras das plantas, e aplicado em simulação de multidões.
Desenvolveu- se o modelo com o principal objetivo de evitar a colisão entre agentes em simulações de altas densidades.
Por consequência, emergiram, automaticamente, alguns comportamentos de multidões reais, são eles:·
O surgimento de filas (lanes), conforme a teoria do mínimo esforço, proporcionando uma menor variação angular para agentes que a seguem;·
A redução das velocidades em altas densidades de personagens;·
Geração de efeitos de gargalo em ambientes de espaço restrito.
As próximas seções apresentam detalhes do modelo.
Adaptação do modelo biológico para simulação de multidões A idéia principal é representar o espaço vazio, explicitamente usando um conjunto de marcadores, e tratar estes pontos como um recurso por o qual o agente compete para se movimentar.
Um importante aspecto a considerar na dinâmica de população, é o espaço pessoal.
Edward Hall propôs o termo proxemics para descrever o uso do espaço social.
Este espaço é descrito como uma área individual com bordas invisíveis para cada agente.
Esta área pode representar a zona de conforto durante a comunicação interpessoal, e pode ser reduzida conforme há aumento de densidade de pessoas num ambiente.
Uma interpretação matemática do proxemics de uma pessoa pode ser:
Uma porção do espaço formada por pontos que estão mais próximos desta pessoa do que qualquer outra.
A movimentação de cada agente é baseada nos marcadores que se localizem dentro de o seu raio de ação (auxinas do modelo original).
Assim cada marcador associado a um agente, influência na sua movimentação do agente, semelhante ao crescimento da nervura de uma folha.
Embora o método preserve as principais características do modelo biológico de colonização do espaço, importantes modificações foram feitas, são elas:·
A principal diferença entre o desenvolvimento de uma nervura e a movimentação de uma multidão, é a presença de objetivos espaciais na dinâmica da multidão.
Em as folhas, as novas nervuras apenas crescem para longe das outras nervuras, e nas multidões, seus movimentos são influenciados por as intenções individuais ou em grupo;·
Em o modelo original, o algoritmo para colonização do espaço tem suas nervuras influenciadas igualmente por todas as auxinas.
Para a movimentação da multidão, cada marcador tem seu peso individual, baseado na distância do agente ao seu objetivo, bem como a coerência da sua orientação (ângulo entre orientação do agente e objetivo);·
Em contraste com a simulação baseada em auxinas, do padrão de nervuras, os marcadores para animação da multidão persistem:
Elas são usadas por os agentes e quando estes se movem para longe de elas, são subsequentemente liberadas para serem usadas por outros agentes.
Em um primeiro momento o mundo virtual é preenchido por marcadores que preencherão as áreas livres para locomoção do agente.
Para distribuir esses marcadores foi usado o algoritmo Dart--Trowing.
Sendo assim, obstáculos podem ser definidos, deixando áreas livres de marcadores, como pode ser visto na Figura 3.1, onde as linhas verdes indicam vetores entre a posição do agente até os marcadores que estão o influenciando.
Quanto maior o número de marcadores, mais suave é a trajetória, no entanto, isto aumenta o custo computacional de processamento.
Devido a esta associação dos marcadores com os agentes mais próximos, quando ocorre a disputa por espaço entre agentes próximos, emerge a partir de os marcadores, uma divisão do espaço entre os agentes que consiste a uma aproximação do Diagrama de Voronoi, este é um processo para decomposição do espaço entre elementos num plano.
Cálculo da direção de movimento dos agentes A movimentação do agente é simulada iterativamente.
Para cada passo da simulação e para cada agente I sua posição p (t), e o vetor g (t), apontando em direção a o destino do agente, são atualizados a cada iteração.
Um conjunto S contendo todos os marcadores dentro de o espaço pessoal do agente é computado.
Este conjunto consiste em todos os marcadores mais próximos do agente em questão do que qualquer outro.
O espaço pessoal de um agente, também descrito como proxemics, pode ser observado na Figura 3.2, bem como os respectivos marcadores pertencentes a cada agente.
Vários destes vetores relacionados aos seus respectivos agentes podem ser observados na figura calculados diferentes pesos wk para cada dk.
Estes pesos estão relacionados ao ângulo de dk com o vetor (g -- p), sendo g o destino do agente.
Assim, m define a próxima direção de movimento do agente m $= wk dk, k $= 1 onde os coeficientes wk são os pesos calculados usando a equação 3.3 wk $= f (g, dk) f (g, dl) l $= 1 para determinar a função f, assume- se que todos os marcadores ak, influenciando I, estão na mesma distância dk deste agente.
Sendo assim, a função f:·
Alcança o valor máximo quando o ângulo entre o objetivo e a orientação for 0;·
Diminui conforme o ângulo aumenta.
Uma possível solução para f é proposta na equação a seguir na equação 3.4: Onde·,· denota o produto interno.
Em a Figura 3.3 é ilustrada uma forma de visualização do modelo BioCrowds, onde existe uma aresta verde ligando cada agente aos respectivos marcadores que os influenciam.
O cálculo do deslocamento instantâneo leva em consideração a velocidade máxima (deslocamento por iteração) smax do agente.
Calcula- se o deslocamento instantâneo v como:
Assim, as posições dos agentes são atualizadas.
Em esta seção foram apresentados algumas características básicas do modelo, necessárias para compreensão do próximo capítulo.
Steering behaviors e BioCrowds Após a modelagem de BioCrowds, deu- se início o tratamento e desenvolvimento de novas características que permitam o seu uso em diferentes situações de simulação.
Sendo assim, novas pesquisas foram definidas para ampliação do modelo BioCrowds.
Esta dissertação focou em propor métodos de integração de BioCrowds com o conceito proposto por Reynolds, chamado de steering behaviors, como já abordado nas seções anteriores.
Em seu estado original o modelo BioCrowds provê as seguintes habilidades para um agente autônomo.·
perseguir objetivos;·
controle de velocidade;·
evitar colisão;
E· desvio de obstáculos (uma vez que estes não sejam em pequenas escala e, num tamanho menor que o raio do espaço pessoal do agente).
Analisando o atual estágio de BioCrowds, constata- se que os agentes não possuem capacidade de planejamento de rotas ou estratégias de movimentação, o que compromete gerar steering behaviors, como proposto por Reynolds.
Além disso, as informações para locomoção são todas obtidas através do mundo, não havendo interação direta entre os agentes.
Desta forma desenvolveu- se uma maneira de reproduzir os steering behaviors em BioCrowds, sem comprometer características inerentes deste em altas densidades de personagens.
Este modelo foi nomeado Tree Paths, e visa o planejamento de rotas para os agentes.
As ações que são realizadas por o Tree Paths são relacionadas à camada superior do modelo conceitual de Reynolds (Figura 2.7), desta forma, gerando steering behaviors.
A descrição da integração de Tree Paths com BioCrowds será abordada na próxima seção.
O modelo Tree Paths Tree Paths é o nome da abordagem proposta neste trabalho e foi inspirada no mesmo algoritmo de canalização de nervuras de plantas, que inspirou o BioCrowds, para simular os steering behaviors.
A pergunta desta pesquisa visa investigar se o algoritmo de canalização de nervuras pode contemplar a extensão do modelo de BioCrowds, a fim de prover steering behaviors.
O algoritmo de canalização de nervuras gera segmentos de veias a partir de um ponto inicial (raiz), que iterativamente vai gerando outros a partir de já existentes.
Assim, aplicado a trajetória do algoritmo, cria um vasto conjunto de caminhos que partem de um ponto inicial até outros locais, semelhante aos galhos de uma árvore.
Em o Tree Paths, o ponto inicial (raiz) é a posição do agente.
Por meio de iterações, que realizam o crescimento das nervuras, segmentos são gerados representando os caminhos que podem ser perseguidos por o agente, para cumprir sua tarefa.
As possíveis tarefas são:
Chegar até um objetivo, perseguir um alvo ou fugir deste.
Em a Figura 4.1 pode- se observar uma comparação entre o algoritmo de canalização de nervuras e o Tree Paths com suas distintas finalidades, onde são demonstrados os passos iterativos de ambos.
Em a próxima seção são apresentadas as adaptações feitas neste modelo de canalização de nervuras, para reprodução de steering behaviors em Tree Paths.
Este modelo, baseado em colonização do espaço, pode ser usado para prover planejamento de rota de um agente em posição fixa ou móvel.
Além de isto, também é capaz de realizar planejamento de rota para um agente que não tem um determinado objetivo específico, sendo capaz de simular agentes que tentam escapar de algum local ou de outro agente móvel, independente de haver objetivo específico.
Conforme pode ser visto na Figura 4.1, a idéia principal do modelo é criar uma variação do algoritmo de canalização de nervuras, a fim de que os ramos existentes gerem possíveis caminhos, os quais o agente pode optar para chegar até o seu destino.
Em esta figura é comparado o processo iterativo do algoritmo de canalização de nervuras com o Tree Paths, conforme explicado na seção 4.1.
Algumas modificações foram feitas em relação a o algoritmo de canalização, descrito na seção 2.4.
Próximas, apenas se estas estiverem dentro de um raio de percepção desde ramo, semelhante ao conceito de proxemics em BioCrowds.
Mas no modelo Tree Paths, este raio é chamada de raio de ação, enquanto, no modelo BioCrowds, é chamado de espaço pessoal.·
Cada ramificação utiliza as suas auxinas mais próximas, apenas se estas estiverem dentro de um raio de percepção desde ramo, semelhante ao conceito de proxemics em BioCrowds.
Mas, no modelo Tree Paths, este raio é chamada raio de ação, enquanto, no modelo BioCrowds, é chamado espaço pessoal.
Inicializações, crescimento e os seus devidos resultados.·
Mesmo que um ramo, numa determinada iteração, possua auxinas associadas a ele, este só irá criar um novo dependendo da probabilidade de se aproximar ao objetivo.·
Diferente do modelo de canalização, onde todas as auxinas geram vetores de influência com o mesmo módulo (ver seção 2.4), em Tree Paths os vetores de influência tem sua importância conforme o alinhamento destes com o destino do agente, num processo semelhante à função de ponderação (ver Eq.
3.3) encontrada em BioCrowds.
Desta forma, os ramos se desenvolvem tendendo para o objetivo do agente, como pode ser observado na Figura 4.1 à direita.
Sendo I um agente, tendo uma posição p (t) para cara iteração t, dependendo do seu comportamento desejado, este pode conter um objetivo fixo ou não.
Se um agente tem um objetivo para cada tempo t, é denotado por g (t).
Se um agente não tem um objetivo específico, este pode estar apenas tentando escapar de uma determinada região ou seguindo algum agente.
Sendo G, que denota o conjunto de caminhos para um agente, computado usando o algoritmo Tree Paths, então G é um conjunto de pontos chave, organizados num grafo direcional.
Para cada iteração, os pontos chave criados são chamadas de nodos, enquanto um segmento une dois nodos.
G é computado por meio de duas etapas no algoritmo, dentro de um loop interativo:·
processamento dos marcadores;·
geração dos novos nodos.
Os marcadores em correspondem ao conjunto de hormônios auxinas das plantas, em as quais, de acordo com a hipótese biológica, emerge o crescimento da folha nas regiões onde não há canais de nervuras.
Para o Tree Paths, as auxinas são denominadas marcadores, e são usados para definir a direção dos nodos, gerando caminhos como em BioCrowds.
Por outro lado, uma árvore G associada a um outro agente pode usar os mesmos marcadores que G. Apesar dos marcadores serem os mesmos para todos os agentes, o sistema de bloqueio é individual e só são válidos para os nodos de uma mesma árvore.
De esta maneira, podem as árvores de diferentes agentes se interceptarem durante o loop iterativo, podendo permitir colisão de trajetórias.
No entanto, isto não ocorre devido a o modelo original BioCrowds, que garante que os movimentos dos agentes estejam dentro de seus polígonos de Voronoi.
De esta maneira o Tree Paths se mantém num caráter mais global de planejamento de rota dos agentes.
Tendo um nodo n, deve ser tomada a decisão se um nodo filho n irá ser criado a partir de n, ou não.
Esta decisão é baseada numa regra de probabilidade onde compara- se a distância do nodo ng em relação a o objetivo g (nodo mais próximo de o objetivo no tempo t), para com a distância do nodo n..
Desta forma, a probabilidade Pr (n), para qualquer outro nodo n, decresce conforme aumenta a sua distância do objetivo:
Pr (n) $= n-g ng -- g onde· é norma L2 de um vetor.
Claramente, a probabilidade prioriza a criação de nodos filhos próximos do objetivo.
Se um nodo n for gerar um nodo filho n, este será criado na posição n por meio de n $= n+ onde d (n) d (n) d (n) é um vetor unitário representando a direção de crescimento da árvore no nodo n e um passo constante que representa o tamanho do segmento do nodo.
O vetor d (n) é baseado nos marcadores em S (n) e em suas coerências com o objetivo g:
Este processo descreve a criação das sequências de nodos conectados por segmentos, mas não a bifurcação na árvore.
Para criar bifurcações, um nodo pai n deve estar conectado ao menos com dois diferentes nodos ni e nj.
Quando o primeiro nodo filho, n1, é criado, este retém alguns marcadores em torno de si de acordo com a &quot;distância de restrição», sendo assim o número de marcadores disponíveis de n são reduzidos.
Desta forma, S (n) é recomputado com um número reduzido de marcadores, e as Equações (4.2) (4.3) (4.4) são reaplicadas para obter o segundo nodo n2, processo este que sempre inclui a probabilidade de criar um novo nodo.
Cabe salientar ainda que um nodo só é um &quot;nodo chave «quando possuir mais de um nodo filho, o que representa uma bifurcação.
A Figura 4.3 demonstra a criação de novos nodos no algoritmo Tree Paths.
O nodo em verde (segmento criado por os nodos verde e preto) foi criado primeiro, e restringiu alguns marcadores na criação do preto.
O nodo azul foi computado com os marcadores que sobraram associados com seu nodo pai n (nodo preto), e este novo nodo também restringe alguns marcadores.
O mesmo acontece do nodo preto para o nodo vermelho.
Um segundo nodo pode ser criado a partir de o mesmo nodo pai (desde que tenham sobrado marcadores).
No entanto isto depende da função de probabilidade Pr (n) (Equação 4.2).·
Toda vez que o agente chega até um nodo n o nodo pai de n é eliminado, e neste processo os marcadores antes bloqueados por este nodo pai são liberados para uso dos próximos nodos que venham a crescer nas seguintes iterações.·
Toda vez que o agente chega a uma bifurcação (nodo chave), e opta por um nodo n que esta associado ao melhor caminho g, além de eliminar o nodo pai deste nodo chave, também são eliminados todos os nodos que não são parentes diretos ou indiretos de n, bem como liberado seus marcadores.·
Toda vez que um nodo n alcança o alvo, a árvore pára de crescer.
Em a Figura 4.4 pode ser observado uma aplicação do algoritmo Tree Paths.
Em o caso o agente da esquerda, na imagem, persegue o da direita (alvo móvel).
Em a Figura 4.5 observa- se o algoritmo Tree Paths aplicado a uma superfície.
Perseguição de alvos móveis com Tree Paths Alvos móveis podem representar um problema para Tree Paths, uma vez que as ramificações criadas num tempo t são computadas para alcançar um alvo numa determinada posição g (t).·
cada agente colaborativo é apto a eliminar os nodos de outros agentes também colaborativos num raio de distância, de sua posição atual.
Além destes nodos, todos os nodos filhos, diretos ou indiretos destes, são também eliminados.
Em uma analogia direta com o conceito de árvore, é realizada uma &quot;poda «nos galhos que interceptam a região da árvore de um agente.
Os efeitos dessa ação podem ser observados na Figura 4.8.
De esta maneira, as árvores se desenvolverão tentando evitar sobreposições de suas ramificações, fazendo com que os agentes afastem- se, enquanto vão à direção do alvo.
Comportamento de fuga Uma vez que Tree Paths é baseado num algoritmo para colonização do espaço, torna- se fácil criar uma variação que permita a um agente escapar de um determinado lugar sem necessariamente existir um objetivo específico, mas sim, uma área de a qual fugir.
O algoritmo Tree Paths realiza suas iterações em sua forma original, salvo duas modificações necessárias, uma vez que não há mais destino específico:·
não existe mais ponderação em relação a o destino, sendo que os pesos dos marcadores permanecem iguais entre si;·
todos os nodos, que possuem pelo menos um marcador de influência irão dar origem a um novo nodo, não havendo mais cálculo de probabilidade.
O algoritmo Tree Paths pára de desenvolver a árvore, quando um dos nodos consegue sair da área que deseja escapar, conforme pode ser observado na Figura 4.9.
União dos comportamentos colaboração e fuga Havendo um grupo de agentes que colaboram para perseguir um alvo, estes fazem uso do Tree Paths, como descrito na Seção 4.4.
Uma vez que este alvo é um agente que tenta não ser pego, ele pode usar a variação do Tree Paths descrita na seção 4.5.
Para que isto ocorra, é necessário ser determinada a &quot;área de escape», a qual o agente que está em fuga irá usar.
Uma proposta para criar essa área é o menor círculo possível (raio), posicionado no mundo, de maneira que englobe todos os agentes perseguidores da simulação e o agente em fuga.
Esta área, denotada por o raio e a posição do círculo no mundo, representa a área de a qual o agente em fuga deve fugir.
De esta maneira, conforme a seção 4.5, a árvore do Tree Paths crescerá até que um nodo tenha escapado dessa região.
Para garantir que o caminho gerado por o Tree Paths não leve o agente que foge em direção a os agentes que estão perseguindo- o, são tomadas as seguintes ações:·
os agentes perseguidores bloqueiam seus marcadores não compartilhando com o agente em fuga;
E· os agentes perseguidores, &quot;podam «os nodos da árvore do agente em fuga que estão dentro de a &quot;área de escape».
Um exemplo desta dinâmica pode ser observada na Figura 4.9.
Comportamentos emergentes de grupos em BioCrowds Por meio de o algoritmo de colonização do espaço, observado nas plantas.
Desta forma, BioCrowds é capaz de reproduzir comportamentos emergentes como filas (lanes) e gargalos (bottleneck), entre outros.
Um relato mais completo sobre estes comportamentos pode ser encontrado em.
Em este trabalho investigou- se 2 comportamentos específicos:·
formação geométrica de agentes;
E· alinhamento de agentes.
Estes dois comportamentos possuem grande aplicabilidade em jogos e simulação.
Com o intuito de alterar o mínimo possível o BioCrowds, apresenta- se a proposta de manipular os pesos associados aos marcadores no espaço, a fim de obter tais comportamentos.
Formação Um comportamento importante, a ser controlado, de grupos de personagens, é a formação geométrica, útil em animação e jogos.
Por meio deste comportamento, é possível definir áreas, as quais os agentes devem ocupar no tempo, para determinada aplicação gráfica.
Há, ao menos, duas formas diferentes para modelar este comportamento.
De forma pré-definida, considerando a geração de posições específicas para cada agente dentro de a forma determinada, e posteriormente a distribuição dos agentes neste espaço.
Esta abordagem tem pouca flexibilidade, pois exige modificações se a referida área for alterada, ou se mais agentes desejarem participar da animação.
Em quaisquer destas situações, seria necessário recalcular cada um dos objetivos, para cada agente.
O algoritmo, para um agente qualquer, baseia- se em três etapas:
Em a primeira, é gerado aleatoriamente um objetivo, localizado dentro de a região de formação, e informado para todos os agentes (que compartilham o mesmo objetivo).
Em a segunda etapa, o BioCrowds original é executado, direcionando todos os agentes para a região de formação, até que os agentes passem a utilizar algum marcador de formação (identificados quando a região de formação é especificada).
Quando isto ocorre, a terceira etapa se desenvolve.
Em esta, a equação 3.3 é substituída por w $= se no f or marcador de f ormão 10 $= se f or marcador de f ormão onde os pesos dos marcadores não se diferenciam em função de a posição e orientação do objetivo, mas sim, se são marcadores de formação ou não.
Assim, ao receber estímulos de marcadores de formação, os agentes competem por o espaço de formação, devido a o peso maior destes marcadores em relação a os que estão fora de a área.
Consequentemente, os agentes acabam por se manter nas áreas de formação.
Em a Figura 5.2, observa- se uma sequência de agentes que vão de encontro a uma área de formação.
Quando estes a atingem, a competição do espaço, inerente de BioCrowds, faz com que os agentes se distribuam por a área.
Igualmente ao comportamento de formação, o alinhamento pode ser usado para várias aplicações na área de animação.
Este comportamento, da mesma maneira que o anterior, necessita de uma simples modificação na maneira de ponderar os marcadores para influenciar os movimentos dos agentes, em BioCrowds.
As possíveis direções são horizontal e vertical, conforme mostra a Figura 5.4, no topo.
O algoritmo visa, primeiramente identificar quais são os marcadores localizados dentro de a região da máscara de formação.
Para estes, seu peso aumenta de acordo com a equação wk $= distancei, k onde a distância é calculada do agente i para cada marcador k.
Além disso, os pesos dos marcadores são acumulados numa única estrutura de dados, fazendo com que diferentes agentes contribuam com o peso de um mesmo marcador.
No entanto, cada marcador irá influenciar apenas um agente (o mais próximo), porém utilizando o valor acumulado.
Resultados Os resultados apresentados neste capítulo foram alcançados por meio de um protótipo desenvolvido para este trabalho em C+/ OpenGL.
Desenvolveu- se um ambiente virtual 3D onde é possível criar agentes interativamente, definir behaviors podendo usar os algoritmos de BioCrowds e Tree Paths, além de também poder setar regras para formação e alinhamento.
De forma interativa, pode- se setar diferentes destinos para os agentes, além de definir comportamentos de perseguição, fuga, definir áreas para formação e definir obstáculos.
Todas as ações podem ser realizadas com o mouse interativamente.
O protótipo ainda inclui opções como salvar marcadores, a fim de não necessitar o reprocessamento destes toda vez que o protótipo é iniciado, gravação de vídeo, também inclui, geração de arquivo com registros de trajetórias feitas por os agentes em formato compatível com o usado nas ferramentas de visualização no âmbito do laboratório VHLab e carregar arquivos de imagem como mapa para criação de áreas de formação.
Considerações sobre parâmetros usados Todas as simulações foram feitas numa área que representa 46 x 32 metros do mundo real.
Além disso, foi configurada para uma taxa de visualização de 30 FPS (frames per second), onde cada iteração representa 1/30 segundos do mundo real.
Infelizmente, Tree Paths ainda precisa que seus parâmetros sejam ajustados para respeitar os obstáculos do ambiente.
Por exemplo, na Figura 6.1, Tree Paths pode gerar caminhos que transponham o obstáculo devido a o raio de ação dos nodos receber influência de marcadores que estariam do outro lado do obstáculo.·
o raio de ação dos nodos deve ser maior que a distância mínima entre os marcadores;·
a distância para restrição dos marcadores deve ser menor que o raio de ação;·
o tamanho de um segmento de nodo deve ser maior que o módulo do vetor que representa a velocidade máxima em BioCrowds;·
os obstáculos do ambiente que representam regiões não passáveis, devem ser mais largos e compridos do que a soma do raio de ação dos nodos e o tamanho do segmento destes.
E Tree Paths usadas nas simulações.·
Parâmetros usados em BioCrowds raio de proxemics $= 1.25 m distância mínima entre marcadores $= 0.2 m tamanho do passo máximo de um agente $= 0.4 m velocidade máxima de um agente $= 1.8 m/ s· Parâmetros usados em Tree Paths Raio de ação $= 2.75 m Distância para restrição dos marcadores $= 1.75 m Distância linear entre nodos (tamanho do segmento) $= 0.6 m Distância mínima entre marcadores $= 1.5 m Distância de ajuste de nodos $= 10 m Distância para corte de nodos para árvores para agentes colaborativos ou em fuga $= 2.5m· Parâmetros para formação Fator de escala para vetores de influência relacionados ao marcadores em área de formação Simulações realizadas Apresenta- se uma avaliação que ilustra o planejamento de rota de Tree Paths com os parâmetros utilizados.&amp;&amp;&amp;
Isto é comparado a outro algoritmo, que objetiva gerar o melhor caminho entre um ponto e outro.
Para isto, um agente que percorreu duas vezes a trajetória de uma posição inicial até um objetivo, num mesmo ambiente.
Em a primeira simulação, foi usado o algoritmo A-Estrela, atuando numa discretização do ambiente em células de 1m2.
Em a segunda, foi usado o Tree Paths conforme as configurações básicas da seção 4.1.2.
O resultado pode ser observado na Figura 6.3, onde o agente percorreu uma distância de 78.05 m enquanto com o Tree Paths a distância percorrida é de 83.60 m..
Percebe- se que, apesar de a distância percorrida ser maior, Tree Paths (não é objetivo prover o menor caminho), este poderia ser re-inicializado em qualquer nodo da árvore.
As simulações apresentadas nesta seção estão relacionadas na Tabela 6.2, e foram baseadas na tentativa de reproduzir steering behaviors entre agentes, constituindo um resumo destes comportamentos.
Desta forma, os comportamentos avaliados foram planejamento de rota, perseguição de alvo móvel, perseguição colaborativa de alvo móvel, fuga de uma área, perseguição e fuga, formação e alinhamento.
A simulação demonstrando o planejamento de rota tem o objetivo de destacar como o algoritmo Tree Paths interage com os marcadores desenvolvendo a árvore em direção a o objetivo do agente, conforme ilustrado na Figura 6.5.
Em esta simulação, observa- se um agente que tenta chegar até um objetivo representado por a bandeira vermelha, os retângulos pretos representam obstáculos (região sem marcadores), e os marcadores são os pequenos pontos.
A colaboração para perseguição de alvo móvel pode ser observado na Figura 6.6, onde 2 agentes colaborativos à esquerda contornam o obstáculo para chegar até o agente que vaga por o cenário.
Observa- se que as árvores de ambos não se interceptam conforme especificações da Seção.
Agente em fuga usa as configurações da seção (4.5) agentes estáticos podam a árvore do em fuga e bloqueiam marcadores para este também.
Agente em fuga usa as configurações da Seção (4.5).
Agentes perseguidores podam a árvore do agente em fuga e bloqueiam marcadores (Seção 4.6).
Configurações para preenchimento de áreas.
Configurações para alinhamento de agentes (Seção 5.2) Sim Sim Sim Sim Sim Não Não nodo da árvore que conseguir sair deste círculo representa o melhor caminho a ser seguido.
Observa- se ainda que os marcadores em torno de os agentes estáticos, são bloqueados fazendo com que a árvore não intercepte com eles.
Em a Figura 6.8 é observado a fuga de um agente (à direita) enquanto os outros (à esquerda) colaboram a fim de pegar- lo.
Observa- se que as árvores dos agentes colaborativos não se interceptam, no entanto, devido a restrição do ambiente, estes agentes acabam colonizando rapidamente todo o espaço, e assim, prejudicando o processo de colaboração.
Já agente em fuga, que possui sua área para escapar representada por o círculo vermelho, acaba por atravessar o cenário da direita para a esquerda devido a procura por áreas livres.
Em a Figura 6.9, é ilustrado a extensão de BioCrowds para formação, onde os marcadores em vermelho interceptam com uma área de formação em forma de estrela.
Observa- se que os agentes tem como o destino o centro da estrela, mas ao entrar em contato com os marcadores de formação, passam a usar o equacionamento definido na Seção 5.1.
Em a Figura 6.10 é demonstrado a extensão de BioCrowds para alinhamento entre agentes usando a máscara de pesos para alinhamento vertical e horizontal, onde a sequência de quadros demonstra o progresso do alinhamento, devido a influência das máscaras de pesos.
Observase que o alinhamento horizontal e vertical, com a máscara de pesos proposta na Seção 5.2, pode acarretar algumas falhas em alguns pontos da formação.
Para conseguir um alinhamento perfeito horizontal e vertical, seria necessário uma distribuição linear dos marcadores de BioCrowds.
Considerações Finais A abordagem denominada Tree Paths, visou investigar se o algoritmo de canalização de nervuras que inspirou BioCrowds, também serviria para simular steering behaviors os seguintes comportamentos:·
perseguição;· colaboração para cercar alvo;·
evasão;· alinhamento;·
formação. Desta forma, adaptando algumas propriedades do algoritmo de canalização de nervuras, constatouse que é possível realizar uma rápida análise do espaço, gerando caminhos com diversidade e robustez.
Assim, fugindo da homogeneidade encontrada em algoritmos de planejamento de rota convencionais que traçam sempre o melhor caminho.
Além de isto, mesmo que os marcadores representem uma discretização do mundo, os caminhos gerados não necessariamente interceptam com as posições destes marcadores.
Isto ocorre devido a o fato que o cálculo da posição dos nodos em Tree Paths serem baseados numa resultante entre vários marcadores e seus pesos, e conforme o seu alinhamento com o objetivo.
Desta forma, o agente não necessariamente se move sob marcadores, mas sim, usa estes como uma influência para traçar as rotas, possibilitando uma grande gama caminhos diferentes.
De maneira geral, Tree Paths mostrou- se eficiente como algoritmo de planejamento de rota para alvos fixos.
Em contrapartida, observando as simulações, constata- se que a perseguição de alvos móveis não é muito eficiente, conforme as dificuldades ilustradas na Figura 4.6, e que permanecem, mesmo quando aplicada a solução da Seção 4.3.
Outras propostas para solução o problema de planejamento de rota foram levantadas, uma de elas seria não mais eliminar os nodos em torno de o raio de ajuste dos nodos, mas sim, escolher o nodo a ser seguido baseado num custo que leve em conta a distância do alvo e também caminho percorrido.
Certamente, uma a solução definitiva para as rotas, seria a recomputação da árvore do agente, por inteira, a cada momento que o alvo se move.
No entanto, o foco dessa dissertação é, não só estudar e adaptar algoritmo de canalização de nervuras para gerar caminhos alterando- o menos possível, como também explorar o máximo possível dos padrões gerados por as árvores para modelar os steering behaviors.
Portanto, optou- se por manter as ramificações das árvores o tanto quanto possível como rotas, durante a dinâmica das simulações.
O comportamento de cooperação entre agentes obteve alguns resultados visuais promissores, no entanto, conforme aumenta o número de agentes colaborando numa determinada área, as árvores desses agentes colaborativos, que não compartilham os mesmos marcadores, podem acabar por colonizar uma quantia excessiva do espaço em busca do alvo atrapalhando a locomoção dos agentes.
Em o ambiente de teste desta dissertação, com até 4 agentes colaborativos, obtivera- se resultados satisfatórios na área 46 x 32 m definida.
Desta forma, a hipótese retirada desse experimento, é que o uso de parâmetros em Tree Paths, que viabilizem uma árvore com menos ramificações é uma proposta razoável para uma mais eficiente colaboração de maior número de agentes.
As simulações baseadas na adaptação do algoritmo para situações sem objetivo, onde há apenas uma região de escape (seção 4.5), obtiveram resultados promissores.
Tree Paths, traçou bons caminhos como rotas de fuga, devido sua propriedade da colonização do espaço.
Os comportamentos emergentes de grupos, adaptados diretamente em BioCrowds, obtiveram resultados bastante satisfatórios, a modificação proposta para formação de agentes, em que os marcadores da área de formação passam a ter o mesmo peso, demonstrou a coesão de BioCrowds quanto a sua aplicação da teoria da competição por o espaço, pois, conforme pode ser observado na Figura 6.9, esta se encarrega de distribuir de maneira eficiente os agentes por a área.
Já o comportamento de alinhamento (ver Seção 5.2) pode apresentar alguns erros, caso os agentes envolvidos estejam muito próximos no início do processo.
Existe uma série de dificuldades em avaliar de forma sistemática esta categoria de comportamentos denominados steering behaviors.
Isto se dá devido a complexidade destes comportamentos, através de critérios como o tempo, distância percorrida, linearidade que podem não ser necessariamente parâmetros para decidir se um modelo é bom ou não.
Em o contexto dessa dissertação, o algoritmo Tree Paths, mostrou- se pouco sugestível a criar caminhos lineares e otimizados para todas as situações, desta forma, uma comparação com outros algoritmos semelhantes como o ainda é necessária como trabalhos futuros.
Tree Paths é apto a oferecer comportamentos diversificados para aplicações em grupos de agentes a cada simulação, ainda com coerência ao contexto.
Esta características é alcançada, não devido a aleatoriedade de algumas equações, mas sim, por suas regras que fazem com que o conjunto de caminhos tenha sempre uma configuração diferente, mesmo quando aplicado ao mesmo ambiente em mesma situações.
Esta característica também é encontrada no modelo original, capaz de gerar diferentes canalizações de nervuras para plantas ou superfície de folhas, conforme pode ser observado na Figura 2.10
