A utilização de sistemas multiagentes para a criação de soluções para problemas complexos de natureza distribuída e descentralizadal tem sido um assunto explorado por trabalhos de pesquisa realizados nas últimas décadas.
Muito mais que uma nova tecnologia, a orientação a agentes (OA) tem se mostrado uma nova forma de pensar a estratégia de solução para um problema.
Isso tem acontecido porque a abordagem multiagente, por suas características de distribuição e descentralização do controle do processo computacional, permite desenvolver soluções para problemas complexos de maneira mais natural que soluções monolíticas estruturadas ou orientada a objetos (OO) tradicionalmente adotadas, pois mantem um nível de abstração mais elevado, modelando os elementos do problema em termos de agentes e interações que ocorrem entre eles.
A OA adota o conceito de agente para caracterizar uma unidade autônoma de resolução de problemas.
A partir de isso, uma solução e criada através do agrupamento de agentes que trabalham cooperativamente, cada um de eles atuando como responsaveis por a resolução de parte do problema, caracterizando um sistema distribuído para resolução de problemas, denominado Sistema Multiagente (SMA).
Assim sendo, a principal característica de um Sistema Multiagente e a descentralização do controle que é distribuído entre os varios agentes que o compõem.
A exemplo de outros sistemas, a medida que a complexidade do SMA cresce, a dificuldade de construção deste também cresce, o que pode comprometer a qualidade do produto final.
Sob o ponto de vista da Engenharia de Software, o processo de construção de um sistema de alta qualidade, de maneira produtiva, é viabilizada através da adoção de um conjunto de métodos, ferramentas e procedimentos.
Caminho para a evolução deste processo passa por uma combinação de metodos abrangentes para todas as fases de desenvolvimento do software, melhores ferramentas para automatizar estes metodos, blocos de construção mais poderosos para a implementação do software, melhores técnicas para garantir a qualidade do produto e uma filosofia de coordenação predominante, controle e administração.
A exemplo de outros processos de desenvolvimento de software, o processo de engenharia de SMA pode ser organizado em três etapas principais:
Análise: Em esta etapa são identificadas as funcionalidades relevantes ao domínio do problema em questão e definidas as soluções num nível lógico.
Como resultado desta etapa são obtidos os modelos que definem a estrutura organizacional do sistema, as politicas de coordenação, negociação, cooperação e planejamento entre os agentes que compõem o SMA.
Em esta etapa e definida a estratégia de solução multiagente a ser utilizada, e especificadas as interfaces correspondentes aos agentes.
Projeto: Caracteriza os procedimentos necessários a adequação das soluções definidas no modelo de análise as caracteristicas existentes no ambiente computacional real, considerando as limitações de recursos impostas por o mesmo, definindo arquiteturas para implantação do SMA.
Implementação: Procedimentos de mapeamento do modelo resultante da etapa de projeto para uma solução fisica através da codificação dos agentes e dos elementos de infra-estrutura da sociedade.
Dentro de um processo de Engenharia de Software, o objetivo da etapa de Projeto e o refinamento do modelo de análise através da inclusão de detalhes que viabilizam sua implementação num ambiente computacional.
Tratar o modelo de projeto como sendo uma extensão do modelo de análise facilita a transição da etapa de análise para a etapa de projeto.
Desta forma, o modelo de análise define quais os tipos de agentes básicos existentes no sistema, seus papéis e capacidades funcionais.
Em um SMA, as interdependências entre os componentes do sistema são reduzidas, uma vez que cada agente tem em ele embutida a maior parte da funcionalidade necessaria para cumprir seu papel, o que imprime uma clara separação entre os níveis de componente (nível intra-agente ou micro-nível) e do sistema (nível inter-agente ou macro-nível).
Esta interdependência, a exemplo do que ocorre com a proposta de Rumbaugh, que apresenta uma fase de Projeto do Sistema e outra de Projeto dos Objetos, sugere que se divida a etapa de Projeto do SMA em duas partes:
Projeto da Sociedade:
Esta etapa compreende a definição da arquitetura da sociedade de agentes, podendo requerer a definição de elementos auxiliares ao funcionamento do sistema, tais como novos agentes para interação com agentes humanos, agentes roteadores para a comunicação entre nodos da rede física, agentes para interface com a base de dados.
Projeto dos Agentes: Esta etapa compreende a definição da arquitetura intema dos agentes, bem como sensores e atuadores para interação com o ambiente, e a definição de mecanismos deliberatórios que viabilizem a implementação dos requisitos comportamentais definidos na etapa de análise.
A etapa de Projeto da Sociedade desconsidera a estrutura intema dos agentes, que são vistos apenas por suas respectivas interfaces.
Cada interface corresponde a um papel a ser desempenhado por o agente dentro de a sociedade.
O presente trabalho utiliza o conceito de interface -- derivado daquele definido por a Unijied Modeling Language (UML) -- como sendo um conjunto nomeado de serviços.
A UML é uma linguagem de modelagem elaborada para dar suporte ao desenvolvimento OO, sendo reconhecida como padrão por a Object Management Group (OMG) e por grande parte dos engenheiros de software.
Em o sentido de convergir para o estado da arte em engenharia de software, neste trabalho os esforços realizados na adaptação da UML para o paradigma OA são tomados como ponto de partida para a definição de técnicas para descrição dos detalhes da fase de projeto.
Em este trabalho, considera- se que os agentes desempenham satisfatoriamente os serviços definidos em sua interface, como especificado nas definições de análise.
Desta forma, assume- se que os agentes apresentam um comportamento cooperativo.
Os trabalhos existentes na literatura que abordam o processo de engenharia de um SMA[ IGL98a, ODE00], que também abordam a fase de projeto, porém não são suficientemente detalhados, além de o fato de nenhum de eles apresentar um estudo acerca de os requisitos específicos de organizações empresariais.
Estudos foram feitos com o objetivo de verificar a existência de um paralelo entre as abordagens OO e OA que permita a aplicação das metodologias existentes para OO na construção de um SMA.
Segundo, é possível modelar um agente utilizando uma abordagem OO.
No entanto, persiste a problematica da modelagem da sociedade, pois, por não adequar- se ao modelo conceitual, a abordagem OO não viabiliza a modelagem de todos os aspectos envolvidos num SMA.
Assim sendo, fica inviabilizada a aplicação direta de ferramentas OO para construção de sistemas OA por as distinções conceituais existentes entre os dois paradigmas A definição da Agent Unijíed Modeling Language (AUML) constitui um esforço de adaptação da linguagem UML as características inerentes a abordagem OA.
Porém, por tratar- se de uma proposta bastante recente, é natural que não exista consenso sobre a sua real adequação para modelagem de SMA.
Além disso, nesta proposta não e apresentada uma discussão acerca de os requisitos a serem considerados para a elaboração da etapa de projeto para SMA, tendo em vista as suas diferenças em relação a abordagem OO.
Assim, identificados os requisitos para a etapa de projeto de um SMA, considera- se possível a necessidade de propôr extensões à AUML, a exemplo de.
Além de uma linguagem de modelagem, uma metodologia de desenvolvimento de software é composta também por um processo, que estabelece um conjunto de atividades a serem seguidas com o objetivo de se chegar a um produto de software a partir de um conjunto de requisitos de usuario.
No caso de a abordagem OO, um dos processos que vêm sendo desenvolvido e o Unified Software DeUelopmcnt Process r que aqui sera referenciado como Unified Process, que faz uso desta linguagem para documentação do processo.
Por apresentar estas características, adotaremos o Unífied Process como base de estudo em direção a definição de um conjunto de atividades para projeto da sociedade de um SMA.
Este trabalho esta inserido no escopo do projeto MASP (Projeto e Desenvolvimento de Sistemas Multiagentes), suportado com recursos financeiros provindos do FAPERGS/ CNPq (Fundação de Apoio a Pesquisa do Rio Grande do Sul/Conselho Nacional de Desenvolvimento Científico e Tecnológico), e que envolve professores da Faculdade de mformatica da PUCRS e do Departamento de mformatica da UCS (Universidade de Caxias do Sul).
Este trabalho constitui uma pesquisa na area de Engenharia de Software, com contribuições para a area de Sistemas Multiagentes.
Esta pesquisa de mestrado tem como origem intelectual a tese de doutorado de Bastos.
Em sua tese, este autor apresenta uma abordagem baseada no paradigma multiagente para alocação dinâmica de recursos em ambientes de produção chamada M-DRAP (Multíagent--Dynamic Resource Allocatíon Planning).
Foi definida uma arquitetura multiagente genérica para sistema de produção e especificada uma estratégia orientada a mercado para a alocação dinâmica de recursos, propiciando o tratamento de perturbações no sistema de produção em tempo real.
A arquitetura proposta tem uma forte correspondência conceitual com o Cimosa (Computer Integrated Manufacturing Open Systems Architecture) r arquitetura de integração para sistemas de manufatura que representa a realidade do domínio do problema sob o ponto de vista estrutural e funcional -- apresentando uma estrutura organizacional para sistemas de produção típicos.
Em sua tese, o autor apresenta uma proposta envolvendo um conjunto de atividades e modelos para o desenvolvimento de SMA, utilizada para suportar' a especificação do M-DRAP.
Este trabalho teve uma nova versão, apresentada em[ BASOOL em a qual propõe um refinamento da proposta original apresentada em sua tese.
Porém, o autor não aprofunda- se nos aspectos da etapa de projeto, sendo este o objeto de investigação em nossa pesquisa de mestrado.
Identificar as propriedades a serem consideradas para o desenvolvimento do projeto de um SMA no do mínio das organizações empresariais?
Segundo Laudon, uma organização é uma estrutura social formal e estável que utiliza recursos do ambiente e processa- os para produzir saídas úteis ao ambiente.
Visando dar continuidade a pesquisa desenvolvida na dissertação de mestrado de Josyane Sousa, que aborda a etapa de análise de SMA, o presente trabalho trata da problemática de projeto de SMA.
Este trabalho aborda a aspectos sociais do desenvolvimento de SMA, não abordando aspectos de desenvolvimento da arquitetura intema dos agentes, e restringindo- se ao domínio de aplicação em organizações empresariais.
Para atingir seu objetivo principal, são propostos os seguintes objetivos específicos:
Definição dos requisitos de projeto de SMA;
Escolha e adaptação de um conjunto mínimo de modelos baseados em UML para desenvolvimento de um projeto de SMA;
Definição de um conjunto de agentes para suporte das atividades de infraestrutura;
Identificação e proposição de um conjunto de atividades para aplicação dos modelos adaptados e integração dos agentes de infraestrutura a estes modelos.
A partir de os requisitos de projeto propostos, define- se o conjunto de agentes de infraestrutura a serem integrados ao SMA.
A criação de diagramas de projeto se faz através do reuso dos diagramas de análise, que são refinados em diagramas de projeto através da integração de agentes de infraestrutura.
A decisão sobre quais agentes irão compôr o SMA no nível do domínio de aplicação e tomada na etapa de análise.
A etapa de projeto tem como objetivo viabilizar o funcionamento do SMA num ambiente computacional.
Em o capítulo 2 são apresentados aspectos fundamentais relacionados à abordagem OA, apresentando características gerais, aspectos estruturais, organizacionais, interacionais e arquiteturais do desenvolvimento de SMA.
Em o capítulo 3 é apresentada uma justificativa para aplicabilidade da abordagem OA no processo de desenvolvimento de soluções computacionais para problemas complexos, tais como aqueles encontrados em aplicações empresariais.
Em o capítulo 4 são enumerados os requisitos relacionados a etapa de projeto de SMA em organizações empresariais, e apresentados alguns trabalhos relacionados que abordam a etapa de projeto.
Em o capitulo 5 e apresentado um conjunto de diagramas a serem utilizados para representação dos requisitos identificados na etapa de projeto de SMA.
Em o capítulo 6 são descritos agentes de infraestrutura a serem utilizados para desempenhar serviços especializados.
Em o capítulo, e definido um conjunto de atividades a serem seguidas para o refinamento dos modelos provenientes da etapa de análise.
Este refinamento prevê integração dos agentes de infraestrutura, o que resulta na definição de modelos detalhados a nível de projeto.
Aspectos Fundamentais de Sistemas Multiagentes. Agente é uma entidade de software que exibe um comportamento autônomo e pró-ativo orientado a objetivos, que esta situado em algum ambiente sobreoqual e capaz de realizar ações para alcançar seus próprios objetivos de projeto e a partir de o qual percebe alterações.
Ha um consenso geral de que autonomia é a idéia central da noção de agência.
Entende- se autonomia como a capacidade do agente agir por seus próprios objetivos sem a intervenção de outrem Um agente pode ser visualizado como sendo uma entidade com capacidade de resolução de problemas encapsulada que possui as seguintes propriedades:
Autonomia: Executam a maior parte de suas ações sem interferência direta de agentes humanos ou de outros agentes computacionais, possuindo controle total sobre suas ações e estado intemo.
Para ter autonomia, oagente deve ter um certo grau de inteligência, o que capacita- o a sobreviver num ambiente dinâmico e por vezes não benigno.
O comportamento de um agente pode ser baseado tanto em sua própria experiência, quanto em seu conhecimento embutido usado na construção do agente para um ambiente em particular.
No caso de as ações do agente basearem- se completamente no conhecimento embutido, ao ponto que este não considere suas percepções, podemos dizer que o agente tem falta de autonomia.
Habilidade social:
Por impossibilidade de resolução de certos problemas ou por outro tipo de conveniência, interagem com outros agentes (humanos ou computacionais), para completarem a resolução de seus problemas, ou ainda para auxiliarem outros agentes.
De isto surge a necessidade de que os agentes tenham capacidade para comunicar seus requisitos aos outros e um mecanismo decisório intemo que defina quando e quais interações são apropriadas.
Capacidade de reação:
Percebem e reagem a alterações no ambientes em que estiverem inseridos.
Capacidade pró-ativa:
Agentes, do tipo deliberativo, além de atuar em resposta as alterações ocorridas em seu ambiente, apresentam um comportamento orientado a objetivos, tomando iniciativas quando julgarem apropriado.
Agentes operam e existem num ambiente, que pode conter ou não outros agentes.
Em algumas situações, agentes podem executar tarefas por si próprios, mas, em outras, têm a necessidade do auxílio de outros agentes.
Isso acontece a todo o momento no mundo real, pois quando alguem tem a necessidade de resolver algum problema que envolva algum conhecimento ou habilidade que não possua, necessitaoauxílio de outra pessoa apta a fazes- lo.
As características da abordagem multiagente impõem necessidades que devem ser viabilizadas para queosistema possa ser considerado eficaz.
Considerandooexemplo de uma organização empresarial tradicional como sendo uma sociedade de pessoas que combinam esforços para a resolução de um problema comum, podemos dizer que esta constitui um exemplo de sistema de resolução de problemas de natureza distribuída.
Em este caso, para obter- se resultados favoráveis nesta empresa devem ser criadas regras que definam uma estrutura que viabilize o alcance dos seus objetivos e implementação de suas estratégias de funcionamento.
Em um SMA, devemos considerar critérios que viabilizem e garantam a coerência das ações dos agentes com vistas a atingir de maneira efetiva os objetivos do Moulin e Chaib-Draa propõem uma estrutura de análise e classificação da maior parte das atividades de pesquisa em Sistemas Multiagentes, de o qual podemos citar duas perspectivas:
Perspectiva do agente enfoca elementos que caracterizam o agente envolvido num SMA.
São eles:
Categorias de agente, estrutura e manutenção do conhecimento, habilidades de raciocínio, habilidades de adaptação e aprendizado, e arquiteturas de agente.
Perspectiva de grupo reúne aspectos de grupo, tais como:
Organização, coordenação, cooperação, negociação, comportamento coerente, planejamento, comunicação e interação.
A coerência de um SMA é viabilizada por a garantia de um comportamento coerente de seus agentes, ou seja, as ações dos agentes fazem sentido em relação a os objetivos comuns do grupo.
Dentro de a perspectiva de grupo, serão examinados a seguir os aspectos fundamentais a serem considerados para Desenvolvimento de Sistemas Multiagentes para a garantia da coerência entre as ações dos agentes.
Algumas das características de agentes são:
Entidades de resolução de problemas claramente identificáveis com limites e interfaces bem definidos;
Entidades situadas num ambiente em particular de o qual recebem entradas correspondentes ao estado deste e sobre o qual intervêm através de atuadores;
Projetados para realizar um papel específico, tendo objetivos particulares a atingir;
Autônomos, têm controle sobre seu estado intemo e sobre seu próprio comportamento;
Capazes de exibir am comportamento flexível para a resolução de problemas, necessitam ser rea tivos (responder imediatamente a alterações do ambiente) e pró-ativos (para agir de acordo com seus objetivos).
A o adotar- se uma visão de mundo orientada a agentes, percebe- se que um simples agente é insuficiente para resolver a maioria dos problemas.
Portanto, nestes casos, envolve- se múltiplos agentes no processo de resolução do problema para que seja representada sua natureza descentralizada, as diversas perspectivas do mundo, ou os interesses conflitantes.
Além disso, agentes precisam interagir com outros para atingir seus objetivos individuais ou o acesso aos recursos do ambiente.
Duas importantes considerações devem ser feitas:
Estas interações ocorrem por meio de uma linguagem de alto-nível (declarativa) e, assim sendo, geralmente são conduzidas ao nível de conhecimento;
E Agentes operam num ambiente sobre o qual têm controle parcial.
Analisando- se os pontos acima abordados de maneira conjunta, e possível constatar que aplicar uma abordagem orientada a agentes para a resolução de um problema significa decompôJo em múltiplos componentes autônomos com objetivos particulares e que se inter-relacionam.
Com isso, podemos enumerar as tres palavras-chave desta abordagem:
Agentes, interações e organizações.
Atualmente, adotar a idéia de organização e de mudanças organizacionais é importante para criar SMA mais adaptaveis.
No entanto, e necessário notar a distinção entre os termos estrutura e organização Entende- se estrutura como sendoopadrão de relações de informação e controle entre agentes, bem como a distribuição das habilidades entre eles.
Assim, a estrutura fomece uma visualização de como os problemas são resolvidos por o grupo de agentes e o papel que cada um destes agentes desempenha dentro deste grupo, ou seja, define os papeis e os relacionamentos para atender as seguintes condições Cobertura:
Qualquer habilidade necessária para a resolução do problema deve estar inserida no rol de habilidades de ao menos um agente.
Conectividade: Agentes devem interagir de maneira a permitir que suas habilidades sejam inte gradas e desempenhadas no sentido de contribuírem para uma solução global.
Potencialidade: Cobertura e conectividade devem ser atingíveis dentro de limitações computaci onais e de comunicação, assim como as especificações de confiabilidade do grupo.
De esta maneira, cada agente desempenha um ou mais papéis específicos no sistema.
Define- se como papel aquilo que e esperado que o agente faça dentro de a organização, ou seja, um conjunto de responsabilidades bem definidas dentro de o contexto global do sistema que o agente pode cumprir com um certo grau de autonomia.
Esta perspectiva pode tomar menos complexo e de gerenciamento mais simples o projeto de sistemas paralelos e distribuídos em relação a maioria das metaforas tradicionais de sistemas concorrentes, considerando- se que:
Cada agente tem controle próprio sobre seu processamento, sendo totalmente responsavel em Cumprir seu papel;
As interdependências entre os componentes do sistema são reduzidas, uma vez que cada agente tem embutida a maior parte da funcionalidade para Cumprir seu papel.
Isto facilita o projeto por imprimir uma clara separação entre os níveis de componente (intra-agente ou micro-nível) e do sistema (inter-agente ou macro-nivel);
Em muitos casos, SMAS pretendem suportar ou controlar alguma organização existente na realidade, pois sua adoção reduz a distancia entre os sistemas de software e os sistemas de mundo real, o que simplifica o desenvolvimento do sistema.
Em SMAS, o comportamento autônomo e pró-ativo exibido por os agentes constituintes sugerem que aplicações podem ser projetadas tomando- se como exemplo o comportamento e a estrutura de sociedades humanas.
Conceito de organização diz respeito ao conjunto de compromissos globais, crenças mútuas, e intenções comuns aos agentes quando agem juntos para atingir um dado objetivo.
Estes elementos definem um conjunto de diretrizes a serem seguidas por cada um dos agentes do SMA, descrevendo uma política de interação entre os agentes (p..
O agente X acredita que o agente Y tem autoridade para controlar determinado recurso).
Estas diretrizes podem evitar a ocorrência de situações caóticas no SMA, criando padrões comportamentais que evitem que o SMA se tome uma &quot;terra sem lei», facilitando ou mesmo viabilizando a realização dos objetivos globais da sociedade.
A interação propicia a combinação de esforços entre um conjunto de agentes na busca de soluções para problemas globais, pressupondo ações de coordenação de ao menos dois agentes.
Os aspectos a serem considerados no processo de interação de agentes são:
Entre quem a interação deve ocorrer;
Quando a interação deve ocorrer;
Qual deve ser o conteúdo da interação ou comunicação;
Como a interação deve ser realizada, definindo os processos e recursos a serem utilizados;
Porque a interação e necessaria;
Com base em que mecanismo sera estabelecida a compreensão mútua dinguagem comum, inter pretação baseada no contexto, etc).
A interação entre agentes pode ocorrer através de ações:
Lingüísticas explícitas (ou comunicação);
Ou Não lingüísticas (através da percepção de alterações no ambiente de atuação).
A capacidade de comunicação de um agente o habilita a intercambiar informações com outros agentes, sendo que esta se divide em:
Percepção (recepção de mensagens) e (ii) ação (envio de mensagens).
A comunicação pode permitir aos agentes coordenarem suas ações e comportamento, resultando em sistemas mais coerentes.
A comunicação pode ser feita através de um protocolo binário, que envolve um único remetente e um único destinatário, ou de um protocolo n-ário, que envolve um único remetente e varios destinatários (por exemplo, multicast e broadcast), sendo que nos dois casos é especificado por uma estrutura de dados contendo elementos basicos: (
a) remetente, (b) destinatário (s), (c) linguagem, (d) funções de codificação, e (e) ações a serem tomadas por o receptor.
Em a visão de Bond e Gasser, um sistema multiagente pressupõe coordenação entre um conjunto existente de agentes autônomos e inteligentes.
Fundamentalmente, esta envolvida a busca por uma funcionalidade neste sistema que permita que estes agentes possam coordenar seus conhecimentos, objetivos, habilidades e planos individuais de uma forma conjunta, em favor de a execução de uma ação ou da resolução de algum problema.»
Coordenação e o processo por o qual um agente raeiocina sobre suas ações locais e as ações (antecipadas) de outros agentes com o objetivo de garantir que a comunidade funcione de maneira coerentel «A definição de estratégias que conciliem os interesses individuais de cada agente para que as atividades relacionadas desenvolvam- se de modo coordenado e um dos aspectos fundamentais a serem considerados no projeto de Sistemas Multiagentes.
A necessidade de coordenação entre múltiplos agentes surge do fato de que:
Existem dependências entre as ações dos agentes (a ação de um agente é pré-requisito da ação de outro agente);
Nenhum individuo tem competência, recursos ou informação suficientes para resolver um para o blema completo de forma independente;
Onde Deve ser garantido o respeito a restrições globais a solução do problema;
Devem ser viabilizados procedimentos que garantam a harmonia quando de a execução de uma tarefa de forma conjunta por mais de um agente.
A coordenação é um fator vital para o funcionamento de um Sistema Multiagente, pois sem coordenação os benefícios advindos da resolução distribuída de problemas desaparecem e a comunidade pode degenerar numa caótica coleção de indivíduos que agem de forma ineoesa em relação a os objetivos globais do sistema.
Para isso, basta que um único agente tenha uma visão parcial ou imprecisa do sistema e que suas ações possam interferir nas ações de outros agentes ao inves de apoias- las.
Segundo Lesser e Corkill, os objetivos do processo de coordenação visam garantir que:
ICoerência significa quão bem um sistema comporta- se como uma unidade.
Todas as partes necessarias ao sistema estejam inseridas nas capacidades funcionais de ao menos um agente;
Os agentes interajam de maneira a permitir que suas atividades sejam desenvolvidas e integradas numa solução global;
Os membros da sociedade atuem com propósitos e consistentemente;
Todos esses objetivos sejam atingíveis dentro de as limitações computacionais impostas e dos re cursos disponíveis.
Durfee e outros identificam três fatores basicos que devem estar presentes para uma coorde nação com sucesso:
Existência de uma estrutura que permita aos agentes interagirem de forma preditiva;
Flexibilidade nas interações de tal forma que os agentes possam operar em ambientes dinâmicos e agir satisfatoriamente com uma visão parcial e imprecisa da sociedade;
Os agentes devem possuir conhecimento e capacidade de raciocínio suficientes para explorar esta estrutura e flexibilidade.
A maneira mais facil de garantir um comportamento coerente dentro de um Sistema Multiagente é implantar um agente que tenha uma perspectiva mais ampla do sistema, atuando como um coordenador que, reunindo informações sobre toda a sociedade.
Este agente seria responsável por criar planos e atribuir tarefas aos membros desta sociedade.
No entanto, esta não é uma abordagem pratica em sistemas reais por ser muito difícil criar um agente que mantenha- se informado sobre todas as intenções e crenças de todos os agentes do grupo.
Além disso, um coordenador centralizado tomaria- se um gargalo de comunicação, que degradaria a performance do sistema.
Adotaremos como conceito de &quot;gargalo «as situações de degradação de performance em que um processo é sobrecarregado por muitas requisições de outros que aguardam o atendimento destas.
Também devemos considerar o fato de que, nesta abordagem, uma falha do agente coordenador comprometeria o funcionamento de todo o sistema, apesar de que, neste caso, poderiam ser adotados mecanismos de tolerância a falhas onde outro agente poderia assumir o papel de coordenador.
A partir de isso, uma problemática apresentada para o projeto de Sistemas Multiagentes passa a ser a manutenção da coerência global sem um controle global explícito.
Segundo Oliveira, &quot;os agentes devem raciocinar a respeito de as ações, mas também sobre o processo de coordenação em si».
Muitas pesquisas tem seu foco no desenvolvimento de comunidades em as quais o controle e os dados são distribuídos.
Controle Distribuído significa que indivíduos têm um grau de autonomia na geração de novas ações e na decisão sobre qual tarefa executar primeiro.
Uma desvantagem advinda da distribuição do controle e dos dados é a dificuldade de se ter conhecimento sobre o estado global do sistema, que esta disperso através da comunidade, sendo que cada individuo possui uma visão parcial e imprecisa desta perspectiva.
Os principais requisitos para a coordenação são:
Comunicação entre os agentes;
Reconhecimento das interações potenciais entre planos;
Negociação entre os agentes.
Consideraremos três processos de coordenação fundamentais:
Ajuste mútuo e a forma mais simples de coordenação, pressupondo dois ou mais agentes que concordam em compartilhar recursos para atingir algum objetivo comum.
Supervisão direta prevê que uma relação ja tenha sido estabelecida entre dois ou mais agentes em a qual um agente mantém algum controle sobre outros.
Padronização estabelece uma relação entre dois ou mais agentes em a qual um agente mantém o controle sobre os outros estabelecendo procedimentos padronizados a serem seguidos por seus supervisionados em determinadas situações.
Utilizando- se destes tres processos de coordenação, e possível descrever sistemas de coordenação solis ticados a partir de o qual destacam- se:
Hwlerarquvlas: Baseado no processo de Supervisão Direta, este sistema aglutina agentes em pequenos grupos coordenados por um supervisor, dispostos de forma hierárquica, onde um supervisionado pertencente a um grupo pode atuar como supervisor de outro.
Este tipo de estratégia permite dividir um grupo grande em varios sub-grupos, distribuindo os fluxos de coordenação entre varios níveis de supervisão.
Mercados: Baseado no processo de Ajuste Mútuo, este sistema pressupõe que agentes controlam recursos escassos e concordam em compartilhas- los com outros agentes para atingir um objetivo comum.
A estes recursos são vinculados preços e, uma vez que um contrato foi fechado, há uma aceitação de que o comprador toma- se o supervisor do fomecedor.
Conceito de coordenação define aspectos gerais de interação entre agentes de forma a viabilizar a coesão entre seus comportamentos e ações em relação a os objetivos globais do sistema.
A partir de isso, apresenta- se uma taxonomia para os processo de coordenação (vide figura 2.2) que apresentas duas abordagens principais:
Cooperação: É a coordenação entre agentes Iião-antagônicos, ou seja, de interesses não conflitan tes..
Lux e Stemer consideram que a &quot;cooperação acontece quando varios agentes planejam e executam suas ações de uma forma coordenada», sendo que e requerida quando:
Oagente não consegue encontrar um plano local que contemple o objetivo;
O plano adequado ao objetivo envolve ações de outros agentes;
O agente considera que um plano pode ser melhor (de menor custo ou mais eficiente) do que um plano local;
Durante a fase de planejamento:
O agente encontra planos incompletos, que podem ser completados em cooperação com outros agentes;
O agente encontra eventos para os quais não esta habilitado a responder, mas sabe que outros agentes estão.
Os objetivos genéricos para a cooperação entre agentes são:
Diminuição do tempo de execução de uma tarefa através do paralelismo;
Aumento do escopo de tarefas executáveis através do compartilhamento de recursos;
Maior probabilidade de Finalização de uma tarefa em função de sua dupla incumbência;
A ser realizada possivelmente através de distintos metodos de execução;
Diminuição da interferência entre tarefas evitando interações prejudiciais.
Processo de planejamento constitui uma forma especializada do processo de cooperação que tem como produto um conjunto de atividades organizados com um curso de ação definido, em que estas atividades são distribuídas entre agentes capacitados a executas- las.
Este planejamento pode ocorrer de duas formas:
Centralizada: Um único agente constrói o plano;
Distribuída: Pressupõe que o plano e construído por mais de uma agente, sendo considerada quando um único agente não possui uma visão global das atividades do grupo.
Planejamento em SMA apresenta questões sobre a forma através de a qual um agente poderia formular um curso de ação levando em conta as ações a serem executadas paralelamente por outros agentes, descobrirocurso de ação de outros agentes e identificar de que forma um agente poderia comprometer- se com seus proprios modelos.
Um modelo de planejamento distribuído deve considerar a concorrência existente entre os agentes num ambiente compartilhado, e as alterações ocorridas no ambiente entre o planejamento e a execução dos planos resultantes deste.
Ajustes nos planos de um agente podem ser requeridas por resultados de suas proprias ações, resultados de ações de outros agentes, mudanças no ambiente, mudanças de obje tivos, ou alterações na percepção do agente quanto a o contexto multiagente em o qual esta inserido.
Segundo Bond e Gasser, alinhar o comportamento de agentes em direção a objetivos comuns, com a divisão explícita de tarefas, pode viabilizar' a realização de grandes objetivos.
O autor afirma que tecnicas como planejamento centralizado para múltiplos agentes, reconciliação de planos, planejamento distribuído, análise organizacional, são caminhos que auxiliam o alinhamento das atividades dos agentes por determinar tarefas após raciocinar sobre as consequências destas em certas organizações.
Segundo Agre e Chapman, a utilização de planos pode ser vista de duas maneiras:
Plano como Programa:
O uso de plano é a execução de determinado procedimento, sendo que esta visão implica a execução de planos de forma independente do domínio.
A construção de planos pode ser independente ou dependente do domínio, algorítmica ou baseada em casos, formalmente correta ou heurística.
Em esta visão, o plano pode ser decomposto em ações primitivas que podem ser simplesmente executadas através de um dispositivo independente do domínio.
As razões para duvidar da visão de plano como programa são:
Possui problemas intrataveis computacionalmente;
E inadequada para um mundo caracterizado por eventos imprevisíveis, tais como as ações de outros agentes;
Requer que planos sejam muito detalhados;
Falha ao tratar problemas de relacionamento do texto do plano para a situação concreta.
Planos como Comunicação:
O uso de plano é seguir instruções em linguagem natural, sendo que um plano não determina diretamente as ações de um agente.
Ao invés de isso, um plano é um recurso que o agente utiliza para decidir o quê fazer.
Em esta visão, resolver qual atividade que um plano sugere requer um esforço interpretativo contínuo.
A única situação completa conhecida e a situação inicial passada ao planejador.
Durante a execução, as circunstancias que aparecem podem somente determinar ramificações condicionais ou causar retomo do controle ao planejador se algo esta obviamente errado.
A negociação representa um papel fundamental em atividades cooperativas dentro de sociedades huma nas, permitindo que pessoas resolvam conflitos que possam interferir com comportamento cooperativo Processo de negociação atua sobre o melhoramento de concordância acerca de &quot;pontos de vista comuns ou planos através de compartilhamento de estruturas de informações relevantes», ocorrendo entre agentes com objetivos diferentes em o qual uma &quot;decisão conjunta é alcançada por dois ou mais agentes, cada um tentando alcançar seus objetivos individuais».
Os principais elementos utilizados por os agentes envolvidos no processo de negociação são:
Linguagem; Protocolo, que define a maneira através de o qual eles negociam;
Processo de decisão, que determina suas posições, concessões, e critérios utilizados para acordos.
As abordagens de negociação utilizadas podem ser:
Centradas no ambiente:
Foca o problema de &quot;como podem ser desenvolvidas as regras do ambiente para que os agentes em ele envolvidos, independente de suas origens, capacidades, ou intenções, interajam produtivamente e razoavelmente?».
Em este caso, o mecanismo de negociação resultante deve possuir as seguintes propriedades:
Eficiência: Os agentes não devem desperdiçar recursos para chegar a um acordo;
Estabilidade: Nenhum agente deve ter um incentivo para desviar das estratégias acordadas, Simplicidade:
Deve impôr baixas demandas computacionais e de largura de banda2 sobre os agentes;
Distribuição: Não deve requerer um tomador de decisões centralizado;
Simetria: Não deve haver diferenciação no tratamento dos agentes por razões arbitrárias ou inapropriadãs.
Centradas no agente:
Assume que os agentes são economicamente racionais, oconjunto de agentes deve ser pequeno, necessitam ter uma linguagem e abstração do problema comuns, e tem que alcançar uma solução comum.
A partir desses pressupostos, foi desenvolvido um protocolo de negociação unificado (vide), em o qual agentes criam um acordo, que constitui um plano conjunto entre agentes que satisfarão todos os seus objetivos, cuja utilidade para um agente e a quantidade que ele pagará subtraindo o custo do acordo.
Agentes discutem um conjunto de negociações, que e o conjunto de todos os acordos que têm uma utilidade positiva para todo agente.
De o processo de negociação, tres situações podem surgir:
Conflito: O conjunto de negociações esta vazio;
Compromisso: Agentes preferem trabalhar de maneira isolada, mas se isto não for possível, chegarão um acordo negociado;
Cooperativo: Todos acordos no conjunto de negociações são preferidos por ambos agentes prioritariamente a realização seus objetivos de formã isolada.
Uma das abordagens propostas mais utilizadas em SMA e o protocolo de redes de contrato, que é inspirado nos processos de contratação existentes em organizações humanas.
Em este processo, agentes coordenam suas ações através de contratos para cumprir seus objetivos específicos, onde existe um agente que atua como gerente, decompondo seus contratos em subcontratos a serem realizados por outros potenciais agentes empreiteiros.
De a perspectiva do gerente, o processo consiste em:
Anunciar uma tarefa que precisa ser executada;
Receber e avaliar ofertas de empreiteiros em potencial;
Concessão de um contrato para um empreiteiro apropriado;
Receber e sintetizar resultados.
A partir de a perspectiva do empreiteiro, o processo e:
Recebe anúncios de tarefa;
Avalia a própria capacidade de resposta;
Responde (recusa, oferta);
Executar a tarefa se a oferta enviada foi aceita;
Enviar resultados ao gerente.
Protocolo de rede de contratos oferece a vantagem de degradação suave do desempenho.
Se um empreiteiro não esta apto a prover uma solução considerada satisfatória, o gerente pode procurar outro empreiteiro potencial para a tarefa.
Uma taxonomia pode ser utilizada para classificar as possíveis formas de dispor os relacionamentos existentes entre os agentes:
Nivelada: Implica que cada agente possa contactar diretamente qualquer dos outros agentes.
Desta forma, podem criar estruturas de maneira dinâmica para realizar uma tarefa específica.
Agentes Compostos por Agentes:
Pressupõe a existência de alguns agentes que são componentes de outros agentes.
Sistemas Multiagentes Compostos por Sistemas Mnltiagentes:
Considera um SMA como sendo um agrupamento de vários módulos que, por sua vez, são vistos isoladamente como SMAs.
É possível distinguir três atributos principais dos protocolos de comunicação que são relevantes para um SMA:
Simetria: Uma característica dos protocolos cliente/ servidor e o fato de que eles implicam assimetria entre as entidades comunicativas, ou seja, um esta no controle da comunicação enquanto a outra parte pode somente responder as questões requisitadas, e não pode iniciar a comunicação.
Projetistas de SMA têm compreendido que tais assimetrias não são apropriadas para estes sistemas, e implementado significados simétricos de comunicaçao.
Recipientes de Mensagem: Mensagens numa rede podem ser enviadas para um único endereço, múltiplos endereços (mnlticast) e para todos os endereços de um ambiente (broadcast).
Em sistemas abertos, a utilização de broadcast facilita o envio de mensagens, porém o fato de se enviar mensagens irrelevantes a grande parte dos agentes pode incorrer num trafego desnecessário na rede e uma conseqüênte perda de performance.
Tipo de Conexão:
Em relação a o tipo de conexão a ser utilizada entre agentes de um SMA, um protocolo de comunicação pode ser classificado em orientado a conexão ou sem conexão.
Uma comunicação orientada à conexão e preferida quando tarefas dependentes são executadas paralelamente por mais de um agente, e coordenação é necessaria durante a execução.
Um SMA também pode ser classificado quanto a o seu nível de abertura em relação a o ingresso de novos agentes:
Dinâmica: Isto significa que agentes podem ingressar e sair do sistema a qualquer momento e sem a necessidade de adotar qualquer procedimento de notificação dos outros agentes.
Esta característica permite uma maior flexibilidade de adaptação do sistema em relação a mudanças no ambiente.
No entanto, serviços e computacão adicionais são requeridos para suportar o fato de que agentes podem aparecer e desaparecer de forma imprevisível, sendo que um mecanismo de localização de agentes robusto toma- se necessário.
Estático: Ainda considera- se aberto, porém menos dinâmico, o caso onde agentes podem ingressar no sistema sem remicias- lo, mas todos os agentes sào notificado de tal ingresso, ou todos eles mantêm uma lista de prováveis agentes a ingressar.
Of-Line: O tipo mais restrito de abertura e a que permite o ingresso de novos agentes somente com o sistema desativado, através da desativação do sistema, adicionando agentes, atualizando algumas informações de conexão, e remiciando o sistema.
Alguns SMA necessitam de serviços de infraestrutura para que possam funcionar corretamente.
Estes serviços podem ser:
Serviço de nomes de agente (pex:
DNS, na Intemet), que evita que dois agentes possuam o mesmo nome, evitando confusões em conseqiiência disto.
Serviço de localização de agente (pex:
Serviço de páginas amarelas), que é necessário quando a existência ou disponibilidade dos agentes nào são de conhecimento comum.
Este tipo de serviço (por exemplo, brokering ou matchmaking) e, algumas vezes implementado de forma centralizada, o que facilita a implementação e a manutenção da base de localização, porém Sistema toma- se mais vulnerável e cria um único ponto de falha.
De outra forma, mecanismos de localização distribuídos são mais complicados de se projetar, implementar e manter, porém mais confiável e robusto.
Serviço de segurança, que e mais adequado a SMA aberto quando não se tem certeza sobre a verdadeira identidade e a confiabilidade de outros agentes.
Em estes casos, mecanismos de segurança podem reduzir os riscos derivados desta incerteza.
Estes serviços podem introduzir o conceito de autoridades de certificação eletrônicos, que são emissores de certificados de autenticidade tidos como confiaveis.
Isto gera, inevitavelmente, um overhead de computação e de comunicação, podendo, em alguns casos, representar um &quot;gargalo «do sistema.
Serviços de mobilidade, que é requerido por alguns sistemas;
Jara viabilizar o funcionamento de agentes móveis.
A maneira mais Comum de prover este serviço e através de servidores de mobilidade (também chamados agent dock), que permanecem em execução nas maquinas onde é permitida a chegada de agentes móveis.
Um aspecto importante a ser considerado é a robustez do sistema, onde a falha de um agente Iião necessariamente implica uma falha de todo o SMA.
A robustez é viabilizada através de capacidades replieadas, ou seja, existem múltiplos agentes com as mesmas capacidades ou capacidades similares, o que permite que agentes possam assumir responsabilidades de outros agentes que estão indisponíveis.
Sistemas Multiagentes em Organizações Empresariais.
Devido a o grande crescimento na utilização de computadores em redes pode- se tomar a Intemet como um importante exemplo pratico deste fenômeno, onde a informação esta distribuída através dos diversos nodos que a compõe, situações onde uma entidade computacional possui todo o conhecimento necessário para resolver problemas sem o auxílio de outras estão tomando- se cada vez mais raras.
Problemas como o aumento da complexidade dos sistemas e a necessidade de tratamento de grandes massas de dados para a resolução de problemas tem levado pesquisadores a buscar metodos de resolução baseados em arquiteturas distribuídas, Isso tem acontecido porque as arquiteturas distribuídas Verri se mostrado mais intuitivas para resolução de problemas onde a própria natureza do problema é Distribuída.
Pode- se pensar na aplicação de um modelo monolítico para a resolução de problemas numa realidade distribuída, onde os eventos ocorrem concorrentemente.
No entanto, isto requer uma etapa intermediária de mapeamento complexa que, muitas vezes, resulta num algoritmo não-computável, De a mesma forma, a distribuição pode levar a descoberta de algoritmos computacionais que talvez não teriam sido descobertos com uma abordagem centralizada.
Em outros casos, como na negociação entre empresas independentes, uma abordagem centralizada e inviável, já que cada empresa deseja manter suas informações num ambito privado por razões mercadológicas.
Sendo um agente uma entidade que encapsula conhecimento sobre algum domínio, e necessário agrupar agentes que possuam parte do conhecimento envolvido na estratégia de resolução de um problema e que, a partir de isso, interajam com o objetivo de complementarem suas habilidades.
Assim, da mesma forma que no mundo real existem empresas com funcionários possuidores de diferentes habilidades e que, utilizando essas habilidades, desenvolvem parte das atividades necessarias ao processo produtivo, podemos compor uma sociedade de agentes onde para cada agente seja alocada um subconjunto das habilidades requeridas por a estratégia de solução e onde a cada um seja designado parte das tarefas a serem cumpridas, de acordo com sua disponibilidade de recursos (computacionais, materiais, tempo, etc).
Podemos distingüir duas classes principais de sistemas com múltiplos agentes:
Sistemas de Resolução Distribuído de Problemas em os quais os agentes envolvidos são explicitamente projetados para, de maneira cooperativa, atingirem um dado objetivo, considerando- se que todos os eles são conhecidos à priori e supondo que todos são benevolentes, existindo desta forma confiança mútua em relação as suas interações;
E Sistemas Abertos, em os quais os agentes não são necessariamente projetados para atingirem um objetivo comum, podendo ingressar e sair do sistema de maneira dinâmica.
Em este caso, a chegada dinâmica de agentes desconhecidos precisa ser levada em consideração, bem como a possível existência de comportamento não benevolente no curso das interações.
Dentro de a classe de Sistemas Abertos, estão inseridos os SMA.
Em este tipo de sistema investiga- se o comportamento de um conjunto de agentes autônomos, possivelmente pre-existentes, que interagem objetivando a resolução de um problema que esta além de as capacidades de um único indivíduo.
Desta forma, o comportamento global do sistema deriva da interação entre os agentes que fazem parte do sistema.
A partir de isso, e necessário que estes agentes possam coordenar seus conhecimentos, objetivos, habilidades e planos individuais de uma forma conjunta, em favor de a execução de uma ação ou da resolução de algum problema onde se faça necessaria a cooperação entre os agentes.
Em estes casos, diz- se que o agente exibe um comportamento social.
Moulin e Chaib-Draa evidenciam as características que constituem vantagens significativas dos SMA sobre um solucionador de problemas monolítico, de entre elas:
Maior rapidez na resolução de problemas através do aproveitamento do paralelismo;
Diminuição da comunicação por transmitir somente soluções parciais em alto nível para outros agentes ao invés de dados brutos para um lugar central;
Mais flexibilidade por ter agentes de diferentes habilidades que são dinâmicamente agrupados para resolver problemas;
E Aumento da segurança por a possibilidade de agentes assumirem responsabilidades de agentes que falham.
A aplicação da tecnologia de agentes na concepção de Sistemas de mformação para organizações empresariais e justificada quando o problema possui as seguintes características:
O domínio envolve distribuição intrínseca dos dados, capacidades de resolução de problemas e responsabilidades;
Necessidade de manter a autonomia de subpartes, sem a perda da estrutura organizacional;
Complexidade nas interações, incluindo negociação, compartilhamento de informação e coorde nação;
Impossibilidade de descrição da solução do problema a priori, devido a possibilidade de perturbações em tempo real no ambiente (pFalhas de equipamento) e processos de negócio de natureza dinâmica.
Os problemas encontrados em aplicações empresariais são tipicamente caracterizados por a ocorrência de eventos de perturbação (p..
Cancelamento de contratos, falhas em equipamentos de produção e atrasos no fomecimento de insumos) que refletem em alterações na agenda de produção global, adiamento do atendimento de pedidos, de entre outras coisas.
Estes fatores criam uma complexa rede de interações entre os elementos do sistema, o que contribui para o aumento da complexidade da aplicação.
A Figura 3.1 mostra um exemplo de sistema complexo composto por um conjunto de elementos interconectados através de uma rede de interações.
Em este caso, a principal vantagem obtida a partir de a adoção do paradigma OA no desenvolvimento de um sistema éonível de abstração, que organiza idéias a partir de elementos análogos aos elementos do mundo real, mantendo a discussão no nível de agentes e interações.
A finalidade do processo de engenharia de software é prover estruturas e técnicas para tratar mais facilmente esta complexidade.
No entanto, esta complexidade geralmente apresenta caracteristicas importantes:
A complexidade toma forma hierárquica, ou seja, o sistema é composto de sub-sistemas inter relacionados que, por sua vez, apresentam também uma hierarquia, e assim por diante;
A escolha de quais componentes no sistema são primitivos e geralmente arbitrária, e esta definição depende muito dos objetivos que determinamoangulo de visão através do qualoobservador efetua a análise do problema;
A evolução ocorre mais rapidamente em sistemas hierárquicos do que em não-hierárquicos de mesmo tamanho, ou seja, sistemas complexos resultarão do processo evolutivo de sistemas simples mais rapidamente se houverem formas estáveis intermediárias;
Epossíiiel fazer a distinção entre interações entre sub-sistemas e interações dentro de sub-sistemas, Que permite tratar os sub-sistemas quase como se fossem independentes um do outro.
As principais ferramentas existentes para o gerenciamento desta complexidade são:
Decomposição: E a técnica mais basica para resolução de grandes problemas -- comumente conhecida por o jargão &quot;dividir para conquistar «-- que trata de dividir- los em problemas menores e, potencialmente, mais facilmente gerenciaveis.
Abstração: E uma tecnica que visa considerar apenas os detalhes e propriedades mais relevantes ao escopo do problema em questão com o objetivo de gerar um modelo simplificado da realidade.
Organização: Trata de identificar' e gerenciar os intevrelacioriameritos entre os componentes de resolução do problema.
Considerando a natureza do problema em questão, a maneira através de a qual estas ferramentas são implementadas para sua resolução varia entre os diferentes paradigmas de software.
Isso leva a concluir que a adequação de um dado paradigma a resolução de um dado problema depende da forma por a qual este paradigma implementa estas ferramentas.
Komfield e Hewitt postulam que a busca cooperativa resulta no fenômeno da &quot;implosão Combinatória», que viabiliza a substituição de soluções cuja complexidade resulte numa explosão combinatória, inviabilizando o processo do ponto de vista computacional, por soluções descentralizadas e distribuídas.
As tecnicas que adotam uma abordagem orientada a agente são bem adaptadas para o desenvolvimento de sistemas complexos por as seguintes razões:
As decomposições da orientação a agentes são um caminho efetivo para particionar a problemática de um sistema complexo;
As abstmções da orientação a agentes são uma abordagem natural para modelar sistemas com plexos;
A filosofia orientada a agentes para identificar e gerenciar relacionamentos organizacionais e apro priada para a representação das dependências e interações que existem num sistema complexo.
Projeto de SMA.
Em este capítulo, primeiramente serão apresentados os requisitos para a etapa de projeto de SMA no domínio de organizações empresariais.
Logo após, serão apresentados e discutidos alguns dos trabalhos relacionados a etapa de projeto de SMA.
Modelo derivado da etapa de a11alise provê um entendimento dos requisitos de usuario, que são a base para a construção do sistema, uma vez que exprimem todo o conjunto de funcionalidades que devem estar presentes no mesmo.
Em a etapa de projeto é dado forma ao sistema e definido o seu desenho, atendendo esses requisitos.
A parte fundamental da etapa de projeto é a definição da arquitetura do sistema.
Esta determina a maneira por a qual as funcionalidades definidas na etapa de análise de requisitos serão de fato implementadas no sistema.
A arquitetura é a fundamentação do desenvolvimento, atuando como referencial para os estágios posteriores, devendo respeitar as definições de requisitos.
Segundo, a arquitetura do software determina as decisões significantes sobre:
A organização do sistema de software.
Os elementos estruturais do sistema e seus inter-relacionamentos.
A composição dos elementos estruturais e comportamentais em subsistemas progressivamente maiores.
O estilo arquitetural que guia esta organização:
Os elementos e suas interfaces, suas colaborações, e sua composição.
Ainda de acordo com, o modelo resultante do processo de análise e uma entrada essencial ao projeto.
Quando de a definição da arquitetura, juntamente com os requisitos informacionais e funcionais do domínio, são consideradas restrições de desempenho, tempo de resposta, confiabilidade e eficiência, que determinam parametros para que o sistema possa ser considerado útil, além de aspectos de cunho gerencial como reuso, compreensibilidade, restrições econômicas e tecnológicas.
De acordo com Pressman, na saída da etapa de projeto do sistema estão presentes os seguintes elementos:
Modelo de dados, que foca a definição das estruturas de dados;
Modelo arquitetural, que define a relação entre os elementos estruturais do sistema;
E modelo procedural, que transforma elementos estruturais numa descrição procedural do sistema.
A etapa de projeto do sistema consiste da integração de agentes sobre os quais não se têm conhecimento sobre a arquitetura intema, mas de os quais só se conhece quais serviços podem prestar.
Estes serviços são agrupados em papeis, que representam os varios perfis funcionais que o agente pode desempenhar na sociedade.
A cada um destes papéis esta associado um subconjunto de serviços que podem ser prestados por o agente, compondo a sua interface E. Uma interface e uma relação de serviços que podem ser prestados a sociedade.
E através da interface que o agente apresenta suas capacidades funcionais a sociedade.
Segundo, as interfaces devem ser Iião-ambíguas de forma a serem compreendidas sem conhecimentos específicos sobre sua forma de operação.
Os serviços são representados através de assinaturas.
Utilizaremos uma adaptação do conceito de assinatura presente no paradigma OO, que a define como sendo um identificador e um conjunto de argumentos relacionados a uma operação.
Consideraremos que assinatura refere- se não a uma operação e sim a um serviço disponibilizado por o agente.
Em este caso, uma assinatura tem como objetivo identificar um serviço que seja objeto de discurso num ato de fala, maneira por a qual se processa a comunicação entre os agentes.
A ambigüidade ocorre quando uma mesma assinatura e dada a dois serviços semanticamente distintos.
Diferentemente da proposta metodológica apresentada em, que considera que a definição das interfaces e realizada na etapa de projeto, consideraremos que estas devem ser definidas na etapa de análise.
Isso ocorre porque as etapas de projeto do agente e da sociedade consideram as interfaces como elementos de entrada e, considerando que estas duas etapas devem ser interdependentes, devemos estabelecer as interfaces numa etapa anterior as duas para que ambas possam utilizas- las como elemento de entrada.
Uma maneira de se representar a etapa de projeto de um SMA (vide figura 4.2) e considerar como entrada os requisitos funcionais e de desempenho juntamente com as interfaces dos agentes.
Como saída deste processo temos a definição de um modelo arquitetural que integra os serviços prestados por os agentes de forma a viabilizar a implementação das soluções definidas no modelo de análise num sistema computacional real.
Esta arquitetura deve respeitar as restrições de desempenho especificadas para que o sistema possa ser considerado útil.
O modelo de dados e modelo procedural são substituídos por o modelo de arquitetura intema do ageI1te, definido na etapa de projeto do agente (vide figura 4.3), que tem como objetivo implementar um subconjunto das capacidades funcionais definidas no modelo de análise.
Como já dito anteriormente, utilizaremos extensões da UML como liI1guagenI de representação dos modelos.
O Unified Process define um conjunto de atividades para o desenvolvimento de software utilizando- se da linguagem de modelagem UML.
Este conjunto de atividades é incremental, ou seja, o modelo resultante de uma etapa constitui a entrada da próxima etapa que lhe acrescenta elementos, que tomam o projeto cada vez mais detalhado.
Adotaremos o Unified Process como sendo um ponto de partida para a definição de um conjunto de atividades para desenvolvimento da etapa de projeto de um SMA.
Considerando o conjuI1to de modelos definidos por a UML, uma arquitetura consiste de:
Lista de casos de uso, que descrevem os requisitos;
Modelo de domínio, que captura o entendimento acerca de o negócio e constitui o ponto de partida para a definição das entidades essenciais do domíI1 i0 a serem consideradas;
Plataforma tecnológica, que descreve as peças essenciais da tecnologia de implementação e a maneira como elas são integradas.
Em a etapa de projeto de um SMA, é Iiecessário considerar alguns fatores não abordados na fase de análise, uma vez que essa ocupa- se apenas da definição das estratégias de solução a serem utilizadas.
Estes fatores, embora não façam parte da definição da estratégia de solução em si, devem ser considerados para que esta estratégia seja implementável de fato.
Estes fatores serão chamados requisitos de projeto, que serão apresentados a seguir.
Um ambiente em o qual entidades detem parte do controle das tarefas do sistema toma a comunicação entre estas a unica via de coordenação das ações para que se possa obter resultados através da cooperação, negociação e planejamento distribuído.
Esta descentralização do controle toma um SMA um ambiente intrinsecamente distribuído.
Esta característica permite que a arquitetura de um SMA seja aplicável a um ambiente distribuído de processamento.
A utilização de ambientes distribuídos é necessaria quando apenas um computador não possui capacidade de processamento suficiente para a execução de todos os agentes de software do sistema, ou quando existe a necessidade de instalar- se equipamentos em lugares fisicamente distantes.
A isto somase a atual tendência de adoção de equipamentos de baixo poder de processamento interconectados em rede, ao inves de alocar todo o processamento a um unico computador mais poderoso, pois a primeira altemativa apresenta um custo econômico menor em relação a segunda.
As características deste tipo de ambiente acrescentam a etapa de projeto do sistema a necessidade de definição de mecanismos para alocação de agentes a nodos processadores da rede.
A a medida em que novos agentes podem ingressar e sair do sistema em tempo de execução, faz- se necessaria a existência de mecanismos para controle do ingresso e saída de agentes do SMA.
Em sistemas distribuídos, estes mecanismos devem considerar a possibilidade de um agente ingressar em qualquer um dos nodos da rede.
Em este caso, este novo agente deveria tomar- se acessível aos outros agentes do sistema.
Isto requer um mecanismo dinâmico para localização de agentes, cuja forma através de a qual e implementado e definida na etapa de projeto da sociedade multiagente.
Em sistemas empresariais, normalmente considera- se a utilização de uma linha de tempo para agenda mento das etapas do processo produtivo.
Como no caso de sistemas de alocação de recursos, que trabalham com agendamento de tarefas, este tipo de mecanismo e essencial, pois todo o seu processo de escalonamento gira em tomo de eventos que agregam informações de tempo, tais como início e término.
Desta forma, existe a necessidade de prover mecanismos que disponibilizem informações temporais.
Quando os agentes envolvidos estão dispersos entre os nós de um ambiente distribuído, existe a necessidade de se ter mecanismos de sincronização entre os relógios de cada um desses nós para que os agentes interpretem da mesma maneira as informações de tempo incluídas nas mensagens, a ser implementado através do sistema operacional sobre o qual o SMA ira funcionar.
Em o nicho empresarial, existe a necessidade de integração do SMA com o sistema de informações já existente para que o mesmo possa utilizar as informações existentes na base de dados corporativa, bem como atualizar- lo com resultados obtidos a partir de o processamento no SMA.
Em este caso, partindo- se do pressuposto que os agentes existentes comunicam- se apenas com outros agentes, surge a necessidade de se ter agentes mediadores para o acesso a base de dados corporativa.
Estes agentes devem ser especificados na etapa de projeto da sociedade.
Embora a interferência humana seja, de maneira ideal, a mínima possível, dificilmente as variaveis envolvidas num processo empresarial são consideradas em sua totalidade, também existindo a necessidade de se efetuar requisições diretamente ao SMA.
Desta forma, surge a necessidade de tratamento de intervenções feitas por parte de o usuario, fato que toma necessaria a definição de artefatos para a elaboração deste tipo de interface durante a etapa de projeto da sociedade.
Em um SMA, o conhecimento sobre um problema global esta geralmente disperso entre os agentes da sociedade.
Cada um dos agentes envolvidos na resolução do problema possui um conjunto de resultados parciais de seu próprio processamento.
Em este caso, para que a solução possa ser visualizada em sua completude, e necessário consolidar os resultados parciais.
Uma vez implementado num ambiente computacional, e necessário que.
Jam disponibilizados meca nismos para depuração do funcionamento da sociedade.
Esses mecanismos devem fomecer informações sobre o status de interações e resultados parciais, e de tomada de tempo, que fomeçam subsídios para avaliação do funcionamento do SMA.
Tendo em vista estes requisitos, e necessário ter- se artefatos para que sejam representados na etapa de projeto do SMA.
De entre as propostas para modelagem de um SMA apresentadas, poucas abordam aspectos referentes a etapa de projeto.
A seguir, apresentaremos considerações sobre trabalhos que contemplam a etapa de projeto, procurando identificar os modelos produzidos e o processo de construçao.
O objetivo desta seção é verificar a constribuição destes trabalhos em direção a o processo de projeto de SMA para organizações empresariais, conforme os requisitos previamente identificados neste capítulo.
Processo de modelagem OA denominado Metodologia Gaia objetiva derivar de um modelo de análise um modelo com baixo nível de abstração sobre o qual possam ser aplicadas tecnicas de projeto tradicionais (incluindo tecnicas OO).
Esta proposta apresenta dois modelos para a fase de análise:
Modelo de Papéis:
Identifica os papeis existentes no sistema, sendo estes descrições abstratas de uma função pretendida por uma entidade.
Este modelo descreve dois elementos básicos:
Permissões/ direitos associados ao papel, que relacionam o tipo e a quantidade de recursos que podem ser explorados;
E responsabilidades do papel, que determinam a funcionalidade do agente dentro de a sociedade, definida por suas responsabilidades.
Modelo de Interação: E constituído de um conjunto de definições de protocolo, um para cada tipo de interação entre papeis.
As definições de protocolo consistem da definição dos seguintes atributos:
Propósito, que e uma breve descrição da natureza da interação;
Iniciador, que e o papel responsavel por iniciar a interação;
Respondedorl, papel com o qual o iniciador interage;
Entradas, que e a informação utilizada por o iniciador enquanto executando o protocolo;
E saídas, que e informação fomecida por o/ para o respondedor durante o curso de interação.
Desta forma, o que de fato se almeja e garantir que aspectos como estrutura, organização, cooperação e interação sejam definidos no nível de modelagem.
Estes aspectos dependeriam da forma por a qual a rede de relações entre os agentes estaria estabelecida.
Devido a a autonomia ser uma característica intrínseca ao proprio conceito de agente, a forma por a qual as interações se processam dentro de o sistema depende fundamentalmente das atitudes tomadas por cada um dos agentes que o compõem, sendo que a garantia da coesão do grupo depende fundamentalmente dos objetivos adotados por cada um de seus indivíduos, que refletem seus desejos e crenças.
A partir de isso, se a etapa de projeto do sistema tem por objetivo viabilizar a aplicação de diretrizes definidas durante o processo de modelagem, projetar um SMA consiste em definir quais tipos de agentes o constituirão, oque passa por a definição de estereótipos (ou papéis) para cada um de eles.
Estes estereótipos são definidos por três modelos:
Modelo de Agente:
Define os tipos de agente que irão fazer parte do sistema, e as instâncias de agente que serão instanciadas a partir destes;
Modelo de Serviços: Define os principais serviços que serão atribuídos a cada tipo de agente;
Modelo de Conhecimento: Define conhecimentos para cada tipo de agente.
Os modelos de serviço e de conhecimento definem os tipos de agente existentes no SMA.
O modelo de agente define o conjunto destes tipos de agente e suas instâncias.
A metodologia Mas- COMMONKADS e uma extensão multiagente da principal metodologia estruturada de suporte à engenharia do conhecimento, chamada CommonKADS, e propõe os seguintes modelos:
Modelo do Agente (AM):
Especifica as características do agente, tais como capacidade de raciocínio, percepção e ação, serviços, grupos e hierarquias do agente (modeladas no modelo organizacional).
Modelo de Tarefas (Tm):
Descreve as tarefas que o agente pode realizar.
Modelo de Habilidades (Em):
Descreve o conhecimento que os agentes necessitam para atingir os seus objetivos.
Modelo de Organização (OM):
Descreve a organização em a qual o SMA esta sendo introduzido e a organização social da sociedade de agentes.
Modelo de Coordenação (CoM):
Descreve as conversações entre agentes (interações, protocolos e capacidades requeridas).
Modelo de Comunicação (Cm):
Descreve detalhes das interações entre humanos e agentes de software, e fatores humanos a serem considerados no desenvolvimento de interfaces de usuario.
Modelo de Projeto (DM):
Coleta os modelos anteriores e consiste de três subniodelos:
Projeto da Rede:
Descreve aspectos relevantes da infraestrutura da rede de agentes.
Esta infraestrutura pode fomecer algumas facilidades para os agentes:
Facilidades de Rede:
Serviço de nomes de agente, paginas amarelas (yellow pages), serviço de registro, nível de segurança, encriptação e autenticação, protocolo de transporte e aplicação, serviço de contas, etc..
Facilidades de Conhecimento:
Servidores de ontologia, tradutores de linguagem de representação de conhecimento, etc..
Facilidades de Coordenação:
Protocolos e primitivas de coordenação, servidores de protocolo, facilitades de gerenciamento de grupo, facilidades para assistência em coordenação de objetivos compartilhados, agentes de policiamento para detecção de compor tamentos indesejados e controle de utilização de recursos compartilhados, etc..
Projeto do Agente:
Divide ou compõe agentes de análise, de acordo com criterios pragmati cos, e seleciona a arquitetura mais adequada para cada agente.
Projeto da Plataforma:
Seleciona a plataforma de desenvolvimento de agentes para cada arquitetura.
Desta forma, a etapa de projeto do SMA é o refinamento dos modelos de análise através da definição de facilidades de infraestrutura, definição das arquiteturas dos agentes e seleção da plataforma de desenvolvimento de agentes.
Os diagramas de UML (Unified Modelling Language) foram inicialmente projetados para suportar' a descrição dos varios aspectos inerentes a sistemas OO.
Em a visão de, um agente é uma extensão do conceito de objeto, o que permite explorar extensões de linguagens de modelagem OO com o objetivo de adaptas- las as características do paradigma OA.
A partir de isso, o autor propõe extensões à UML, descrevendo os requisitos mais comuns para modelagem de agentes e SMAs, crianco assim a AUML (Agent UML).
A proposta inicial da AUML é representar protocolos de interação de agentes -- AIP (Agent Interactio Protocol) -- descrevendo um padrão de comunicação como sendo irma seqüência de mensagens permitica entre agentes e as restrições sobre o conteúdo destas mensagens.
Em os diagramas da AUML, os fluxos ce controle e informação são considerados atos de comunicação (mensagens).
O protocolo como um to o e tratado como sendo irma entidade, colocando- se um diagrama que represente o fluxo de mensagens entre os agentes (diagramas de seqüência, de colaboração, de atividade e de estados) dentro de um pacote -- representados através de packages da UML -- constituindo uma agregação conceitual seqüências de interação.
A partir de isso, o protocolo pode ser tratado como um padrão generalizado para problemas de domínios analogos através da especificação de parâmetros de entidade dentro o pacote -- representados através de templates de pacotes da UML -- que são particularizados quando o pacote e instanciado.
Isto fomece soluções reutilizaveis que podem ser' aplicadas para varias situações onde um mesmo tipo de protocolo e requerido.
No caso de os diagramas de interação, são representados padrões estruturais de interações entre os agentes.
O diagramas de seqüência e o diagrama de colaboração são subtipos do diagrama de interação, sendo semanticamente equivalentes.
A disposição dos elementos graficos do diagrama de seqüência enfatiza a seqüência cronológica de comunicações, enquanto no diagrama de colaboração são enfatizadas as associações entre agentes, onde a seqüência das interações é representada através da numeração das mensagens.
Diagrama de atividade e o diagrama de estados dão ênfase ao fluxo de processamento.
O diagrama de atividade representa operações e os eventos que ativam estas, diferindo dos diagramas de interação por representar de maneira explícita as linhas de execução dos liuxos de controle, o que e particularmente útil para protocolos de interação complexos envolvendo paralelismo de processamento.
Diagramas de estado não são normalmente utilizados para expressar protocolos de interação, pois tem uma visão centrada nos estados, ao invés de uma visão centrada no agente ou no processo.
Este tipo de diagrama é melhor aplicável como um mecanismo de restrições para o protocolo, sendo incorporado aos agentes para que as restrições sejam conhecidas.
Diagrama de implantação representa a disposição física dos agentes através de um grafo, representando os nodos da rede através de vértices e os canais físicos de comunicação através de arestas.
Além disso, e apresentado um estereótipo para representação da mobilidade de agentes.
Visualiza a etapa de projeto como uma etapa de definição dos tipos de agentes, porém não é feita nenhuma consideração acerca de a arquitetura do SMA.
Apresenta uma lista de requisitos genéricos para projeto de um SMA, porém não apresenta nenhum tipo de solução para representação dos mesmos.
Apresenta extensões aos diagramas da UML, incluindo uma extensão do diagrama de implantação de UML que tem como objetivo representar a localização física dos agentes numa rede.
Em nenhum destes trabalhos, ha uma discussão acerca de os requisitos de projeto para um SMA e bem como a definição de agentes e recursos capazes de suportar estes requisitos.
O projeto de um SMA requer uma definição e especificação dos recursos do ambiente para o desempenho dos serviços dos agentes que o compõem.
Artefatos para Modelagem de Projeto.
Segundo, artefato e um termo geral para qualquer tipo de informação criada, produzida, alterada ou utilizada por participantes do projeto de um sistema.
Os diagramas são artefatos gráficos de representação de modelos largamente utilizados.
Os diagramas obtidos na etapa de análise compõem um modelo de análise definindo uma representação do entendimento dos requisitos de usuário dentro de uma estratégia de solução multiagente definida.
A etapa de projeto propõe- se a detalhar o modelo de análise de forma a definir o desenho desta solução.
Desta forma, definir- se- a uma arquitetura de sistema através de a qual sera implementada a estratégia de solução definida.
Os autores da AUML apresentam o conceito de agente como sendo uma extensão de objetos ativos, diferindo destes por exibir autonomia dinâmica -- habilidade de iniciar uma ação sem invocação extema, também conhecida como pró-atividade e autonomia determinística habilidade de recusar ou modificar uma solicitação de serviço extema.
Partindo- se do pressuposto de que o processo de desenvolvimento aqui adotado para o desenvolvimento de um SMA seja incremental -- o modelo de uma etapa é o refinanlerlto do modelo resultante da etapa anterior pode- se definir que alguns dos diagramas adotados na fase de projeto são os mesmos utilizados para representação do modelo de análise, porém acrescidos de detalhamentos adicionais.
Estes detalhamentos definem a disposição física dos agentes no sistema e recursos adicionais que sejam necessários para o funcionamento do sistema, tais como agentes de ace so a base de dados, roteadores de mensagens na rede de computadores, de entre outros.
Outros diagramas, como é o caso do Diagrama de Casos de Uso, são utilizados para guiar a etapa de projeto, porém não são modificados nesta fase, pois constituem representações dos requisitos do sistema.
A comunicação entre os agentes de um SMA é feita, na maioria dos casos, através de mensagens trocadas entre os agentes representadas por atos de fala, também chamados atos de comunicação.
Este modelo visualiza a linguagem como ações, tais como requisições, sugestões, compromissos, e respostas, considerando que cada ação de comunicação docução) possui um significado (ilocução) e que resulta numa ação (perlocução).
Em este trabalho, utilizaremos atos de fala para representar a comunicação entre os agentes.
Submissão de uma proposta para execução de determinado serviço.
Questionamento sobre um objeto referenciado através de uma expressão.
Recusa de execução de determinada ação, explicando o motivo.
Rejeição de proposta de execução de serviço durante numa negociação.
Requisição de execução de serviço.
De entre as liguagens de Comunicação entre agentes (KQNIL, ACL, etc), utiliza- se ACL (Agent Commu nnlczztiorz, Lrtngurtge) para implementar este modelo, pois é uma linguagem atualmente aceita como padrão por a FIPA (The Foundation for Intelligent Physical Agents) e por grande parte dos projetos de SMA desenvolvidos.
Desta forma, um serviço é representado por uma assinatura na forma de um ato de comunicação segundo Iiotação definida por a linguagem ACL.
Em os diagramas, sera utilizada uma notação simplificada contendo somenteotipo de mensagem eoconteúdo 150)&quot;).
Para a etapa de Projeto da Sociedade, consideraremos quatro tipos de diagramas:
Diagramas de Casos de Uso, Diagramas da Sociedade, Diagramas de Interação, e Diagramas de Implantação.
Estes diagramas serão apresentados a seguir.
Para os Diagramas da Sociedade, de Interação e de Implantação será feito um comparativo entre os seus correspondentes em UML.
Os Diagramas de Caso de Uso -- definido em -- são definidos na etapa de análise e utilizados para guiar a etapa de Projeto da Sociedade em direção a os requisitos funcionais do SMA, não sendo modificados nesta etapa.
Este tipo de diagrama tem como objetivo representar os requisitos funcionais do SMA através da representação de situações de funcionamento, incluindo aquelas que envolvam cooperação, conflito e negociação.
Os Diagramas da Sociedade -- definido em -- são definidos na etapa de análise e, posteriormente, refinados através da agregação de agentes de infraestrutura ao SMA, de acordo com padrões estruturais impostos por a arquitetura adotada.
Este tipo de diagrama tem como objetivo enumerar os agentes do SMA e descrever os relacionamentos existentes entre eles, através da representação dos canais de comunicação e papéis (modelagem estática).
Diagrama de Classes de Objetos mostra um conjunto de classes, interfaces, e colaborações e seus relacionamentos, sendo graficamente representado através de uma colecão de vértices e arestas, onde os vértices representam as classes e interfaces, e as arestas representam os relacionamentos e colaborações.
Este diagrama apresenta uma visão estática do sistema, que define o conjunto de operações, propriedades e associações disponíveis no sistema.
Baseado no caso de o Diagrama de Classes de Objetos, será utilizado um diagrama para representação dos aspectos estáticos do SMA chamado Diagrama da Sociedade, apresentado por (vide Figura 5.2).
Em este diagrama, são considerados como sendo aspectos estáticos os canais de comunicação típicos existentes en re as classes de agente da sociedade, também chamadas de associações.
As setas representam as associações, onde e indicado o nome da associação e sua cardinalidade, e as caixas representam os agente.
Es, onde e indicada o nome da classe de agente e a quantidade de instancias.
Segundo, estas associações podem ser permanentes ou de comunicação.
Em as associações permanentes, uma requisição recebida por um agente deve ser necessariamente atendida, estabelecendo uma relação de autoridade entre os agentes envolvidos.
Em as associações de comunicação, requisições não tem obrigatoriedade de serem respondidas.
Uma associação permanente e representada por uma seta cheia, e uma associação de comunicação é representada por uma seta vazada (vide Figura 5.3).
Fato de considerarmos que a etapa de projeto cria um modelo social que considera que agentes podem ingressar na sociedade, e que não e possível determinar a priori qual o funcionamento intemo dos agentes, significa que não podemos representar classes de agentes da mesma forma que são representadas as classes de objetos num diagrama de classe de UML, com todos os atributos e operações intemas.
Podemos, no entanto, definir um conjunto de características requeridas para que cada elemento da sociedade cumpra o papel a ele conferido, no caso os serviços que e capaz de executar.
Os relacionamentos do tipo agregação representariam agentes que são compostos por outros agentes.
No entanto, uma agregação determinaria a maneira por a qual um agente e formado e a arquitetura intema dos agentes não e representada num modelo que desconsidere o nível micro.
Por isso, não se utilizará o relacionamento do tipo agregação neste diagrama.
A intenção da mensagem presente numa comunicação entre humanos nem sempre é de facil identificação, porém deve- se garantir que não haverá dúvidas sobre o tipo de mensagem numa comunicação entre agentes computacionais.
Assim, outro aspecto importante a definir num diagrama de classes de agente e a ontologia de sociedade.
Este aspecto visa garantir que todos os serviços existentes na sociedade sejam identificados de forma a não haver ambigüidade.
Desta forma, dois serviços com o mesmo identificador devem ser semanticamente equivalentes.
Isso permite que, ao conhecer o significado de um identificador de serviço, um agente possa antecipar o tipo de resultado que corresponderá à uma solicitação deste serviço.
Além disso, este aspecto visa garantir que os parametros para execução dos serviços sejam conhecidos por todos os agentes que os prestem ou que os solicitem, de forma a padronizar o conteúdo das comunicações efetuadas entre os agentes.
Os Diagramas de Interação Seqüêncial -- definido em -- são definidos na etapa de análise e, posteriormente, refinados através da agregação dos agentes de infraestrutura adicionados aos Diagramas da Sociedade, passando a descrever também as interações que envolvem estes agentes (modelagem dinâmica).
Os Diagramas de Interação Seqüêncial de UML representam aspectos de interação entre os objetos de um Sistema OO.
Quando aplicado a um SMA, os Diagramas de Interação Seqiiencial passam a representar protocolos de interação a serem adotados por a sociedade.
É num diagrama deste tipo que serão definidas as estratégias de cooperação e de negociação existentes na sociedade.
Em UML, estas interações ocorrem através da invocação de operações entre os objetos.
Considerará- se- aqui Diagramas de Interação seqüêncial de UML para representar padrões estruturais de interação entre os agentes.
No entanto, algumas adaptações são necessárias para que este seja aplicável à modelagem de um SBIA.
Não há invocação de operações num SMA.
Ao invés de isso, existem trocas de mensagens entre os agentes do SMA através de atos de fala.
Uma modificação fundamental ocorre na semântica associada aos elementos do diagrama.
Em este caso, uma interação que, ao invés de ser interpretada como uma invocação de operação, passa a ser considerada uma mensagem contendo um ato de comunicação.
Desta forma, ao inves de diagramar a assinatura da operação e seus argumentos, é necessário descrever Ato de comunicação e seu conteudo.
Além disso, é descrito o papel que esta sendo desempenhado por o agente na interação.
Como uma evolução do Diagrama de Interação apresentado em AUML, apresenta extensões para este diagrama, agregando o conceito de quantidade de agentes envolvidos na interação -- as mensagens podem ser enviadas para um único endereço (unicast), a múltiplos endereços (multicast) ou para todos os endereços de um ambiente (broadcast) -- e a indicação do grupo de agentes a ser considerado (também chamado de coalizão), sendo esta extensão (vide Figura 5.6) a adotada neste trabalho.
Uma adaptação fundamental dos conceitos aplicados à Diagramas de Interação em OO em relação a sua aplicação para modelagem de um SMA reside na idéia de linha de execução.
A linha de execução (thread) de um Sistema OO tradicional é única, salvo em situações onde são utilizados recursos de processamento paralelo.
Em um SMA, conceitualmente todas as interações são assincronas, ou seja, considera- se que o agente continua a receber mensagens mesmo quando estiver processando alguma requisição ou enviando alguma mensagem.
Isso não quer dizer que a sincronia requerida por vãrios protocolos de interação seja inviabilizada.
A sincronia é implementada através de uma linha de conversação, onde as mensagens recebidas são associadas a uma conversação.
Em este caso, o agente precisa considerar todo o contexto associado a uma linha de conversação para que uma mensagem que corresponda a esta possa ser corretamente tratada considerando atos de comunicação anteriores.
Segundo[ PAROIL em diagramas de interação, os agentes são identificados por o nome de sua instancia seguido do papel que está sendo considerado na interação.
No caso de um agente desempenhar dois papéis num modelo de interação, conseqüêntemente sera representado mais de uma vez no diagrama.
A utilização de pacotes em conjunto com um diagrama de interação permite encapsular a especificação de um protocolo.
A parametrização de um pacote permite definir um protocolo de forma a generalizas- lo fazendo com que se seja aplicável à varias situações onde o mesmo conjunto de interações se aplica.
Segundo[ WOOOIL um papel é definido em termos de responsabilidades, permissões, atividades e protocolos.
Assim sendo, é necessário poder determinar estes elementos.
No caso de responsabilidades e atividades.
Podemos dizer que são determinados por a interface que corresponde ao papel.
Protocolos são determinados através dos diagramas de interação.
Permissões definem restrições de segurança para impedir que um agente não autorizado a solicitar determinado serviço a outro agente o faça.
As permissões podem ser extraídas através dos diagramas de interação.
Pois, Uma vez definidos todos os tipos de interações que podem ocorrer entre as classes de agente do sistema, e possível determinar o que cada classe pode solicitar para outra classe determinada.
Os Diagramas de Implantação -- derivados daqueles definidos em -- são criados na etapa de Projeto da Sociedade para descrição da disposição física dos agentes dentro de um ambiente distribuído.
Diagramas de Implantação de UML são diagramas especificos da etapa de projeto do sistema.
Este tipo de diagrama descreve os nodos existentes num sistema.
Estes nodos representam o hardware em o qual os agentes são implantados e executam.
Desta forma, utiliza- se este tipo de diagrama para descrever a rede fisica onde os agentes do SMA serão implantados, através da representação dos canais de comunicação existentes entre os nodos, incluindo detalhes como largura de banda e protocolo de comunicação utilizado.
Alguns sistemas requerem que seja viabilizado o funcionamento de agentes moveis.
Este tipo de agente tem a capacidade de migrar de um nodo a outro de uma rede.
Esta característica requer a existência de serviços de mobilidade.
Segundo, a maneira mais comum de prover este serviço e através de servidores de mobilidade (também chamados agent deck).
Que permanecem em execução nas maquinas onde e permitida a chegada de agentes moveis.
Em AUML, é possível representar um agente movel através de uma relação estereotipada que descreve a relação existente entre um agente existente num nodo extemo e sua conexão dentro de o SMA (vide Figura 5.7).
Adaptados ao paradigma OA, estes diagramas diferem tão somente por descrevem não mais a localização física de objetos e componentes do sistema mas a localização física dos agentes dentro de a rede de nodos, bem como a carga de processamento alocada a cada um dos nodos e os canais de comunicação existentes para interação dos agentes.
A definição desta topologia determina quais as necessidades do SMA quanto a agregação de agentes roteadores de mensagens.
Em este contexto de distribuição física dos nodos, estão inseridos alguns serviços de infra-estrutura básicos para o funcionamento do SMA.
Em um SNIA em que agentes podem ingressar ou sair em tempo de execução, é necessário ter meçanismos de localização dos agentes para que possam disponibilizar seus serviços para toda a sociedade.
Segundo, um serviço de localização de agentes é necessário quando a existência ou disponibilidade dos agentes não são de conhecimento comum.
Este tipo de serviço (por exemplo, brokering ou matçhmaking) e, algumas vezes, implementado de forma centralizada, o que facilita a implementação e a manutenção da base de localização.
Porém o Sistema toma- se mais vulnerável e cria- se um único ponto de falha.
De outra forma, mecanismos de localização distribuídos são mais complicados de se projetar, implementar e manter, porém mais confiável e robusto.
Uma extensão do diagrama de implantação que terã como objetivo indicar a presença de um roteador no nodo, que atua como mediador das interações entre os agentes, de forma a prover paraoSMA uma abstração da.
Localização física dos agentes. Como exposto no Capítulo 1 -- Introdução, uma das funções da etapa de projeto e acrescentar novos agentes a sociedade que sejam necessários para viabilizar o real funcionamento do SMA.
Estes agentes serão chamados agentes de infraestrutura, sendo agregados a sociedade para prover serviços especializados ao SMA.
Aqui e proposto um conjunto de agentes de infraestrutura para atender o conjunto de requisitos de projeto de SMA apresentados no Item 4.1 -- Requisitos de Projeto SMA para Organizações Empresariais.
São apresentadas especificações para construção de agentes de infraestrutura e suas arquiteturas.
Em as figuras que descrevem as arquiteturas dos agentes, os módulos são representados através de caixas e as relações existentes entre eles através de arcos dirigidos com linhas tracejadas.
Cada arco representa Sentido do fluxo do canal de comunicação entre os módulos.
Os módulos podem ser implementados através de objetos, componentes ou agentes.
A seguir são apresentados cada um dos agentes de infraestrutura, envolvendo a especificação de suas funcionalidades, descrição dos serviços que disponibiliza para a sociedade através de sua interface em ACL, e a descrição de sua arquitetura de referência.
A interface é descrita em ACL simplificada, pois necessita- se conhecer apenas o conteúdo da mensagem.
Esta simplificação é feita eliminando- se os parametros que são utilizados somente em tempo de execução (p..
Identificador da mensagem) ou que ja estão implíçitos nos diagramas (pRemetente e destinatário).
Uma organização federada sugere que agentes não comunicam- se diretamente com outros, mas cada agente comunica- se com seu roteador local que, por' sua vez, comunicase com outros roteadores.
Desta forma. Cada grupo de agentes ligado a um único roteador é uma federação.
Onde um agente rende parte de sua autonomia ao roteador, ou seja, deixa a cargo de o roteador varias funções de comunicação.
Os serviços disponibilizados por o são:
Considerar-se-a que cada roteador deverá ser contactado, de modo que este possa conhecer todos os agentes que estão ativos em seu respectivo nodo.
Esta função e desempenhada por o serviço Register.
Este serviço tem como objetivo acrescentar um novo agente nesta lista.
A este novo agente será atribuído um identificador único dentro de o nodo Em a forma agente@ roteador -- através de o qual será referenciado.
Imediatamente após o registro, este identificador e informado ao novo agente.
Este identificador sera utilizado para manter os canais de comunicação ja estabelecidos.
Estes canais podem ser estabelecidos, por exemplo, através de licitações ondeoagente licitador passa a comunicar- se diretamente com o agente que detém a proposta vencedora do processo licitatório.
Muitas vezes e necessário localizar agentes específicos dentro de o SMA sem, contudo, saber em que nodo da rede estão localizados.
Isto ocorre, por exemplo, com agentes que representam recursos específicos, tais como um agente mediador para determinada base de dados.
Para tanto, e possível identificar um agente através de um alias único dentro de o SMA, que corresponda a um identificador de agente, O roteador provê um serviço de registro deste alias e garante a unicidade deste, verificando a unicidade do mesmo através de uma consulta em sua lista local e as listas dos outros roteadores da rede.
Após registrado, um alias permanece associado ao identificador correspondente, na lista de agentes instanciados no nodo, e é informado ao agente que o registrou.
Este serviço tem como objetivo efetuar uma tradução de um alias para um identificador de agente.
Para tanto, o roteador efetua uma procura por o alias dentro sua lista de agentes locais e, se não encontrado, solicita que os outros roteadores efetuem esta procura também.
A o obteroresultado da procura, o roteador informa o resultado da busca ao agente que requisitou este serviço.
Este serviço tem como objetivo permitir que um agente envie uma mensagem a outro sem que seja necessário saber em que nodo físico este situa- se.
Se a requisição foi feita por um agente remoto, o roteador considera que deve entregar a mensagem apenas para os destinatários que correspondam a endereços locais contidos na mensagem.
No caso de a requisição ser feita por um agente local, e caso algum destinatário da mensagem não seja local, a mensagem é repassada aos roteadores correspondentes.
Aqui, é apresentada a arquitetura de referência de um agente roteador (Figura 6.2).
Primeiramente, deve- se notar que, para esta arquitetura, oconceito de Local e Remoto é definido soboponto de vista da localização em relação A o roteador.
Desta forma, Agente Local é todo aquele agente que esta situado no nodo do roteador, e Agente Remoto, todo aquele que não esta situado neste nodo.
Adotamos aqui uma diferenciação entre Receptor/ Atuador Local e Remoto, pois os métodos utilizados para comunicação local e remota podem ser distintos.
Os módulos que compõem esta arquitetura são:
Receptor Local:
Responsavel por a recepção das mensagens advindas dos agentes locais e encaminhamento das mesmas ao módulo qualificado a tratas- la.
Receptor Remoto: Responsavel por a recepção das mensagens advindas de agentes extemos ao nodo e encaminhamento das mesmas ao módulo qualificado a tratas- la.
Atuador Local: Responsável por o envio das mensagens aos agentes locais.
Atuador Remoto: Responsavel por o envio das mensagens a outros roteadores.
Modelos de Agentes Locais: Repositório dos nomes de agentes instanciados no nodo do roteador.
Recebidas por o roteador.
Register Handler: Encapsula as funções de controle para os serviços Registen RegisterAlías e ResoloAlias.
Roteador esta ligado a todos os demais agentes.
Portanto, representar todas as interações ocorridas entre o roteador e os demais agentes num diagrama de interação tomaria este confuso.
De esta maneira, o agente roteador é representado apenas nos nodos do diagrama de implantação, conforme ja explicado anteriormente.
Este agente disponibiliza uma interface contendo os serviços de acesso a base de dados, encapsulando as especificidades destas funções.
Isto permite que os demais agentes acessem determinada base de dados sem que eles tenham que incorporar os métodos necessários para isto.
Este tipo de agente possui uma interface que contem um Conjunto mínimo de serviços necessários ao acesso à operações de consulta e atualização dos dados (vide figura 6.3).
Não serão consideradas aqui operações de alteração da estrutura da base de dados (pData Definition Language, de SQL).
Consideranse-á também que as operações serão descritas através de cláusulas formuladas numa linguagem de nlanipulação de dados (SQL).
Os serviços disponibilizados por o agente são:
Query; E I Update.
Efetua uma consulta a base de dados utilizando uma cláusula de consulta (SELECT, de SQL), tendo como resposta o resultado obtido nesta consulta.
Restrições: A clausula de consulta (query clause) precisa estar codificada numa linguagem compatível com a base de dados.
Efetua uma atualização na base de dados utilizando uma cláusula de atualização (INSERT, UPDATE e DELETE, de SQL) tendo como respostaostatus da operação.
Restrições: A cláusula de atualização (update clause) precisa estar codificada numa linguagem compatível com a base de dados.
Interface em ACL sintplificada:
Possíveis respostas:
Failed: Indica falha no processo de atualização da base de dados.
Success: Indica sucesso no processo de atualização da base de dados.
Aqui, e apresentada a arquitetura de referência de um agente mediador de acesso a base de dados (Figura 6.3).
Os módulos que compõem esta arquitetura são:
Receptor de Eventos:
Responsável por a recepção das mensagens advindas de outros agentes, e por encaminhadas ao módulo qualificado para tratar- la.
Atuador: Responsavel por o envio das respostas correspondentes aos serviços requisitados.
Query Handler: Encapsula as funções de controle para o serviço Query.
Update Handler: Encapsula as funções de controle para o serviço Update.
Interface com a Base de Dados:
Encapsula as funções de acesso a base de dados correspondente, incorporando as particularidades do protocolo de acesso requerido por a mesma.
Este agente é integrado aos diagramas da sociedade, de interação seqüêncial e de implantação.
Em o diagrama da sociedade, representa- se todos os canais de comunicação existentes entre este agente e os demais.
Em o diagrama de interação seqüênciaL são representadas todas as solicitações de serviço enviadas ao mediador e as possíveis altemativas de resposta.
Em o diagrama de implantação, e representada a localização física do mediador, bem como seu alias correspondente, utilizado para sua localização na rede.
Em sistemas empresariais, de acordo com, objetos instanciados no sistema de informação da organização podem originar o ingresso de novos agentes no SMA a eles relacionados.
Este e o caso, por exemplo, de um recurso de manufatura cujo ingresso no sistema de informação corresponde ao ingresso de um novo agente que o represente no SMA.
Desta forma, muitas vezes e desejável que se automatize a instaciação de novos agentes no SMA a medida que novas entidades vão sendo inseridas na base de dados corporativa.
Em este caso, a cada nova tupla inserida na base de dados, um novo agente é instanciado dentro de o SMA.
Agente instanciador é responsavel por detectar a existência dessas novas tuplas em algum tipo de base de dados extema e instancias- los num nodo da rede como um agente, encaminhando- o ao seu respectivo roteador.
Cada classe de agente a ser instanciado, corresponde a um agente instanciador.
Este agente não disponibiliza serviços para o SMA, pois apenas realiza a monitoração da base de dados e a instanciação de novos agentes, não recebendo requisições extemas para tanto.
Aqui, é apresentada a arquitetura de referência de um agente instanciador de agentes (Figura 6.6).
Os módulos que compõem esta arquitetura são:
Monitor: Responsavel por a detecção de novas tuplas inseridas na base de dados e informar os dados da mesma ao instanciador.
Instanciador: Responsavel por a ativação da instãnçia do agente, e por informar ao apresentador que um novo agente foi instanciado.
Este agente e integrado apenas ao diagrama de implantação, onde e alocado ao nodo onde os agentes por ele instanciados serão alocados.
Este tipo de agente é responsavel por prover aos agentes humanos uma interface que lhes permita interagir com o SMA, receber notificações ou mesmo acompanhar o funcionamento do SMA.
A interação de agentes humanos com o SMA se faz necessária, por exemplo, quando as capacidades dos agentes do domínio não forem suficientes para resolver algum problema, sendo necessária a tomada de alguma decisão por parte de o agente humano.
Através desta interface, o agente humano pode, por exemplo, receber algum relatorio gerado por outro agente ou ser notificado sobre o sucesso ou falha na execução de serviços.
Este tipo de agente constitui um intermediário entre o SMA, implementado num ambiente computacional, eousuário humano, localizado num ambiente real.
Este agente estabelece a forma por a qual as ações executadas por o usuario humano serão refletidas dentro de o SMA.
Refletir as ações do usuario humano significa, fundamentalmente, enviar mensagens a outros agentes do SMA.
Os detalhes de implementação da interface com o usuario são encapsulados dentro de a implementação do agente.
A interação do agente humano no SMA se faz por meio de a implementação da interface com Usuário, cujos eventos o agente transforma em mensagens dentro de o SMA.
Serviço disponibilizado por o agente\&gt; é:
Show. Mostra uma mensagem para a interface com o agente humano.
Esta mensagem pode estar em formato texto ou codificada em alguma linguagem para formatação de texto (Html).
Restrições: A implementação da interface deve ter suporte ao formato em o qual a mensagem esta codificada.
Interface em ACL simplificada: Possíveis respostas:
Failed: Indica falha na apresentação de mensagem ao usuario.
Success: Indica sucesso na apresentação de mensagem ao usuario.
Aqui, é apresentada a arquitetura de referência de um agente interface para agentes humana (Figura Receptor de Eventos:
Responsavel por a recepção das mensagens advindas de outros agentes do SMA, repassando- a ao módulo qualificado a tratar- la.
Atuador: Responsavel por o envio das mensagens aos agentes do SMA.
Gerenciador de Interface Humana: Encapsula as funções de apresentação das mensagens recebidas e tratamento dos eventos emitidos por o usuário, traduzindo em mensagens ACL que são tratadas.
Este módulo utiliza o Atuador para permitir que o agente interfira no funcionamento do SMA.
Este agente e integrado aos modelos da Sociedade, de Interação e de Implantação.
Em o diagrama da Sociedade e de Interação, são descritas as relações existentes entre os agentes de interface humana e os demais agentes do SMA.
Em o diagrama de Implantação, é descrito o nodo da rede onde o agente humano efetuara a intervenção.
Este tipo de agente tem como objetivo consolidar determinado conjunto de informações e fomecer uma visão global do funcionamento do SMA sob um proposito determinado.
Serviço disponibilizado por o agente «freporter\&gt; e:
Report. Realizaoagendamento para geração do relatório, paraoqual são fomecidos os parametros necessários.
Restrições: Nenhuma.
Interface em ACL simplificada: Possíveis respostas:
Failed: Indica falha na geração de relatório.
Success: Indica sucesso na geração de relatório.
Aqui, é apresentada a arquitetura de referência de um agente extrator de relatórios.
Os módulos que compõem esta arquitetura são:
Receptor de Eventos: Responsavel por a recepção das mensagens advindas de outros agentes do SMA, repassando- a ao módulo qualificado a tratas- la.
Atuador: Responsavel por o envio das mensagens aos agentes do SMA.
Gerador de Relatórios:
Responsavel por decidir quais mensagens devem ser enviadas para os agentes que possuem parte das informações a serem consolidadas.
Formatador'de Resultados: Responsavel por a tradução dos resultados obtidos por o Gerador de Relatórios num formato adequado, que e enviado ao agente que solicitou a geração do relatório.
Este agente e integrado aos diagramas da Sociedade, de Interação e de Implantação.
Este agente pode relacionar- se a qualquer agente do domínio que possua informações a serem consolidadas, bem como aos agentes que necessitem de seus serviços.
Tem o funcionamento similar A o estereótipo possuindo os mesmos serviços, arquitetura e forma de integração com os diagramas.
Este tipo de agente tem como objetivo depurar o funcionamento de algumas situações críticas.
A vantagem de se ter um estereótipo é identificar os agentes que podem ser removidos da sociedade quando não se estiver mais em fase de depuração.
A tabela 6.1 apresenta a relação entre os requisitos do SMA e os agentes que os atendem.
A distribuição dos agentes no ambiente e gerenciada através de agentes que provê uma abstração da localização fisica dos agentes na rede.
A integração com o sistema corporativo é feita através da criação de uma interface com a base de dados corporativa, implementada através de um A intervenção de agentes humanos é viabilizada através de um agente «íhuman_ interface\&gt;, que representa a interface com o usuario dentro de o SMA, gerenciando as com o municações com esta interface.
A consolidação de informações e feita através de agentes que agrupam informações obtidas de varios agentes, gerando um relatório que reflete o funcionamento do SMA sob um determinado ponto de vista, A depuração do funcionamento do SMA é feita através de agentes &quot;í debugger\&gt; que, da mesma forma que os agentes «í reporteri\&gt; consolidam informações sobre o funcionamento do SMA, com o objetivo de verificar seu correto fnncionamento.
Os agentes de infraestrutura interagem com os agentes do domínio e com outros agentes de infraestrutura.
Desta forma é necessário determinar a maneira através de a qual estas relações são estabelecidas dentro de os modelos de projeto do SMA.
Esta rede de interações define a arquitetura do SMA.
Para descrição da arquitetura são utilizados os diagramas de projeto do SMA:
Diagrama da sociedade, diagramas de interação seqüêncial e diagramas de implantação.
O diagrama da sociedade determina os canais de interação entre os agentes, que nos diagramas de interação seqüêncial são detalhados descrevendo- se as interações que ocorrem através destes canais.
Dentro de o diagrama de implantação e especificada a localização física dos agentes.
Este capítulo objetiva ilustrar a inclusão dos agentes de infraestrutura no projeto de um SMA e seu relacionamento com os agentes do domínio.
Primeiramente, são apresentados os agentes do domínio do sistema M-DRAP, aqui utilizado como estudo de caso.
Finalmente, através da apresentação de um conjunto de atividades, e ilustrado o processo de integração dos agentes de infraestrutura aos diagramas da sociedade e de interação, e de construção do diagrama de implantação.
M-DRAP é um sistema para alocação dinâmica de recursos em ambientes de produção e tratamento de perturbações em tempo real que utiliza uma estratégia orientada a mercado, especificando uma arquitetura inultiagente genérica para este domínio.
A Figura 5.2 ilustra a relação dos agentes do M-DRAP através de um Diagrama da Sociedade.
A seguir, e apresentada uma breve descrição de cada um dos agentes que compõem o M-DRAP:
Agente Processo do Domínio (APD):
E responsavel por atender requisições de execução de Processos do Domínio originados por os eventos de produção gerados por Agentes Humanos (Ah), identificando os planos de produção adequados para o processo requisitado, e abrindo licitações para contratação das atividades empresariais formadoras.
Os Processos do Domínio podem ser decompostos funcionalmente em Processos do Negócio e Atividades Empresariais, que são organizados em fluxos lógicos de execução (seqüênciais ou paralelos) chamados Regras de Procedimento Agente Processo do Negócio (APN):
É responsavel por encapsularomecanismo de resolução para um Processo de Negócio.
Um Processo de Negócio e composto por uma ou mais Atividades Empresariais, organizadas em RP.
Um APN e responsavel por abrir licitação junto aos AAEs, para elaboração de sua proposta para execução do Processo do Negócio em resposta a uma requisição feita por um APD.
Agente Atividade Empresarial (AAE):
E responsavel por encapsular o mecanismo de resolução para uma Atividade Empresarial, sendo que seu objetivo principal e a elaboração de propostas para atender às requisições de execução desta.
Uma Atividade Empresarial corresponde as funcionalidades elementares de uma empresa, sendo executada sob restrições de alocação de tempo e de recursos.
Agente Entidade Funcional (AEF):
É responsavel por gerenciar sua agenda de compromissos e participar de licitações, tratando de resolver problemas decorrentes da ocorrência de perturbações na Entidade Funcional de sua responsabilidade.
Por Entidade Funcional entende- se um recurso capaz de executar uma ou mais Operações Funcionais, que por sua vez correspondem a ações elementares (tais como, movimentar uma peça, perfurar um buraco, etc).
Exemplo de Entidades Funcionais são robôs, maquinas de comando numérico, etc..
A seguir, apresentaremos as atividades de integração dos agentes de infraestrutura com os agentes do domínio, derivados do processo de análise utilizando o sistema M-DRAP como estudo de caso.
Desta forma, para integração dos agentes de infraestrutura a estes diagrama, e definido um conjunto de atividades a serem seguidas.
As atividades de integração aqui definidas são:
Adaptação dos Diagramas de Interação Seqüêncial:
A partir de o diagrama de interação seqüêncial da etapa de análise, que contem apenas os agentes do domínio da aplicação, adiciona- se os agentes de infraestrutura\&gt; e\&gt;, e estabelece- se as interações que ocorrem entre estes e os agentes do domínio.
Os agentes são integrados primeiramente ao diagrama de interação seqüêncial, porque a partir de as interações adicionadas nesta atividade determina- se a necessidade de criação de novos os canais de comu nicação no diagrama da sociedade.
Atualização do Diagrama da Sociedade: A partir de o diagrama da sociedade da etapa de análise, adiciona- se canais de comunicação entre os agentes de acordo com as interações adicionadas na etapa anterior.
O sentido das setas representará o sentido dos fluxos de interação, que pode ser unidirecional ou bidirecional.
Criação do Diagrama de Implantação: Baseado no diagrama da sociedade, cria- se o diagrama de implantação agrupando os agentes em nodos físicos que corresponderão aos nodos da rede física.
Em cada um destes nodos é adicionada a representação do nos nodos que contiverem classes de agentes a serem instanciadas, adiciona- se agentes instantiator\&gt;, ligando- os a estas classes.
Integração dos Agentes de Depuração: Inçlui- se agentes nos pontos críticos do SBIA, adicionando- os aos diagramas da sociedade, de interação seqüêncial e de implantação da mesma forma queo &quot;f f».
A seguir, serão detalhadas cada uma destas atividades enumerando os diagramas utilizados como entrada e apresentando exemplos de integração dos agentes de infraestrutura aos diagramas que originalmente contem agentes do domínio, nestes caso, do M-DRAP.
