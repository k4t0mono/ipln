Este trabalho tem como principal objetivo a investigação de protocolos para formação de redes ad hoc, visando a modelagem de novo protocolo para formação de scatternets Bluetooth.
Esse protocolo tem por caracter ística principal atender os requisitos de aplicações interativas, que dependem mais de uma maior disponibilidade da conexão do que de uma conexão com largura de banda elevada e com baixo atraso de comunicação.
O protocolo modelado mantém conexões funcionando mesmo na presença de eventos de entrada e saída de nós da rede móvel.
O protocolo foi proposto visando a implementação de um SoC Bluetooth para a formação de scatternets.
A validação inicialmente foi idealizada para utilização da plataforma Fênix do projeto Brazil IP, sendo ao final realizada uma simulação para levantamento de resultados do modelo para geração de scatternets.
Palavras-chave: Redes Ad Hoc;
Bluetooth; Scatternet.
Em os últimos anos assistiu- se a uma proliferação de tecnologias no segmento de redes locais sem fio, (Wireless Local Area Network -- WLAN) tais como Bluetooth e WiMAX.
Uma conseqüência é o aumento considerável de usuários carregando com si dispositivos portáteis tais como notebooks, telefones celulares e PDA's para uso profissional e/ ou pessoal.
Todos estes equipamentos oferecem uma solução atraente para aqueles que pretendem uma rápida e simples instalação sem os problemas associados à conexão via cabo.
Entretanto, a maioria destes dispositivos não se comunica entre si.
Em este contexto foram criadas as redes móveis sem fio que permitem aos dispositivos portáteis comunicar- se e interagir entre si.
As redes móveis sem fio dividem- se, basicamente, em dois tipos:
As redes infra-estruturadas e as redes ad hoc (Mobile Ad Hoc Network -- MANET).
As redes infra-estruturadas são aquelas em que o dispositivo móvel está em contato direto com uma estação de suporte à mobilidade, também conhecida como ponto de acesso a uma rede fixa.
O funcionamento deste tipo de rede móvel é semelhante ao da telefonia celular, onde toda a comunicação deve, necessariamente, passar por a central, mesmo que os equipamentos móveis estejam a uma distância em que poderiam, eventualmente, comunicar- se diretamente.
Sendo assim nas redes infra-estruturadas a comunicação entre os nós móveis é feita através de estações de suporte à mobilidade.
Em este caso, os nós móveis, mesmo próximos uns dos outros, estão impossibilitados de realizar qualquer tipo de comunicação direta.
Já nas redes ad hoc os dispositivos são capazes de trocar informações diretamente entre si.
Ao contrário de o que ocorre em redes convencionais, não há pontos de acesso, ou seja, não existem estações de suporte à mobilidade (sem infra-estrutura de conexão) e os nós dependem uns dos outros para manter a rede conectada.
Por esse motivo, redes ad hoc são indicadas principalmente em situações onde não é possível, ou não faz sentido, instalar uma rede fixa.
Sendo uma rede wireless os nós de uma rede ad hoc podem se mover arbitrariamente.
De este modo, a topologia da rede muda freqüentemente e de forma imprevisível.
Assim, a conectividade entre os nós móveis muda constantemente, requerendo uma permanente adaptação e reconfiguração de rotas.
Como já comentado a utilização de uma rede ad hoc está associada a cenários onde exista uma necessidade de se instalar rapidamente uma rede de comunicação.
Normalmente, são situações onde não há uma infra-estrutura de rede previamente instalada.
Algumas das aplicações possíveis para redes tipo ad hoc são:
Coordenação de resgates em situações de desastre;
Troca de informações táticas em campos de batalha;
Compartilhamento de informações em reuniões e salas de aula.
As principais vantagens da utilização de redes ad hoc são:
Rápida instalação, pois esse tipo de rede pode ser estabelecido dinamicamente em locais onde não haja previamente uma infra-estrutura instalada;
Pode- se considerar que redes ad hoc possuem características de sistemas tolerantes a falha, pois a permanente adaptação e reconfiguração das rotas nessas redes permitem que perdas de conectividade entre os nós possam ser facilmente resolvidas desde que uma nova rota possa ser estabelecida;
Apresenta também acréscimos em relação a conectividade, pois nesse modelo de rede dois nós móveis podem se comunicar diretamente desde de que cada nó esteja dentro de a área de alcance do outro.
Já as desvantagens principais a serem citadas são:
O roteamento, pois a mobilidade dos nós e uma topologia de rede dinâmica contribuem diretamente para tornar a construção de algoritmos de roteamento um dos principais desafios em redes ad hoc;
A taxa de erros associada a enlaces sem- fio é mais elevada quando comparada aos enlaces em redes estruturadas;
A banda passante que com cabeamento convencional pode chegar a 1 Gbps, nos enlaces via redes wireless tem- se taxas de até 2 Mbps tipicamente;
E por último uma questão importante em redes ad hoc é a localização de um nó, pois além de o endereço da máquina não ter relação com a posição atual do nó, também não há informações geográficas que auxiliem na determinação do posicionamento desse nó.
Convém salientar ainda que o protocolo de comunicação da rede móvel deve considerar certas características que não ocorrem numa rede fixa.
É importante lembrar que os equipamentos móveis de uma rede ad hoc apresentam várias limitações de recursos, principalmente largura de banda e autonomia de bateria.
Em as próximas seções serão expostas a teoria de grafos, importante para o entendimento dos protocolos de formação de Scatternet, outras tecnologias de redes wireless e a tecnologia Bluetooth para formação de redes ad hoc.
Esta seção tem por finalidade descrever conceitos básicos da teoria dos grafos, pois é através dos grafos que são representadas as redes ad hoc presentes nesse trabalho.
Grafo é uma noção simples, abstrata e intuitiva, usada para representar a idéia de alguma espécie de relação entre &quot;objetos».
Graficamente, aparece representado por uma figura com nós ou vértices, significando os objetos, unidos por um traço denominado aresta ou arco configurando a relação imaginada.
Os grafos podem ser dirigidos ou não-dirigidos.
Um grafo dirigido G é um par (N, A), onde N é um conjunto finito e A é uma relação binária entre os componentes de N. Onde N é o conjunto de nós (ou vértices) de G e A conjunto de arcos (ou arestas) de G. Enquanto num grafo não-dirigido G $= (N, A), o conjunto de arcos A consiste de um conjunto desordenado de pares de nós N. A Figura 1.2 representa um grafo dirigido onde N é o conjunto de nós 1,2,3,4,5,6 e A é o conjunto arcos\&gt; Enquanto a Figura 1.3 representa um grafo nãodirigido onde N é o conjunto de nós 1,2,3,4,5,6 e A é o conjunto de arcos, (2,5), (3,6).
Dois nós são ditos adjacentes se existe um arco interligando- o.
Por exemplo, no grafo dirigido representado por a Figura 1.2 o nó 2 é adjacente ao nó 1, enquanto o nó 1 não é adjacente ao nó 2 pois o arco não pertence ao grafo.
Já no grafo não-dirigido representado por a Figura 1.3 a relação de adjacência é simétrica, ou seja, o nó 2 é adjacente ao nó 1 e o nó 1 é adjacente ao nó 2.
Grau de um nodo:
É medido por o número de arcos incidentes.
Em um grafo dirigido o grau é obtido por a soma do grau de Saída, ou seja, arcos que saem do nó e do grau de Entrada, que são aqueles que chegam no nó.
Em a Figura 1.2 o nó 1 possui grau 2, enquanto o nó 2 possui grau 5 (3+ 2).
Em os grafos não-dirigidos o grau é verificado por o número de arestas que se relacionam com um nó, por exemplo, na Figura 1.3 o nó 2 possui grau 2, o nó 6 possui grau 1 e o nó 4 possui grau 0.
Um caminho c de um nó u para um nodo u'num grafo G $= (N, A) é a seqüência de nodos¡ n0, caminho c é o número de arcos existente em c..
Por exemplo na Figura 1.2, existem dois caminhos entre os nós 1 e 4 esses caminhos são c1 e c2 e os tamanhos desses caminhos são c1 igual a 3, pois a esse caminho pertencem os arcos, (2,5) e (5,4) e c2 igual a 2, pois desse caminho fazem parte os arcos (2,4).
Outro conceito citado neste trabalho é o de grafos conectados.
Um grafo não-dirigido G $= (N, A) é conectado se cada par de nós é conectado por um caminho, ou seja, um grafo não-dirigido é conectado se possuir exatamente um componente conectado, ou seja, se cada nó é alcanç ável a partir de cada um dos outros nós.
Tendo como exemplo a Figura 1.3 se divide em três componentes conectados que os nós, os nós (3,6) e o nó 4, resultando assim num grafo não conectado.
O último conceito da teoria dos grafos importante para o entendimento do modelo proposto é o de árvore.
Uma árvore é uma estrutura de dados que possui uma relação hierárquica entre seus elementos.
Trata- se de um conjunto finito de um ou mais nós, onde um de eles é denominado raiz e os demais, recursivamente, formam uma sub-árvore.
Quando num determinado nível a sub-árvore tem um único nó ele é chamado de folha.
A árvore da Figura 1.4 tem as seguintes folhas:
D, E, G, H e I. Em esta seção foram introduzidos alguns conceitos básicos de grafos que serão de grande importancia para o entendimento, tanto dos protocolos de formação de scatternet estudados quanto do modelo proposto.
Em esta seção serão descritos alguns modelos de redes wireless com características semelhantes as redes formadas por o modelo proposto.
Uma Rede de Sensores Sem Fio (RSSF) pode ser definida como um tipo especial de rede móvel ad hoc, podendo ser utilizada para monitorar e, eventualmente, realizar o controle no ambiente em o qual se encontra.
Para que tenhamos uma Rede de Sensores Sem Fio é necessário um conjunto de dispositivos compactados e automatizados chamados de nós sensores.
Um nó sensor é um pequeno dispositivo computacional cujo objetivo, dentro de a rede, é captar informações (através de seus sensores), realizar algum tipo de processamento e transmitir- las para que se possa realizar o monitoramento físico de um fenômeno ambiental.
Esse mesmo sensor produzirá uma resposta mensurável a mudanças em condições físicas, tais como temperatura, campo magnético e luz.
As Redes de Sensores são constituídas, basicamente, por três características:
O sensor, dispositivo que realiza a monitoração de uma área física, através da observação de um fenômeno;
O observador, usuário interessado nas informações coletadas por o sensor;
E o fenômeno, entidade de interesse do observador (como por exemplo uma mudança de temperatura).
A classificação de uma Rede de Sensores depende de seu objetivo e área de aplicação.
A aplicação influenciará diretamente nas funções exercidas por os nós da rede, assim como na arquitetura desses nós (processador, memória, dispositivos sensores, fonte de energia, transceptor), na quantidade de nós que compõem a rede, na distribuição inicialmente planejada para a rede, na escolha dos protocolos da pilha de comunicação, no tipo de dado que será tratado, no tipo de serviço que será provido por a rede e conseqüentemente no tempo de vida dessa rede.
De acordo com, as Redes de Sensores podem ser classificadas segundo a configuração, o sensoriamento e segundo o tipo de comunicação.
Uma Rede de Sensores também pode ser classificada segundo o tipo de processamento que executa.
Outro tipo de rede wireless é a Wireless Mesh Network (WMN), que foi desenvolvida a partir de a necessidade de fornecer os serviços já oferecidos por as redes wireless com maior qualidade e não dependente das redes fixas.
Em este tipo de rede os nós roteiam o tráfego entre si dinamicamente.
Por apresentar a característica de roteamento entre os nós de forma dinâmica, estas redes assemelhamse as redes móveis ad hoc.
A principal diferença das redes mesh para as redes ad hoc é que nas redes mesh os nós possuem localização fixa, apesar de a localização não ser predeterminada, por conseq üência disto os algoritmos de roteamento apresentam muita semelhança entre si.
Devido a a localização dos nós serem conhecidas, as redes mesh, também conhecidas como rede de malha sem fio, podem ser utilizadas em diversas aplicações como backup distribuído, cache de conteúdo da Internet e divulgação de informação de relevância local.
As redes mesh apresentam como vantagens o custo, robustez, escalabilidade, simplicidade, além de as vantagens da própria tecnologia wireless.
Redes mesh são ditas robustas devido a as mesmas apresentarem a característica dinâmica, onde ao modificar um link com a adição ou remoção de um nó, ou mesmo através de interferência no link, a rede se adapta sem interferência humana.
Em conseqüência de esta característica a rede torna- se mais robusta do que uma rede convencional, pois a quebra de um nó ou de um link não implica em quebra da conectividade da rede, por conseqüência dos nós estarem conectados a mais de um nó.
Portanto o custo das redes cai significativamente devido a não necessidade de manutenção na rede, além de o custo dos links cabeados poderem incluir a necessidade de obras caras, trabalhosas e inconvenientes.
Porém as redes mesh apresentam as seguintes desvantagens:
Degradação da largura de banda, interferência eletromagnética, desvantagem inerente a todo tipo de rede wireless, e perda freqüente de pacotes.
Em a degradação da largura de banda, os nós de uma rede sem fio precisam utilizar a mesma freqüência, devido a isto somente um nó pode transmitir de cada vez.
Em as arquiteturas convencionais, N nós comunicam- se apenas com um nó, que está ligado a uma rede fixa, nesta situação a largura de banda é dividida por N. Em as redes mesh este problema aumenta, pois cada nó pode usar 1/ N do tempo para transmitir os pacotes ao nó mais próximo.
Um outro tipo de redes wireless ad hoc são as redes formadas por a tecnologia Bluetooth, essas redes possuem características diferentes das demais para sua formação devido a especificação da tecnologia Bluetooth.
Em a próxima seção será abordada a tecnologia Bluetooth na formação de redes ad hoc.
A tecnologia Bluetooth como descrita em sua especificação é considerada promissora para construção de redes ad hoc.
Com a idéia inicial de permitir a substituição de cabos, a especificação define maneiras para que cada dispositivo Bluetooth possa conectar- se a múltiplos dispositivos através de uma comunicação multi-hop, ou seja onde a comunicação se dá com a utilização de intermediários, pois os nós podem não estar na área de transmissão um do outro.
A maneira por a qual a tecnologia permite uma comunicação multi-hop é descrita como segue:
Quando dois nós Bluetooth querem estabelecer uma ligação, um de eles deverá assumir o papel do mestre da comunicação enquanto o outro se transforma em seu escravo.
Esta rede simples one-hop é chamada de piconet e pode incluir diversos escravos que podem ativamente se comunicar com o mestre ao mesmo tempo.
Se um mestre tiver mais de 7 escravos, alguns escravos têm que ser estacionados, ou seja, colocados em estado de espera e ativados apenas no caso de a saída de um dos 7 escravos em comunicação com o mestre.
A especificação permite que cada nó possua papéis múltiplos.
Um nó pode ser um mestre numa piconet e um escravo numa ou em mais piconets, ou um escravo em múltiplas piconets.
Os dispositivos com múltiplos papéis agem como passagens as piconets adjacentes que dão assim forma a uma rede ad hoc multi-hop chamada scatternet.
A propagação dos dispositivos com Bluetooth numa área geográfica pode fornecer a extensão wireless que falta as várias infra-estruturas de redes wireless heterogêneas.
O problema fundamental da formação de scatternets, é o de organizar os dispositivos Bluetooth numa rede multihop.
A formação de scatternets não está definida formalmente na especificação do grupo de interesse especial de Bluetooth (SIG).
Em conseqüência, diversos protocolos foram propostos.
Em o presente trabalho é realizada uma investigação e definição de um protocolo para formação de redes ad hoc, vislumbrando a criação de scatternets.
Como citado anteriormente a especificação atual do Bluetooth não prevê umprotocolo para formação de scatternet.
Em a Figura 1.5 é mostrado um cenário onde com a utilização de um protocolo de formação de scatternet uma rede ad hoc Bluetooth poderia ser obtida.
A Figura 1.5 mostra o caso onde 13 dispositivos Bluettoth foram divididos em quatro piconets (a, b, c e d).
Os mestres são representados por os pentágonos (cercados por um círculo grande que represente seu raio da transmissão), enquanto os escravos são descritos como círculos pequenos.
As piconets adjacentes podem ser interconectadas de maneiras diferentes.
As piconets a e b descrevem a lógica do mestre-mestre, quando dois mestres são vizinhos e a interconexão é feita tendo um dos dois mestres juntando a piconet do outro como escravo.
Bluetooth para formação de redes ad hoc.
Os objetivos específicos são os seguintes:
Estudo de redes ad hoc e características importantes como vantagens, desvantagens, e desempenho para utilização em cenários de uso onde não é possível e/ ou estas redes se adaptem melhor que as redes infra-estruturadas;
Estudo da tecnologia Bluetooth, que entre as tecnologias do segmento de redes locais sem fio disponíveis é de maior interesse do grupo de pesquisa em que esse projeto está inserido;
Estudo de protocolos para formação de scatternets já propostos, visando melhor entendimento do que pode ser feito para manter a conexão da rede, mesmo quando sujeito a efeitos de resili ência na rede móvel;
Estudo da tecnologia Bluetooth e suas limitações e problemas para formação descatternets;
Modelagem do protocolo para formação de scatternets;
Validação do protocolo.
A contribuição deste trabalho é a criação de modelo de protocolo de formação de scatternets.
Este modelo é baseado em protocolo existente, porém otimizado para aplicações como jogos, onde o grafo de visibilidade dos nós se aproxima de um grafo completo, ou seja, a maioria dos nós está dentro de área de transmissão de grande parte dos outros.
Em o tipo de aplicação como a do estudo de caso é importante eliminar ou reduzir drasticamente o tempo em que a rede está se reconstruindo devido a entrada e saída de nós durante uma sessão de jogo, o que é desconsiderado por o modelo existente original.
Ou seja, o protocolo proposto visa aumentar a resiliência da rede frente a desconexões para que a aplicação seja interrompida o mínimo possível dentro de um período de tempo determinado que se aproxima de uma seção casual de jogo, por exemplo a partir de 20 min..
O restante do documento está organizado e estruturado da seguinte forma:
O Capítulo 2 apresenta o estado da arte da pesquisa de protocolos de formação de scatternet.
O Capítulo 3 detalha o modelo desenvolvido no presente trabalho.
Em o Capítulo 4 é explicado o projeto e implementação da simulação do modelo proposto, bem como uma idéia proposta para trabalhos futuros visando a validação do protocolo definido nessa dissertação na Plataforma Fênix do Projeto Brazil IP.
O Capítulo 5 mostra os resultados obtidos na simulação.
Em o Capítulo 6 são apresentadas as conclusões do presente trabalho.
Os protocolos de formação de scatternets são classificados basicamente em protocolos singlehop, onde todos os nós estão dentro de a área de transmissão um do outro e nos protocolos multihop já descritos anteriormente.
Os protocolos single-hop foram os primeiros propostos entre eles alguns podem ser destacados.
O proposto em é baseado na eleição de um líder que coleta a informação de topologia e baseado nesta informação, decide qual será o papel de todos os outros nós.
Para obter boas propriedades na scatternet resultante, o número de nós tem que ser nreceba36, no caso quando n\&gt; 36 outros esquemas centralizados podem ser usados como os propostos em e.
Os protocolos descritos em e executam sobre topologias single-hop sem limitação no número de nós suportados, porém, a scatternet resultante é uma árvore, o que limita a eficiência e a robustez.
Como as soluções single-hop tem uma premissa muito restritiva, passouse a trabalhar com protocolos multi-hop esta seção aborda detalhadamente os protocolos BlueTrees, BlueStars, BlueNet e LSBS Protocol.
Em é descrito que a fase da descoberta de dispositivos deve fazer com que cada um dos nós da rede se torne consciente dos nós que estão no seu alcance de transmissão.
Se um nó v conhece um nó u, o nó u também deve conhecer o nó v (todos os protocolos de formação de scatternets multihop dependem de isso).
Para entendimento do conhecimento mútuo a Figura 2.1 mostra os nós u e v e suas áreas de transmissão, que são representadas por os círculos pontilhados.
Os mecanismos providos por as especificações de Bluetooth para descoberta de dispositivos, isto é, os procedimentos de inquiry, não levam ao necessário conhecimento simétrico sobre vizinhos.
Os nós que estão usando esse procedimento, Inquiry, não transmitem o seu identificador único Bluetooth, e portanto se mantém desconhecidos ao nó que recebe o pacote de inquiry.
Além disso, os mecanismos de descoberta do Bluetooth requerem que os nós estejam em modos opostos de inquiry (chamados de modos inquiry e inquiry scan) para que seja possível a comunicação entre eles.
Porém, nenhum método é descrito na especificação do Bluetooth sobre como garantir que dois nós vizinhos estão em modos opostos.
Portanto, mecanismos aderentes à especificação precisam ser definidos para garantir que, para cada par de nós v e u, eles estão eventualmente em modos opostos e que, quando o nó v descobre o nó u, o nó u também se torna consciente do nó v..
Em a solução proposta em há uma descrição detalhada das operações de descoberta num cenário multi-hop.
A cada dispositivo é permitida a alternação entre os modos inquiry e inquiry scan, permanecendo em cada modo por um tempo selecionado aleatoriamente e uniformemente num dado intervalo.
O processo todo é realizado por um tempo pré-definido de descoberta de dispositivo.
As operações realizadas, enquanto o dispositivo está em cada um dos dois modos, são aquelas descritas nas especificações.
Quando dois nós em modos opostos de inquiry fazem o handshake, isto é, quando esses nós estabelecem uma conexão, eles criam uma piconet temporária que dura apenas o tempo necessário para que eles troquem os seus Ids e possivelmente outra informação necessária para as fases seguintes do protocolo.
A formação de piconets temporárias e a troca de informações é feita para alcançar o requerido conhecimento mútuo.
Foi verificado em que pode- se manter a fase de descoberta de dispositivos razoavelmente curta nos melhores casos fica na ordem de 28 segundos, e ao mesmo tempo obter uma topologia de descoberta conectada, que é um requisito necessário para geração de scatternets conectadas.
O preço a pagar é que, na topologia descoberta, não é garantido que dois nós que estão no alcance de transmissão uns dos outros se descobrirão, pois quanto menor é tempo definido para duração da fase de descoberta, menor a chance de descoberta de todos os vizinhos.
O protocolo de formação de scatternet apresentado em é o primeiro a resolver o problema do estabelecimento de rede scatternet numa topologia multi-hop.
O protocolo é iniciado por um nó designado, chamado de blueroot e gera uma scatternet em forma de árvore.
O blueroot começa o procedimento de formação ao adquirir como escravos os seus vizinhos onehop.
Estes, por sua vez, começam a tentar conectar com seus próprios vizinhos, os nós que estão a até dois hops da raíz, e assim sucessivamente, numa forma expansão de onda, até que toda a árvore esteja construída.
Para limitar o número de escravos por piconet, é observado que no caso de um nó possuir mais de 5 vizinhos, então pelo menos dois de eles estão no alcance de transmissão um do outro.
Esta observação é usada para re-configurar a árvore de uma forma em que cada nó mestre não tenha mais do que sete escravos.
Se um mestre v tem mais do que sete escravos, ele seleciona dois de eles que estão necessariamente no alcance de transmissão um do outro, e instrui um dos dois para ser o mestre do outro, que então é desconectado da piconet de v..
Este tipo de &quot;reorganização de galhos «é feita por a rede, levando a uma scatternet onde cada piconet não tem mais do que 7 escravos.
Além de produzir uma topologia similar a uma árvore, o que limita a robustez da scatternet obtida, o BlueTrees depende de um nó selecionado para iniciar o procedimento de formação, de forma que esta solução não funciona em redes cujas topologias após a fase de descoberta não são conexas.
Foram encontrados dois problemas ao implementar o BlueTrees.
Para limitar o número de escravos por piconet para um número receba 7, o protocolo assume que a topologia resultante da descoberta de dispositivos é de tal forma que se dois nós vizinhos u e v se descobriram mutuamente e os dois tem um vizinho comum z, então ou os dois descobriram z ou nenhum de eles descobriu o z.
Esta propriedade, que é necessária para uma reconfiguração do BlueTrees numa scatternet com não mais do que 7 escravos por piconet, não pode ser garantida por a fase de descoberta que foi descrita anteriormente.
Considere, por exemplo, uma topologia similar à uma estrela com 9 nós onde o nó central v se torna mestre e escolhe 7 entre os seus 8 vizinhos.
Considere que o vizinho z é o que foi deixado de fora de a piconet de v..
Para a propriedade geométrica mencionada acima, ao menos um dos vizinhos de v, digamos u, está no alcance de transmissão de z.
Se u e z não se descobriram mutuamente, é provável que a scatternet formada não é conexa (v não consegue alcançar o seu vizinho z).
Portanto, para que o protocolo funcione corretamente é necessário realizar operações extras para alcançar um conhecimento consistente sobre a vizinhança de cada nó.
Estas operações, que visam estabelecer alguns dos links que não foram descobertos, é chamada de Fase de Reabastecimento do protocolo.
Esta fase pode ser implementada da seguinte maneira:
A o final da fase de descoberta, todos os nós que se descobriram mutuamente trocam entre si as listas de nós que cada um acabou de descobrir.
Esta troca de listas leva à construção, em cada nó v, de um conjunto Av (Av $= conjunto de todos os nós descobertos por os vizinhos de v mas que não foram descobertos por o próprio nó v).
Assim que as trocas de listas são concluídas, o nó v começa a contatar os nós em Av para ver se esses nós estão no seu alcance de transmissão (isto é, vizinhos seus ainda não descobertos).
Para isso, o nó v alterna, por um período pré-definido de tempo, entre os modos page e page scan, tentando descobrir os nós em Av..
Mais especificamente, enquanto no modo page o nó v tenta paginar seus nós Av um após o outro.
Cada vez que dois nós u e v se descobrem mutuamente, eles se removem dos seus conjuntos Au e Av e trocam suas listas de vizinhos.
Isto pode levar à novos nós para u e v adicionarem aos seus conjuntos Au e Av, isto é, novos nós para eles paginarem.
O comprimento desta fase deve ser cuidadosamente escolhido para que sejam descobertos todos os nós em Av que estão de fato no alcance de transmissão de v..
O segundo problema está relacionado à maneira que o protocolo BlueTrees foi definido.
De acordo com, assim que um nó foi adquirido como escravo por um mestre, ele se torna um mestre ele mesmo, e começa a contatar todos os seus vizinhos (exceto o seu próprio mestre).
Considere que um mestre v adquiriu os nós u e z como escravos, e considere que u e z são nós que se descobriram mutuamente durante a fase de descoberta.
Então um deadlock pode ocorrer devido a o fato de que u começa a paginar z e vice-versa.
Para resolver este problema foi associado um time-out ao ato de &quot;Paginar «os dispositivos vizinhos.
Se um vizinho descoberto não responde a um page dentro de um certo período de tempo, é considerado que ele deve estar no modo page e portanto já deve ser membro de alguma piconet.
O esquema de formação de scatternet proposto em, BlueNet, produz uma scatternet cujas piconets tem um número limitado k de escravos.
Após a fase de descoberta de dispositivo, cada nó aleatoriamente entra no modo page e page scan com uma probabilidade f0.
Quando um nó é bem-sucedido em conseguir pelo menos um escravo, ele procede para a fase 1 e tenta adquirir até k vizinhos como escravos.
Os nós que são adquiridos como escravos também procedem para a fase 1 junto com o mestre.
Escravos que vão para a fase 1 ficam no modo page scan.
Os mestres que vão para a fase 1 fazem a dupla tarefa de:
Conseguir conhecer os mestres vizinhos e os mestres dos escravos vizinhos que estão afiliados em outras piconets, e Encontrar nós que se encontram na fase 0 e que estão no modo page scan e adquirir- los como escravos.
Para realizar estas tarefas, um mestre faz page para todos os seus vizinhos um a um e então decide se vai para o modo page ou page scan aleatoriamente com probabilidade f..
A o alternar desta forma entre page e page scan, todo mestre adquire até k de entre os seus vizinhos como escravos e consegue conhecer a informação necessária sobre os outros vizinhos.
Se um nó não é bem-sucedido em adquirir ao menos um escravo ou em ser convidado a se juntar à piconet de algum outro nó, ele fica executando a fase 0, decidindo novamente se fica em modo page e page scan com probabilidade f0, até que ele se torne consciente que todos os nós vizinhos são parte de alguma outra piconet.
No caso de que um nó na fase 0 se mantenha isolado ele entra na fase 2, isto é, ele vai para o modo page e tenta interconectar à piconets vizinhas ao tentar adquirir como escravos um nó de cada uma destas piconets (até o limite k).
Após completar esta tarefa, um nó na fase 2 sai do protocolo.
Um mestre na fase 1 que já contatou todos os seus vizinhos e adquiriu até k de eles na sua piconet procede para a fase 3, a fase de interconexão de piconets.
Em esta fase, os escravos das piconets formadas na fase 1, ao alternarem entre os modos page e page scan, tentam criar links com nós vizinhos de outras piconets da fase 1, como instruído por os seus mestres.
Os mestres selecionam um dos seus escravos para ir para o modo page e instrui todos os seus outros escravos para irem para o modo page e page scan.
O escravo selecionado faz page nos seus vizinhos um a um, cada um por um período máximo chamado de Tpage, para cada page bem-sucedido, o escravo pergunta ao mestre se o link correspondente deve ser estabelecido ou não.
Quando todas as tentativas de page para os vizinhos foi feita, o mestre instrui o escravo a ir em modo page scan e seleciona outro escravo para ir para o modo page.
Quando apenas um escravo restou com alguns nós vizinhos para contatar, este escravo é instruído a alternar entre os modos page e page scan para poder criar os links restantes.
O processo todo termina quando todos os links necessários a piconets adjacentes forem estabelecidos.
A conectividade da scatternet resultante não é garantida, isto é, nem todas as BlueNets são conectadas mesmo quando as topologias resultantes da fase de descoberta são conectadas.
Um contra-exemplo simples é ilustrado por a Figura 2.2.
Assuma que os nós M1 e M2 descobriram um ao outro (linha pontilhada) e que eles são os únicos dois nodos que vão para o modo page na fase 0.
Assuma também que eles convidam com sucesso para juntarem- se às piconets os 7 vizinhos mais à esquerda e os 7 vizinhos mais à direita, respectivamente.
Em este caso, os nós em ambas as piconets vão para a fase 3.
Porém, não há maneira para se interconectar as piconets seja por pontes intermediárias ou por interconectar diretamente M1 e M2, visto que eles já tem 7 escravos cada um.
De acordo com a descrição do protocolo, escravos numa piconet precisam ser bloqueados de estabelecerem conexões com nós que pertencem a sua própria piconet.
Além disso, múltipla interconexão entre o mesmo par de piconets adjacentes tem que ser evitadas.
O primeiro requisito é alcançado ao se ter o mestre informando cada um dos seus escravos sobre a identidade de qualquer novo escravo que se junta à piconet.
Para evitar múltiplas conexões entre o mesmo par de piconets, cada vez que um escravo cria ou se junta uma piconet temporária com um escravo de uma piconet diferente, ele contata o seu mestre para saber se a conexão para esta outra piconet já existe.
Se esse não é o caso, o mestre informa aos outros escravos sobre a nova conexão inter-piconet.
BlueNet é descrito por o exemplo a seguir.
A Figura 2.3 ilustra rede descoberta a partir de a Fase de Descoberta.
Em este caso, não há necessidade de executar a Fase de Reabastecimento.
É assumido que o número associado a cada nó representa o seu Id único.
Em a fase inicial 0 (zero), os nós 6, 11, 17, 21 e 22 decidem aleatoriamente a começarem a fazer page para os seus vizinhos.
Todos os outros nós vão para o modo page scan.
Assim que o nó 6 é bem-sucedido em adquirir o nó 13 como escravo, ele se move para a fase 1, junto com o nó 13.
O mesmo acontece com os nós 11 e 30, que vão para a fase 1.
Similarmente, os nós 17 e 21 adquirem os nós 36 e 20 como escravos, respectivamente.
Os quatro nós todos se movem para a fase 1.
O nó 6 alarga a sua piconet ao adquirir os nós 7 e 25 como escravos, e o nó 8 se junta à piconet do nó 17.
Quando o nó 22 é bem-sucedido em fazer page para os nós 7, 13 e 30, ele se dá conta que esses nós já se juntaram a alguma outra piconet.
Sendo um mestre isolado, o nó 22 se move para a fase 2.
Nó 15 está esperando por um page de algum nó vizinho.
Visto que um page não chega em ele, depois de um tempo ele decide aleatoriamente se fica em modo page scan ou se alterna para o modo page.
Quando ele finalmente vai para o modo page e consegue contatar com sucesso os seus vizinhos 20 e 36, e vendo que eles já são escravos de outros mestres, ele se move para a fase 2.
A Figura 2.4 mostra as piconets originais, isto é, as piconets formadas por os nós nas fases 1 e 2.
Os nós 15 e 22, que estão na fase 2, fazem page a todos os seus vizinhos para que conectem em piconets adjacentes.
O nó 22, por exemplo, faz page aos vizinhos 7, 13 e 30, até que ele consiga contatar todos eles.
A o comunicar com o nó 30, o nó 22 pede para construir um link entre a piconet 22 e a piconet 11.
O nó 30 repassa essa requisição para o seu mestre, o nó 11, que concorda em compartilhar o nó 30 como um escravo-ponte.
Similarmente, 22 faz o mesmo pedido ao nó 7, e o nó 6 concorda em compartilhar o nó 7 como escravo-ponte.
Quando o nó 22 faz o mesmo com o seu nó vizinho 13, o 13 pede ao seu mestre nó 6 por a permissão para se juntar à piconet 22, mas nesse caso, o nó 6 não concorda em compartilhar o nó 13 visto que a piconet 6 já está interconectada à piconet 22, e a especificação do protocolo exige que não existam links múltiplos entre piconets adjacentes.
Similarmente, o nó 15 alarga a sua piconet para incluir os nós 20 e 36 como escravos, e portanto estabelecendo links para as piconets 21 e 17, respectivamente.
Nós 15 e 22 saem da execução do protocolo neste momento.
Quando os nós já contataram todos os seus vizinhos, os mestres na fase 1 passam para a fase 3, junto com os seus escravos.
Em esta fase, piconets adjacentes são interconectadas entre pontes inter 2.3.
O protocolo apresentado em, BlueStars, procede, a partir de a fase de descoberta de dispositivos, com as duas fases seguintes chamadas de Fase de Formação de Piconets e de Fase de Formação de uma Scatternet Conectada.
Baseado num peso localmente e dinamicamente computado, um número que expressa o quão adequado um nó é para se tornar o mestre, e no conhecimento do peso dos seus nós vizinhos obtido durante a fase de descoberta, cada nó decide se ele vai se tornar um mestre ou um escravo.
Esta decisão é tomada num nó dependendo da decisão dos seus vizinhos maiores, com peso maior que o seu, e então ele repassa essa decisão para os seus vizinhos menores.
Em especial, um nó que decide ser um mestre ou é umnó init ou é umnó cujos todos vizinhos maiores decidiram serem escravos.
Um nó ao qual foi dito via page por um ou mais dos seus vizinhos maiores que eles são mestres este nó se torna escravo do primeiro mestre que deu page em ele.
Esta fase do protocolo leva à partição da topologia, resultante da fase de descoberta, em piconets que possuem um mestre e um número de escravos que não é necessariamente limitado só por o número de vizinhos do mestre.
Observe que existem pares de mestres vizinhos.
Após esta fase, cada mestre procede para a seleção de dispositivos-ponte para interconectarem múltiplas piconets de forma que a scatternet resultante seja conectada.
Para alcançar conectividade é necessário e suficiente que cada mestre estabeleça um caminho com (isto é, escolhe pontes para) todos os mestres que estão a dois ou três hops de distância.
Mais precisamente, mestres estão a dois pulos de distância se eles podem ser interconectados por escravos-ponte (esta é a melhor maneira de interconectar piconets adjacentes).
Mestres estão a três pulos de distância se eles não estão a dois pulos de distância e não tem um par de pontes intermediárias por os quais eles possam se juntar.
O conhecimento sobre quais nós são os mestres que estão a dois ou a três pulos de distância é alcançado durante a Fase de Formação de Piconets.
Especificamente, cada nó v comunica o seu papel (e possivelmente a identidade e o peso do seu mestre) para todos os seus vizinhos menores e também para todos os seus vizinhos maiores que sejam escravos.
Se um nó é um escravo, ele espera por os vizinhos menores para comunicar a mesma informação.
Desta forma, ao final da Fase de Formação de Piconets cada nó é ciente dos Ids de todos os seus vizinhos e do Id e do peso dos seus mestres, que é a informação necessária para a Fase de Formação de uma Scatternet Conectada.
O principal objetivo do protocolo li-Stojmenovic/ BlueStars (LSBS), que é uma combinação da construção Yao proposta em e o BlueStars, é construir uma scatternet conectada onde cada piconet não tem mais do que sete escravos.
O protocolo assume que cada nó conhece a sua própria identidade, um peso computado dinamicamente que indica o quanto este nó é adequado para servir como mestre (como no BlueStars), e sua própria localização no plano (geralmente provida por um dispositivo GPS on-board, ou por qualquer sistema de posicionamento inercial que seja adequado).
É assumido que, como resultado da fase de descoberta de dispositivos, um nó também sabe a identidade dos seus vizinhos, os seus pesos, e as suas localizações.
Os dispositivos descobertos também trocam informação sobre os seus vizinhos (alcançando um conhecimento de vizinhança de dois pulos).
Em a descrição do algoritmo dado em é assumido que nós são espalhados no plano e que o grafo de rede resultante da fase de descoberta de dispositivos é conectada.
Dado que a fase de descoberta de dispositivos do BlueStars não produz uma rede conectada foi realizado nos experimentos de simulação uma fase extra descrita para o protocolo BlueTrees para que o protocolo funcione corretamente (reabastecimento).
Observasse que neste caso, já que o nó &quot;v «está consciente da informação de localização dos seus vizinhos de dois pulos, apenas os nós que, de forma esperada, estão no alcance de transmissão de &quot;v «precisam ser incluídos em &quot;Av».
Isto reduz de forma consistente o número de nós que precisam ser paginados por um nó que está executando a Fase de reabastecimento do BlueTrees.
O conhecimento da localização é então explorado para aplicar sobre a topologia de reabastecimento algumas técnicas baseadas em geometria para reduzir o grau da rede para até &quot;k «receba 7.
A construção Yao é executada em cada nó &quot;v «e procede da seguinte maneira.
O nó v divide o plano em torno de ele em &quot;k «ângulos iguais.
Em cada ângulo, o nó &quot;v «escolhe o vizinho mais próximo &quot;u».
Em a existência de empates os mesmos são quebrados de forma arbitrária.
Um link entre nós v e u sobrevive à fase de construção Yao se e somente se v escolheu u e viceversa.
Todos os outros links são deletados.
Para tomar tal decisão os nós precisam trocar com os seus vizinhos a informação relativa aos nós que eles selecionaram.
Apesar de alguns links serem deletados, a construção Yao garante a conectividade da topologia resultante.
Assim que uma topologia conectada com tal grau limitado foi obtida, o algoritmo BlueStars para formação de scatternets descrito anteriormente usa os pesos dos nós para selecionar os mestres, os escravos, e as pontes necessárias para formar uma scatternet conectada com limitação de grau Considerando novamente a rede da Figura 2 como sendo a rede resultante da fase de descoberta de dispositivos e da fase de reabastecimento.
O único nó com mais de 7 vizinhos é o nó 36.
Portanto, ele executa o procedimento de construção Yao para descartar um dos seus 8 vizinhos.
Assumindo que os nós 20 e 21 caem no mesmo de um dos 7 ângulos em que o nó 36 particionou o plano em torno de ele, o resultado da fase de construção Yao é o cancelamento do link entre o nó 21 e o nó 36.
A seguinte execução do BlueStars sobre a topologia Yao leva à mesma scatternet que nós iríamos obter com o BlueStars exceto por o fato de que agora os nós 36 e 21 não são mais vizinhos.
Portanto, sendo o nó 21 o maior na sua vizinhança, ele se torna um mestre e adquire o nó 20 como o seu escravo.
Em a fase final de formação de scatternets conectadas, o nó 20 é escolhido como escravo-ponte entre o mestre 21 e o mestre 36.
Após o estudo dos trabalhos sobre BlueTrees, BlueStars, BlueNet e LSBS Protocol e, alguns aspectos importantes foram definidos como as propriedades desejáveis que os protocolos de formação de scatternets devem satisfazer.
Estas propriedades são demonstradas na Tabela 2.1, onde cada item esta especificado abaixo:
Formação de scatternets conectadas, garante a conexão de todos os nós que estão dentro de a área de formação da rede;
Habilidade de funcionar em redes desconectadas, prevê meios de manter a rede em caso de desconexão de algum nó;
Formação de scatternets com múltiplas rotas, se a rede formada possui mais de uma rota dispon ível para comunicação entre dois nós;
Formação de scatternets com um número limitado de escravos por piconet, se as piconets formadas possuem um numero limitado de escravos.
Seleção de mestre baseada em recursos, se o protocolo usa características de cada nó, como por exemplo, poder computacional para a escolha do mestre.
Outro aspecto importante é que todos os protocolos dependem de uma fase de descoberta de dispositivo que precede a fase de conexão e de interconexão de piconets e nenhum dos protocolos tratam a saída (queda) e entrada de dispositivos na rede, fato que motivou a modelagem de um protocolo para aplicações como jogos onde o tempo de reconstrução total da rede impossibilita a utilização dos protocolos estudados.
Foi definido após o estudo das referências bibliográficas que o modelo deveria trabalhar sobre o BlueStars, por ser o mais completo sem a necessidade de utilização de GPS como é o caso do e LSBS Protocol.
O próximo capítulo detalha o modelo de protocolo desenvolvido no presente trabalho.
Em este capítulo será exposto o modelo proposto que se desenvolve sobre o BlueStars trabalho apresentado em, com o objetivo de introduzir melhorias na propriedade de Capacidade de Recuperação, pois esta pode ser interessante para certas aplicações interativas, como jogos por exemplo.
Em a próxima seção são descritos os conceitos básicos da tecnologia Bluetooth necessários para o entendimento do funcionamento do protocolo.
A seção 3.2 descreve um estudo de caso onde o modelo proposto pretende sanar deficiências do BlueStars, devido a o mesmo, possuir uma Capacidade de Recuperação para saída de nós da rede.
Em a seção 3.3 está descrito o modelo do protocolo desenvolvido neste trabalho.
Em esta seção estão expostos os conceitos básicos de Bluetooth para compreensão do modelo de protocolo.
Em é descrito detalhadamente a Tecnologia Bluetooth.
Todos os dispositivos numa piconet compartilham o mesmo canal, ou seja, uma seqüência de pulo de freqüência que é derivada do Id único e do relógio Bluetooth do mestre.
A comunicação de e para um dispositivo é sempre realizada através do mestre da piconet à qual o dispositivo pertence.
Em particular, um esquema Time-Division Duplex (TDD) é empregado para comunicações dentro de uma piconet.
As transmissões ocorrem em pares de &quot;slots «de 625 microsegundos, sendo que o primeiro slot de cada par é usado para comunicação mestre-escravo e o segundo para a comunicação do escravo que foi consultado em direção a o mestre.
A formação de piconets é feita em dois passos.
Primeiro descoberta de dispositivos e depois troca de informação para criar um canal de comunicação entre um candidato à escravo e um candidato à mestre.
De acordo com a especificação da tecnologia Bluetooth o primeiro passo é feito por inquiry e inquiry Scan, e o segundo por page e Page Scan.
Para que a descoberta de dispositivos aconteça, dois dispositivos vizinhos precisam estar em modos opostos:
Ou seja um precisa estar operando em modo inquiry) e o outro tem que ser o dispositivo que está querendo ser descoberto (executando em modo inquiry scan).
O inquisidor transmite pacotes de &quot;ID de inquisição «pedindo para que os dispositivos vizinhos se identifiquem para prover informação de sincronização que será necessária para o estabelecimento do link mais tarde.
Para minimizar o tempo de descoberta de dispositivos, a especificação Bluetooth define que pacotes de Id devem ser bem pequenos e que eles precisam ser transmitidos sobre as freqüências de uma seqüência de pulo de freqüência de inquiry ou inquiry scan, que é pré-definida, trocando de freqüência numa taxa alta (duas vezes um slot).
Um dispositivo em Inquiry Scan pula entre as diferentes freqüências de forma bem lenta, e portanto aumentando a probabilidade de um handshake na mesma freqüência de um inquisidor.
Assim que um pacote de Id é recebido no dispositivo em Inquiry Scan, o dispositivo calcula um intervalo de tempo de backoff e continua a escutar.
Apenas quando um pacote de Id é recebido após a fase de backoff é que o dispositivo em inquiry Scan vai enviar um pacote FHS contendo a sua identificação e a informação de sincronização (o seu relógio Bluetooth).
O procedimento de inquisição descrito acima leva a um conhecimento assimétrico de dois dispositivos vizinhos:
A identidade do inquisidor não é conhecida no dispositivo que recebeu um pacote de Id de inquisição.
Por outro lado, após uma resposta bem-sucedida do dispositivo em inquiry Scan, o inquisidor sabe a identidade e o relógio do vizinho que acabou de responder.
Isto permite que o inquisidor v estime a seqüência de pulo de freqüência usada por o seu vizinho e portanto convide ele a se juntar à sua piconet como um escravo.
Esse convite é feito por meio de as operações de paging.
Para que dois dispositivos vizinhos u e v estabeleçam um link, um precisa estar em modo Page, por exemplo, nodo v, e o outro em modo Page Scan, nodo u.
Por definição o dispositivo que encontrasse em modo Page é o mestre.
O nó v transmite um pacote de Id de page nas frequências de u, contendo o endereço de u.
Quando u, que está em Page Scan, recebe o tal pacote, ele imediatamente envia uma confirmação.
Em este ponto, v transmite a u um pacote FHS que tem toda a informação necessária para que u se sincronize na seqüência de pulos de freqüência de v..
Finalmente, os dois dispositivos trocam toda a informação para estabelecer um link e uma piconet é formada com v sendo o mestre e u o escravo.
Pode acontecer que esse dispositivo u, que está em Page Scan, já é mestre de outra piconet e que ele poderia tornar v um dos seus escravos.
Em este caso, uma vez que uma piconet foi estabelecida entre v e u, comv como o mestre, o escravo u pode pedir uma troca de papéis.
Esta situação é tratada explicitamente por a especificação do Bluetooth e é executada através da troca de um pacote específico do protocolo de gerência de link (LMP -- Link Manager Protocol) que instrui os dois dispositivos para trocarem para a seqüência de pulo de freqüência do novo mestre.
Para conservar a energia dos dispositivos Bluetooth, modos de operação de baixo consumo de bateria foram incluídas nas especificações que permitem que nós de Bluetooth entrem em modo Sleep quando não estão envolvidos ativamente numa comunicação.
Pode ser utilizado no modelo esta característica para deixar que um mestre libere um escravo para que este possa executar operações relativas ao protocolo em outra piconet, como é feito no modelo BlueStars.
Um escravo que é posto no modo Park por seu mestre não pode ativamente ser envolvido numa comunicação com este mestre.
Entretanto, os escravos estacionados acordam periodicamente dentro de intervalos de tempo predefinidos para escutarem mensagens do seu mestre.
O des-estacionamento, possivelmente demúltiplos dispositivos, é alcançado através da transmissão de um LMP unparkProtocol Data Unit (PDU) nessa janela de tempo.
Este pacote carrega o Id dos dispositivos que devem ser desestacionados e qual será os seus novos endereços de escravo ativos.
Escravos estacionados podem causar o disparo de um pacote LMP PDU através do envio explícito de requisições durante janelas de tempo pré-alocadas.
Similarmente, dispositivos ativos podem pedir para serem estacionados (ou podem ser estacionados por o seu mestre) através da troca de um pacote LMP park com o seu mestre.
Após o estudo dos protocolos de formação de scatternet existentes, uma das desvantagens visualizadas, é que nenhum dos protocolos trata a saída ou entrada de dispositivos, na rede após esta última ser iniciada.
Jogos digitais, são um modelo de aplicação, que deve atender esse aspecto, pois a cada saída de um dispositivo no decorrer de uma partida causaria uma nova fase de descoberta de dispositivos que, como já foi citado anteriormente, é a etapa que mais consome tempo na formação de uma scatternet.
O protocolo proposto visa atender as características descritas nessa seção.
Inicialmente, o local onde jogos acontecem tem um espaço limitado e pré-determinado, como por exemplo uma sala de espera ou um vagão de trem.
Com isso, os nós tendem a ficar concentrados formando assim um grafo de visibilidade quase completo, isto é, onde a maioria dos nós tem a possibilidade de estabelecer comunicação com todos os outros.
Em este cenário, o protocolo BlueStars acarretaria um consumo de bateria elevado devido a utilização dos modos Park e UnPark, que seria necessário pois no BlueStars não há limite de conexões numa Piconet.
Em o cenário de uso visualizado, os usuários da aplicação chegariam ao local e formariam uma rede de dispositivos portáteis tais como notebooks, telefones celulares e PDA's com a finalidade de, por exemplo, jogar um jogo.
Imagina- se inicialmente, o uso do modelo para jogos &quot;casuais», onde o tempo do uso da aplicação, isto é, da &quot;partida «do jogo, ficasse, por exemplo, entre 20 e 30 minutos, mas podendo ser mais longo.
Isso modifica um parâmetro muito importante, que é o algoritmo de escolha de pontes da scatternet, pois em todos os protocolos existe a preocupação com o consumo de energia dos nós-ponte, que é aproximadamente 20% maior que nos outros nós.
Como citado anteriormente, no caso de desconexão da rede de um nó, seja por saída ou queda, os protocolos estudados teriam que executar novamente a descoberta de dispositivos, que levam no caso de o BlueStars, por exemplo, por volta de 28s.
Foi baseado nessas características que foi modelado o protocolo proposto neste trabalho.
Em esta seção está a definição do modelo proposto que assim como o BlueStars é dividido em três etapas:
A etapa de descoberta de topologia, a etapa de formação de Piconets e a etapa de formação de Scatternet.
Em esta etapa é descrito como cada par de dispositivos vizinhos obtém as informações sobre o Id um do outro usando os procedimentos de Inquiry e Page.
Os procedimentos de Inquiry descritos nas especificações do Bluetooth indicam como um dispositivo no modo Inquiry pode fazer com que um dispositivo vizinho que está no modo Inquiry scan envie o seu Id e a sua informação de sincronização necessária para o estabelecimento de um link.
Entretanto, nenhuma indicação é dada em como garantir que os dispositivos vizinhos estão em modos opostos de inquiry, que é a condição necessária para que eles se comuniquem.
Além disso, o broadcast da mensagem de inquiry por a fonte não contem nenhuma informação sobre ela mesma.
Assim, uma vez que dois dispositivos vizinhos terminam um handshake de Inquiry, apenas a fonte sabe a identidade do dispositivo que está emInquiry Scan.
Para superar essas desvantagens e alcançar o conhecimento mútuo de Ids, foi usado assim como no BlueStars Scatternet, um mecanismo similar ao introduzido em.
Cada dispositivo alterna entre os modos Inquiry e Inquiry Scan, ficando em cada modo por um intervalo de tempo escolhido aleatoriamente.
Quando dois nós em modos de Inquiry opostos, ou seja Inquiry e Inquiry Scan fazem um handshake, eles criam uma piconet temporária que dura apenas o tempo necessário para que eles troquem os seus Ids.
Um dispositivo genérico v que executa o procedimento de descoberta, define um temporizador para que ele fique com o valor do intervalo tempo pré-definido por a fase de descoberta.
O dispositivo v então aleatoriamente entra ou no modo Inquiry ou no modo Inquiry Scan.
Enquanto ele está num dos modos, o dispositivo v realiza os procedimentos de inquisição descritos por as especificações do Bluetooth.
Após uma fase de Inquiry (ou Inquiry Scan) ser completada o dispositivo troca para o outro modo (Inquiry Scan ou Inquiry).
Como mencionado antes, para permitir que cada par de dispositivos vizinhos alcancem o conhecimento mútuo sobre os Ids uns dos outros.
O modelo requer ao dispositivo em modoInquiry enviar um pacote FHS ou quando um dispositivo em Inquiry Scan receba um pacote FHS, para que assim uma piconet temporária seja criada através de uma fase de Page e os dispositivos troquem seus Ids, juntamente com a informação de sincronização necessária para que mais comunicação ocorra.
Assim que essa informação é trocada, a Piconet é dissolvida.
A eficácia do mecanismo descrito acima, para prover a informação mútua necessária para pares de dispositivos vizinhos, depende da idéia de que, ao alternar entre os modos Inquiry e Inquiry Scan e escolher aleatoriamente o comprimento de cada fase de Inquiry ou Inquiry Scan, tem- se uma alta probabilidade de que qualquer par de dispositivos vizinhos estejam em modos opostos por um tempo suficientemente longo, e portanto permitir que ambos os dispositivos descubram- se.
A Figura 3.1 mostra um cenário formado por 10 nós num momento antes de rodar a primeira fase do modelo do protocolo, na Figura 3.2 mostra o mesmo cenário após a fase de descoberta de dispositivos, uma linha entre dois dispositivos indica que eles estão no alcance de transmissão um do outro.
Baseado nas informações recolhida na fase anterior, ou seja, o Id, e a informação da sincronização dos vizinhos descobertos, cada dispositivo executa um algoritmo localmente.
A regra seguida por cada dispositivo é a seguinte:
Um dispositivo v decide se será um mestre ou um escravo dependendo da decisão feita por o vizinhos com peso maior.
O peso pode ser definido de acordo com vários critérios, como por exemplo a capacidade de processamento e a quantidade de energia da bateria disponivel.
Em o modelo e testes adotou- se apenas por o Id..
Em especial, v se torna o escravo do primeiro mestre entre seus vizinhos maiores que enviou um Page para ele e o convidou para se juntar à sua piconet.
Uma vez que um dispositivo decidiu seu papel, comunica a todos seus vizinhos (menores) de modo que possam também fazer sua própria decisão.
Vamos chamar os nós que têm o peso maior de entre os seus dispositivos nó inicial da vizinhança.
Dado o ordenamento total correspondente, há sempre pelo menos um nó inicial.
Os nós iniciais são os dispositivos que iniciam a fase da formação de Piconets.
Eles serão mestres.
Estes são os únicos dispositivos que vão para o modo Page imediatamente depois da fase da descoberta de dispositivos.
Todos os outros dispositivos vão para o modo Page Scan.
Os dispositivos escolhidos como nó inicial são ilustrados como triângulos na Figura 3.3.
O dispositivo genérico v fica no modo Page Scan até que ele possa receber um Page de todos os seus vizinhos maiores.
Como mencionado anteriormente, nesta fase, se pelo menos um vizinho maior é um mestre, então v se juntará à piconet do primeiro mestre que fizer um Page em ele.
Caso contrário, o v se tornará um mestre ele próprio.
Em qualquer um desses casos, assim que todos os vizinhos maiores fizeram Page em ele, o v troca para o modo Page e faz um Page em um por um desses vizinhos que ainda não estão cientes do seu papel.
Apenas os dispositivos selecionados como nó inicial irão para o modo Page e vão começar a paginar os seus vizinhos menores um por um.
Os parâmetros do Page são a identidade do dispositivo paginado u, a identidade do dispositivo paginador v, o papel do Paginador (se é mestre ou escravo), e, no caso em que o dispositivo paginador v é um escravo, a identidade do dispositivo que é o mestre do v..
No caso de v ser um mestre, esse parâmetro é irrelevante e pode ser setado automaticamente para apontar para o próprio v..
Todos os dispositivos não selecionados para serem nós iniciais vão para o modo Page Scan.
O procedimento de gravar o papel de um dispositivo u inclui toda a informação da sincronização e de endereçamento, que permitem a v estabelecer uma comunicação com u mais tarde, se necessário.
Além disso, se o nó u for um escravo, a identidade do mestre do u é também gravada.
A o receber um Page de um dispositivo u, o dispositivo v começa verificando se este foi um Page de um vizinho maior ou de um menor.
Um Page de algum vizinho menor é necessário para recolher a informação usada mais tarde no procedimento de seleção de pontes.
Em o caso em que o Page é de um vizinho maior u, v verifica se u é mestre.
Se é mestre, e v não é parte de nenhuma piconet ainda, então o v se junta à piconet do u.
Se, ao contrário, o dispositivo v já está numa piconet, então o v informa ao dispositivo u sobre isso, também comunicando o Id de seu mestre.
O dispositivo v prosegue então para verificar se todos seus vizinhos maiores já fizeram Page.
Se este não for o caso, ele passa então a esperar outro Page, portanto, parando a execução do procedimento.
Quando paginado com sucesso por todos seus vizinhos maiores, o dispositivo v sabe se ele já se juntou à piconet de um mestre maior ou não.
Em o primeiro caso, o dispositivo v é o escravo do mestre maior que o paginou primeiro.
Em o último caso, o dispositivo v próprio está indo ser um mestre.
Em todo o caso, o dispositivo v vai para o modo page e comunica sua decisão primeiramente a todos seus vizinhos menores e então também a seus vizinhos maiores que são escravos.
Em este momento, um mestre v se retira da execução desta fase do protocolo.
Se o dispositivo v for um escravo, ele retorna ao modo Page Scan e espera os Pages de todos seus vizinhos menores.
Certamente, alguns dos vizinhos menores de um escravo podem não ter decidido ainda o seu papel no momento em que recebem um Page de um vizinho maior.
Assim que um dispositivo fizer uma decisão sobre o seu papel, conseqüentemente ele faz Page para os seus vizinhos maiores e comunica se é um mestre ou um escravo, junto com o Id do seu mestre (se ele decidiu ser escravo).
Esta troca de informação é necessária para executar a fase seguinte de seleção de pontes para que se obtenha uma scatternet conectada.
O funcionamento da fase de formação da Piconets é ilustrado por o exemplo a seguir:
Considere a rede Bluetooth ilustrada na Figura 3.2, onde uma conexão entre dois dispositivos indica que dois nós se descobriram mutuamente durante a fase de descoberta de topologia.
Dado que são os dispositivos com o Id maior em sua vizinhança, os dispositivos 10, 9 e 7 somente eles são nós iniciais (ilustrados como triângulos na Figura 3.3).
Eles iniciam o protocolo no modo Page e começam a fazer Page nos dispositivos vizinhos.
Todos os outros nós começam no modo Page Scan.
O dispositivo 7 faz Page com sucesso nos dispositivos 3 e 4, que se transformarão em escravos na piconet 7 resultante (foi seguido a nomenclatura típica de bluetooth para identificar uma piconet por o seu mestre).
A Piconet 9 é formada por seu mestre, o dispositivo 9, e por todos seus vizinhos:
Todos os dispositivos são sempre capazes de distinguir entre um Page enviado por um dispositivo na fase um, onde o Page é usado para estabelecer uma piconet temporária para atingir o conhecimento simétrico de topologia, e um Page da segunda fase que é baseado no papel do parâmetro.
Em a fase de descoberta de topologia, o papel do parâmetro é setado como &quot;nenhum», enquanto na fase de formação das BlueStars ele é sempre setado como mestre ou escravo visto que os dispositivos enviam Page apenas após terem decidido os seus papéis.
As operações de protocolo desta fase dependem dos procedimentos padrões de Page do Bluetooth.
Entretanto, os procedimentos Page e Page Scan usados no modelo assim como no BlueStars supõem a possibilidade de trocas de informações adicionais, tal como o papel do dispositivo e, para os escravos, o Id dos seus mestres.
Estas informações não podem ser incluídas no pacote de FHS que é o pacote trocado nos procedimentos padrões de Page.
A proposta feita no modelo BlueStars é adicionar um Protocol Data Unit (PDU) de LMP, inclu índo campos onde possa ser inserido o papel do dispositivo que está enviando a mensagem e o Id do seu mestre.
Isso proporciona uma troca mais fácil da informação necessária para a formação de scatternets.
Naturalmente, sempre que um escravo se junta a uma piconet não-temporária, uma formação completa de piconet precisa ser feita, e depois disso o escravo é posto no modo Park para permitir que ele prossiga com a operação do protocolo, por exemplo, executando o Page ele mesmo quando for necessário.
Em esta etapa estão as principais modificações propostas no modelo.
Essas modificações tem como objetivo tornar o BlueStars seguro na presença de eventos de entrada e saída de nós da rede móvel.
A finalidade da terceira fase do protocolo é interconectar as piconets vizinhas selecionando dispositivos que farão a ponte entre as piconets de modo que a scatternet resultante, esteja conectada.
As tarefas principais realizadas por esta fase do protocolo são, portanto, a seleção de pontes para ligação das Piconets, e a interconexão dessas.
Dois mestres são chamados de mestres vizinhos se houver ou um caminho de dois pulos entre eles, com o nó intermediário sendo o escravo de um de eles, também chamado de ponte escrava, ou há um caminho de três pulos que atravessa dois de seus escravos, chamados de pontes intermediárias.
Por exemplo, na Figura 3.4, os mestres 9 e 10 são mestres vizinhos visto que eles podem ser interconectados através de várias possibilidades de pontes intermediárias:
5 e 8, 5 e 1, 2 e 6 e 2 e 1.
Um mestre é chamado de mestre inicial, se tiver o maior peso entre todos os seus mestres vizinhos.
Conseqüentemente, o conjunto de mestres resultante da fase de formação de Piconets é dividido em dois conjuntos:
Os dispositivos mestres iniciais e os dispositivos que não são mestres iniciais.
Referindo- se outra vez à Figura 3.4, o mestre inicial é o dispositivo mestre 10.
Os 2 mestres restantes são mestres não iniciais.
A conectividade da scatternet é garantida por o seguinte teorema:
Dado os piconets resultantes da fase da formação de Piconets, a ocorrência de uma Scatternet conectada é garantida se cada mestre estabelecer conexões multi-pulo a todos os seus mestre vizinhos.
Esse Teorema define um critério para selecionar pontes que garantam a conectividade da scatternet resultante.
Para cada dois mestres, os seus escravos nos caminhos com dois pulos e com três pulos entre eles vão ser pontes.
Se não há mais de um caminho de interconexão entre dois mestres, eles podem decidir ficar com apenas um escravo-ponte ou um par de pontes intermediárias entre eles ou então manter múltiplas interconexões.
Em o protocolo BlueStars fica estabelecido que apenas uma rota deve ser selecionada, enquanto no modelo proposto todas as rotas serão utilizadas.
A seleção de pontes é realizada localmente em cada mestre baseado nas informações coletadas até o fim da fase de formação de Piconets:
O Id dos vizinhos de um pulo de seus escravos;
O Id dos mestres dos vizinhos de um pulo dos seus escravos (coletados a partir de os seus próprios escravos) e O Id dos mestres dos escravos vizinhos que não se juntaram à piconet de ele.
Com essas informações o modelo seleciona qual será a rota primária, ou seja, por onde as mensagens irão trafegar até que a rota seja perdida.
No caso de problemas com essa rota primária uma nova rota que já esta estabelecida mas não é utilizada passa a ser a rota de comunicação entre dois mestres vizinhos.
Para a seleção quando forem mestres vizinhos de dois pulos, o maior escravo-ponte é escolhido como a ponte que formará a rota primária.
No caso de mestres vizinhos de três pulos, o par de pontes intermediárias selecionado é aquele em o qual a soma dos Id de eles é a maior.
Por exemplo na Figura 3.4 a rota primária entre os mestres vizinhos 9 e 10 seria através das pontes intermediárias 5 e 8, no caso de problemas com essa rota, o modelo proposto passaria a utilizar a segunda maior soma que no caso seria 2 e 6.
Assim que a seleção de ponte é realizada, o protocolo é capaz de estabelecer todas as conexões e de estabelecer todas as novas piconets, para obter uma scatternet totalmente conectada.
Todo o mestre v inicia verificando se ele é um mestre ou não.
Se ele é um mestre inicial, ele instrui cada um dos seus escravos ponte e pontes intermediárias u para irem para o modo Page e para fazerem Page quando é necessário, nos dois casos citados a seguir.
Em os mestres vizinhos para os quais u foi selecionado como o escravo ponte.
Em este caso, assim que u se torna o mestre de um mestre vizinho t, eles realizam uma troca de papéis de forma que u também se torna um escravo na piconet de t..
Em este caso, nenhuma nova piconet é formada e o escravo entre v e t é então um escravo nas duas piconets.
A` s suas pontes intermedia´ rias, que foram selecionadas para interconectar v com os seus mestre vizinhos t de três pulos.
Em este caso, u se torna também um mestre de uma piconet cujo escravo é também um escravo de t, isto é, uma nova piconet é criada para fazer a ligação entre as piconets dos dois mestres.
O mestre inicial v pode então ele mesmo ir para o modo page para recrutar, para a sua piconet, alguns destes nós vizinhos que tenham se juntando à alguma outra piconet, de forma que estes nós podem ser pontes para os seus mestres originais.
Um nó v que não é um mestre inicial instrui todos os seus escravos u, que são pontes para mestre vizinhos maiores, para irem para o modo Page Scan e para esperarem que os nós especificados façam page em eles.
Então, v verifica para identificar se tem escravos ponte de mestre vizinho maiores aos quais ele tem que se interconectar.
Se este é o caso, v espera para receber um page desses nós.
Após as rotas para mestres vizinhos maiores serem desta forma estabelecidas, v começa a configurar conexões para mestres vizinhos menores.
Para este propósito, ele age como se ele fosse um mestre inicial.
A Figura 3.5 mostra a scatternet resultante da conexão das Piconets da Figura 3.4 quando ao final do protocolo BlueStars.
A Figura 3.6 mostra a scatternet resultante quando o modelo proposto é aplicado também sobre as piconets da Figura 3.4, onde as linhas tracejadas são as rotas auxiliares e as linha contínuas são as rotas principais.
A partir deste ponto, os nós 10 e 9 realizam totas as trocas de mensagens a partir de a segunda rota de sua lista, ou seja, a fase de formação de scatternets e voltam a se conectar através da rota auxiliar formada por a ponte intermediária formada por os nós 2 e 6.
O nó 2 então se torna o mestre da piconet formada por os nós 2 e 6.
A Figura 3.8 demonstra como seria a rede da Figura 3.4 após a queda do nó 8 e se a scatternet estivesse executando o protocolo proposto ao invés de o BlueStars.
Para essa troca de rota o tempo estimado fica em torno de 3s, com base no tempo que é definido para a terceira fase do protocolo BlueStars.
Portanto, o protocolo proposto é mais tolerante à queda ou saída de nós ponte da scatternet, isto é, no protocolo proposto, a queda ou saída de um nó ponte acarreta um atraso de até 3s na comunicação das piconets unidas por o nó ponte ou por uma ponte intermediária.
Já no caso de o BlueStars, o atraso pode ser de até 28s e envolve uma reconstrução total da scatternet, ou seja, um atraso significativamente maior.
Em o próximo capítulo são encontrados os resultados das simulações feitas e as comparações com o protocolo BlueStars.
O presente trabalho visava se inserir no contexto do projeto Brazil-IP, que envolve várias universidades brasileiras no desenvolvimento de uma plataforma de prototipação de sistemas wireless denominada Fênix.
Dentro de o projeto, cada universidade é responsável por o projeto e implementação de um IP específico.
O conjunto de IPs é testado e validado na Plataforma Fênix.
A Figura 4.1 apresenta a organização interna da Fênix, salientando os dez núcleos (IP cores) componentes desta, bem como a interconexão destes via a rede de interconexão Hermes.
A partir de a Figura 4.1, nota- se que os blocos constituintes da Fênix podem ser divididos em nove núcleos processadores e um núcleo de comunicação (Hermes), todos interconectados através do núcleo Hermes.
A plataforma Fênix é uma boa opção validação do trabalho.
Essa plataforma que é composta do microprocessador RISC Leon (SPARC compliant), módulos de decodificação áudio/ vídeo MP3/ MPEG4, módulos de comunicação tais como USB e Bluetooth, todos estes interligados através da rede Hermes.
A rede intrachip Hermes é a contribuição da PUC-RS ao projeto, sendo desenvolvida por o grupo GAPH da FACIN.
Esta plataforma encontra- se prototipada em FPGAs Xilinx e Altera, e vem sendo a base de diversos trabalhos de grupos de pesquisa da FACIN, e das demais universidades parceiras.
Conforme ilustrado na Figura 4.1, a Fênix contém um controlador Bluetooth.
Esse controlador é um núcleo IP Desenvolvido por os parceiros da USP.
De forma a possibilitar a formação de uma scatternet, protocolo proposto, é necessário que o núcleo Bluetooth possua capacidade para controle de dois rádios.
Assim, um nó poderá, simultaneamente, ser mestre numa piconet, e escravo em outra.
Essa alteração no núcleo Bluetooth da Fênix é responsabilidade dos desenvolvedores do mesmo, e assim que for realizada, a Fênix poderá vir a ser o primeiro dispositivo no mundo a possuir a capacidade para suporte a formação de scatternets, conforme definido na especificação Bluetooth.
O protocolo proposto nessa dissertação foi projetado e desenvolvido visando prover essa capacidade a Fênix.
Em o momento da escrita dessa dissertação, o núcleo Bluetooth da Fênix ainda não possuia implementada a capacidade de controlar dois rádios simultaneamente, e a validação da proposta foi realizada por intermédio de simulação, conforme descrito a seguir.
Inicialmente, foi utilizado o simulador ns-2 para modelagem e validação do protocolo proposto.
O ns-2 é um simulador de redes de computadores, com maleabilidade em relação a os protocolos de rede, suportando simulações de protocolos em larga escala e é usado também como um emulador de rede podendo fazer interação com uma rede real.
O ns-2 possui um visualizador gráfico para animações da simulação (Network Animation -- NAM), timers e escalonadores, prevê suporte aos protocolos TCP e UDP, contendo modelos para cálculos numéricos, ferramentas de plotagem (o xgraph) e vários geradores de tráfego.
Possui módulos como o interpretador para tcl (tcl/ tk) que é a interface com o usuário, o tcl com orientação ao objeto (Otcl), a implementação de classes para Tcl (tclcl), classes do simulador (ns-2), bibliotecas (cweb e SGB), geradores de topologia (bt-itm, gt-itm, sgb2-ns) e ferramenta para compreensão de arquivos.
Além disso, O ns-2 traz com si um código aberto onde é permitido a inclusão de novos módulos ou a alteração dos que já existem, além de ser gratuito, sua utilização pode ser em diferentes plataformas como:
Unix, linux, SunOS, FreeBSD e Solaris.
Devido a a sua flexibilidade, é tido como &quot;padrão «para realização de testes e validação de protocolos de rede.
Porém, o ns-2 não possui capacidade para implementação de simulações de redes formadas com a tecnologia Bluetooth, devido a falta das especificações Bluetooth neste simulador, e as extensão disponíveis não possibilitavam as modificações necessárias como, por exemplo, as mensagens de Page que devem carregar o Id do mestre de um nó para seus vizinhos.
Devido a essas dificuldades associadas ao ns-2, foi desenvolvido um simulador, baseado na modelagem descrita no capítulo 3.
O simulador desenvolvido tem como objetivo obter resultados referentes ao tempo de indisponibilidade de uma scatternet (para comunicação normal da aplicação) devido a a execução de operações de manutenção da mesma que são realizadas por os protocolos de formação e de manutenção da rede ad hoc.
Mais especificamente, o simulador compara o tempo de indisponibilidade médio gasto com a re-execução da fase de descoberta de dispositivos, da fase de formação de piconets, e da fase de formação de scatternets, tanto do protocolo BlueStars original, quanto do protocolo proposto por este trabalho, lembrando que o protocolo modificado, proposto, possui uma fase de formação de scatternet diferente da de o BlueStars original.
O simulador é uma aplicação de linha de comando, implementada em Java, utilizando apenas as bibliotecas padrão.
O simulador possui como entradas, os seguintes parâmetros:
Número de iterações:
O simulador irá repetir várias vezes a simulação e, ao final, apresentará uma média do resultado obtido em todas as iterações Número de nós:
O simulador irá posicionar aleatoriamente, no ambiente simulado, a quantidade de nós especificada neste parâmetro Tempo de simulação (em segundos):
Cada iteração irá representar uma sessão de uso da aplicação (por exemplo, de um jogo) que durará o tempo especificado (o padrão são 1200 segundos, ou seja, 20 minutos) Probabilidade de queda ou saída de nó (por segundo):
A cada segundo de tempo de uso da rede que for simulado, o simulador irá utilizar este parâmetro para decidir, para cada nó, se ele irá falhar (cair ou sair do alcance da scatternet).
Largura do ambiente (plano 2 D) em metros Altura do ambiente (plano 2 D) em metros Algoritmo a ser utilizado (B:
BlueStars original, ou M:
BlueStars modificado).
O simulador executa várias iterações sobre um único algoritmo e, portanto, para comparar resultados, é necessário executar- lo separadamente para cada algoritmo Probabilidade de descoberta de nó em alcance:
Este parâmetro, com valor padrão em 0.93, representa a chance de que dois nós, no alcance de transmissão um do outro, se descubram na fase de descoberta de dispositivos.
Este parâmetro é retirado dos resultados obtidos em Uma iteração do simulador possui as seguintes etapas:
InitScenario: Posiciona, de forma aleatória (com gerador de números aleatórios distribuídos uniformemente no intervalo), a quantidade de nós especificada no parâmetro 2, numa área 2D especificada por os parâmetros 5 e 6.
Discovery: Simula a fase inicial de descoberta de dispositivos, montando o grafo de visibilidade, de forma que alguns pares de nós, em alcance de transmissão uns dos outros, possam acabar não tornando- se visíveis uns aos outros.
ElectInits: Marca os nós que serão nós iniciais, segundo a terminologia do BlueStars FormPiconets:
Utilizando os nós iniciais, forma as piconets iniciais, o que é especificado por a fase de formação de piconets do BlueStars FixIsolatedNodesAndFlagInitMasters:
Uma etapa auxiliar, que precede a implementação da terceira fase (de formação de scatternets).
Este método identifica nós que acabaram isolados devido a não terem recebido um Page de um mestre vizinho (nó maior), e não possuírem vizinhos menores que já não sejam escravos de outros mestres.
Após identificados, estes nós viram mestres de piconets vazias, o que permite a sua inclusão na scatternet posteriormente através das pontes que serão criadas.
Após, todos os mestres são marcados como &quot;mestres iniciais», o que é essencial para que a fase de formação de scatternets funcione como especificado nos artigos do BlueStars.
ModifiedScatternet: Executa a terceira fase, ou seja, de formação de scatternets, que é proposta neste trabalho.
Esta implementação, como discutido, irá alocar mais pontes entre duas piconets adjacentes (caminhos alternativos) para que a scatternet resultante seja mais tolerante à queda ou saída de nós.
SimulateDrops: Este método finalmente irá executar uma iteração interna para cada segundo de tempo em que a rede é usada, utilizando o parâmetro 4 para determinar a probablidade de um nó simulado cair.
Quando isto ocorre, dependendo do algoritmo selecionado (BlueStars original ou modificado), um &quot;tempo de indisponibilidade «diferente será acumulado para a iteração de fora de o simulador.
Após todas estas iterações, é feita uma média do &quot;tempo de indisponibilidade «obtido em cada iteração, e isto é apresentado como o principal dado de saída do simulador.
Como visto anteriormente, o simulador permite a variação do tamanho do ambiente, do número de nós, da probabilidade de queda de um nó (por segundo) e do algoritmo utilizado, que foram os parâmetros variados durante os experimentos realizados.
Os experimentos e os resultados obtidos são apresentados e analisados no importante ressaltar que o simulador faz uma simplificação que, porém, não deve alterar os resultados.
Em a fase de formação de scatternets do BlueStars original, escravos-ponte que unem dois mestres são escolhidos por o maior peso.
Isto é, se dois mestres possuem, ao final da fase de formação de piconets, dois nós, com pesos, por exemplo, 5 e 10, que estão no alcance de visibilidade de ambos então o nó 10 será o escolhido para ser a ponte entre estes dois mestres, por o peso ser maior.
Isto é feito, pois o BlueStars foi projetado para dar pesos maiores para nós com maiores capacidades.
O simulador, por outro lado, assume que todos os nós são idênticos (rede homogênea), e a quantidade energia é suficiente para que a sessão (relativamente curta) da aplicação seja terminada sem problemas.
Desta forma, o simulador utiliza como peso apenas o identificador único dos nós.
Portanto, a escolha de um nó de peso menor como escravo-ponte (ou para mestre de uma ponte intermediária) não afetam os resultados obtidos.
O capítulo seguinte mostra os resultados obtidos nas simulações realizadas.
Para avaliar a redução do tempo médio de indisponibilidade da scatternet obtida com o novo protocolo proposto, foram realizados experimentos com o simulador descrito no Capítulo 4.
Utilizou- se uma duração fixa de sessão de 20 minutos (tempo sugerido no Capítulo 3), e variou- se o tamanho do ambiente em três configurações.
Primeiramente, utilizou- se uma dimensão de 5 x 5 metros, que garante que todos os nós estão no alcance de transmissão uns dos outros uma vez que o alcance do Bluetooth é de 10 metros.
Considera- se que alguns ambientes terão esta característica, por exemplo, uma sala de reuniões ou sala de espera.
Após, foi utilizada uma dimensão de 24 x 4 metros, simulando o formato de, por exemplo, um vagão de trem ou outro veículo de transporte coletivo, que foi um dos cenários de uso visualizados.
Por fim, foi considerada uma dimensão de 20 x 20 metros, representando um ambiente mais amplo.
Também foi variado o número de nós presentes nos ambientes, nos valores de 10, 15, 20, 25 e 30 nós, que representam quantidades aproximadas de pessoas (usuários) nos ambientes que o modelo vislumbra.
As tabelas possuem as seguintes colunas.
A primeira coluna indica o número de nós, ou seja, mostra a variação do número de nós nas redes dos experimentos.
A segunda coluna Bs (BlueStars) e terceira coluna MP (Modelo Proposto) mostram o tempo total de indisponibilidade da rede, ou seja, o tempo real gasto em manutenção (neste caso, reconstrução) da rede, ao invés de comunicação útil para a aplicação, que fica impossibilitada de funcionar durante este intervalo de tempo para cada um dos protocolos.
A quarta coluna Bs e a quinta coluna MP indicam o número de nós que falharam no tempo da aplicação, ou seja, mostra para situação simulada o número de quedas ou saída de nós na simulação proposta.
A sexta coluna indica o número de nós isolados da rede após a queda de algum nó mestre ou nó ponte.
Esta coluna só é referente a o protocolo proposto, pois ele não reconstrói a rede sempre que existe uma desconexão como é o caso do protocolo BlueStars.
E por último a coluna que indica o número de quedas, ou seja, a soma dos nós que caíram e os que ficaram fora de a rede devido a o fato de terem ficado isolados da Scatternet conectada no protocolo modificado.
A Tabela 5.1 demonstra os resultados das simulações numa rede de dimensões 5x5 quando existe uma variação no número de nós entre os valores de 10 e 30 levando em conta que uma ponte só poderia participar de duas piconets.
Em esta tabela nota- se que a média aritmética de tempo em que a rede fica indisponível para mil iterações utilizando- se do protocolo proposto é muito reduzida se comparado com o tempo de indisponibilidade da rede que roda sobre o BlueStars.
Por exemplo para 20 nós o tempo de indisponibilidade é de 25,67 segundos enquanto para o modelo proposto nesse trabalho fica em 4,98 segundos, ou seja 80% de economia de tempo indisponível em relação a o protocolo BlueStars.
MP Falhos BS Falhos MP Isolados MP Total Quedas MP As tabelas 5.2 e 5.3 possuem apenas um parâmetro diferente da tabela anterior, que é o tamanho do ambiente em que é executado o experimento.
Ou seja, na Tabela 5.2 o ambiente é de 24x4 metros, enquanto na Tabela 5.3 é de 20x20 metros.
MP Falhos BS Falhos MP Isolados MP Total Quedas MP Pode ser visualizado a partir de as tabelas 5.2 e 5.3 que, com o aumento do tamanho do ambiente, as quedas causam um tempo de indisponibilidade maior.
Sendo assim como citado anteriormente o protocolo proposto funciona positivamente para o estudo de caso em que o mesmo visa atender, ou seja, aplicações onde o grafo de visibilidade seja &quot;praticamente «completo, isso ocorre quando há uma grande concentração ou densidade de nós independente da área total considerada.
MP Falhos BS Falhos MP Isolados MP Total Quedas MP que passa de 2 para 3.
Em os gráficos das figuras 5.5, 5.6 e 5.7 pode ser melhor visualizado o comportamento das simulações das tabelas apresentadas.
Os gráficos mostram a variação do tempo de indisponibilidade (eixo y) por a variação do número de nós na simulação (eixo x).
Em os gráficos o tempo de duração nas três simulações é de 20 minutos, existe uma variação dos tamanhos dos ambientes que são os mesmos das tabelas, ou seja, 5x5, 24x4 e 20x20 e mostram o funcionamento de redes Bluetooth utilizando o protocolo BlueStars e utilizando o modelo proposto com um nó podendo ser ponte para 2 e 3 piconets.
As figuras 5.2, 5.3 e 5.4 mostram redes formadas a partir de uma rede Bluetooth após a fase de descoberta de dispositivos visualizada na Figura 5.1.
A Figura 5.2 demonstra a rede BlueStars formada.
Em a Figura 5.3 pode ser visualizado uma rede formada com o protocolo proposto com um nó podendo ser ponte entre no máximo 2 piconets, enquanto na Figura 5.4 pode ser visto a rede formada com o protocolo proposto com um nó podendo ser ponte entre no máximo 3 piconets.
Uma observação importante deve ser feita sobre o número de piconets a qual um nó pode fazer parte.
Segundo, um nó começa a apresentar problemas como perda de pacotes e consumo de energia elevado quando um nó passa a fazer parte de 4 ou mais piconets, por isso as simulações foram desenvolvidas com um nó fazendo parte de 2 ou 3 piconets.
As tabelas 5.7 e 5.8 possuem a primeira coluna diferente das tabelas mostradas anteriormente.
Em esta coluna é mostrada a variação de tempo para três simulações.
Os parâmetros para cada simulação são os seguintes:
A tabela 5.7 possui um tamanho de ambiente de 5x5 metros, com cada ponte podendo fazer parte de no máximo 2 piconets e com o numero de nós igual a 15.
Em a tabela 5.8 o ambiente é simulado com tamanho 24x4 metros, com cada nó participando de no máximo 3 piconets e com o número de nós 20.
Em essas tabelas foi constatado que o número de nós que ficam fora de a rede em aplicações, que possuem com um tempo maior em relação a o que o protocolo proposto foi projetado, é bastante elevado.
Em esse ponto um aspecto precisa ser constatado, o modelo proposto neste trabalho, descarta os nós que após a queda de um mestre ou nó ponte não podem mais fazer parte da rede, ou seja, ficam fora de a grafo de visibilidade dos nós que formam a scatternet conectada.
Esta escolha foi feita com o objetivo de atender as aplicações como jogos, que possuam um tempo de duração reduzido, pois seria interessante para essas aplicações manterem o máximo de usuários que iniciaram a aplicação sem pausas e interrupções no tempo total da aplicação.
Os valores foram obtidos a partir de pesquisa com consulta a programadores de jogos.
Em essa consulta foi definido que entre 20 e 30 minutos seria o tempo ideal para uma partida &quot;casual», 10 minutos um tempo curto e 120 minutos um tempo muito elevado para esse modelo de jogo.
Em este capítulo foram demonstrados os resultados encontrados para as simulações feitas sobre o protocolo proposto e o protocolo BlueStars.
Todas as especificações usadas no simulador estão baseadas no artigo sobre o BlueStars.
Como visto, foram simuladas diversas variações nas propriedades importantes para formação de uma scatternet.
Tempo Ind. MP Falhos BS Falhos MP Isolados MP Total Quedas MP Os resultados mostram que o modelo proposto em situações como a do estudo de caso especificado possui uma melhoria significativa no tempo de indisponibilidade da rede.
Deve ser salientado que os resultados apresentados são as médias aritméticas para mil simulações em cada uma das propriedades apresentadas.
Em um caso específico quando existe a possibilidade de reconstrução da rede em pelo menos três oportunidades, o tempo gasto por o protocolo existente é de 84 segundos, o que é muito elevado para a aplicação proposta.
Por os resultados apresentados o protocolo proposto possui um ganho de 80% na média de tempo de indisponibilidade com relação a o BlueStars, para a classe de aplicação definida, e o tempo em que a rede ficaria indisponível seria de no máximo 16,8 segundos.
Esse tempo para o protocolo proposto seria menor que uma reconstrução da rede para o protocolo existente que é de 28 segundos.
O presente trabalho objetivou a modelagem de um protocolo de formação de redes ad hoc para implementação em hardware na plataforma Fênix.
Devido a indisponibilidade do SoC para validação do protocolo na Fênix, foram realizadas atividades de simulação.
Para essas atividades foi utilizada inicialmente a ferramenta ns-2 e a seguir foi desenvolvido um simulador especialmente para esse fim.
Após as simulações obteve- se um protocolo para estabelecimento de uma rede ad hoc wireless multihop de dispositivos Bluetooth.
Esse protocolo assegura uma descoberta local de topologia apropriada, permite que os dispositivos se auto-organizem em piconets, e permite a interconexão das piconets formadas numa única scatternet conectada.
O protocolo proposto é baseado no protocolo BlueStars, um dos protocolos estudados no início do trabalho e analisado no Capítulo 2.
As fases do protocolo são descritas, levando em conta a tecnologia Bluetooth conforme a última versão liberada das especificações.
A scatternet obtida tem trajetos múltiplos entre cada par de nós e a operação do protocolo não necessita que todos os dispositivos estejam cada um no alcance de transmissão do outro.
Isto é bom para a aplicação-alvo do trabalho, que são jogos casuais em dispositivos móveis interconectados por uma rede ad hoc Bluetooth, como discutido no estudo de caso apresentado no Capítulo 3.
Em o Capítulo 4, foi descrita a implementação do simulador, utilizado nos experimentos e nos resultados obtidos dos mesmos, apresentados no Capítulo 5.
O Capítulo 5 mostra os resultados para simulações com a variação de propriedades como:
Tamanho do ambiente, tempo da aplicação, número de piconets de a qual um nó pode fazer parte e número de nós no ambiente.
As simulações visaram obter resultados referentes ao tempo de indisponibilidade de uma scatternet devido a a execução de operações de manutenção da mesma que são realizadas por os protocolos de formação e de manutenção da rede ad hoc.
Através dos resultados obtidos na simulação foi concluído que existe a viabilidade de utilização do modelo proposto em ambientes de tamanho reduzido ou ambientes com um número elevado de nós ocupando a mesma área, ou seja, formando assim um grafo de visibilidade &quot;quase «completo.
Para esses ambientes o tempo de indisponibilidade é em média 80% menor nas redes que tem sua formação com o protocolo proposto, se comparado com as redes que se formam com o BlueStars.
Uma desvantagem constatada nas simulações é que em aplicações realizadas por um tempo maior que o projetado inicialmente, que é na ordem de 20 minutos, como por exemplo 120 minutos o número de nós que ficam fora no decorrer de a aplicação é muito grande.
Isso acontece devido, como já explicado anteriormente, devido a o modelo proposto neste trabalho descartar os nós que após a queda de um mestre ou nó ponte não poderem mais fazer parte da rede, ou seja, ficam fora de a grafo de visibilidade dos nós que formam a scatternet conectada.
Para solução deste problema pode ser implementada alguma técnica que possibilite a entrada de nós na rede depois das três fases do protocolo terem sido executadas.
Essas técnicas não foram expostas ou aplicadas ao modelo proposto devido a simulação ter sido feita sobre o protocolo BlueStars e esse trabalho não atender a essas necessidades.
Sendo assim as especificações para esse tipo de operação não estavam a disposição o que impediu que fossem simuladas essas situações, para que os resultados da simulação fossem reais.
Como trabalho futuro existe a possibilidade de criação de uma extensão Bluetooth para o software ns-2 com código livre, facilitando assim o desenvolvimento de melhorias para este e outros protocolos de formação de scatternets.
Com isso poderiam ser executadas simulações como a entrada de nós, que como mencionado anteriormente pode melhorar os resultados do protocolo proposto se incorporado ao mesmo.
Levando a diminuição do número de nós que ficam fora de a aplicação quando o tempo não é reduzido, ou seja, na ordem de 20 ou 30 minutos.
Um projeto para um trabalho futuro, é a realização de uma pesquisa para disponibilizar ao protocolo a entrada de nós numa scatternet já formada, essa possibilidade não foi explorada no modelo proposto, pois a aplicação de jogos, conforme pesquisa realizada, normalmente não suporta a entrada de usuários no decorrer de a aplicação.
E, além disso, pode ser difícil a inclusão desta característica.
Por exemplo, o protocolo BlueStars só suporta a inclusão de novos nós na rede quando uma nova fase de reconstrução da mesma é iniciada, o que normalmente só acontece quando um nó falha ou sai do alcance da rede.
Para suportar a inclusão automática de novos dispositivos na Scatternet do jogo, seria necessário que, por exemplo, os dispositivos já presentes no jogo entrassem, periodicamente, no modo Inquiry.
Isso pode prejudicar, de alguma forma, a comunicação normal do dispositivo com a scatternet, ou talvez aumentar significativamente o consumo de bateria.
Isto não foi explorado neste trabalho e fica como possibilidade de trabalho futuro.
E por último a possibilidade do protocolo ao iniciar verificar a capacidade de processamento e a energia disponível no dispositivo e atribuir pesos.
Esses pesos seriam repassados nas mensagens junto com o Id, possibilitando assim melhorias na escolha de mestres e pontes.
