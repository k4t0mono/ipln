Esta dissertação propõe um modelo de arquitetura distribuída para o tratamento de problemas encontrados durante o processamento da linguagem natural (PLN), baseado em agentes inteligentes e autônomos e em métodos cooperativos para o intercâmbio de conhecimento heterogêneo.
Este trabalho relaciona- se à área da Lingüística Computacional e à área da Inteligência Artificial Distribuída, através de uma investigação científica de aspectos lingüísticos e computacionais os quais podem contribuir para uma melhor performance dos sistemas concebidos tradicionalmente.
De o ponto de vista lingüístico, o foco de atenção é constituído por o fenômeno da ambigüidade, ou seja, a multiplicidade conceitual ou estrutural que uma palavra pode assumir na representação de uma frase.
Este fenômeno é considerado um dos temas ainda em aberto no PLN.
De o ponto de vista computacional, a concepção dos sistemas de PLN através de uma arquitetura puramente seqüencial limita a performance, dificultando o backtracking e as relações entre etapas não adjacentes de análise, bem como a modelagem de novas estratégias de solução.
Conforme o modelo apresentado, procuramos minimizar os problemas da abordagem seqüencial, reduzindo o esforço na resolução da ambigüidade.
Para tanto, sugerimos o uso de protocolos de aprendizagem cooperativa com o objetivo de solucionar eventuais conflitos gerados por tal fenômeno lingüístico, através da cooperação entre os agentes.
A resolução destes conflitos é abordada através da formação de subsociedades entre os mesmos.
Como suporte para a formação dessa coligação, representamos as informações relevantes aos agentes através de uma estrutura denominada descrição externa, a qual contém identificações individuais, objetivos e capacidades dos agentes.
O estudo foi implementado com a prototipação de uma ferramenta utilizando um ambiente de execução multi-agentes ­ MASENV e DPSK+ P (Cardozo et al.
93, Sichman et al.
92) ­ para a troca de mensagens entre vários processos computacionais.
A Ciência da Computação tem procurado aproximar o ser humano do computador, utilizando meios cada vez mais naturais ao homem.
Em esse contexto, a utilização da Linguagem Natural (LN) nos sistemas computacionais demonstra ser uma abordagem muito própria -- e próxima -- da expressão humana, perseguida desde o surgimento da Inteligência Artificial por os pesquisadores da área.
As pesquisas em sistemas de Processamento da Linguagem Natural (PLN) encontram aplicações em várias áreas da Ciência da Computação como a Engenharia de Software e Sistemas de Informação.
Exemplificando, temos a aplicação da LN em interfaces com o usuário, nas consultas para acesso a bases de dados, em sistemas operacionais, no apoio ao ensino, na tradução automática, no tratamento de erros através de corretores ortográficos e sintáticos, e diversas outras aplicações que envolvem a interação com o usuário humano.
Entretanto, o tratamento computacional da LN tem enfrentado limitações devido a sua própria complexidade, caracterizada através da ambigüidade, da flexibilidade semântica, da riqueza estrutural e das muitas exceções gramaticais.
Em razão de tal enfoque, a abordagem alternativa tem sido a restrição do domínio a vocabulários específicos, a gramáticas reduzidas e a limitações do contexto tratado.
A riqueza de estruturas, de conhecimentos e de expressão, presentes nos domínios lingüísticos (fonológico, morfológico, sintático, semântico e pragmático), tem dificultado a sistemas artificiais, limitados em seus recursos físicos, o processamento de forma irrestrita desta linguagem.
Em, por exemplo, evidenciamos as restrições impostas à construção de interfaces com o usuário em LN, restrições estas que se diluem através do uso de linguagens pseudo-naturais, limitando o vocabulário e a gramática utilizados.
Em, destacamos que os problemas de performance em sistemas tradicionais de PLN ocorrem, principalmente, devido:
A a própria complexidade inerente à LN (tema a ser estudado do ponto de vista da Lingüística Computacional);
A o uso de arquiteturas seqüenciais, que apresentam sensíveis limitações de eficiência (tema a ser estudado do ponto de vista da Ciência da Computação);
A a necessidade de um nível de controle, que indique o modo como o conhecimento lingüístico (por exemplo, o presente na especificação de uma gramática) deve ser aplicado para o reconhecimento de uma sentença;
A a existência de múltiplas fontes de conhecimento lingüístico (léxicas, morfológicas, fonológicas, sintáticas, semânticas e pragmáticas), cuja representação modular torna muito complexa a integração destes conhecimentos no processo de análise.
Como alternativa às abordagens seqüenciais, tem- se investigado o uso de abordagens cooperativas/ distribuídas, advindas da área de Inteligência Artificial Distribuída (Distributed Artificial Intelligence), através de Sistemas Multi--Agentes (Multi-Agent Systems).
A abordagem multi-agentes proporciona um tratamento cooperativo através da interação entre vários domínios lingüísticos heterogêneos, com o uso de agentes computacionais, autônomos e especializados, que denotam um comportamento &quot;social «na resolução de um problema global.
O presente trabalho apresenta os resultados da investigação do uso do paradigma multi-agentes no PLN, em direção a uma arquitetura distribuída, permitindo a flexibilização e melhora da performance nesses sistemas, através da interação cooperativa entre os diversos domínios lingüísticos.
A grande dificuldade no tratamento automático da LN é oriunda de fenômenos lingüísticos, cuja representação e resolução constituem um desafio tanto aos lingüistas quanto a os cientistas de computação.
Expressar tais fenômenos em termos de regras gramaticais ou formalismos específicos exige grandes estruturas de informações e heurísticas igualmente poderosas, principalmente, quando se faz referência ao aspecto gerativo1 da linguagem.
Os estudos de Chomsky procuram abordar o aspecto da competência lingüística, caso em que a habilidade do falante/ ouvinte é analisada como uma capacidade inata ao ser humano, na forma de uma teoria gerativa O termo &quot;gerativo «especifica a formalização do tratamento matemático das línguas, através de um sistema de regras e princípios.
Humanos. Desta forma, as alternativas encontradas por a Lingüística Computacional passam por a sistemática limitação do domínio de aplicação, das regras gramaticais utilizadas, das representações semânticas e dos formalismos propostos por as várias correntes lingüísticas.
Logo, a complexidade do tratamento da LN constitui um problema a ser abordado de forma multidisciplinar, voltado a estudos de caso sobre os fenômenos que sustentam esta complexidade.
Escolhemos, como foco de atenção deste trabalho, o fenômeno lingüístico da ambigüidade, ou seja, a multiplicidade conceitual que uma palavra pode assumir (ambigüidade semântica) ou a multiplicidade estrutural na representação sintática de uma frase (ambigüidade estrutural), por ser uma das grandes fontes da complexidade do tratamento automático da LN.
A resolução da ambigüidade, em sistemas para o PLN, constitui um dos grandes problemas ainda em aberto (Allen 95, Baker et Al.
94, Beardon et Al.
91, Fuchs 93, Grishman 92, Hirst 88, Leffa 95).
Ainda segundo estes autores, a ambigüidade ocorre em todos os domínios lingüísticos e pode multiplicar- se entre eles, resultando num número excessivamente grande de interpretações para uma mesma sentença.
Decidir entre as interpretações possíveis requer conhecimento conceitual e estrutural, e pode acarretar uma explosão combinatória durante a fase de decisão.
Aliada à questão da ambigüidade, uma outra problemática observada constitui- se na baixa performance dos sistemas concebidos utilizando uma arquitetura puramente seqüencial, conforme.
A limitação desta abordagem reside, sobretudo, no fato de possuir um fluxo de dados fixo e constante, dificultando o backtracking e as relações entre etapas não adjacentes.
Além disso, sua arquitetura fechada, com conhecimentos e mecanismos de controle centralizados, dificulta a manutenção do sistema e aumenta a quantidade necessária de recursos computacionais.
Este trabalho tem por objetivo geral conduzir uma investigação sobre o uso do paradigma multi-agentes no PLN, através de um modelo arquitetural baseado em agentes lingüísticos autônomos e distribuídos, que minimize os problemas da abordagem seqüencial e reduza o esforço na resolução da ambigüidade.
Em conduzimos um estudo preliminar sobre trabalhos recentes (Boitet &amp; Seligman 94, Stefanini 93, Cullingford 81, Rieger &amp; Small 81, Erman et Al.
80, Small 80) que investigam as possibilidades do uso da metáfora social no processamento lingüístico.
Concluímos, deste estudo, que o uso de uma abordagem de resolução distribuída de problemas:
Facilita o tratamento da ambigüidade através da interação cooperativa de vários domínios lingüísticos heterogêneos (como o morfológico e o sintático, por exemplo);
Permite que fenômenos lingüísticos como a anáfora, a elipse, a coordenação e a subordinação em orações compostas, entre outros, possam ser abordados através de estratégias diversificadas, por agentes especializados.
O estudo do PLN pode ser categorizado, segundo, em quatro áreas-problema:
A construção de parsers que procurem analisar um texto de acordo com alguma gramática, considerando os problemas da ambigüidade;
A exploração de diferentes tipos de gramáticas e sua adequabilidade para representar as extravagâncias da LN;
A exploração de maneiras de representar o significado das sentenças para que, por exemplo, uma resposta adequada seja fornecida;
A integração de componentes sintáticos e semânticos em termos de uma estrutura de controle efetiva.
Levando em consideração a última das quatro áreas-problema acima, concluímos, ainda, que o modelo de agentes cognitivos possui:
Autonomia, possibilitando a utilização de uma estrutura de controle mais efetiva e descentralizada;
Memória local, favorecendo o armazenamento de conhecimento múltiplo de forma modular;
Conhecimento sobre o ambiente e sobre outros agentes, de modo que a interação possa fluir naturalmente através de protocolos de comunicação eficientes, evitando o acesso concorrente a estruturas centralizadas e não adequadas.
A característica de interação cooperativa, no entanto, torna- se complexa à medida que os agentes precisam comunicar- se constantemente.
O fluxo e o volume de informações torna- se maior quando estas informações precisam expressar conhecimento e intenções, através de pedidos, perguntas, respostas, etc..
Utilizamos, então, o protocolo de aprendizagem cooperativa proposto em para modelar um aspecto de negociação, com o objetivo de solucionar eventuais conflitos gerados por a ambigüidade.
Para efetivar a estratégia cooperativa, representamos as informações relevantes dos agentes numa estrutura denominada descrição externa, contendo além de suas identificações individuais, seus objetivos e capacidades.
Estas facilidades são agregadas ao domínio de processamento lingüístico, que o agente representa, através de uma camada de cooperação, envolvendo os protocolos e as estratégias de comunicação e controle.
Desta forma, eventuais conflitos lingüísticos podem ser resolvidos através da formação de subsociedades de agentes.
A dissertação será desenvolvida através do estudo da ambigüidade, sob o enfoque lingüístico, e da abordagem distribuída, sob o ponto de vista da computação.
Em o capítulo seguinte, abordamos dois problemas que influenciam a performance de um sistema para tratamento da LN, através de dois focos distintos:
De o ponto de vista da Lingüística Computacional, a complexidade do tratamento da ambigüidade, e do ponto de vista da Ciência da Computação, a concepção sob uma abordagem puramente seqüencial.
Utilizamos os resultados deste estudo para apresentar um enfoque alternativo dos problemas sob uma abordagem distribuída, apresentando uma relação natural entre as características da abordagem serial e o PLN.
Em o capítulo 3, fornecemos um estudo introdutório da área da Inteligência Artificial Distribuída, destacando um dos seus principais subdomínios, cuja aplicação vem- se mostrando adequada no processamento lingüístico:
Os Sistemas Multi-Agentes.
As definições e caracterizações sobre agentes e sociedades, bem como sobre a formação de coligações entre agentes, são importantes para a consecução dos objetivos deste trabalho, propiciando o conhecimento sobre os mecanismos necessários para a constituição de subsociedades.
Em o capítulo 4, relatamos um estudo comentado de alguns sistemas para o PLN, baseados nas metodologias da Inteligência Artificial Distribuída.
Os principais pontos que abordamos dizem respeito aos mecanismos de cooperação e comunicação e às arquiteturas dos agentes, utilizados nestes diferentes sistemas.
Através deste estudo, foi possível delinearmos nossas necessidades quanto a uma arquitetura básica para o modelo idealizado e uma proposta de granularidade2 dos agentes no âmbito da sociedade.
Em o capítulo 5, apresentamos a definição de uma estrutura heterogênea de informações lingüísticas a ser abordada de forma distribuída e autônoma, tomando por base a caracterização da ambigüidade em seus aspectos sintático e semântico na língua portuguesa.
Também descrevemos a arquitetura multi-agentes proposta para a solução distribuída e cooperativa de problemas para o PLN, com uma formalização suficiente para as descrições de implementação.
Em o capítulo 6, detalhamos a estrutura externa ao domínio de aplicação do agente, que denominamos Camada de Cooperação.
Esta camada envolve mecanismos de comunicação, controle interno e uma descrição dos outros agentes, na sociedade com a qual ocorre a interação.
Exemplificamos sua utilização, através do modelo descrito no capítulo anterior, definindo as estruturas internas a cada agente de uma subsociedade para resolução da ambigüidade léxica, e detalhamos seu funcionamento através de alguns casos simplificados.
Em o capitulo 7, encontram- se as conclusões obtidas neste trabalho, com comentários sobre algumas limitações ainda encontradas e perspectivas para a continuidade futura deste estudo.
Por fim, no anexo A, apresentamos alguns aspectos implementacionais do modelo, mostrando a integração dos módulos componentes do agente com a camada de cooperação, através de alguns fragmentos do código implementado.
Ou seja, de que tamanho serão os agentes, em função de suas capacidades e objetivos.
Em o presente capítulo, objetivamos dar uma visão panorâmica dos problemas que pretendemos abordar com o uso de sistemas multi-agentes no PLN com foco no fenômeno lingüístico da ambigüidade e na alternativa distribuída de solução.
Em o decorrer deste capítulo, introduzimos, conceituamos e caracterizamos a ambigüidade, porém não de modo exaustivo.
Apresentamos os principais tipos de ambigüidade que podem ocorrer, procurando estabelecer uma classificação adequada, baseada na literatura consultada, para tratar- la computacionalmente.
A resolução da ambigüidade sintática é vista na subseção 2.1.2.
Em a subseção 2.1.3 abordamos pontos sobre a resolução da ambigüidade léxica, apresentando as principais motivações cognitivas e lingüísticas para o estudo da ambigüidade.
Simultaneamente, algumas discussões sobre a resolução do problema são apresentadas sob cada um destes enfoques.
Em a seção 2.2, introduzimos o outro foco abordado, a questão da eficiência no uso de arquiteturas seriais.
Em esta seção, procuramos caracterizar o problema da abordagem seqüencial, conforme a literatura, e apresentamos uma relação natural entre as características desta abordagem e o PLN, como ponto inicial para o estudo de uma alternativa de resolução distribuída e cooperativa.
Tais abstrações culminam em considerações iniciais que nos guiam em direção a uma abordagem distribuída na seção Ambigüidade é a propriedade que um enunciado possui quando apresenta vários sentidos ou várias representações (Crystal 88: P. 25, Jota 81: P. 31, Lyons 77: P. 396, Dubois et al.
73: P. 29).
Em a maioria das vezes, a ambigüidade decorre de fenômenos lingüísticos que ocorrem em estruturas frasais.
Podemos identificar tais fenômenos como a homonímia e a polissemia:
A HOMONÍMIA é a identidade fônica (homofonia) ou gráfica (homografia) de dois morfemas com sentidos diferentes;
Podem causar ambigüidade em nível fonológico e léxico, por exemplo, a palavra &quot;manga «como fruta e parte do vestuário, e a palavra &quot;jogo «sendo substantivo e verbo;
A Polissemia constitui a propriedade de uma unidade lexical em possuir vários sentidos, e é responsável por a ambigüidade semântica.
Por exemplo, as palavras &quot;banco «3, &quot;capa», &quot;canto», &quot;pata», entre outras.
Embora de distinção não trivial, a polissemia e a homonímia constituem os principais causadores da ambigüidade na LN.
Outra fonte de ambigüidade é a má construção da frase, como nas sentenças e (2-2) a seguir:
% HDWUL] FRPHXXPGRFHHVXDLUP÷WDPEpP.
4. Em nível computacional, especificamente na área de linguagens de programação (linguagens artificiais), a ambigüidade é definida em função de a gramática que representa uma linguagem de programação qualquer.
Assim, sendo G $= uma gramática que define uma linguagem L qualquer, então:
Uma dada sentença w em L (G) é definida como ambígua quando existem duas ou mais árvores de derivação para gerar w;
Uma linguagem L (G) é ambígua quando existe pelo menos uma sentença w em L (G) que seja ambígua.
Transpondo esta idéia para o contexto da língua portuguesa, observamos que a sentença (2-3) pode ser representada por duas árvores distintas, mostradas na Figura 2.1.
Estatal, que guarda e opera com valores;
Elevação do fundo do mar;
Verbo bancar.
Que deveria ocorrer com vírgula:
&quot;Beatriz comeu um doce, e sua irmã também».
Quando deveria ser:
&quot;Mataram a vaca que era da sua tia».
O ser humano consegue perceber as diversas possibilidades léxicas numa frase e determinar seu sentido tão rapidamente, que a operação parece ocorrer num nível abaixo de a consciência.
Entretanto, uma resolução automática da ambigüidade deve levar em conta, além de o conhecimento lingüístico, o contexto em que a sentença está inserida e o conhecimento de mundo (common sense) envolvido no enunciado.
De os exemplos a seguir, extraídos de (Caelen 96):
Precedentes (&quot;co-texto6&quot;), para uma correta interpretação.
Em diferentes teorias lingüísticas a ambigüidade é classificada em vários níveis e de várias formas.
Lúcia Lobato classifica a ambigüidade em léxica (relacionada à polissemia e homonímia) e gramatical (relacionada à estrutura da sentença).
Apresjan faz uma distinção semelhante:
Ambigüidade Sintática, derivada de duas ou mais estruturas sintáticas sem polissemia nas palavras como, por exemplo:
&quot;Peguei o ônibus correndo&quot;;
Ambigüidade Léxica, em a qual uma estrutura sintática possui duas ou mais interpretações devido a a polissemia.
Por exemplo: &quot;Ele estava em minha companhia «7;
Ambigüidade Sintática e Léxica, quando duas estruturas sintáticas possuem interpretações alternativas devido a a polissemia como em:
&quot;Canto na sala «8.
Graeme Hirst classifica a ambigüidade quanto a a própria polissemia, homonímia e ambigüidade categorial.
A título didático, os tipos de ambigüidade fonética, gramatical e léxica, tradicionalmente dissociados na Lingüística, podem ser agrupados simplesmente como ambigüidade léxica, por a simetria e similitude de conceitos.
Segundo estas classificações, juntamente com as considerações de Franz e Leffa, as classificações existentes poderiam ser sumarizadas, para fins de um tratamento computacional em dois níveis:
Palavras ambíguas que tornam a frase também ambígua, e ambigüidade em nível sentencial, quando não existem palavras ambíguas, mas múltiplas Caelen chama &quot;co-texto «às idéias introduzidas através dos enunciados precedentes.
Companhia: Empresa;
Ou pessoa.
Canto: Uma atividade musical na sala;
Ou o canto físico na sala.
Dois níveis:
Ambigüidade léxica e ambigüidade sintática.
A ambigüidade léxica envolve a multiplicidade de significados em nível de palavra.
Em esta situação, a ambigüidade léxica pode ser subdividida em categórica e semântica:
Quando múltiplas categorias léxicas estão relacionadas a uma mesma palavra, a ambigüidade é dita categórica.
Em as frases (2-6) e (2-7) a palavra fala pode ser substantivo ou verbo, respectivamente;
Quando envolve casos de polissemia e homonímia, independentes da categoria sintática, trata- se de ambigüidade léxica semântica.
Por exemplo, na sentença (2-3), a ambigüidade surge das palavras polissêmicas:
FDVD=9  e Id] HQGD 10, enquanto que, na sentença, a ambigüidade decorre das palavras:
Olyur 11, Vreuh:
12 e UXD:
13. Em a sentença (2-3) temos quatro sentidos distintos: (
a) uma bela construção numa propriedade rural; (
b) uma bela moça casando- se numa propriedade rural; (
c) uma bela abertura de botão num tecido;
E (d) uma estampa de uma casa bonita sobre um tecido.
Em a sentença, podemos pressupor três sentidos: (
a) eu encontrei um livro deixado na rua; (
b) eu encontrei um livro enquanto eu estava na rua da praia; (
c) eu encontrei um livro que fala a respeito de uma rua denominada como &quot;5XDGD3UDLD».
A ambigüidade sintática ou estrutural ocorre quando há mais de uma estrutura sintática associada a uma mesma sentença de acordo com a gramática usada, ou seja, a mesma estrutura profunda gera duas ou mais estruturas superficiais diferentes.
Por exemplo, na sentença, o juiz julga as crianças que são culpadas, ou julga que as crianças são culpadas.
2 MXL] MXOJDDVFULDQoDVFXOSDGDV.
Casa: Edifício destinado a habitação;
Abertura por onde passa o botão;
Verbo casar 3ª p..
S Ind. Fazenda:
Grande propriedade rural;
Pano, tecido.
Livro: Objeto;
Informação escrita sobre.
Sobre: &quot;em cima de&quot;;
&quot;acerca de alguma coisa».
Rua: &quot;via pública «em que uma de suas propriedades semânticas é a de &quot;superfície sobre a qual as coisas podem estar situadas».
A resolução da ambigüidade sintática requer a decisão sobre múltiplas estruturas prováveis que representam sintaticamente a frase.
Os principais tipos de ambigüidade sintática estão relacionados aos problemas de ligação, isto é, à localização dos sintagmas preposicionais (SP), adverbiais (SADV) ou orações relativas na árvore de derivação.
O sintagma preposicional pode estar ligado diretamente a um sintagma nominal (Sn), modificando o nome (substantivo) que imediatamente o antecede, ou a um sintagma verbal (SV), neste caso modificando o verbo que o domina14.
Em alguns casos, apenas as restrições semânticas podem auxiliar na resolução deste tipo de ambigüidade.
Por exemplo, a Figura 2.2 mostra as duas árvores para o fragmento ambíguo da sentença:
Em o caso, o SP ligado ou ao SV, na Figura 2.2 (a), ou ao Sn, na Figura 2.2 (b).
No entanto, podemos decidir que a melhor interpretação é a representada por a primeira árvore da figura, pois parece mais natural que &quot;FKDYH «seja marcado com o papel temático Instrumento da abrir, do que seja um Objeto possuído por o nome &quot;SRUWD».
Contudo, o mesmo não acontece com a sentença, já que a posição do SP pode modificar tanto o Agente &quot;R÷R «quanto a Ação &quot;YHU «sem causar desvios evidentes de interpretação.
As respectivas árvores para o fragmento ambíguo da sentença são mostradas na Figura 2.3.
R÷RYLXRKRPHPFRPRWHOHVFySLR O conceito de dominância usado neste trabalho é o mesmo da gramática gerativa:
Um nodo domina outro que se originou de ele.
Por exemplo, na Figura 2.2 (a), SV domina Verbo, SN1 e SP.
No caso de o SADV, ele pode ligar- se ao SV que o domina ou ao Sn imediatamente anterior gerando duas interpretações distintas.
Em a sentença, cujas árvores são mostradas na Figura 2.5, pode- se inferir que a declaração foi feita ontem (SADV ligado ao SV), na Figura 2.5 (a), ou que o fim da guerra foi ontem (SADV ligado ao Sn), na Figura Exemplo extraído de e adaptado ao Português.
Assim como uma tendência semântica coloca restrições aos papéis temáticos como estratégia de resolução da ambigüidade sintática, existem tendências sintáticas que também são aplicadas ao problema.
Com relação a esta tendência, Frazier e Fodor aplicam dois princípios gerais:
Associação à Direita (Right Association), quando um novo constituinte é ligado o mais à direita possível na árvore de derivação;
Ligação Mínima (Minimal Attachment), quando um novo constituinte é Exemplo extraído de.
Em a árvore de derivação.
Estes princípios, contudo, podem ser conflitantes entre si quando, por exemplo, o número de nodos não-terminais não se modifica e a associação à direita é usada.
No caso de a sentença, por exemplo, a solução escolhida através da associação à direita seria o SP ligado ao Sn, Figura 2.2 (b), tornando inconsistente a restrição semântica e criando uma má interpretação da sentença, já que geralmente uma porta não é possuidora de uma chave.
Outras estratégias sintáticas usam restrições na gramática e na própria linguagem.
Utiliza uma estratégia múltipla de resolução da ambigüidade no sistema KANT (Knowledge--based, Accurate Natural-- language Translation), que traduz textos de documentos em Inglês para múltiplas linguagens rotuladas, em serviços de publicação de informações.
Sua abordagem de resolução adota:
Resolução de algumas sentenças ambíguas de forma interativa com o usuário;
Uso de uma gramática controlada, onde algumas construções ambíguas são excluídas18, e restrição da linguagem, limitando as palavras e frases no léxico a um único sentido relacionado ao domínio;
Utilização de uma hierarquia de conceitos semânticos que restringe o uso da palavra ambígua na sentença.
Uma estrutura de frames, denominada restritor semântico, relaciona a palavra ambígua a uma hierarquia de conceitos que contém as regras gramaticais (restrições), os papéis semânticos e os modificadores que não podem ser usados, por exemplo, em Pp-attachments (prepositional-phrase attachment ou ligação do sintagma preposicional).
As abordagens semânticas na resolução da ambigüidade sintática relacionam o conhecimento conceitual das palavras, representado através de redes hierárquicas, a regras heurísticas com o objetivo de aplicar restrições selecionais durante a construção das árvores sintáticas.
Em o sistema ABSITY, um mecanismo chamado Semantic Enquiry Desk (SED) realiza a resolução da ambigüidade estrutural aplicando dois princípios:
O das preferências guiadas por o verbo e o da plausibilidade.
Este mecanismo funciona em paralelo ao PARAGRAM, que é um analisador sintático determinístico baseado no analisador de Marcus com lookahead limitado, que requer o uso de preferências semânticas sempre que mais de uma derivação for admissível.
Nodos não-terminais representam as categorias sintagmáticas.
Construções como:
Conjunção de SVs, ADJs ou ADVs;
Referência pronominal, elipse, etc..
A estratégia do SED nada mais é do que a aplicação de regras tipo IF-ELSE num algoritmo de decisão que usa os dois princípios supracitados.
Segundo o princípio das preferências guiadas por o verbo, as regras testam as preferências léxicas com os verbos que são marcados.
Cada SP é marcado como um dos casos esperados por os verbos, e as regras do SED determinam se a ligação é possível ou não.
A aplicação do princípio da plausibilidade requer o uso de restrições selecionais e a busca de fatos consistentes num repositório de conhecimento sobre as ligações prováveis.
Quando a busca por uma ligação entre um SP e um SV, por exemplo, é bem sucedida, uma conexão é estabelecida, caso contrário ou a ligação é insolúvel ou a decisão é tomada tendo em vista a maior taxa de &quot;exemplares «daquela ligação encontrados durante a busca.
O principal problema com esta abordagem é que a manipulação das hierarquias semânticas para este tipo de procedimento constitui um esforço humano e computacional muito grande.
Além disso, bases de conhecimento muito extensas requerem recursos consideráveis em termos de espaço e tempo de execução:
Caso uma instância da informação não tenha sido encontrada imediatamente, grande parte da base deve, então, ser percorrida.
A resolução da ambigüidade léxica pode ser enfocada sob uma abordagem cognitiva e lingüística.
A abordagem cognitiva procura investigar como o uso de fatores semânticos, sintáticos e neuropsicológicos contribuem para solucionar problemas de leitura, quando a ambigüidade é encontrada.
De o ponto de vista da compreensão da linguagem, trabalhos como os de, por exemplo, procuram inferir como a informação léxica, semântica e do discurso pode ser usada por o analisador sintático durante a fase de interpretação.
Algumas das sentenças possuem ambigüidades locais e, algumas vezes, uma pessoa terá dificuldade na leitura quando essas ambigüidades locais forem encontradas.
A abordagem lingüística leva em consideração estratégias de resolução em nível sintático e em nível semântico.
A abordagem sintática está estreitamente vinculada ao relacionamento entre as vizinhanças da palavra ambígua, geralmente regulada através de regras de restrição ou regras de contexto, que podem ser geradas manualmente ou automaticamente, conforme a probabilidade de ocorrência detectada num corpus.
A abordagem semântica, por sua vez, leva em conta metodologias para representação do conhecimento sobre as palavras, que devido a a grande complexidade de concepção, necessita especificar contextos ou domínios restritos.
Sob o ponto de vista cognitivo, uma das preocupações é compreender como o ser humano resolve a ambigüidade léxica sem muito esforço.
Em este contexto, a resolução é classificada em modelos, conforme Simpson.
Modelos de Acesso Seletivo: Somente o significado contextualmente relevante da palavra ambígua é ativado por o leitor durante os experimentos;
É o que demonstram as experiências feitas com triplas de palavras que possuem significados concordantes (SAVE-BANK-MONEY) e discordantes (RIVER-BANK-MONEY), onde o significado da palavra ambígua (central) é mais rapidamente resolvido no primeiro tipo do que no último;
Modelos de Acesso Exaustivo: Em este modelo o acesso à informação léxica é independente de restrições do contexto e, deste modo, todos os significados da palavra são acessados e testados no processo de compreensão da sentença;
Modelo de Acesso Ordenado: Os significados da palavra são divididos em dominante (um significado principal) e subordinado (os demais significados relacionados).
Este modelo faz acesso primeiramente ao significado dominante da palavra ambígua e, somente se este for inconsistente com o contexto, os significados subordinados são testados.
Um sub-modelo que é considerado dentro deste é o Modelo de Acesso Reordenado, onde todos os significados são consultados, mas a ordem de ativação é influenciada por o significado dominante.
Discussão A hipótese do Modelo de Acesso Seletivo parece ser a mais estudada na Psicolingüística, pois o relacionamento entre palavras ambíguas dentro de um contexto conhecido parece facilitar a resolução da ambigüidade da sentença (Binder &amp; Morris 95, Schvaneveldt et al.
76). Alguns estudos relacionados ao movimento dos olhos de um leitor, durante experimentos de leitura, demonstram que o leitor gasta mais tempo resolvendo a ambigüidade de uma palavra tendenciosa (palavra que tem uma interpretação dominante) do que com palavras ambíguas equilibradas (palavras que tem dois significados igualmente prováveis).
Os resultados sugerem que palavras ambíguas que se relacionam dentro de um contexto são resolvidas com maior facilidade.
Este aspecto é exemplificado na sentença ambígua, que possui uma palavra alvo &quot;EXJ «19.
O leitor deve selecionar uma de várias palavras que lhe são apresentadas logo após a leitura:
Uma palavra diretamente relacionada ao significado da palavra alvo e outras não relacionadas.
Os resultados demonstram que os participantes não tiveram dificuldade em escolher a palavra correta, devido a a presença de outras palavras relacionadas a um contexto específico (VSLGHUV URDFKHV, etc.).
A discussão que queremos conduzir neste momento está relacionada ao aspecto de execução da resolução da ambigüidade léxica por o leitor humano.
De imediato, o que podemos observar é que os modelos de acesso exaustivo representam o enfoque modular e serial em que ocorre a análise da sentença, segundo a Lingüística.
Já aqueles de acesso seletivo são coerentes com um processo de percepção interativo e paralelo da sentença, conforme (Marslen-Wilson 75).
Interativo porque a informação contextual é utilizada no processo de escolha dos significados da palavra ambígua, e paralelo pois se desenvolve simultaneamente em todos os níveis de descrição que possuímos sobre cada palavra, à medida em que esta nos é apresentada (lida ou ouvida).
Note- se, então, que podemos considerar a abordagem distribuída como consistente com a pesquisa cognitiva, e o acesso a fontes de informação heterogêneas como adequadas no processo de busca contextual para uma resolução automática da ambigüidade.
Isto não significa que qualquer tipo de ambigüidade seja resolvido por este esquema mas, no caso de a ambigüidade léxica, algumas &quot;pistas «semânticas podem fornecer hipóteses para evitar a construção de estruturas desnecessárias durante a análise sintática.
Considerando a sentença como exemplo, a &quot;pista «contextual fornecida pela palavra &quot;FDQR», como um objeto metálico usado em construções, pode ajudar o analisador a decidir por a estrutura representada por a Figura 2.7 (a) ao invés de a Figura 2.7 (b).
Bug: Inseto;
Defeito. Soldado:
Adj. Unido com solda;
Subst. Indivíduo alistado nas forças armadas.
Através da abordagem sintática, a resolução da ambigüidade léxica leva em conta restrições de coocorrência, ou seja, restrições entre as categorias léxicas de palavras vizinhas:
A presença de certos itens léxicos influência a presença de outros na mesma sentença.
Esta abordagem pode ser estatística, baseada nas probabilidades de coocorrência, ou simbólica, baseada em regras gramaticais.
A abordagem estatística, ou estocástica, reconhece as restrições de coocorrência a partir de grandes corpora previamente marcados.
O texto é &quot;rotulado «com a classe morfossintática de cada palavra, e um sistema rotulador analisa as vizinhanças de todas as palavras para elaborar automaticamente as regras de restrição.
Por exemplo, num corpus o lexema &quot;a «pode ser seguido de substantivo (a turma do bairro) ou pronome (a cada dia substantivo tem grande probabilidade de ser um artigo; (
2ª) o &quot;a «seguido de pronome tem grande probabilidade de ser uma preposição.
Depois de elaboradas as regras automaticamente, o sistema pode aplicar- las em textos desconhecidos.
Normalmente, um sistema rotulador executa duas fases.
Inicialmente, o rotulador procede à compilação do corpus marcado, ou seja, o dicionário receberá cada palavra com o seu rótulo mais provável sem levar em conta o contexto em que está inserida.
Em este caso, a palavra &quot;casa «nas sentenças e seria marcada como N (nome).
EHODFDVDHVWià YHQGD.
A segunda fase do sistema rotulador consiste em inferir as regras de contexto a partir de o corpus de treinamento marcado através da comparação dos resultados da primeira fase.
Como resultado, uma lista de erros será criada e aplicada ao corpus, gerando as regras de contexto.
As regras são do tipo:
A B prevtag C, ou seja, troque de A para B se o rótulo anterior for C. Supondo, então, que uma das regras geradas para as sentenças anteriores fosse{ N V prevtag PPR, a sentença teria o rótulo N para a palavra &quot;FDVD «trocado por o rótulo V, já que a palavra é precedida por «(Oh «com o rótulo PPR (Pronome Pessoal Reto).
Em a abordagem simbólica, o pesquisador cria manualmente as regras de restrição partindo de hipóteses lingüísticas sobre as coocorrências.
As hipóteses são levantadas com base no conhecimento lingüístico, e são testadas, por exemplo, em textos alinhados21.
Tão logo se confirmem as coocorrências, as regras são criadas.
A resolução da ambigüidade léxica, através de uma abordagem semântica, está diretamente relacionada às técnicas de representação do conhecimento, desde a semântica procedural de Woods até a semântica conceitual, proposta por Jackendoff.
A maioria das abordagens para resolução da ambigüidade semântica tem- se concentrado no uso de primitivas conceituais para representar o conhecimento semântico.
Uma hierarquia de conceitos baseada em frames é freqüentemente usada para que o relacionamento conceitual entre as palavras se torne acessível.
Algumas abordagens semânticas são relacionadas a seguir, extraídas de (Hirst· Preferências Semânticas de Wilks São baseadas em restrições selecionais expressas através de Templates;
Assim, as categorias sintáticas são rotuladas com preferências.
Por exemplo: O verbo beber22 prefere um Sujeito Animado, um Objeto Líquido, etc..
Segundo esta abordagem, algumas referências anafóricas podem ser resolvidas como, por exemplo, na sentença:
No entanto, tais preferências, por si só, são inadequadas para lidar com todas as instâncias da ambigüidade léxica.
A abordagem de Wilks é inadequada nas ocorrências de verbos polissêmicos, por exemplo.
Em a sentença, o verbo RSHUDU significa &quot;funcionar, executar&quot;;
Em a sentença, significa &quot;realizar uma operação cirúrgica», enquanto que na sentença (2-22), ele é traduzido como &quot;realizar, efetuar».
2 PpGLFRRSHURXGXUDQWHWRGDDPDQK÷.\&gt;
Um texto é alinhado por algum termo para melhor visualização de sua vizinhança e de seu contexto imediato.
Exemplo de adaptado à língua portuguesa.
Resolução de Ambigüidade com Frames e Associações de Hayes A sentença de entrada é analisada por um parser ATN.
A o final da análise, as palavras ambíguas são interpretadas considerando todas os sentidos possíveis, de forma paralela (multiple forking).
Uma rede semântica subdividida em áreas representa o conhecimento léxico, e cada área é representada por um frame que participa de relações ISA e PART-OF.
A partir de esta representação, são encontradas associações entre as palavras.
Por exemplo, na sentença (2-23) a relação &quot;Ross Is-A PERSON «é verdadeira e a ambigüidade de &quot;hand «pode ser resolvida pois &quot;hand «está associada ao substantivo &quot;Ross», já que &quot;hand «é PART-OF PERSON.
Julgamentos Semânticos de Boguraev Além de a abordagem de preferências de Wilks, Boguraev considera também julgamentos semânticos que integram resolução de ambigüidade léxica e estrutural com interpretação semântica.
Procedimentos semânticos são associados a ações num parser ATN e executados ao final de sintagmas nominais e orações.
Word Expert Parser de Small Em este sistema, proposto por Small em, cada palavra no léxico é representada por um procedimento, isto é, cada palavra é um &quot;word expert «que participa do controle global do processo de análise, através de suas ações internas e interações com os outros &quot;word experts «na sentença.
A análise sintática, a resolução da ambigüidade e a interpretação semântica são executadas por um conjunto de procedimentos realizados em paralelo, que representam cada uma das palavras na sentença.
Desta forma, cada procedimento no léxico assemelha- se a um especialista em sintaxe e semântica daquela palavra específica.
As grandes desvantagens são justamente a complexidade que envolve o léxico e a diversidade de conhecimentos que envolve a sua manutenção.
O sistema de Small enquadra- se nos chamados sistemas baseados na palavra, cuja motivação principal é a interpretação de uma sentença centrada em pequenos fragmentos de informação (no caso, as palavras), que carregam toda a informação necessária para sua representação estrutural e representação do significado.
Maiores detalhes sobre Word O exemplo, extraído de, provavelmente refere- se à ambigüidade semântica individual da palavra hand ($= «mão;
Auxílio; Habilidade;
Direção; Etc.).
Expert Parser serão fornecidos no capítulo 4.
Sistema ABSITY de Hirst Em o sistema ABSITY, a resolução da ambigüidade léxica é realizada através de marker passing, ou seja, uma rede semântica que representa os significados de cada palavra através de arcos rotulados is-a e part-of;
À medida que um significado da palavra é encontrado na rede, este nodo é marcado.
Caso um nodo alcançado já esteja previamente marcado, então um caminho (immediate path) estabelece um relacionamento entre as duas palavras que alcançaram aquele mesmo nodo.
Em o exemplo clássico do autor, a sentença (2-24) é analisada em paralelo por o analisador sintático (PARAGRAM) e por o marker passing (MP).
Ambos recebem simultaneamente a sentença e trabalham em paralelo para construir a árvore de derivação (PARAGRAM) e encontrar caminhos que relacionam conceitos na rede semântica (MP) para todas as palavras da sentença.
O resultado, para fins de resolução da ambigüidade léxica, é que caminhos imediatos entre os frames airplane e airport-building sejam encontrados para plane e terminal, respectivamente.
De a mesma forma, caminhos entre airplane e aircraft-ground- travel sejam encontrados para plane e taxi, respectivamente.
A conseqüência lógica de tais caminhos encontrados é que nenhuma relação é estabelecida (caminhos imediatos conectados) para wood-- smoother, taxicab e computer-terminal, que correspondem aos outros significados para plane, taxi e terminal, evitando a ambigüidade da sentença (2-24).
A maior dificuldade das abordagens semânticas é justamente o esforço requerido na construção de representações para os significados.
Devido a essa ocorrência, um número muito pequeno de palavras é utilizado, bem como apenas um subconjunto de seus significados.
Grande parte das técnicas de representação do significado (restrições selecionais, traços semânticos, redes semânticas, redes baseadas em frames) exige volumosas estruturas hierárquicas de conceitos e relações.
A seleção do significado provável de uma palavra ambígua também pode ocasionar uma explosão combinatória, em sentenças com muita ambigüidade.
A Lingüística Computacional está empenhada em desenvolver parsers que analisem um texto, de acordo com alguma gramática, levando em conta o Exemplo extraído de.
Ferramentas computacionais (analisadores, redes de transição) com este fim (Allen 95).
Entretanto, tal nível de representação utiliza uma grande quantidade de conhecimento que tradicionalmente é centralizado e homogêneo, projetado sob uma arquitetura seqüencial e modular que ocasiona outros problemas que serão abordados descritivamente na próxima seção.
Os sistemas clássicos para processamento da linguagem natural têm sido tradicionalmente projetados usando arquiteturas puramente seqüenciais, ou seja, são construídos módulos específicos para cada domínio lingüístico (morfologia, sintaxe, semântica, etc.), e cada módulo repassa resultados para os módulos posteriores, envolvendo pouca ou nenhuma cooperação.
As características modulares seriais parecem ter sido herdadas da Lingüística tradicional, que comporta em geral quatro domínios de análise, conforme a Figura 2.8.
Esta abordagem serial no PLN deve- se naturalmente ao fato de que o processamento humano de uma sentença escrita é feito de forma seqüencial e incremental conforme esta é percebida, iniciando na primeira palavra da sentença.
Outrossim, as informações sobre cada item léxico dependem das relações entre os itens vizinhos e de como estes estruturam- se de acordo com regras de alguma gramática.
Se, por um lado, uma abordagem seqüencial facilita a execução e manutenção do sistema, por outro apresenta sensíveis limitações quanto a a performance, que podem ser as seguintes, de acordo com Boitet e Stefanini:
O fluxo de dados é fixo e constante, dificultando um possível retorno a níveis anteriores (backtrack) para tratamento de soluções múltiplas.
Por exemplo, se, quando uma derivação25 é encontrada no módulo sintático, as demais estruturas possíveis são descartadas na passagem para o módulo seguinte, tal ação poderá, eventualmente, resultar na perda de informações que poderiam ser úteis.
Por outro lado, se todas as soluções possíveis forem mantidas, neste tipo de arquitetura, torna- se grande o risco de ocorrência de explosões combinatórias e de propagação de soluções-parasitas (lingüisticamente incorretas), por vários níveis de análise;
A arquitetura é fechada, dificultando a inclusão de novos módulos à medida que o tratamento de problemas lingüísticos evolui, e requer soluções diferentes.
Isto significa que um novo ciclo de análise, projeto e modelagem é requerido a cada modificação da estratégia de análise ou síntese (esta última, no caso de geração);
O controle é centralizado, ocasionando um sensível overload de chamadas a um único módulo controlador.
A simplicidade da comunicação existente entre os sub-módulos pode, ainda, dificultar o controle estratégico do módulo controlador.
Trabalhando apenas em nível tático, o sistema é incapaz de decidir, quando na ocorrência de sentenças mal formadas, por exemplo, se um novo ciclo de análises deve ser retomado ou uma certa solução parcial deve ser utilizada;
A base de conhecimentos é centralizada, aumentando a alocação de recursos ao sistema e aumentando o tempo de execução, devido a a diversidade do conhecimento necessário a cada módulo.
O PLN apresenta uma relação natural com as características desfavoráveis da abordagem seqüencial mencionadas acima, principalmente quanto a os seus aspectos limitadores na performance do processamento.
Basicamente, pode- se caracterizar a complexidade no PLN evidenciando- se a necessidade de:
Manipular grandes bases de conhecimentos:
O PLN requer dicionários, gramáticas, heurísticas para resolução de ambigüidades e informações do domínio de aplicação, que representam um acervo de dados enorme, se considerarmos a necessidade de quase todo, senão todo (no caso de um tratamento irrestrito da LN) o conhecimento léxico-morfológico, sintático, O termo &quot;derivação «é compreendido, neste trabalho, como a aplicação sucessiva de regras sintagmáticas, resultando num conjunto de símbolos obtidos a partir de a seqüência precedente, principiando por um símbolo inicial.&amp;&amp;&amp;
E textual;
Interagir com diversos tipos de conhecimentos:
O processo de resolução de fenômenos lingüísticos (ambigüidade, elipse, anáfora, coordenação e outros) é estritamente não-determinístico, devido a a multiplicidade de significados e de estruturas diferentes que podem advir da análise de uma sentença.
Em este nível de tratamento, a interação entre tipos diferentes de conhecimentos é fundamental;
Fazendo uma analogia com um espaço de soluções, esta interação representaria um salto para máximos locais mais promissores, possivelmente evitando uma explosão combinatória.
Em o desenvolvimento de sistemas para representação e/ ou geração da LN, o uso de uma abordagem seqüencial associa os diversos domínios lingüísticos a módulos independentes que possuem estratégias de execução próprias e comunicação em nível local, conforme um método pré-determinado e estático.
Além disso, o constante backtracking em módulos seqüenciais acarreta a constante revisão de estruturas que já foram tratadas, diminuindo a performance e aumentando o risco de se obterem &quot;soluçõesparasitas», como evidenciado na seção anterior.
Em um modelo puramente seqüencial, portanto, cada módulo recebe os resultados de módulos anteriores, num fluxo contínuo e constante.
Por exemplo, um módulo sintático precisa aguardar informações de um nível léxico-morfológico.
Esta abordagem não considera a importância de resultados parciais, já que apenas uma estrutura de cada vez é enviada para o próximo módulo.
Woods em já alertava sobre o problema da ausência de mecanismos de pushdown para processar um constituinte embutido em outro.
Em a abordagem de Woods, a Augmented Transition Network (ATN), quando o ATN sintático encontra uma frase parcial suficiente para que o semântico continue, ele é interrompido e o controle passa para o componente semântico.
O feedback dado por este componente pode causar a continuação, de onde o sintático parou, ou um backtrack na escolha de um caminho errado.
A caracterização do problema da ambigüidade, feita no inicio do capítulo, leva- nos a acreditar que a hipótese cooperativa tem relevante importância quando é preciso considerar a necessidade da reavaliação da sentença, a busca de referências não resolvidas ou a decisão entre estruturas ambíguas alternativas.
Uma estratégia que use uma gramática global teria uma quantidade muito grande de regras, para prever todas as possibilidades de construção, e regras diversificadas para atender a cada tipo de análise, como, por exemplo, regras transformacionais.
De o ponto de vista computacional, atualmente vários trabalhos vêm demonstrando que uma abordagem distribuída constitui uma alternativa aos sistemas tradicionais de PLN (Boitet &amp; Seligman 94, Guha &amp; Lenat 94, Csuhaj-varjú&amp; Alez 93, Stefanini 93, Fum et al.
Passaremos a chamar simplesmente de &quot;agentes&quot;).
As vantagens que advêm desta proposta podem ser sumarizadas nas seguintes considerações:
Cada agente numa sociedade lingüística, sendo autônomo, possui uma especialidade distinta (análise sintática, análise semântica, entre outras);
Cada agente possui sua própria representação do conhecimento necessário, como descrito antes, sobre si mesmo, sobre os outros agentes e sobre o ambiente;
As etapas podem ser tratadas como interações entre agentes, facilitando o tratamento local de soluções parciais.
Tais considerações são visões diretas da caracterização da complexidade no PLN (seção 2.2) em manipular grandes bases de conhecimento, e interagir com conhecimento de domínios distintos.
Logo, a abordagem considerada deve conter procedimentos e estratégias que contemplem as seguintes características:
Acesso a conhecimento especializado para cada agente (módulo lingüístico) utilizado durante a análise;
Capacidade em detectar anomalias26 e, a partir de elas, deliberar novos objetivos e consultar outros agentes especializados;
Capacidade de usar o ambiente para cooperar com outros agentes na solução de problemas eventuais não detectados a priori;
Habilidade em tratar o problema de sua competência específica usando, possivelmente, formalismos e estratégias diversificadas.
Torna- se necessário ressaltar, no entanto, que a multiplicidade de agentes Consideramos uma anomalia, uma ocorrência anormal para a qual os objetivos do agente não estão preparadas como, por exemplo, o conflito entre duas ou mais categorias léxicas para uma mesma palavra.
De este modo, levar em consideração:
Uma comunicação interagente rápida, eficiente, simples e clara;
Uma granularidade ­ ou seja, a extensão e os objetivos individuais dos agentes ­ adequada à eficiência da comunicação interagente;
O uso de conhecimento especializado, conforme a competência dos agentes.
Abordamos, neste capítulo, dois problemas fundamentais que influenciam na eficiência do processamento da linguagem natural, isto é, o problema da ambigüidade e o uso de arquiteturas puramente seqüenciais.
Depreendemos, deste estudo, que uma das condições essenciais à resolução de tais problemas resume- se na troca de informações disponíveis em vários domínios lingüísticos, durante o processamento de uma frase.
De este modo, procuramos reunir subsídios necessários à definição de uma abordagem distribuída de módulos inteligentes e autônomos, que se comporte de modo cooperativo em relação a a resolução de um problema lingüístico.
Fomos buscar tais subsídios através das teorias lingüísticas e cognitivas, onde estabelecemos uma classificação adequada para o tratamento computacional da ambigüidade.
Através desta classificação e de várias abordagens estudadas para o tratamento do problema, foi possível vislumbrar a possibilidade da formação de coligações de agentes inteligentes para a resolução do mesmo, dada a necessidade da troca de informações heterogêneas envolvida no processo de análise.
Também estabelecemos uma relação natural entre as características do PLN e a abordagem distribuída (esta última apresentada em detalhes no Capítulo 3), que favorece a adoção de uma estratégia cooperativa entre os módulos que representam os domínios lingüísticos.
Em este capítulo, damos uma visão geral da área de Inteligência Artificial Distribuída (IAD), enfocando seus dois principais subdomínios:
A Resolução Distribuída de Problemas (RDP) e os Sistemas Multi--Agentes (SMA).
Nosso objetivo é caracterizar, de maneira geral o domínio de pesquisa da IAD, de forma que possamos delimitar os pontos principais que nos interessam na definição de um modelo multi-agentes (capítulo 5).
Este capítulo está organizado da seguinte forma:
Em a seção 3.1, fornecemos uma caracterização do domínio de pesquisa da IAD, que completamos com um breve histórico da área na seção 3.2;
Em a seção 3.3 apresentamos dois importantes subdomínios em que a IAD está dividida:
RDP e SMA;
Algumas definições de agentes encontradas na literatura, tipos de agentes e alguns exemplos de arquiteturas internas, são apresentados na seção 3.4;
Pontos enfocados.
O foco da Inteligência Artificial (Ia) está no desenvolvimento de artefatos computacionais que exibam um comportamento inteligente.
Isto é, artefatos que sejam capazes de, através de representações de estados mentais, comportar- se racionalmente em direção a a resolução de um problema específico (Charniak &amp; McDermott 87;
Genesereth &amp; Nilsson 88;
Ginsberg 93;
Rich &amp; Knight 93).
Melhor dizendo, a Ia busca a resolução de problemas baseada em alguma metáfora de inteligência, como a Psicológica/ Lógica (em sistemas físicos de símbolos);
A Neurofisiológica (em Redes Neurais);
A Social (Ia Distribuída);
A Construtivista;
A Genética/ Evolucionista (nos algoritmos genéticos);
Etc.. Inicialmente, a Ia tradicional procurava compreender como um único agente era capaz de exibir um comportamento inteligente.
Esta característica do comportamento humano individual constitui a fonte inspiradora do comportamento &quot;inteligente «de um sistema computacional para a Ia.
Entretanto, não está no escopo deste trabalho abordar considerações ou mesmo definições para o que seja &quot;inteligência», mesmo por que sua caracterização já é extremamente difícil até para a área das Ciências Cognitivas.
No entanto, o uso de tais metáforas por a Ia, antes que as redes de computadores estivessem suficientemente evoluídas, davam aos sistemas tradicionais as seguintes características:
Concepção centralizada:
Sistemas normalmente executados de forma seqüencial numa única máquina;
Difícil reusabilidade:
Normalmente um tratamento implementado para um determinado tipo de problema não podia ser aplicado a outro problema, mesmo similar;
Sistema fechado:
Sistemas concebidos para funcionarem independentes de outros sistemas (stand- alone).
Fato de que as entidades podem estar física, e até geograficamente, dispersas.
O interesse da Ia em concorrência e na distribuição, segundo, decorre naturalmente do desenvolvimento de arquiteturas paralelas mais robustas, da proliferação das redes de computadores mundiais, e da recente visão de que muitas das atividades de resolução de problemas envolvem grupos de pessoas cooperando para atingirem determinado objetivo comum.
A IAD procura investigar estes pontos em relação a o comportamento de vários processos distribuídos que são executados de forma concorrente.
A IAD, entretanto, difere do processamento distribuído já que seu foco de atenção estende- se a níveis mais altos de abstração.
A ênfase da IAD consiste na interação, cooperação e fluxo de conhecimento entre entidades distintas, ao invés de o mero fluxo de dados entre processos fisicamente distribuídos.
De fato, o processamento distribuído, dentro de a Ia, é levado a níveis mais abstratos quando a ênfase no comportamento social sobrepuja uma única entidade inteligente.
De entre as motivações para a distribuição em sistemas complexos de Ia, apresentadas por Bond e Sichman, consideramos relevantes:
A Adaptação:
A distribuição lógica, semântica, temporal e espacial permite melhor adaptabilidade em situações dinâmicas;
A Eficiência ou Velocidade:
A concorrência pode aumentar a velocidade do raciocínio;
A Confiabilidade:
A redundância de informações, a análise cruzada e a triangulação de resultados, em sistemas distribuídos, aumenta sua confiabilidade;
A Limitação de recursos:
As limitações naturais de um agente computacional fazem surgir a cooperação e a coordenação entre agentes;
A Especialização:
Como o conhecimento ou ação são reunidos em contextos mais especializados e limitados, seu controle, extensibilidade e compreensão são melhorados;
A distribuição:
Usuários e serviços estão fisicamente distribuídos;
A heterogeneidade:
Problemas grandes e complexos que tratam com o conhecimento de vários domínios;
A abertura:
Usuários e serviços podem entrar e sair livremente do ambiente.
Os principais enfoques da IAD, conforme, estão esquematizados na Figura 3.1.
Em, encontramos uma breve retrospectiva histórica dos antecedentes da IAD.
Durante os anos 50, as duas principais abordagens em Ia foram a busca heurística, através do uso de métodos de processamento de listas, e a modelagem de redes neurais.
Já no final dos anos 60, destacaram- se as abordagens de Sistemas de Produção) e o controle dirigido a padrões (Pattern-Directed Control), através do sistema PLANNER de Hewitt.
O modelo simbólico semi-paralelo de Hewitt foi motivado por as vantagens em separar o conhecimento do processo de inferência e por a modularização do conhecimento em partes identificáveis e significativas.
O sistema CONNIVER, de Sussman, surgiu devido a a observação da dificuldade de comunicação entre processos na abordagem de Hewitt.
Desta forma, no sistema CONNIVER, cada processo concorrente atuava como um especialista em alguma pequena área de atividade que poderia auto-suspender- se e reativar- se.
Em a abordagem de sistemas de produção, as regras de produção correspondem a processos de manipulação de símbolos primitivos:
O lado esquerdo é composto por um conjunto de testes primitivos, e o lado direito, por uma seqüência de ações primitivas.
Em síntese, os processos primitivos manipulam os símbolos em paralelo, através do acesso a um banco de dados em comum (contendo regras e fatos globais), procurando uma combinação satisfatória de padrões.
Esta abordagem evoluiu para os sistemas baseados em quadro-negro (Blackboard), primeiramente utilizado no sistema HEARSAY II (Erman et al.
BEINGS (Lenat 75).
Ainda durante os anos 80, Smith apresenta seu mecanismo de negociação através de redes de contrato para a alocação distribuída de tarefas.
O modelo de sistema aberto é introduzido por Hewitt e surgem os primeiros ambientes computacionais para a IAD, como DPSK e Mace (Gasser et al.
87), entre outros.
O domínio de pesquisa da Inteligência Artificial Distribuída está dividido em dois subdomínios:
A RDP e os SMAs.
Em as subseções seguintes, descreveremos suas principais diferenças e algumas considerações quanto a o inter-relacionamento entre estas duas abordagens (subseção 3.3.3).
A Resolução Distribuída de Problemas (Distributed Problem Solving -- DPS) pode ser caracterizada por uma coleção de módulos27 ou agentes que cooperam para a resolução de um problema particular.
A cooperação ocorre através do compartilhamento de conhecimento sobre o problema e sobre os aspectos que envolvem a solução.
Os agentes são projetados previamente para atender a um tipo particular de problema, mas não Ou &quot;nodos», representados através de estruturas hierárquicas ou grafos.
Para atingir o seu objetivo.
O fluxo desenvolvido nesta tarefa é mostrado na Figura 3.2.
Naturalmente, a abordagem tende a um controle mais rígido, em geral hierárquico e centralizado.
Como a sociedade é fechada, já que os agentes são projetados apenas para a resolução de um problema em particular, o número de agentes tende a ser fixo.
Como não há a necessidade de comunicação intensa e complexa entre os agentes, a RDP mostra pouca complexidade, e o conhecimento envolvido pode ser representado através de lógica de 1ª ordem, por exemplo.
A visão de Smith sobre RDP refere- se a processos independentes (distintos e descentralizados), chamados fontes de conhecimento (Knowledge Sources Ks's), que atuam numa atividade cooperativa.
A cooperação é necessária pois cada Ks não possui informação suficiente para solucionar todo o problema e, desta forma, a informação deve ser compartilhada entre os Ks's para que o sistema atinja um objetivo global.
Em esta visão, o controle e os dados estão distribuídos, mas não são globais e, portanto, a cooperação é fundamental para a solução final do problema.
Diferente da abordagem RDP, os Sistemas Multi--Agentes (Multi-Agent Systems Mas) mostram um comportamento inteligente, principalmente devido a sua autonomia.
Os sistemas multi-agentes são baseados numa coleção de agentes autônomos que cooperam em direção a um objetivo global.
O conhecimento sobre o problema e sobre o desenvolvimento da solução continuam sendo compartilhados;
Porém, os agentes precisam controlar individualmente a interação, motivo por o qual são autônomos.
Esta autonomia permite também que os agentes possuam objetivos individuais, e que possam interagir em direção a a resolução destes.
Os agentes são projetados baseados em alguma especialidade particular, contendo o conhecimento necessário do domínio e as ações apropriadas para conduzir esta especialidade.
Isto permite que a existência dos agentes independa de qualquer problema previamente existente, ou de outros agentes com quem deva interagir.
O projeto da sociedade e de quais agentes a constituirão é que determinará a resolução de um problema qualquer.
Esquematicamente, a tarefa de resolução de problemas na abordagem SMA é mostrada na Figura 3.3.
Compartilhando um mesmo ambiente, os agentes possuem certo conjunto de habilidades e capacidades que os tornam aptos a agirem num mundo multi-agente, pois:
São capazes de perceberem- se e sabem da existência um do outro;
São capazes de comunicarem- se entre si com a mesma linguagem;
Possuem conhecimentos e habilidades específicas que os tornam aptos a executarem tarefas próprias a cada um;
Possuem a capacidade de colaborar entre si para atingir um objetivo comum.
Alguns pontos importantes a considerar na abordagem SMA, conforme (Sichman et al.
92; Demazeau &amp; Müller 89;
Bond &amp; Gasser 88), quando se trata, principalmente, com agentes cognitivos28, são os seguintes:
A decomposição da tarefa é feita por os próprios agentes com base no conhecimento que possuem sobre suas habilidades e sobre as dos outros;
Graças à autonomia, os agentes podem ter suas próprias metas locais e decidirem o que fazer a qualquer momento;
Os agentes possuem conhecimento e habilidades suficientes para resolverem, além de seus próprios problemas, outros problemas que possam surgir no mesmo ambiente;
Um SMA pode ser um sistema aberto:
Agentes podem entrar e sair a qualquer momento de uma sociedade;
Em este caso, o conhecimento que os agentes possuem uns dos outros é modificado;
Se o ambiente muda, os agentes devem acompanhar esta mudança alterando suas representações internas sobre o ambiente.
Devido a os aspectos mencionados acima, percebe- se que a abordagem SMA permite um controle mais flexível e descentralizado do que um RDP mas, obviamente, pressupõe uma complexidade maior quanto a o overhead de comunicação inter-agentes e quanto a a representação das tarefas.
Relaciona cinco áreas principais de problemas emergentes na abordagem SMA:
Como descrever, decompor e alocar tarefas complexas em sub-tarefas simples;
Quais linguagens e protocolos utilizar para interação e comunicação;
Como coordenar de forma coerente o controle e as tomadas de decisão;
Como resolver conflitos e incertezas gerados por conhecimento diverso;
Quais linguagens e ambientes de programação melhor se adequariam à atividade multi-agente.
Os aspectos de autonomia, coordenação e comunicação são o ponto principal no contexto dos SMAs quando se procura a definição de agentes e a concepção das sociedades de agentes para a execução de uma tarefa.
Não basta que os agentes compartilhem conhecimento sobre problemas e soluções, é preciso que raciocinem sobre como ocorre a coordenação entre eles para atingirem determinado objetivo, seja este global ou individual.
Agentes Cognitivos possuem estados e conhecimentos internos que tornam possível um certo grau de deliberação, conforme veremos na seção 3.4.2.
Em a visão de Werner, em, a fronteira entre SMA e RDP está cada vez mais tênue e a abordagem de RDPs puros é levada a incorporar a abordagem de SMA em seu enfoque.
A justificativa é que um projetista pode, ao invés de dar um objetivo global a um agente, fornecer- lhe algum problema específico para resolver e, neste sentido, a RDP passa a ser um tipo de meta-interação entre um agente específico (o projetista) e um SMA.
Uma proposta de comparação entre os subdomínios é encontrada em (Durfee &amp; Rosenschein 94), abordando três relações possíveis:
RDP como um subconjunto de SMA:
Um SMA é um caso particular de RDP quando:
Os agentes podem querem ajudar- se incondicionalmente (hipótese da benevolência);
Os agentes possuem um objetivo em comum;
O sistema é concebido por um projetista central que possui um problema determinado (hipótese da concepção centralizada).
SMA como base para RDP:
As propriedades internas dos agentes são definidas através do estudo inicial de um SMA e, posteriormente, as técnicas da RDP definem as propriedades externas ao agente.
A concepção das interações e organizações dos agentes é obtida através do estudo de um SMA e o comportamento global é definido como um sistema RDP;
RDP e SMA como domínios complementares:
Às vezes, os subdomínios são distinguíveis não por o comportamento global do sistema, mas por as motivações científicas dos projetistas e por a natureza dos seus experimentos.
Compreendemos, então, que a comparação entre SMA e RDP constitui uma tênue linha delimitadora entre as duas abordagens, basicamente através das visões que podemos ter da concepção das sociedades e também dos objetivos e comportamentos esperados de nossos experimentos científicos.
Em este contexto, nosso modelo não se coloca inteiramente num dos subdomínios acima mas, devido a as características do problema abordado no estudo de caso e, também, da visão de que uma sociedade global para PLN é, de certa forma, de uma concepção fechada, nossa abordagem beira a fronteira entre ambos.
De o ponto de vista do tratamento do problema, portanto, da subsociedade que propomos temos uma RDP projetada conforme as características intrínsecas ao mesmo.
Entretanto, do ponto de vista da sociedade como um todo, o sistema comporta- se como um SMA que ao deparar- se com situações de conflito, pode tomar decisões locais.
A formação de uma subsociedade para a resolução deste conflito e a continuidade em perseguir seu objetivo global, constituem alguns exemplos de possíveis decisões locais.
Embora a comparação entre os subdomínios suponha que a abordagem SMA sempre objetive obter propriedades preestabelecidas ao nível do sistema, uma concepção que aborde uma área tão complexa quanto o PLN não pode prever com absoluta precisão quais fenômenos lingüísticos ou conflitos possam vir a ocorrer.
Uma dos conceitos mais intuitivos para o termo agente, conforme, é obtido através de uma metáfora que relaciona a figura do agente como um representante, um intermediário dotado de uma habilidade especial que atua por outra pessoa.
Aqui, a principal idéia relacionada à palavra &quot;agente «é a de algum tipo de dispositivo (artefato computacional) que executa alguma tarefa, sem a necessidade da explicitação do seu funcionamento interno.
Observações, de seu conhecimento e de suas interações com outros agentes.
Alcançar- los eficientemente.
Uma outra conceituação, proposta por, procura separar agente de autonomia e definir um relacionamento entre os dois conceitos.
Baseado na visão de Shoham de que um agente é qualquer entidade a que pode ser atribuído um estado mental (por exemplo:
Crenças, capacidades, escolhas e compromissos), Luck e d'Inverno propõem uma hierarquia desta entidade, relacionada à idéia de objetos, conforme mostra a Figura 3.4.
Em este caso, um objeto é visto como um agente quando adquire objetivos.
Desta forma, para Luck, um agente é uma instanciação de um objeto acrescido de um conjunto de objetivos associados e, por sua vez, um agente autônomo é uma instanciação de um agente com um conjunto de motivações associadas.
Em este contexto, a motivação segue a mesma visão da Psicologia, sendo um conjunto de desejos e preferências que levam à geração e à adoção de objetivos que afetam o modo como os mesmos devem ser alcançados.
Este enfoque é abordado também por e, segundo ele, quando a um objeto são associadas capacidades de percepção, de comunicação, de raciocínio e de decisão, o objeto torna- se um agente capaz de processar autonomamente informações numa RDP.
Em resumo, como se pode perceber através das conceituações apresentadas, um agente é, genericamente, uma unidade computacional independente, com algum grau de inteligência, representado por os estados mentais internos, que possui a capacidade de executar ações conjuntas com outras unidades, numa intenção mútua de atingir um objetivo global em determinado momento.
As considerações da IAD a respeito de agentes computacionais, novamente baseadas nas metáforas humanas, podem ser de dois tipos básicos:
Agentes Reativos e agentes Cognitivos:
Agentes Reativos:
Sem recordações de atos passados ou previsão de ações futuras, o seu comportamento é baseado no processo estímulo-resposta, interagindo através da percepção de mudanças no ambiente.
Não existe uma representação do ambiente ou dos agentes, nem uma comunicação de alto nível.
Em uma sociedade de agentes reativos, o comportamento &quot;inteligente «global emerge do comportamento local de uma coleção de entidades simples;
Predominam os objetivos locais.
As vantagens do enfoque reativo estão relacionadas à rapidez nas respostas, a um bom desempenho quando estão num ambiente real, à simplicidade da representação do conhecimento, à facilidade em generalizar, e à simplicidade da representação de seu mundo, já que o mesmo é o seu próprio modelo.
A principal desvantagem deste enfoque é justamente a de possuir um comportamento local (tático) ao invés de global (estratégico).
De isto decorre a limitação da visão completa do ambiente por um agente reativo, levando- o à impossibilidade de construir um plano completo para alcançar um objetivo global.
A idéia principal relacionada aos agentes reativos é a ação baseada em estímulos, razão por que os chamou &quot;tropistas «fazendo uma relação com o comportamento essencialmente sensorial de plantas e animais.
De acordo com o autor, os agentes percebem o mundo de diferentes formas, conforme suas limitações sensoriais;
Por exemplo, num mundo de blocos, podem existir agentes que consigam mover uma peça mas não mudar sua cor, ação que outro agente pode realizar, o qual, por sua vez, não é capaz de mover uma peça.
A modelagem destes agentes relaciona ações em partições do mundo em função somente das limitações sensoriais dos agentes.
Genesereth define um outro tipo de agente reativo, um agente &quot;histerético «29, que é um agente tropista com estados internos o qual é dinâmico em relação a suas ações e representa uma espécie de mapeamento das partições do mundo que percebe.
Agentes Cognitivos: Um agente cognitivo ou deliberativo possui uma representação explícita do ambiente e dos outros agentes, podendo raciocinar sobre ações passadas e planejar ações futuras.
Sua ação inteligente ocorre quando o agente possui um objetivo e sabe quais ações são necessárias para atingir- lo.
De posse disto, ele &quot;delibera «sobre aquela ação e a executa.
É composto por um pequeno número de membros (Correa filho 94;
Sichman et al.
92). Em essência, um agente cognitivo precisa possuir qualidades que evidenciem seu comportamento inteligente.
Tais qualidades são representações de estados mentais que Termo derivado de &quot;Histerese», um fenômeno que ocorre quando a resposta de um sistema a uma solicitação externa se altera conforme varie esta solicitação.
Facultam a interação com outros agentes.
Para que isto ocorra, o agente deve possuir um certo conhecimento a respeito de o ambiente, dos demais agentes e das possibilidades de mudanças, através de ações, que ele é capaz de executar.
Para se predispor à interação, sempre que for necessário, ele deve igualmente conhecer o que os outros agentes sabem sobre o mundo e sobre ele mesmo;
Logo, a idéia básica que imediatamente nos surge é a de processamento simbólico.
Para representar os estados mentais e viabilizar capacidades como comunicação, raciocínio e aprendizagem, esta abordagem necessita de uma representação simbólica interna, e de uma representação externa, a fim de possibilitar a cooperação e interação com outros agentes no ambiente.
A arquitetura de um agente diz respeito à especificação de como os processos internos se estruturam para possibilitar sua interação com o mundo externo.
Para que um agente demonstre um comportamento realmente inteligente, os estados mentais devem fazer parte do núcleo da arquitetura e, também, da modelagem do comportamento externo do agente.
Correa define uma arquitetura global composta por quatro agentes locais básicos:
Crença, Desejo, Intenção e Expectativa, que executam ações relacionadas aos estados mentais que representam, de forma que as interações do agente global emergem das interações dos agentes locais.
A modelagem interna de um agente denota o nível de conhecimento necessário à execução de suas metas e evidência a sua competência em relação a a sociedade.
Assim como tratou um agente como instanciações de objetos, Demazeau diz que um agente pode ser dividido em duas partes, a saber:
Uma parte &quot;estática», que representa o conhecimento e a estrutura do agente através da sua arquitetura;
Uma parte &quot;dinâmica», relacionada aos métodos de processamento deste conhecimento para alcançar seus objetivos.
Segundo, qualquer agente deve possuir uma representação a respeito de o mundo ou do problema a resolver.
Esta representação constitui o conhecimento adquirido através da percepção do ambiente ou da comunicação com outros agentes, de onde se pode abstrair o conjunto de objetivos da sociedade.
Um agente deve possuir capacidades de raciocínio que o levam a derivar as soluções possíveis para seus objetivos conforme seu conhecimento.
Se várias soluções aparecem, ele deve possuir capacidades de decisão para optar por uma de elas.
Estas considerações estão sintetizadas no modelo de agente genérico proposto por Demazeau, esquematizado na Figura 3.5.
Para que um agente se torne parte importante de uma sociedade o seu conhecimento deve refletir uma representação explícita e abstrata do ambiente e dos objetivos;
Ele deve ter habilidade em descrever sua competência e seus desejos, bem como conhecer a competência dos outros agentes.
Deve conter os planos a serem executados e as alternativas disponíveis para uma tomada de decisão.
Os métodos de processamento incluem as capacidades de raciocínio e decisão, comunicação, detecção de incoerências, integração, raciocínio sobre o comportamento e o conhecimento dos outros agentes, e mecanismos de tomada de decisão.
Outro exemplo de arquitetura de agente cognitivo proposto em, utilizado no projeto ARCHON (ARchitecture for Cooperating Heterogeneous On-Line Systems), é mostrado na Figura 3.6.
Um agente cognitivo é &quot;integrado «a um sistema inteligente (um sistema especialista), onde passa a atuar como um cooperador/ organizador entre os objetivos globais de uma coleção de sistemas especialistas e o objetivo específico da aplicação.
O Modelo Próprio do agente contém a visão que o agente tem de si mesmo.
Aí estão sua identidade, seus objetivos, suas conclusões e demais informações que constituem uma base de conhecimento estática representada através de predicados, como por exemplo:
Is_ my_ goal (task, priority).
Goal_ plan (goal, plan).
Etc.. O agente sabe da existência de outros agentes na sociedade através do Modelo DOS Conhecidos (acquaintance model), que diz quem está interessado em sua informação e quem tem informação que o agente precisa, como por exemplo:
Who_ does (task, list_ of_ agents).
Interest_ in (data, agent).
30 etc..
O módulo Comunicação trata da troca de mensagens e da negociação entre os agentes;
O módulo Planejamento/ COORDENAÇÃO é responsável por o planejamento/ coordenação de ações, por a detecção da necessidade de cooperação e por a escolha dos tipos de protocolos e tipos de coordenação;
A conseqüente execução de tais escolhas é feita por o módulo Monitor.
Existem duas abordagens quanto a a concepção de organizações, encontradas na literatura da IAD, a abordagem estática, no caso de um sistema aberto, e a abordagem dinâmica, no caso de um sistema fechado:
Em a abordagem estática, os relacionamentos entre os agentes e a estrutura de comunicação são conhecidos e definidos completamente a priori, durante a fase de concepção do sistema;
Em a abordagem dinâmica, os relacionamentos e a comunicação entre os agentes são estabelecidos dinamicamente durante a fase de resolução, a exemplo dos sistemas baseados na teoria dos jogos.
Em o âmbito de nossa abordagem, nos reportaremos a um sistema fechado.
Se pensarmos no problema da análise de um enunciado em LN, veremos que existem domínios preestabelecidos, adquiridos da teoria lingüística (morfologia, sintaxe, semântica, pragmática, etc.), que poderão corresponder a agentes individuais ou a grupos de agentes que, todavia, não dependerão da entrada ou saída de outros agentes.
De este modo, vemos a concepção de nosso modelo como uma sociedade, a priori, fechada.
Este exemplo e o anterior são extraídos de.
Para que o conjunto de agentes coopere efetivamente dentro de uma sociedade, em direção a um objetivo específico, a estrutura desta sociedade precisa garantir recursos e capacidades para facilitar a interação entre os agentes.
A sociedade de agentes é normalmente estruturada como uma rede hierárquica homogênea ou heterogênea, ou como o &quot;mercado «(&quot;market-like&quot;) (Boissier &amp; Demazeau 91), que determina diretamente as ligações de comunicação entre os agentes.
Também com relação a as sociedades, pode- se conceber duas partes:
Uma estática, que se refere à representação do conhecimento, e outra dinâmica, que define como utilizar este conhecimento.
Estas duas partes podem ser assim representadas:
Representação do Conhecimento, que define normas sobre o que é permitido dentro de a sociedade;
Processamento do Conhecimento, que define como e quando o conhecimento representado será usado.
As interações básicas que permitem a troca de conhecimento, objetivos, planos ou escolhas entre agentes podem ocorrer através de comunicação direta, quando os agentes conhecem um ao outro, ou de comunicação indireta, onde, desconhecendo- se uns aos outros, os agentes colocam e obtêm informação em alguma estrutura compartilhada.
Um exemplo de comunicação indireta é a abordagem blackboard (quadro-negro), onde os agentes compartilham uma estrutura de dados comum (blackboard) onde as informações são escritas e lidas de acordo com o desenvolvimento da tarefa.
Não há comunicação direta entre os agentes, a não ser através desta estrutura.
Desta forma, o conhecimento é público e acessível a qualquer momento por qualquer agente.
A estrutura pode conter primitivas simbólicas (hipóteses), fatos, regras, organizados por vários níveis de abstração.
Se, por um lado, esta abordagem possibilita o controle e a resolução do problema simultaneamente, devido a o sistema de controle, por outro lado surge a desvantagem da centralização da informação e do controle.
As sociedades de agentes podem ser abordadas como sistemas abertos ou fechados.
A abordagem fechada presume que o projeto dos agentes e das interações seja estabelecido na fase de concepção e que a resolução do problema não necessite de outros agentes.
A abordagem de um sistema aberto designa a possibilidade de migrações de agentes de outros sistemas a fim de colaborarem na solução de um problema que pode, também, ser dinâmico.
Em esta última abordagem, em que os agentes entram e saem livremente de uma sociedade dinâmica, normalmente os agentes tendem a agrupar- se em coligações a fim de suprirem mutuamente possíveis carências individuais de capacidades e de conhecimento.
Declaramos anteriormente (seção 3.5) que, devido a as características da teoria lingüística, lidamos com uma sociedade fechada.
No entanto, a dinamicidade será encontrada na tarefa de resolução de conflitos, quando alguns agentes terão que se agrupar para solucionar este conflito.
Esta situação é abordada, neste trabalho, num estudo de caso para tratamento de um fenômeno lingüístico em particular:
A ambigüidade léxica.
Normalmente, a formação de coligações leva em conta o princípio econômico da racionalidade, ou seja, o objetivo do agrupamento é maximizar seu benefício, minimizando seu custo.
A formação dinâmica de coligações em SMA advém da teoria dos jogos, onde o problema consiste em como compartilhar benefícios em grupo.
Geralmente, a medida de benefício é obtida em unidades de tempo ou distância nas abordagens de jogos onde as ações dos agentes podem, pelo menos, ser avaliadas.
No entanto, tal avaliação não é trivial em abordagens como estratégias de tomadas de decisão e alocação dinâmica de tarefas, entre outras.
A abordagem proposta em, por exemplo, procura basear a análise do agrupamento nos objetivos do agente e, de modo geral, objetiva reduzir o esforço de comunicação entre os agentes nas tarefas cooperativas.
Os critérios de decisão adotados para formar uma coligação também podem estar baseados nas crenças do agente;
Demazeau 95);
Ou, baseados em interações estabelecidas no passado e armazenadas num &quot;histórico «do agente, como em.
O framework31 de redes de contrato tem sido largamente utilizado como mecanismo de negociação para alocação dinâmica de tarefas e conseqüente formação de agrupamentos de agentes que compartilham tarefas e objetivos.
As situações de conflitos entre agentes de uma coligação utilizam a negociação para alcançar um consenso mútuo e resolver estes conflitos.
De certa forma, no modelo que propomos, o consenso mútuo é a solução para uma situação de conflito, porém baseado num protocolo de aprendizado cooperativo que, de certa forma, adquire uma característica de negociação.
Em a tarefa de resolução distribuída de problemas, cada nodo interage com outro através da comunicação de requisições para sub-tarefas ou troca de resultados parciais.
Em a abordagem SMA, os agentes compartilham conhecimento especializado para a resolução de sub-tarefas e, também, representações internas de outros agentes, a fim de estabelecerem uma interação adaptativa e cooperativa.
A comunicação carrega mais do que simples pedaços de informação;
Ela representa níveis de abstração mais altos que contêm, também, o contexto e a semântica da mensagem.
Demazeau e Koning, em (Koning &amp; Demazeau 95), argumentam que os agentes devem ser capazes de extrair da mensagem pedaços de informação úteis para o controle da troca de mensagens e para o controle da execução da atividade cooperativa.
A alteração das representações internas de um agente, a interação social e a cooperação em direção a a resolução de um problema, são eventos ou ações estabelecidas através de atos comunicativos, explícitos ou implícitos, entre agentes.
Para que a cooperação se torne efetiva, é necessária uma comunicação intencional que, de um modo geral, é proporcionada por os atos de fala (Bordini 94;
Demazeau 95;
Koning &amp; Demazeau 95;
Lux &amp; Steiner 95;
Shoham 93).
O mecanismo de troca de mensagens pode ser representado, num âmbito físico, através de redes de comunicação onde as mensagens são trocadas por broadcasting, point- to point ou point- to multipoint, por exemplo (Oliveira Quando dois agentes compartilham seus conhecimentos, possibilidades e escolhas, segundo, há uma interação forte entre os agentes.
Este tipo de interação não se restringe à simples troca de mensagens;
São necessários protocolos de comunicação mais robustos e complexos para as tarefas de informar, requisitar, convencer e negociar.
A interação é média quando relaciona conhecimento e possibilidades apenas.
Em este caso, um agente tenta considerar o que o outro deseja realizar.
Finalmente, a interação é fraca quando os agentes trocam apenas conhecimentos.
Esta interação ocorre através da percepção de alterações no ambiente ou no mundo exterior, e através de troca de mensagens.
Uma vez que, entre agentes autônomos, o que é trocado é conhecimento, e não simples dados, surge a necessidade da utilização de um framework único que possibilite aos agentes identificar, dentro de a mensagem, informações necessárias ao controle da interação e da comunicação.
Além disso, os agentes precisam conhecer, através da mensagem, as intenções dos outros agentes, as possíveis ações a ser realizadas e o significado da mensagem no contexto da atividade que está sendo executada.
Demazeau, em, denomina protocolo de interação o framework que estrutura as interações entre os agentes a partir de uma rede de transição de estados.
Partindo do princípio de que a troca de mensagens entre os agentes visa modificar seus estados internos em relação a um objetivo global, o protocolo de interação pode ser representado através de uma rede de transições (Figura 3.7) em que o conteúdo da mensagem faz com que o agente mude de um estado para outro de acordo com a interação expressa através da mensagem.
A interação em sistemas multi-agentes pode ocorrer segundo dois modos, conforme:
Task--sharing e Result-sharing.
Task--sharing é um modo de interação em que a cooperação entre processos individuais é realizada por o compartilhamento da carga computacional, ou seja, cada processo se encarrega de uma sub-tarefa.
Se apenas os resultados parciais das atividades individuais são compartilhadas, o modo de interação é chamado Result-sharing.
Quando o modo de interação utilizado é o task-- sharing, torna- se importante determinar como as tarefas devem ser distribuídas na sociedade de agentes, ou entre nodos processadores numa abordagem de RDP, para que cada agente encontre meios mais apropriados para cooperar em alguma tarefa específica.
Smith chamou a isto de problema da conexão, que deve considerar dois aspectos:
Como os recursos e as tarefas são alocados na sociedade, e como os agentes são escolhidos para executarem as tarefas.
Novamente, o uso de protocolos mais efetivos devem ser considerados quando a interação entre módulos depende de alternativas e escolhas durante a execução do sistema.
Vários protocolos têm sido descritos para os mais variados tipos de comportamentos desejados.
Descrevemos alguns de eles a seguir.
Protocolo de Introdução Este protocolo foi proposto por Berthet.
Quando um agente ingressa numa sociedade, ele apresenta seu conhecimento e suas capacidades e aguarda por uma resposta da sociedade para obter um papel.
O processo de aceitação do novo agente envolve outros protocolos que o avaliarão em relação a os agentes da sociedade.
Os protocolos adicionais são:
Protocolo de Duplicação, para a detecção de redundância;
Protocolo de Competição, para determinar quais agentes são melhores para determinado papel;
Protocolo de Incoerência, para a detecção de inconsistências entre o conhecimento do agente e o papel que ele pode preencher;
Protocolo de Informação que, na aceitação do novo agente, permite aos agentes conflitantes modificar seu conhecimento mútuo.
Protocolo de Redes de Contrato Deavis e Smith apresentam uma abordagem para resolução de conflitos através de negociação.
Em este método, um agente assume o papel de &quot;gerente», e envia requisições para a execução de tarefas a outros agentes.
Estes agentes, no papel de &quot;proponentes», avaliam o seu interesse na requisição baseados num procedimento de avaliação da tarefa, conforme suas capacidades e seu conhecimento.
Se a requisição é de interesse, os agentes emitem uma proposta para o gerente.
O gerente avalia as várias propostas recebidas através de um procedimento de avaliação de propostas, e estabelece um contrato com um ou vários agentes para a execução da tarefa (ou sub-tarefas) requisitadas.
Protocolo de Aprendizagem Cooperativa O protocolo de aprendizagem cooperativa proposto por Sian, permite que um agente obtenha informações úteis num SMA através de proposições apresentadas a outros agentes, os quais devem emitir uma resposta.
A interação é baseada em nove primitivas que expressam atos de fala:
Assert: Representa uma assertiva correta imposta a outros agentes;
Propose: Propõe novas hipóteses;
Modify: Modifica uma proposição anterior;
Confirm: Confirma a validade da proposição;
Disagree: Não aceita uma hipótese;
Em o opinion:
Não emite nenhuma opinião a respeito de a hipótese;
Withdraw: Retira a hipótese proposta;
Agree: Concorda com uma hipótese proposta;
Accept: Aceita uma hipótese previamente concordada.
Propõe uma Arquitetura Governada por Leis para Sistemas Distribuídos (Law--Governed for Distributed Systems -- LGAD) onde as interações são controladas por um conjunto explícito de regras que são estritamente impostas ao sistema:
A lei do sistema.
A lei é global, ou seja, todos os agentes a obedecem, e sua manutenção e imposição são locais a cada agente.
A LGAD consiste de um quádrupla O, L, E\&gt;, onde:
C: É a rede de comunicação que suporta o protocolo;
O: É um conjunto de agentes que interagem cooperativamente;
L: É a lei do sistema e E:
O mecanismo por o qual o protocolo é imposto.
Um exemplo de lei global que governa um sistema é a garantia de que uma mensagem enviada por um agente, ao chegar a seu destino, será entregue ao destinatário.
Isto pode ser implementado como:
Arrived (E, M, D) De o (deliver (M)).
Onde: E $= emissor;
M $= mensagem;
D $= destinatário Sempre que uma mensagem (M) é recebida por um agente (arrived), um procedimento (De o) irá garantir a entrega da mensagem (deliver) na estrutura de informações do destinatário (mailbox).
O conjunto de leis globais (L) regula toda a comunicação do sistema, proporcionando a sistemas distribuídos, heterogêneos e em evolução maior flexibilidade e fácil modificação do conjunto de regras de comunicação.
Para cada ato de envio de mensagem, há uma regra associada que regula seu comportamento como, por exemplo:
Bloqueio, Reenvio, Transformação, Prioridade, Entrega, etc..
Para efetivar a comunicação entre os agentes, utilizando protocolos, o conhecimento comunicado deve ser representado em alguma linguagem apropriada.
Devido a a característica do conhecimento usado em agentes cognitivos (representado por fatos e regras), em geral a comunicação pode ser implementada adequadamente através de linguagens baseadas em lógica de 1ª ordem.
Por exemplo, a arquitetura LGAD, vista no fim da seção anterior, utiliza expressões PROLOG para a implementação das leis do sistema.
Outro caso de utilização da linguagem PROLOG para comunicação entre agentes é encontrado no sistema TALISMAN.
A lei global de inicialização do sistema pode ser assim descrita em sentenças PROLOG:
Assert (, ): Assert (, Pret), Assert (, Synt), Os agentes cognitivos possuem representações internas de estados mentais (crenças, objetivos, etc.) que precisam ser conhecidos na tarefa cooperativa.
Ou seja, as representações internas de um agente devem ser comunicáveis para outros agentes, através de atos comunicativos que não podem ser diretamente representados apenas por linguagens de 1ª ordem.
Por exemplo, as ações dos agentes precisam ocorrer num período de tempo determinado e, ainda, segundo as ações e expectativas de outros agentes em direção a uma meta global comum.
No caso de a representação de estados mentais internos, a linguagem precisa incluir operadores modais para permitir a representação temporal e o modo de interação do agente com o conhecimento.
Em o framework para Programação Orientada a Agentes (Poa) apresentado por, são definidas uma linguagem formal para descrição dos estados mentais dos agentes e a própria linguagem de programação.
A linguagem de programação possui primitivas de comunicação baseadas em lógica epistêmica32 e operadores temporais.
Então, por exemplo, ações comunicativas comuns na Poa são: (inform t a fact) -- informa o fato fact, no tempo t, para o agente a; (
request t a action) -- requisita uma ação action, no tempo t, para o agente a; (
unrequest t a action) -- cancela a ação action, requerida para o agente a no tempo t;
Fatos (fact) são simplesmente sentenças atômicas sem conjunções, disjunções ou operadores modais, como por exemplo:
Lógica modal com operadores de crença (B) e conhecimento (K) que um agente possui sobre o mundo.
Se um agente crê (Believe) ou sabe (Know) que P e P Q são verdadeiros, então ele crê ou sabe que Q é verdadeiro. (
t (employee smith Acme) Smith é empregado da Acme no tempo t;
Através das ações comunicativas e dos fatos, a troca de informações pode ser feita através da inclusão de fatos ou pedidos no corpo das declarações.
Por exemplo, a declaração para informar ao agente b, no tempo 5, que Smith é empregado da Acme no tempo 1, seria:
Outra linguagem cooperativa, a linguagem CooL (Cooperation Language), proposta por como suporte para cooperação entre agentes, representa classes e instâncias relacionadas a um contexto.
Cada cooperação é executada dentro deste contexto.
O autor exemplifica um sistema multi-agente, cujo cenário é o tráfego urbano.
Por exemplo, a cooperação entre o agente car com outro agente car_ park objetiva colocar o carro no estacionamento:
O contexto para car é criado através do operador new &quot;novo_ contexto&quot;\&gt;:
Em esta abordagem, os agentes são definidos como objetos cujo conhecimento (seu modelo do mundo e seus estados internos) é uma instância de um contexto, e as ações comunicativas são relevantes a este contexto específico.
A cada nova cooperação, novos contextos são criados para que a comunicação seja corretamente instanciada.
Um formato de troca de conhecimento chamado KIF (Knowledge Interchange Format) é descrito em (Genesereth &amp; Ketchpel 94) como uma linguagem, baseada em cálculo de predicados de 1ª ordem, que representa o conhecimento permutado entre processos distribuídos.
São exemplos de expressões KIF:
A linguagem de comunicação entre agentes KQML (Knowledge Query and Manipulation Language), especificada por Cohen e Perrault (1979) (Cohen 95;
Genesereth &amp; Nilsson 88), agrega expressões KIF e outros operadores modais para tornar- la extensível e independente do conteúdo.
De este modo, as ações comunicativas podem ser estendidas conforme o domínio da aplicação, independentes da linguagem que representa o domínio.
São exemplos de declarações KQML:
O primeiro argumento, ask-if, indica o tipo de comunicação;
Os argumentos restantes são expressões KIF que contêm a mensagem;
B to A: (reply true) Em este exemplo o agente A pergunta ao agente B se 3 é maior do que 2, ao que o agente B responde &quot;true».
Outras linguagens foram desenvolvidas com o propósito de comunicar conhecimento de forma eficiente em ambientes distribuídos, procurando abordar as facilidade oferecidas por os atos de fala na ação comunicativa.
Como exemplo, temos ACL, Actors, APRIL e OZ, citadas em.
A abordagem em IAD tem investigado o funcionamento de Grupos e Organizações de pessoas, na resolução cooperativa de problemas, a fim de estabelecer estratégias mais adequadas quanto a a consideração da interação eficiente entre &quot;agentes sociais», em direção a objetivos em comum.
Segundo, os estudos sobre interação em SMA não consideram o funcionamento real de organizações e grupos, postulando, simplesmente, a existência de cooperatividade através de adoção de objetivos de forma não muito clara.
O problema quanto a a metáfora social é até que ponto ela realmente ajuda na modelagem de sistemas computacionais baseados em SMA, e até que ponto ela nos impede de criar novas idéias.
Ainda em, o autor preconiza uma distinção entre dois enfoques dentro de a IAD, segundo a qual uma abordagem de Simulação Social melhor se adequaria no contexto de cooperatividade, ao invés de a abordagem de Inteligência Distribuída.
A importância desta distinção encontra- se no fato de que o principal não é fazer os agentes atingirem um objetivo mas, sim, descobrir por que um agente autônomo precisa entrar em interação social (com outros agentes) e como tornar seu objetivo também social (adotado por os outros).
A a questão da necessidade de interação social, Castelfranchi responde com &quot;dependência», enquanto que o problema da adoção de objetivos é abordado através da ótica do &quot;poder», no caso, poder social.
Para que exista uma cooperação efetiva entre agentes, é necessária a adoção de fortes modelos de comunicação, uma vez que o efeito da comunicação visa modificar o estado intencional do agente.
Entretanto, a adoção de objetivos por outros agentes requer mecanismos que considerem a motivação recíproca e a competência do agente em alcançálos, como uma forma de troca social.
Além disso, a representação desta reciprocidade no contexto da troca social deve estar bem definida.
Castelfranchi ilustra o problema com um exemplo:
Um agente tem um objetivo();
Outro agente (Ag2) tem a competência de atingir o objetivo();
Se Ag1 sabe que Ag2 tem a competência de alcançar o seu objetivo(), então uma interação é estabelecida entre Ag1 e Ag2, de modo que Ag2 adote o objetivo() de Ag1 e trabalhe para atingir- lo.
O problema nesta abordagem é:
Como ocorre a transição do objetivo do agente Ag1 para o agente Ag2?
Como Ag1 deve agir em interesse de Ag2 e junto com Ag2 em direção a o cumprimento do objetivo ()?
Isto constitui um dos problemas do Poder Social.
Castelfranchi, em, procura introduzir a noção de &quot;compromisso», ou comprometimento, como justificativa essencial para o funcionamento de organizações.
Segundo ele, o compromisso mantém os membros de um grupo unidos numa ação conjunta para atingir seus objetivos, globais ou individuais.
Para tanto, as noções de compromisso interno (I-Commitment), compromisso social (S-Commitment) e compromisso coletivo (C-Commitment) são definidas e formalizadas.
A principal noção que é observada é justamente a qualificação da relação social de um compromisso entre dois ou mais agentes, no sentido de que um compromisso social é uma forma de &quot;adoção de objetivos», e é a determinação de direitos e deveres entre os agentes.
A formalização proposta pretende definir a relação compromisso-dever-satisfação através da recíproca obrigação-direito-execução.
A cooperação ocorre quando dois os mais agentes possuem o mesmo objetivo, mas com conhecimento apenas parcial a respeito de o problema completo.
Ou seja, nenhum dos agentes pode alcançar sozinho o objetivo, a não ser através de uma troca mútua de seus conhecimentos parciais.
Além disso, os agentes devem assumir um compromisso mútuo para alcançar o mesmo objetivo, garantindo que exista uma crença mútua de que eles possuem um objetivo em comum e estão agindo na direção de ele.
O fato é que agentes autônomos possuem objetivos, implícitos ou explícitos, que os levam a algum mecanismo de cooperação quando existe concordância entre objetivos ou crenças mútuas a respeito de uma proposição.
Cohen, Levesque e Perrault, citados em, estipulam uma condição além de a concordância de objetivos:
Que os agentes não possuam objetivos contraditórios aos seus próprios, para estabelecer a cooperação.
O que se observa, entretanto, nas pesquisas anteriores em SMA, é que os agentes são sempre cooperativos e úteis.
Já estão modelados, em sua arquitetura, mecanismos para cooperação, através de primitivas de comunicação, planejamento e execução de tarefas, sem a preocupação com o surgimento de conflitos.
Quando as ações de dois ou mais agentes estão direcionadas para objetivos contraditórios, surgem conflitos na atividade cooperativa, e então o agente deve ser capaz de negociar com outros agentes para a resolução do conflito.
Segundo (Chu-Carrol&amp; Carberry 95):
O agente deve proporcionar evidências convincentes para que o outro agente mude sua crença;
As informações de outros agentes devem ser reunidas e reavaliadas para que as crenças conflitantes possam ser modificadas.
Este tipo de atividade colaborativa para resolução de conflitos é capturada através de um ciclo de ações Proposta-AVALIAÇÃO- MODIFICAÇÃO, por exemplo, supondo que dentro de um ambiente exista um Agente Executor (AE), que irá construir um plano de ações para atingir um objetivo e, para ajudar- lo nesta tarefa, existe um Agente Consultor Quando surge um conflito entre o AE e outros agentes envolvidos na atividade colaborativa, devido a os conhecimentos e desejos diferentes sobre o plano, o AC avaliará as propostas vindas dos outros agentes sobre suas crenças e preferências.&amp;&amp;&amp;
O resultado da avaliação das propostas fará com que o AC proponha modificações às crenças do AE, com o intuito de solucionar o conflito e dar continuidade à tarefa colaborativa.
Até o momento, as considerações estiveram voltadas para agentes benevolentes, isto é, agentes cooperativos sempre concordando passivamente com outros agentes e adotando facilmente os objetivos de outros.
No entanto, como acontece com organizações ou grupos de pessoas, é natural que surjam conflitos decorrentes de diferentes pontos de vista, opiniões, crenças, conhecimentos, interesses e objetivos.
Traz, da Psicologia Social para os SMAs, a idéia de que o papel dos conflitos nos grupos sociais humanos é essencial e positivo para a manutenção da estabilidade, cooperação e para a flexibilidade em tratar eventos não esperados.
A definição tradicional de IAD está fortemente relacionada ao paradigma de resolução distribuída de problemas, tanto que Demazeau propõe uma nova área, a Inteligência Artificial Descentralizada (Decentralized Artificial Intelligence -- DzAI), para tratar das atividades de um agente autônomo num mundo multiagente.
Esta última, DzAI, estaria mais relacionada com o paradigma multi-agente, constituindo uma área de estudos não somente nova, emergente, mas também relacionando fatos até agora ignorados no contexto dos sistemas distribuídos cooperativos, quais sejam:
Ações cooperativas.
Agentes que possuem mecanismos de raciocínio social podem melhor adaptar- se a novos problemas e a novas sociedades, no caso de as migrações.
A cooperação é realçada através de relações de dependência que, facultando ao agente o conhecimento dos atributos dos outros, tornam- no capaz de escolher parceiros mais promissores para o cumprimento de seus objetivos.
A relação de dependência proporciona uma troca recíproca de ações, que beneficia a sociedade como um todo na direção de seus objetivos globais.
Em este sentido propôs uma taxonomia para as situações de dependência, baseado na teoria do Poder Social, relacionando a dependência de recursos entre os agentes e uma noção de quantificação da dependência (número de ações e recursos envolvidos), a fim de melhorar o critério de decisão dos agentes baseado na importância de seus objetivos.
Tanto para a abordagem RDP quanto para fundamental.
Buscamos apresentar aqui as principais literatura concernente à IAD.
Discussões quanto a a sociedades tornam- se importantes para a compreensão multi-agente.
Alguns exemplos de uso da abordagem distribuída em sistemas de processamento da linguagem natural (Boitet &amp; Seligman 94;
Stefanini 93;
Cullingford 81;
Rieger &amp; Small 81;
Erman et al.
80; Small 80) são analisados neste capítulo, como estudos de casos à abordagem investigada no presente trabalho.
Os enfoques que nos interessam neste estudo estão em nível de sociedade e em nível de agentes.
Em nível de sociedade, interessam- nos os mecanismos de cooperação e comunicação que possibilitam o funcionamento do conjunto de agentes no ambiente em que eles cooperam.
Em nível de agentes, enfocamos a arquitetura (estruturas interna e externa), a categoria dos agentes (reativos ou cognitivos) e o seu grau de autonomia.
Os exemplos abordados situam- se no domínio do tratamento da linguagem escrita e de reconhecimento de voz, cujos problemas possuem certas similaridades características, como a diversidade de conhecimento necessário e a possibilidade de explosão combinatória na busca de soluções possíveis.
As terminologias utilizadas são diferentes:
O que alguns autores chamam módulos, fontes de conhecimento ou especialistas, podemos considerar como sendo agentes, quando seu nível de conhecimento e execução forem suficientemente autônomos.
Os sistemas apresentados são analisados principalmente quanto a sua arquitetura e ao mecanismo de cooperação/ comunicação utilizado.
Os sistemas HEARSAY-II, WORD Expert PARSER (seção 4.2), WHITEBOARD (seção 4.3), DSAM (seção 4.4) e CARAMEL (seção 4.5) são analisados sob este enfoque.
O sistema TALISMAN (seção 4.6) é visto com mais profundidade, por ser o ponto de referência mais recente e mais direcionado aos objetivos que temos até o momento.
O sistema HEARSAY-II visa propor uma solução para o problema do reconhecimento de voz através de um framework de coordenação de processos independentes.
O escopo principal do problema consiste num grande espaço de busca de soluções possíveis para a interpretação de enunciados falados.
O processo básico de solução reside na eliminação de subespaços de busca pouco promissores, através do aprimoramento deste espaço com a ajuda de soluções candidatas parciais que, quando combinadas, resultam na solução completa.
O problema da compreensão de voz é caracterizado por a necessidade de tipos altamente diversificados de conhecimento (acústico, fonético, léxico, sintático, semântico) e por uma grande quantidade de incerteza e variabilidade nos dados de entrada.
Tais características motivaram o uso de vários módulos independentes chamados Fontes de Conhecimento (Knowledge Sources), que representam os diversos tipos de informação acima considerados.
As fontes de conhecimento são estruturadas conforme um esquema condição-ação em que o componente condição (Ks condition) especifica os tipos de situações em os quais ele pode contribuir na tarefa de resolução, e o componente ação (Ks action) executa esta contribuição através de operações de geração ou modificação de hipóteses.
A arquitetura básica do sistema HEARSAY-II é constituída:
Por as fontes de conhecimento (Ks's), independentes e anônimas, ou seja, não precisam conhecer- se umas às outras;
Por um blackboard multinível que representa as hipóteses parciais criadas por os Ks's e constitui- se em meio de comunicação entre os módulos;
Por um scheduler que calcula a prioridade de cada atividade, organizada numa fila de processos disparados conforme sua prioridade.
O scheduler acrescenta novas instâncias de Ks's cada vez que um Ks condition é executado;
Por um monitor do blackboard, responsável por a atualização da base de conhecimento cada vez que um Ks action é executado;
Por um mecanismo de foco-de-controle que identifica melhores ações em potencial.
Os módulos independentes comunicam- se através do blackboard, que representa estados intermediários da solução e envia mensagens (hipóteses) de uma fonte de conhecimento para outra.
O blackboard é multinível e cada nível corresponde a uma etapa na representação do processo de decodificação.
Em o Hearsay-II estes níveis são:
Parâmetro de sinal:
Contêm sinais digitalizados, freqüências, formas de onda, etc;
Segmento: Contém segmentos rotulados de hipóteses sobre os sinais do nível anterior;
Sílaba: Contém hipóteses de classes de sílabas, inferidas de hipóteses dos segmentos;
Palavra: Contém hipóteses de palavras a partir de as sílabas, segundo uma descrição de pronúncia num dicionário específico;
Seqüência de palavras:
Contém hipóteses de seqüências de palavras que representam um sintagma em potencial;
Frase: Contém hipóteses de sentenças possíveis, construídas por um parser;
Interface com a Base de Dados:
Contém uma interpretação não ambígua para o sistema de recuperação de informações prover a consulta do usuário.
Qualquer fonte de conhecimento pode ter acesso ao blackboard, registrando hipóteses, lendo- as e modificando- as.
A interpretação do enunciado é construída cooperativamente por os Ks independentes, cujas atividades são monitoradas e disparadas por ações conjuntas entre o monitor, o scheduler e o foco-de-controle.
O domínio de aplicação do Hearsay-II é a recuperação de documentos de um banco de dados sobre abstracts da Ciência da Computação através de consulta em linguagem natural.
A execução da interpretação de um enunciado pode ser resumida nos seguintes passos:
O sinal gravado de áudio correspondendo ao enunciado é segmentado conforme uma técnica de reconhecimento de padrões.
Cada segmento é associado a uma classe alofônica33, e um Ks em nível segmento cria hipóteses de segmentos possíveis, cada um possuindo um vetor contendo a probabilidade alofônica estimada.
Em este momento, dois processos de controle são ativados:
WORD-CTL e WORD-SEQ-CTL, que criam hipótesesobjetivo em nível de palavras e de seqüência de palavras, respectivamente, para que a quantidade de hipóteses seja controlada durante o processo;
A partir de as hipóteses de segmento inseridas no blackboard, o scheduler ativa um Ks que é responsável por a criação de hipóteses de classes de sílabas;
As hipóteses de classes de sílabas no blackboard ativam o Ks, que cria hipóteses de palavras.
Em este nível, a taxa de hipóteses incorretas é alta devido a a similitude de freqüências encontradas ao nível de segmento e classes silábicas;
À medida que as hipóteses de palavras são inseridas no blackboard, o Ks WORDcria hipóteses de seqüências de palavras, agrupando- as aos pares conforme sua adjacência local (palavras vizinhas) e temporal (as pronunciadas mais próximas umas das outras);
Quando o blackboard possui hipóteses suficientes de seqüências de palavras, outros Ks's são ativados, agora para testar as hipóteses de frases mais promissoras.
Esta é a função de Parse, PREDICT, VERIFY, CONCAT e STOP.
O Ks Parse garante que uma seqüência de palavras esteja sintaticamente correta segundo uma gramática predefinida.
As hipóteses agramaticais são descartadas do blackboard, enquanto que as gramaticais integrarão hipóteses de frases.
A seqüência PREDICT e VERIFY prediz as palavras que podem preceder ou imediatamente seguir as hipóteses de frases, rejeitando- as ou não.
Se uma predição é aceita, CONCAT constrói uma nova hipótese sobre a frase e Parse, PREDICT e VERIFY são reinvocados para testar a nova hipótese;
A iteração no passo 5 continua com o Ks STOP eliminando hipóteses que possuam taxas de credibilidade baixas, e construindo hipóteses parciais de frases mais completas, um alofone compreende as variantes de enunciação que cada fonema pode apresentar;
Promissora foi encontrada;
Em este momento, o Ks SEMANT constrói uma representação lógica não-ambígua da frase encontrada, ou a mais consistente, se mais de uma frase permanecer no blackboard ao nível de frase.
A representação lógica é usada para fazer acesso ao banco de dados, e outro Ks responsável por o discurso (Disco) produz uma resposta ao usuário com os resultados da consulta ao banco de dados.
Muitos detalhes da execução foram omitidos na descrição acima, pois nosso objetivo é demonstrar como ocorre a interação entre as diversas fontes de conhecimento, e como resultados parciais são refinados através de competição e/ ou cooperação.
O blackboard atua como um intermediário no disparo da execução dos processos.
O módulo monitor do blackboard controla e avalia os resultados inseridos, e inclui atividades na lista de scheduling para os módulos que estejam interessados nas hipóteses que possuam uma avaliação satisfatória.
As desvantagens existentes no HEARSAY-II são derivadas principalmente:
De um mecanismo de controle centralizado, onde os Ks's reagem somente a mudanças no blackboard, mas não sabem como as mudanças ocorrem;
De a linguagem de representação das hipóteses, própria do blackboard, que todos os Ks's devem conhecer;
De a necessidade que os Ks's possuem de manter estruturas internas individuais para armazenar resultados parciais e realizar processamento interno;
O sistema proposto por Small descreve uma abordagem de parsing baseado no significado das palavras como unidades de conhecimento lingüístico.
O word expert é organizado como uma coleção de especialistas em sintaxe e semântica, que representam palavras ou morfemas em oposição às regras de reescrita e descrevem a estrutura da representação sentencial.
Segundo Small, no modelo proposto &quot;cada Word Expert é uma entidade procedural conhecedora de todas as interpretações contextuais possíveis da palavra que ela representa».
Tal abordagem é estruturada na forma de workspaces com três níveis de representação:
Sentencial, conceitual e de controle.
O nível sentencial contém a palavra propriamente dita, e seus vizinhos à esquerda e à direita na sentença.
O nível conceitual envolve abstrações que determinam o tipo de informação de cada conceito relacionado com a palavra.
Por exemplo, os objetos conceituais picture, settings e events representam, respectivamente, objetos físicos ou abstratos, tempo, espaço ou situação, e eventos.
O nível de controle contém informações sobre o estado do processamento no modelo.
As ações do parser são determinadas de acordo com os estados globais que o processamento pode adquirir.
Por exemplo: Como os especialistas são processos, eles podem estar num dos estados Inativo, Suspenso ou A arquitetura do sistema está relacionada ao workspace criado no momento do processamento da sentença.
A descrição conceitual das palavras comporá uma estrutura de conhecimento, global ao processo de interpretação, que funcionará como um unificador de todas as interpretações possíveis de uma palavra.
Enquanto o nível sentencial explora as palavras e seu relacionamento com o resto da sentença através de conhecimento sintático, a representação semântica é construída em nível conceitual através de refinamentos das descrições inseridas no depósito conceitual ativo.
O workspace ao nível de controle fornece todas as informações necessárias sobre o estado corrente de cada processo (especialista) e suas expectativas em nível conceitual.
A Figura 4.2 ilustra o estado do workspace durante uma interpretação.
Os conceitos e informações semânticas são representados por uma rede de sentidos possíveis de uma palavra (Word Sense Discrimination Experts), construída como um grafo acíclico dirigido.
Os nodos superiores representam &quot;questões de sondagem do contexto», nas palavras de Small, que dirigem o caminhamento até os nodos terminais, representando a faixa de respostas possíveis para determinada palavra.
Por exemplo, a Figura 4.3 representa a estrutura conceitual para a palavra &quot;deep», cujo sentido depende da palavra a sua direita.
As questões colocadas nas arestas determinam se a palavra denota um objeto (&quot;the deep&quot;) ou uma descrição (&quot;deep thought&quot;), conforme (Rieger &amp; Small 81).
A palavra à direita influência o conceito corrente?
Não Sim Classe do conceito corrente.
Foco corrente.
Volume do conceito corrente.
A cooperação ocorre quando os processos afetam as variáveis locais de outros processos e contribuem para descrições conceituais num depósito de conceitos (concept bin) ativo no workspace corrente.
Normalmente, a execução do word expert tem por objetivo contribuir para um depósito conceitual ativo visando uma interpretação semântica provável da sentença.
A estrutura conceitual é percorrida, para todas as palavras da sentença, até que uma informação conceitual possa ser agregada a um depósito conceitual ativo.
Sempre que o parser não conseguir optar por um ramo específico no grafo, a palavra pode ser ambígua.
Como a resolução da ambigüidade depende dos conceitos das palavras vizinhas, o estado do especialista corrente muda para Suspenso e o próximo especialista é executado.
Se o resultado da execução anterior depende da execução atual, o especialista Suspenso especifica condições para sua reexecução posterior.
Como o depósito conceitual ativo é global, o especialista Suspenso terá mais informações que auxiliarão no descarte de hipóteses menos promissoras, resolvendo assim a ambigüidade, através do contexto.
As deficiências deste sistema encontram- se na estratégia manual com que as redes de sentidos são construídas, resultando em estruturas muito complexas, além de a grande diversidade de conhecimentos que envolve a sua manutenção.
Como o sistema não possibilita a construção de processos genéricos para o tratamento da palavra, cada palavra tem de ser programada como um procedimento específico.
Small demonstra a complexidade desta tarefa através da palavra &quot;throw», cujo procedimento ocupa seis páginas de descrição.
Além disso, o sistema trata apenas sentenças simples, com o intuito de resolver somente ambigüidade em nível de palavra, não sendo possível verificar a adequação do modelo para sentenças mais complexas e para o tratamento de fenômenos lingüísticos, conforme.
Boitet e Seligman, baseados em deficiências da abordagem blackboard, propõem uma arquitetura chamada &quot;Whiteboard «para integrar componentes heterogêneos em sistemas de Processamento de Linguagem Natural.
As principais deficiências apontadas por os autores com relação a o blackboard podem ser assim resumidas:
Sincronização e proteção:
Os vários componentes têm acesso concorrente ao blackboard, que deve sincronizar as operações de entrada e saída, bem como controlar as permissões para leitura e gravação;
Sobrecarga de comunicação:
A quantidade de informações trocadas entre os processos pode ser grande, e gerar um overload de comunicação em sistemas fisicamente distribuídos;
Eficiência: O blackboard é global, e pode não oferecer estruturas de dados adequadas a cada componente em particular.
Para lidar com tais deficiências, o Whiteboard é constituído por uma estrutura de dados global controlada por um módulo separado, chamado &quot;Coordenador», que mantém as estruturas de cada componente em níveis adequados de detalhes.
Os detalhes da estrutura de dados ficam &quot;escondidos «dos componentes, que não precisam nem saber da existência da estrutura de dados global.
Esta característica, segundo os autores da proposta, permite que os projetistas escolham livremente algoritmos, linguagens de programação, estruturas de dados e a sua representação.
Os componentes têm acesso ao whiteboard somente através do componente intermediário -- o Coordenador.
Entretanto, cada componente é encapsulado num processo chamado &quot;manager», que o transforma num servidor para comunicar- se com os clientes externos.
É o manager de cada componente que trata das conversões entre as estruturas de dados externas e as internas no, whiteboard.
Em a estrutura interna do manager, um mailbox é usado para estabelecer a conexão entre os clientes e o coordenador.
O coordenador coloca as tarefas a serem executadas por o cliente no in-box do manager, e obtém resultados através do out-box.
Conforme a necessidade das tarefas do cliente, ele pode abrir várias conexões com o mesmo manager (Figura 4.4), de forma que tarefas concorrentes possam ter acesso aos dados no whiteboard.
A cooperação ocorre com o acesso aos resultados parciais armazenados no whiteboard por os componentes.
O coordenador pode transmitir os resultados de um componente para o outro através de seus managers, e ainda filtrar os dados, transmitindo somente hipóteses promissoras para o melhor desenvolvimento do objetivo, por exemplo.
Sempre que um componente deseja ler ou gravar no whiteboard, o cliente requisita uma conexão ao manager que inclui o formato em que o cliente necessita dos dados de entrada e saída.
A transferência dos dados entre os componentes é feita através do sistema de arquivos no UNIX.
Em este caso, o Coordenador é um componente muito complexo, dada a necessidade de conhecer todos os formalismos necessários aos vários componentes heterogêneos que ele precisa integrar na tarefa proposta.
O sistema DSAM (Distributable Script Applier Mechanism) (Cullingford 81) produz resumos de artigos jornalísticos no domínio de acidentes aéreos.
A metodologia proposta envolve um Sistema de Gerenciamento Hierárquico de Tarefas, que compreende um número de processos distintos e potencialmente distribuídos para o processo de compreensão de textos escritos.
Em a abordagem corrente sobre o uso de várias fontes de conhecimento distribuídas, o ponto chave repousa sobre o controle, ou seja, como fazer um grupo de especialistas cooperarem para um objetivo comum.
Os especialistas são representados por um conjunto de tarefas organizadas numa estrutura declarativa.
A tarefa, neste caso, é uma descrição declarativa da atividade a ela relacionada.
Por exemplo, a tarefa DOQUERY tem por objetivo responder a uma requisição de qualquer especialista.
O corpo da tarefa DOQUERY (Figura 4.5) compreende as subtarefas:
&quot;expressar «a questão (ques);
Executar um parse da resposta resultante no contexto da requisição (exps) e &quot;conectar «o resultado ao especialista requisitante (caller).
O controle é estabelecido através de um gerenciador de tarefas, chamado (Figura 4.6), que é o mediador entre os demais especialistas e duas estruturas de dados:
A agenda de tarefas, que possui uma lista de tarefas com suas respectivas prioridades;
O blackboard, que define o estado corrente de cada especialista.
As tarefas são interpretadas por o gerenciador de tarefas gerando duas ações resultantes:
A ativação de subtarefas;
A execução de tarefas &quot;primitivas», tais como troca de mensagens e aquisição de dados.
O gerenciador de tarefas seleciona uma tarefa de sua agenda, determina sua aplicabilidade no ambiente corrente e a executa.
Os tipos de tarefas suportadas por o sistema são:
Externas (supridas por o usuário);
Requisições De Serviços (geradas por especialistas, quando eles encontram problemas) e SUBTAREFAS.
Cada tarefa possui um teste de início (start-test), um corpo (body) de ações que muda o estado do sistema quando em execução e um teste de finalização (kill-test) que decide quando a tarefa é removida da agenda.
O blackboard possui uma &quot;janela «para cada especialista, que consiste de:
Uma cadeia de caracteres de entrada a ser examinada (INFOCUS);
Um campo para os resultados (OUTFOCUS);
Uma lista das fontes de conhecimento correntemente ativas (ACTIVE MEMORY);
Uma lista de requisição de serviços (Service-REQUEST);
E· uma lista de ações a serem executadas (THINGS-TO-DO).
Cada vez que um especialista não possui conhecimento suficiente para completar determinada tarefa, uma requisição de serviço é construída em Service- REQUEST para ser enviada ao gateway.
O gateway examina sua agenda de tarefas, ativa uma tarefa ou uma subtarefa que atenda a requisição e começa a executar- la.
Tão logo o resultado da tarefa retorne ao gateway, o resultado é colocado no OUTFOCUS do requisitante o qual é, então, reativado.
Somente o gateway pode executar ações fora de sua janela e, por isso, ele é o intermediário entre tarefas parciais.
O Sistema CARAMEL (Compréhension Automatique de Récits, Apprentissage et Modélisation des Echanges Langagiers) de G. Sabah é baseado no modelo blackboard e possui gerência de tarefas por agenda.
A arquitetura do sistema (Figura 4.7) compreende um Blackboard, um módulo de controle centralizado (Supervisor) e vários módulos especialistas (Processos).
O Blackboard é subdividido em três níveis:
Memória de curto prazo, memória de trabalho e memória de longo prazo.
A memória de curto prazo contém a seqüência de palavras que forma a sentença de entrada formulada por o usuário.
A memória de longo prazo é formada por o conjunto dos conhecimentos estáveis do sistema, ou seja:
O dicionário, as gramáticas e uma rede semântica conceitual.
A memória de trabalho é uma memória dinâmica que será utilizada por os diferentes módulos especialistas para a construção das representações intermediárias necessárias à conclusão de seus objetivos.
Conjunto dos Conhecimentos Estáveis Os processos, chamados Fontes de Conhecimentos (Sources de Connaissance), realizam a análise, compreensão e geração de textos através de diferentes formalismos.
O conjunto de processos é constituído por um analisador determinístico, baseado numa gramática de casos e uma gramática sistêmica, um sistema de resolução de elipses e anáforas, um sistema de tratamento de erros lexicais e processos para a compreensão e geração de textos utilizados num sistema de diálogo homem-máquina.
O Supervisor é responsável por o controle centralizado e por a gerência da memória de trabalho.
O Supervisor tem a função de receber requisições e construir os resultados fornecidos, além de decidir sobre as modificações a serem inseridas no blackboard.
Os processos têm acesso ao blackboard somente através do supervisor.
Cada processo é acionado através de um subsupervisor, com uma memória de trabalho pessoal, com o objetivo de construir uma representação final.
Uma desvantagem neste sistema é a necessidade em possuir diversos formalismos para o tratamento de diferentes tipos de conhecimento, que deve ser integrado por o supervisor.
A variedade de formalismos torna a tarefa de modificação do sistema muito onerosa, devido a os conhecimentos declarativos que devem ser integrados.
A proposta do sistema TALISMAN é distribuir o conhecimento lingüístico entre agentes, objetivando a análise de textos escritos em Francês.
A abordagem multi-agente é preferida à resolução distribuída de problemas, pois o problema nem sempre é conhecido a priori de modo que o sistema possa ser dividido e distribuído adequadamente.
O gerenciamento da interação é aplicado num framework de Sistemas Governado por Leis, justamente porque a ênfase é dada a um conjunto de módulos que cooperam através de comunicação direta, e as Leis, definidas a priori, devem regular a comunicação cooperativa evitando conflitos.
Stefanini afirma que a análise cooperativa deve construir uma ou mais interpretações da sentença numa única etapa.
Para se obter tal comportamento do sistema, as várias fases de análise devem funcionar de forma distribuída e integrada, dentro de um fluxo de atividades não seqüencial.
O sistema cooperativo deve ainda estar apto a:
Manipular conhecimentos heterogêneos e distribuídos;
Recorrer a diferentes formalismos, cada um pertinente a uma tarefa específica;
Substituir a arquitetura seqüencial por um sistema aberto.
O conhecimento heterogêneo, representado por dicionários, gramáticas e metodologias diferentes, deve ser trabalhado em conjunto através da cooperação.
Desta forma, dois critérios importantes relacionados ao sistema são a cooperação entre os módulos de análise e a distribuição do conhecimento e do controle.
As decisões interativas, tomadas de forma autônoma por os diversos módulos especialistas são, em parte, garantidas por a distribuição do conhecimento e, em parte, por a negociação entre diversas opiniões de cada especialista.
O dicionário, tradicionalmente geral ou comum, está subdividido em duas partes, já que o sistema TALISMAN insere- se no projeto MMI234:
Um dicionário de base, que contém o vocabulário comum à linguagem natural;
E um dicionário especialista, que contém o vocabulário específico para cada especialidade do domínio da aplicação.
De este modo, muitas palavras ambíguas são evitadas ou resolvidas.
Esta divisão dos dicionários permite o uso de gramáticas locais que podem descrever facilmente alguns fenômenos, como:
Orações simples, orações subordinadas, coordenação e elipse.
O controle distribuído proporciona maior flexibilidade ao sistema, e permite que o mesmo seja aberto.
Segundo esta estratégia, o controle é subdivido em global e local, permitindo assim que o conhecimento possa ser modificado localmente, através do controle individual do agente, e adquirido globalmente, por meio de raciocínio e trocas sociais entre os agentes.
Multi-Mode Interface for Man-Machine Interaction dentro de o projeto europeu Esprit;
A ação de um módulo pode influenciar diretamente o comportamento dos outros módulos.
A análise eficiente da sentença resulta da cooperação entre módulos com diferentes especialidades quanto a o tratamento lingüístico.
Quando um agente possui apenas hipóteses parciais sobre o problema, a cooperação pode ajudar- lo a completar sua hipótese ou, quando um agente não possui a capacidade requerida a um domínio, outros agentes mais competentes podem cooperar com ele através de confirmação de hipóteses e aconselhamentos.
Um exemplo claro de cooperação é a resolução de uma palavra ambígua através de análises sintáticas parciais.
Para que esta cooperação seja realmente efetiva entre os diferentes módulos, é necessário que exista um mecanismo de comunicação eficiente.
Em o sistema TALISMAN, a comunicação ocorre por troca de mensagens e cada agente possui o seu mail box onde os outros agentes conhecidos depositam suas mensagens.
A arquitetura do sistema TALISMAN, baseada na abordagem multi-agente e nos sistemas governados por leis, compreende:
Os agentes;
Um controle apoiado em leis globais específicas à sociedade, e leis locais específicas aos agentes;
Um protocolo de comunicação específico para a resolução de palavras ambíguas.
A hierarquia arquitetural do sistema TALISMAN é apresentada na Figura 4.11.
O esquema geral da arquitetura, como originalmente apresentado em, é mostrado na Figura 4.12.
Uma parte do sistema suporta a aplicação, e outra parte contém os agentes e as leis globais responsáveis por a gerência da aplicação.
A arquitetura de um agente TALISMAN, conforme esquematizada na Figura 4.13, é baseada no modelo de agente genérico proposto por.
Uma parte do modelo representa o conhecimento, e outra, o processamento do conhecimento.
Segundo Demazeau, um agente pode ser dividido em duas partes:
Uma parte &quot;estática», que representa o conhecimento e a estrutura do agente através da sua arquitetura, e uma parte &quot;dinâmica», relacionada aos métodos de processamento deste conhecimento para alcançar seus objetivos.
A representação interna de um agente TALISMAN é subdivida em representação do conhecimento e processamento do conhecimento, que correspondem respectivamente à parte estática e à parte dinâmica do modelo de agente proposto por Demazeau.
A visão geral da estrutura interna do agente pode ser esquematizada da seguinte forma:
O conhecimento cognitivo é formado por os dicionários, gramáticas e estruturas de dados, enquanto o conhecimento social é formado por os conhecimentos subjetivos a respeito de os outros agentes, seus &quot;conhecidos».
Os objetivos de cada agente estão relacionados ao ponto de vista da frase que cada um possui.
Por exemplo, o agente SYNT (sintático) tem o objetivo de construir a estrutura sintática da sentença.
Seu ponto de vista da frase (memória local) contém informações morfossintáticas de cada palavra conforme as mensagens obtidas de MORPH (morfológico), SEGM (segmentação) e TRANSF (transformação).
Em relação a o processamento do conhecimento, as atividades de raciocínio e decisão são produzidas a partir de as estruturas internas de cada agente.
As heurísticas lingüísticas são representadas por as estratégias do agente.
Os mecanismos de raciocínio e decisão facultam ao agente o cumprimento de seus objetivos locais comunicando soluções parciais com seus &quot;conhecidos», para resolução de conflitos e detecção de incoerência no uso dos dados.
A cooperação e a coordenação dos agentes no sistema são regulados através de leis globais, utilizando o modelo proposto por.
Apesar de os agentes funcionarem autonomamente, para definir uma estratégia de tarefa coordenada, todos os agentes obedecem a leis que regem o funcionamento da sociedade TALISMAN.
Dois conjuntos de leis são definidos:
Leis globais e leis locais.
As leis globais controlam a interação na sociedade através de regras preestabelecidas.
As leis locais são próprias a cada agente e, de acordo com as competências e os &quot;conhecidos «destes, irão regular a interação entre os mesmos.
As leis globais, por sua vez, subdividem- se em leis de gerência do sistema e leis de comunicação.
As leis para gerência do sistema compreendem a inicialização do sistema(start (S)), o fluxo de entrada e saída(in,out) e a finalização(end).
As leis globais para comunicação compreendem:
A prioridade dos agentes, o redirecionamento das mensagens, a transformação das mensagens, as leis DPS (Distributed Problem Solving), a livre troca de mensagens e as leis lingüísticas.
Existe ainda um tipo de controle sobre a evolução35 do funcionamento do sistema com o intuito de evitar a supressão de leis ou de agentes.
Por exemplo: Send (,&amp; kill, S):
S $= SYNT, fail.
Esta regra local não permite que o agente SYNT, no caso, seja suprimido da sociedade, uma vez que ele é importante na tarefa de análise da sentença.
O termo &quot;evolução «não é empregado aqui com o sentido de aprendizagem ou desenvolvimento do sistema, mas sim como uma garantia contra falhas detectadas no funcionamento dos agentes.
A sociedade é formada por dois tipos de agentes:
Agentes clássicos, que representam os níveis lingüísticos tradicionais, e agentes transversais, que tratam os problemas complexos.
Os agentes clássicos são:
PRET: Responsável por o pré-processamento morfossintático da sentença de entrada.
Por exemplo, obter através do marcador de fim de frase, o tipo da sentença (afirmativa, interrogativa, imperativa);
Morph: Realiza a análise morfológica, associando uma categoria a uma palavra.
Suas competências compreendem a resolução de ambigüidade através de regras morfológicas e métodos estatísticos (cadeias de Markov) e o reagrupamento de morfemas descontínuos;
SEGM: Segmenta a sentença em cláusulas, construindo uma árvore de frases;
Detecta as orações principais e as subordinadas da sentença;
SYNT: Constrói a estrutura sintática da sentença a partir de a análise sintática e determina o papel funcional dos sintagmas;
Detecta um Indicador de Estrutura Gramatical (IEG) através das categorias sintáticas e um Indicador de Estrutura Lexical (IEL), que indica a presença de verbos não ambíguos;
Transf: Transforma a sentença (interrogativa, imperativa ou impessoal, detectado por PRET) numa forma canônica que será tratada por todos os demais agentes;
Os agentes transversais são constituídos por:
Coord: Responsável por o tratamento de coordenação de sintagmas e proposições;
Nega: Resolve a negação;
Ellip: Tem a função de detectar e tratar sentenças com ocorrência de elipses e resolver- las;
A comunicação pode ocorrer através de:
Memória Compartilhada:
Utilizando uma estrutura de dados comum ao conjunto de agentes (por exemplo, um Blackboard);
Troca de Mensagens:
Cada agente comunica- se diretamente com o outro através de um protocolo estabelecido.
A comunicação por troca de mensagens atinge um bom grau de eficiência através do uso de protocolos de comunicação adequados.
A interação entre os diversos agentes ocorre através de uma linguagem de comunicação inspirada na linguagem definida por Berthet:
Comunicação $= (Emissor, Mensagem, Destinatário), estruturada como segue:
Emissor: O agente que envia a mensagem.
Informa: Não espera resposta.
Requisita: Pede informação, aguarda resposta.
Responde: Responde a uma demanda.
Broadcast: Todos os agentes.
Agente: Um agente específico.
O componente Força, dentro de Tipo De Comunicação, refere- se à força elocucionária expressa na comunicação, que é baseada no protocolo de aprendizagem de Sian.
Para exemplificar a interação entre os agentes MORPH e SYNT a respeito de um palavra &quot;programa «sendo Verbo ou Substantivo, a estrutura da mensagem seria:
Propose (MORPH, SYNT) Confirm (SYNT, MORPH), já que é precedido por uma preposição, na contração «do 36.
Umas das regras de resolução de ambigüidade diz que uma preposição não pode ser seguida por verbo.
A regra definida em, de maneira simplificada, seria:
PREP+ SUBST, quando for verbo conjudado.
A interação entre os agentes lingüísticos objetiva o reconhecimento de uma sentença de forma paralela.
A cooperação pretende, basicamente, resolver possíveis ambigüidades lexicais, a ocorrência de coordenação, de elipse e de negação.
Inicialmente, todos os agentes recebem uma &quot;cópia «da sentença numa forma canônica.
O exemplo a seguir, define uma lei global para a inicialização do sistema, através de a qual a sentença é analisada por PRET:
Lei Global L1:
Assert (, ): Assert (, Pret), Assert (, Synt), Uma das competências de PRET é identificar o tipo da sentença (interrogativa, negativa, afirmativa, etc.), através da identificação do marcador de final de frase.
A sentença é, então, transformada numa forma canônica por TRANSF que, posteriormente, envia a sentença pré-tratada para seus conhecidos SYNT, MORPH e SEGM.
Assim que SYNT, MORPH e SEGM recebem a sentença pré-tratada, cada um de eles, paralelamente, inicia a análise da sentença.
Devido a o conhecimento e à competência específicos de cada agente, uma análise parcial da sentença é efetuada em nível de agente, um a um.
À medida que informações relevantes aos seus conhecidos vão sendo encontradas, esses resultados parciais são comunicados a cada agente conhecido.
Se um dos agentes, durante sua análise parcial, depara- se com dúvidas ou conflitos, um pedido de esclarecimento é comunicado ao agente ­ ou agentes ­ que possui o conhecimento e a competência necessários para tratar deste problema.
MORPH recebe a sentença pré-tratada por PRET e procede ao seu tratamento morfológico fazendo acesso ao léxico.
As ambigüidades lexicais são resolvidas através de regras morfológicas baseadas nos IEL e nos IEG.
Logo que o agente SEGM recebe a mensagem de MORPH, ele calcula a quantidade de proposições (principais e subordinadas) e interage com COORD e ELLIP, se necessário.
Outra competência de SEGM é calcular o número de verbos conjugados na sentença e enviar os resultados para SYNT e MORPH.
O agente SYNT detecta a estrutura funcional das proposições e inicia a análise sintática fazendo uma chamada ao analisador sintático (algoritmo de Earley), implementado como um módulo do sistema CRISSTAL.
O sistema CRISSTAL, desenvolvido no laboratório CRISS37, é constituido por um analisador morfológico baseado numa gramática regular, e por um analisador sintático baseado numa gramática livre do contexto, concebido sob uma arquitetura sequencial Conforme os estudos realizados, os sistemas analisados apresentam alguns pontos em comum:
Com exceção do sistema TALISMAN e da arquitetura WHITEBOARD38, os demais utilizam uma abordagem blackboard ou semelhante, tanto para a representação interna do processamento, como para a cooperação entre os diversos componentes;
A otimização dos espaços de busca na solução final é obtida através da cooperação entre fontes de conhecimento distribuídas e com especialidades diversas, cujas decisões são unificadas em estruturas de conhecimento globais (blackboards);
O processamento é geralmente orientado aos dados, à medida que estes são agregados ao blackboard, possibilitando a ativação de novos componentes que contribuirão no desenvolvimento progressivo da solução desejada;
A distribuição dos componentes costuma corresponder aos níveis lingüísticos tradicionais (fonologia, morfologia, sintaxe, semântica, etc.), exceção feita ao word expert parser;
Existe um mecanismo de controle centralizado.
Quanto a o aspecto cooperação/ comunicação, podemos salientar que a comunicação por memória compartilhada ou blackboard pressupõe que todas as informações relevantes à solução do problema devem estar disponíveis a todos os agentes.
Entretanto, o uso deste modelo de comunicação pode provocar uma certa redundância e sobrecarga no sistema, já que nem todos os agentes necessitam conhecer os resultados ou a competência do conjunto (sociedade).
Outro enfoque a adotar poderia ser o compartilhamento apenas de certos resultados parciais de um grupo específico de agentes:
Cada agente possuiria uma estrutura de dados local, representando seu ponto de vista individual da estrutura lingüística a Centre de Recherche en Informatique appliquée Sciences Sociales.
A arquitetura WHITEBOARD possui um componente intermediário ­ o Coordenador ­ que objetiva tornar o acesso ao blackboard, utilizado no sistema, transparente aos especialistas.
Trabalhar. A troca de mensagens permite que o conhecimento e os mecanismos de tratamento para a resolução do problema estejam distribuídos entre os agentes.
Os agentes podem ter representações do conhecimento específicas e realizar tarefas específicas completamente independentes uns dos outros, permitindo que tomadas de decisão e habilidades de raciocínio independentes reforcem a ação autônoma.
É necessário que os agentes saibam apenas como e o que comunicar uns aos outros, para surgir a cooperação.
Em o sistema TALISMAN, a cooperação surge da necessidade emergente, nos agentes, de completar resultados parciais no cumprimento de seu objetivo local, e esta abordagem revela a necessidade de mecanismos eficientes de comunicação, quando a troca de informações se torna intensa.
O sistema implementa a comunicação direta entre os agentes através de troca de mensagens, gerenciada através de um sistema governado por leis.
Surge assim a necessidade da adaptação de protocolos de comunicação, de modo a levar em conta a atividade cooperativa, concomitantemente com regras de comportamento, que devem ser obedecidas por todos os agentes.
A acessibilidade do conjunto de regras advém da simplicidade de suas primitivas ou procedimentos.
Em este caso, o protocolo de comunicação utilizado é bastante simples, inspirado na linguagem definida por Berthet, cujas primitivas são: (emissor, mensagem, destinatário).
A simplicidade das primitivas permite que qualquer agente na sociedade as compreenda, e que as leis estabelecidas sejam conhecidas por todos.
Outro aspecto observado no sistema TALISMAN é que, além de a comunicação, a cooperação entre os agentes depende da informação interna que cada agente possui dos outros agentes na sociedade (conhecimento social).
Identidade e competência do agente devem estar armazenadas na estrutura interna de cada agente que é seu &quot;conhecido».
Esta proposta, que busca um sistema aberto, torna relativamente difícil a inclusão de novos agentes na sociedade.
Tanto os agentes já disponíveis quanto possíveis futuros integrantes da sociedade, devem ter sua estrutura interna modificada em função de os conhecimentos e capacidades envolvidas na referida sociedade.
Ainda, como o objetivo global do sistema (a análise gramatical de uma sentença em francês) emerge da cooperação entre os objetivos individuais de cada agente, o próprio sistema, enquanto responsável por a gerência da aplicação, deve modificar- se para incluir o novo agente, suas capacidades e seus objetivos.
Também se identifica, no sistema TALISMAN, que a questão da distribuição é inexpressiva, e a seqüencialidade não é de todo abandonada:
O sistema inicia com o agente PRET realizando um pré-tratamento da sentença de entrada, cujo resultado é aguardado por os demais agentes.
Além deste, são detectados outros casos de sincronização na dependência entre os agentes.
Por exemplo, para que o agente SYNT possa utilizar suas competências ele necessita da frase transformada (por TRANSF) e/ ou pré-tratada (por PRET), e depende dos resultados de MORPH, que contém as regras para resolução de ambigüidade morfológica, e de SEGM, que indica o número de orações e de verbos na sentença.
Este capítulo é destinado à descrição da arquitetura multi-agentes proposta para o processamento da linguagem natural.
A descrição do modelo não será feita com rigor formal, mas algumas definições mínimas necessárias serão estabelecidas, com o intuito de generalizar ao máximo possível a arquitetura proposta.
É necessário, antes, abordar algumas características gerais que a arquitetura deve possuir em relação a as definições dos agentes envolvidos, e em relação a a caracterização do problema sob o ponto de vista lingüístico.
Em a seção 5.1, relacionamos e comentamos estas características gerais, que nos influenciaram na escolha do modelo e dos tipos de conhecimento e interações envolvidos.
A descrição do modelo interno do agente lingüístico é apresentada na seção 5.2, com o detalhamento de seus componentes internos (subseções Seção 5.3.
Em a abordagem apresentada, propomos a formação de subsociedades como estratégia válida para resolução de determinados fenômenos lingüísticos, e apresentamos uma descrição básica ­ novamente sem um rigor formal ­ das estratégias para a formação destas subsociedades, na subseção 5.3.1.
Concluímos, na seção 5.4, com algumas considerações sobre a arquitetura multi-agentes proposta, especificamente quanto a suas vantagens e desvantagens.
De acordo com as características dos sistemas multi-agentes (Capítulo 3) e as considerações sobre a complexidade do tratamento automático da LN (Capítulo 2), o modelo dos agentes lingüísticos deve estar associado às seguintes informações:
Conhecimento declarativo, isto as propriedades semânticas morfossintáticas dos itens léxicos presentes no processamento da sentença;
Conhecimento procedural, que envolve conhecimento heterogêneo sobre as metodologias e formalismos de tratamento do problema;
Informações sobre as dependências léxicas na sentença (ou informações de co-ocorrência) que podem determinar a dominância sobre os nodos adjacentes.
Por exemplo, um determinante (artigo, pronome possessivo, demonstrativo, etc.) espera um substantivo a sua direita, sempre que o substantivo espera ser precedido por um determinante.
Podemos estabelecer, desta forma, que o conhecimento procedural está embutido nas capacidades do agente, representadas por os métodos de construção da representação sentencial, juntamente com informações sobre as categorias morfossintáticas dos itens léxicos envolvidos.
O conhecimento declarativo, por sua vez, abrange toda a base de conhecimento ou dados que alimenta os métodos e procedimentos para que o agente atinja seu objetivo.
O modelo de agente apresentado neste trabalho baseia- se nas definições de Demazeau e Ferber citado em, apresentadas no capítulo 3.
Um agente é uma entidade inteligente capaz de agir e perceber um ambiente conhecido, buscando atingir seus objetivos de forma racional e intencional conforme o estado atual de seu conhecimento (estado interno), que muda através de cooperação com outros agentes no mesmo ambiente.
Nossa abordagem também foi inspirada no modelo de agente genérico proposto por Demazeau e na granularidade dos agentes do sistema TALISMAN.
Entretanto, o modelo de agente que propomos é mais simplificado, pois as características de percepção estão limitadas simplesmente à comunicação interagente, e os estados internos não abrangem crenças, motivações ou compromissos como em Shoham e, por exemplo.
O modelo de arquitetura que propomos para um agente lingüístico, conforme esquematizado na Figura 5.1, abrange as seguintes características:
Capacidades, conhecimentos e objetivos relevantes ao domínio lingüístico -- uma espécie de sistema especialista básico sobre as atividades referentes ao processamento da linguagem natural (analisadores léxico-morfológicos, sintáticos, semânticos, etc.), acessível através do estado interno do agente;
Capacidades de comunicação com outros agentes na determinação da tarefa cooperativa;
Informações sobre as representações internas das capacidades e habilidades dos outros agentes (descrições externas), que possibilitam mecanismos para o raciocínio social;
Descrições de ações possíveis, conforme as mudanças no ambiente e a troca de mensagens numa atividade cooperativa;
Capacidade de manter o controle sobre as atividades cooperativas e individuais, possibilitando a execução de ações em paralelo, e decisões sobre quando e o que comunicar, quando agir ou quando planejar.
O modelo leva em consideração conhecimento do tipo procedural e declarativo.
O conhecimento procedural é representado por as especialidades individuais do agente, e abrange os métodos, ou funções, para a construção da árvore sintática, para a aplicação dos traços morfossintáticos na análise sentencial, e para estabelecer a necessidade de cooperação com os outros agentes presentes na sociedade durante o processo de análise, por exemplo.
As informações relevantes ao domínio estão esquematizadas na Figura 5.2.
O nível de conhecimento no modelo representa, basicamente, o conhecimento declarativo, envolvendo os dicionários, as gramáticas, as bases de conhecimento semântico e outras estruturas de dados necessárias à execução das capacidades do agente.
Agregado desta forma na descrição interna do modelo de agente, o conhecimento pode ser visto como uma base de conhecimento genérica, ou seja, o tipo de conhecimento ou estratégia de acesso à respectiva base de informações é completamente genérico na descrição do modelo.
Isto significa que as estratégias de acesso ao conhecimento interno são inerentes a cada agente no domínio lingüístico específico.
Significa, também, que o compartilhamento de conhecimento heterogêneo por outros agentes ocorre somente através de comunicação, onde a força elocucionária está embutida na mensagem, conforme veremos adiante na Subseção 5.2.3 deste Capítulo.
As capacidades, no modelo do agente, representam as especialidades peculiares a cada domínio lingüístico:
Realizar a análise léxico-morfológica, a análise sintática, a análise semântica, a análise pragmática e outras atividades afins à consecução de seus objetivos.
Logo, definimos como capacidades do agente CAP(), o conjunto de habilidades P concernentes a cada domínio, representadas através de procedimentos, regras ou funções que, executadas num tempo finito, tenham como resultados as informações requeridas para atingir um objetivo específico, ou: $= (
P) onde:
É um agente S;
S $= sociedade formada por um grupo de agentes;
E nc pk é um conjunto de procedimentos, regras ou funções (pk).
Os objetivos dos agentes dependem tanto da especialidade quanto do domínio a que o agente pertence, e podem ser individuais e/ ou globais.
Os objetivos globais derivam da aplicação que se pretende com a sociedade:
Pode ser a análise de um texto escrito ou falado, a síntese de sentenças, a tradução automática, etc..
Os objetivos individuais constituem a construção das estruturas sintáticas, a representação do significado ou sentido de uma sentença, a resolução de uma ambigüidade ou a resolução de outros fenômenos lingüísticos, por exemplo.
O objetivo individual de um agente, ou é alcançado quando um resultado satisfatório ou não nulo é atingido por a aplicação de um conjunto de funções F sobre as capacidades deste agente, ou seja:
É um agente S;
S $= sociedade formada por um grupo de agentes;
Capacidades CAP() de.
Sob este enfoque, a descrição do agente morfológico exemplificada na Figura 5.3, seria composta, em nível de conhecimento, por os dicionários (Figura 5.3 &quot;a&quot;) e, em nível de capacidade, por a análise léxico-morfológica:
Pesquisa e estruturação dos morfemas através de um dicionário de bases e agregação de suas terminações correspondentes (Figura expressões válidas e a associação às mesmas de traços morfológicos, sintáticos ou semânticos (Figura 5.3 &quot;c&quot;).
Conhecimentos: Dicionário léxico-morfológico;
Capacidades: Busca_ Prox_ Palavra (palavra,* característica) c) Objetivos:
Em o contexto de nosso estudo, é importante levar em conta o aspecto da reorganização da subsociedade (ou formação de coligações);
Por isso, uma das capacidades do agente deve ser a de conhecer os outros agentes na sociedade.
Esta capacidade social está representada em &quot;MODELO DOS OUTROS», especificado na &quot;descrição externa «do agente.
A descrição externa, usada neste modelo, está baseada em, porém aqui é mais simplificada, pois não estamos preocupados com a descrição detalhada do ambiente (objetivo global da sociedade, entradas e saídas, descrição global das interações, etc.) durante a interação entre os membros de uma subsociedade para a resolução de um problema local.
A descrição externa constitui uma estrutura de dados que armazena informações sobre os outros agentes na sociedade.
Portanto, a descrição externa do agente i Dei é formada por o conjunto das descrições externas que o agente i possui sobre cada agente j Dei (j) no mesmo ambiente, ou:
Dei $= Dei (j);
Cada descrição externa que o agente i possui sobre o agente j Dei (j) abrange a identificação do agente idi (j), o conjunto de objetivos individuais OBJiI (j) e das capacidades CAPi (j) de j, ou:
Dei (j) $ { idi (j), OBJiI (j), CAPi (j);
A descrição do objetivo individual OBJiI (j) e da capacidade do agente j CAPi (j), que o agente i conhece, constitui- se de um conjunto dos objetivos individuais e capacidades do agente j, conforme descrito na seção anterior e representado a seguir:
OBJi (j) OBJ (j) j $= 1 CAPi (j) CAP (j).
Utilizando o exemplo de descrição do domínio lingüístico do agente léxicomorfológico (Figura 5.3), ilustramos na Figura 5.5 a descrição externa que um outro agente ­ o agente Sintático ­ teria do agente léxico-morfológico.
Considerando o domínio lingüístico de nosso modelo, podemos ter configurações de subsociedades próprias a cada fenômeno lingüístico em particular, agregando informações sobre as capacidades dos demais agentes dentro de a estrutura «Modelo DOS O modelo do ambiente representa, de maneira geral, as tarefas necessárias à consecução dos objetivos presentes no domínio lingüístico.
Com as informações sobre as tarefas necessárias a um determinado objetivo, os agentes podem requisitar tarefas uns aos outros, para as quais não possuam a respectiva competência de execução durante a resolução de um conflito.
A interação cooperativa entre os agentes é determinada através de protocolos de comunicação (Figura 5.6), que estabelecem uma padronização para a troca de mensagens, colocadas numa estrutura de armazenamento de mensagens (MAILBOX).
A comunicação, neste modelo, é estabelecida através de um mecanismo tradicional de troca de mensagens:
Estabelecer uma força elocucionária para explicitar uma ação cooperativa.
A ação cooperativa, determinada através da força elocucionária da mensagem, é alcançada, em nosso modelo, com o uso do protocolo de aprendizagem cooperativa, que é uma variação do protocolo de Sian.
O protocolo permite que um agente obtenha informações úteis num sistema multi-agentes, através de proposições apresentadas a outros agentes, os quais devem emitir uma resposta, conforme o esquema na Figura 5.7.
A interação é baseada em primitivas que expressam atos de fala: (
confirma), não concordar (discorda) ou não emitir opinião alguma a respeito (não-opina).
Em o caso em que a hipótese é confirmada (confirma) ou o agente não opina sobre ela (nãoopina), o emissor decide aceitar a hipótese previamente concordada (aceita).
A linguagem de comunicação envolve primitivas para enviar e requisitar informações, além de propor e responder questões que abrangem a mudança nos estados internos do agentes.
Utilizamos alguns &quot;performatives «39 definidos na linguagem KQML que especificam as necessidades acima enumeradas.
A linguagem KQML é uma linguagem de comunicação projetada para cooperação de alto-nível entre agentes, conforme, e algumas de suas primitivas usadas para comunicação em nosso modelo são descritas a seguir:
Em receiver:
O parâmetro content carrega o conteúdo da mensagem, a informação relevante ao objetivo do enunciado do agente;
Expression é uma expressão válida na linguagem de representação especificada por language que, se omitida, assume o valor default KQML;
Demais primitivas;
Em ASK-ONE, sender quer uma resposta de receiver sobre a informação contida em Um &quot;performative «é um enunciado que um emissor usa para dizer ou afirmar a um destinatário o que ele está fazendo ou pretende.
Content. BROADCAST, especifica que sender quer enviar uma mensagem para todos que estão na mesma sociedade.
A primitiva TELL envia uma informação(:
Content contida no conhecimento interno de sender para receiver, com a função de informar, apenas.
Em REPLY, sender coloca em content uma resposta que acredita ser apropriada para a questão colocada em in--reply-to.
O parâmetro force, nesta primitiva, designa uma certeza quanto a o significado da resposta (force $= permanent) ou a possibilidade de mudança no futuro (force $= tentative).
O valor expression no parâmetro content é, como dito anteriormente, uma expressão KQML (quando language $= KQML), porém consideramos aqui expression como uma cadeia de caracteres que representa a mensagem do agente.
De este modo, o parâmetro content carrega a Mensagem enviada por um agente e nesta mensagem embutimos a força elocucionária (fEloc) que representa as transições entre os estados no protocolo de interação, e o conteúdo propriamente dito.
Portanto, definimos nossa mensagem como:
Mensagem $= (fEloc, conteúdo), onde, fEloc $ { Modifica, Propõe, Não-OPINA, Confirma, Discorda, Aceita.
Um exemplo de troca de mensagens entre agentes usando estas especificações é mostrado a seguir.
Suponha que uma das capacidades de um agente morfológico seja encontrar as informações categóricas e sintáticas de uma palavra no dicionário, através do procedimento Busca_ PALAVRA (palavra,* característica).
Uma requisição por informações oriundas de um agente sintático é representada como:
O agente morfológico responde com:
Como o mecanismo de controle é local, qualquer agente na sociedade, dependendo da tarefa a executar, assume o controle da execução para conduzir uma tarefa específica.
Em nosso estudo de caso (o tratamento da ambigüidade), o agente sintático assume o controle quando gerência um ciclo de resolução de conflitos, baseado num protocolo de aprendizagem cooperativa.
Isto permite um controle local sobre as tarefas específicas, e a definição de um nível de prioridades.
Acima deste controle local, a própria sociedade mantém o controle do início e do término de seu objetivo global, sem interferir, porém, no controle local das tarefas individuais.
Com isto, obtemos uma relativa flexibilidade quanto a a concepção de novos agentes, ou seja, o projetista não precisa preocupar- se em adequar um agente aos procedimentos de controle global especificados na sociedade.
O modelo da sociedade constitui- se de um conjunto de agentes que podem interagir na busca de um objetivo global.
Ou seja, definimos o modelo da sociedade de agentes (MS) como um conjunto de agentes (A) que utilizam suas capacidades para atingirem o objetivo global da sociedade (OBJG (S)).
Assim, temos:
Os mecanismos internos do agente, representados por suas capacidades, conferemlhes um mecanismo de controle local.
De forma mais geral, a sociedade de agentes lingüísticos que estamos tratando tende a ser uma sociedade fechada, já que os agentes necessários à execução de seu objetivo básico (análise ou geração de sentenças) são, de certa forma, predefinidos.
Em o modelo proposto, a sociedade é composta por agentes heterogêneos, que possuem conhecimento e mecanismos internos (capacidades) diferentes, mas que interagem apenas em nível de subsociedades.
Pretendemos com isto, evitar a modelagem do comportamento global de uma sociedade completa para tratamento de fenômenos lingüísticos, pois tal abordagem, na fase atual de nosso trabalho, consistiria numa tentativa ainda incipiente em se compreender todos os tipos de fenômenos passíveis de ocorrência durante a análise de uma sentença em LN.
O processo de formação de uma subsociedade faz uso intensivo da descrição externa que cada agente possui sobre os outros.
Introduzimos, no Capítulo 3, critérios para a formação de coligações, alguns baseados em interações históricas, outros no grau da situação de dependência entre os agentes.
Em a arquitetura que propomos, cremos ser adequado formar subsociedades para tratar fenômenos lingüísticos (capítulo 2), baseados no tipo de conflito40 que pode ocorrer e num tipo de dependência social fraca.
A dependência social é fraca justamente por não considerar uma rede de dependência completa entre os agentes, que inclua a integração dos objetivos, planos, ações e recursos através da mutualidade entre estes, conforme ainda Consideramos dependência social fraca uma especialização da dependência social de Sichman, pois nosso critério de formação de coligações baseia- se na informação necessária ao complemento do objetivo de um agente.
Vimos que os tipos de ambigüidade (capítulo 2) necessitam de informação de domínios lingüísticos heterogêneos, mas tal heterogeneidade é proporcional à complexidade do fenômeno considerado.
Por exemplo, no caso de a ambigüidade sintática, podemos identificar três situações distintas no tocante a o grau de complexidade da ocorrência ambígua.
Em este nível, ocorre um conflito interno, ou seja, o agente possui várias alternativas para uma mesma hipótese;
Distintamente do conflito externo introduzido no capítulo 3, seção 3.5, onde vários agentes possuem visões diferentes sobre uma mesma informação.
Uma primeira situação verificada ocorre quando uma ambigüidade sintática do tipo Sn-SP/ SV-SP pode ser resolvida por a aplicação de restrições semânticas, que podam certos ramos menos promissores no espaço de soluções (derivações possíveis), como exemplificado na sentença.
Uma segunda situação ocorre quando a aplicação de restrições de coocorrência sintática são suficientes para que uma estrutura seja preterida por outra.
As regras da gramática têm papel preponderante nesta situação que, na maioria dos casos, não necessita de informações adicionais externas.
É o caso da sentença (5-2), cuja construção ADV (modo)+ NOME não ocorre na gramática, descartando- se a estrutura de derivação que contenha esta construção.
Em a terceira situação, informações do domínio pragmático ou a aplicação de princípios heurísticos, como associação à direita ou ligação mínima, são indispensáveis para ajudar na resolução da ambigüidade.
É caso do exemplo clássico apresentado na sentença (5-3):
R÷RYLXRKRPHPFRPRWHOHVFySLR. Para a solução do primeiro caso, um mecanismo de controle interno ao agente sintático pode estabelecer uma ligação com o agente morfológico diante de um conflito estrutural (ambigüidade sintática), já que apenas os traços semânticos são suficientes nesta decisão.
A segunda situação requer interação com a gramática ou com um agente responsável por a gerência de gramáticas, por exemplo.
Em o último caso, a ligação pode ser estabelecida com um agente pragmático ou um agente responsável por o contexto (Figura Como já dissemos, a estratégia de formação é baseada na informação necessária num dado momento.
Em o âmbito de nosso estudo de caso, o agente sintático recebe tuplas com informações léxicas e sintáticas sobre uma palavra, do tipo:
Apontador para as informações léxicas e sintáticas de Palavra;
Um ciclo de resolução de conflitos inicia quando um conflito é detectado, isto é, existe mais de uma tupla para a mesma palavra, no caso de ambigüidade categórica.
No caso de ambigüidade sintática, a informação disponível provém da gramática, também em forma de tuplas do tipo:
Novamente, o conflito surge da multiplicidade de tuplas recebidas para uma mesma categoria sintática, o que equivale a mais de uma derivação possível.
O tipo de informação necessária à resolução do conflito é o determinante dos parceiros possíveis para se estabelecer uma cooperação.
Então, o mecanismo de controle interno do agente, possuindo o tipo de informação conflitante* Característica\&gt; ou* Regra_ ASSOCIADA\&gt;, percorre a estrutura da descrição externa do agente e estabelece uma ligação com o agente adequado, enviando mensagens para o MAILBOX do destinatário e aguardando os resultados que, posteriormente, serão integrados à base de conhecimento do agente solicitante, para a continuidade do processo de análise.
No caso de a resolução da ambigüidade léxica, como verificamos na subseção 2.3.3 do capítulo 2, a principal interação ocorre entre os agentes sintático, léxico-morfológico e semântico, pois o nível de informação semântica deve ser mais completo.
As informações conceituais vindas do agente semântico precisam estar de acordo com as informações dos outros agentes.
Este consenso pretende resolver tanto os conflitos no agente sintático, causados por a ambigüidade, como os conflitos no agente semântico, causados por a necessidade de informações adicionais para a busca na rede conceitual.
Teríamos uma configuração como a da Figura 5.10.
Em este capítulo, nós descrevemos a arquitetura multi-agentes proposta para o processamento da linguagem natural, baseados nas definições dos agentes envolvidos e nas características do problema da ambigüidade.
Definimos, também, uma linguagem de comunicação interagente, baseada nos performatives KQML, e utilizando algumas de suas primitivas básicas.
Procuramos estabelecer um protocolo de interação adequado ao tratamento proposto para a cooperação entre os agentes e, para isto, utilizamos o protocolo de Koning, por o seu aspecto de aprendizagem que o aproxima de um protocolo de negociação.
Tal assertiva é válida, quando consideramos que o problema central na resolução da ambigüidade léxica é, justamente, a busca de um consenso entre múltiplas alternativas para um mesmo sintagma.
Como o tratamento da LN é um processo dinâmico, vimos (no Capítulo 2) que uma sociedade para este fim não sabe, a priori, quando ou que tipos de problemas poderá enfrentar durante o processamento de um enunciado.
Logo, um mecanismo de detecção e avaliação do problema precisa decidir quando e como uma subsociedade deve ser organizada para tratar- lo, considerando ainda que outras figuras de linguagem poderão ser tratadas por diferentes subsociedades previamente configuradas para seu tratamento.
Foi a caracterização geral da formação de subsociedades que perseguimos na Subseção 5.3.1, definindo alguns critérios ­ não formais ­ para sua formação, baseados no tipo de ambigüidade que gerou o conflito.
Como nosso intuito é abranger apenas um nível do problema do tratamento automático da LN, e considerando a simplicidade de nossa abordagem, é importante, em continuidade, levar- se em conta, ainda, outros aspectos inerentes ao problema da reconfiguração organizacional, como:
A disponibilidade dos agentes;
As capacidades e os conhecimentos disponíveis naquela sociedade e a conclusão da subtarefa cooperativa, para o prosseguimento do processo de análise.
A interação entre os agentes é fundamental para a resolução de seus objetivos, como evidenciado no capítulo 3, além de melhorar a performance de suas capacidades e a performance do sistema que compõem.
Como problemas complexos não podem ser solucionados por especialistas distintos isoladamente, existe uma tendência natural para a cooperação no processo de resolução destes problemas.
Isto significa que, numa sociedade onde os agentes possuam objetivos individuais e compartilhados, o comportamento local individual de cada um de eles dificilmente contribuirá para a resolução de um conflito inesperado, que impeça algum agente de alcançar seu objetivo local.
Logo, o uso de uma estratégia de cooperação mútua fará com que mecanismos de interação sejam disparados, disponibilizando informações relevantes ao agente caso este não as possua para resolver um conflito de forma isolada.
Em o modelo proposto, pretendemos que o nível de colaboração seja plenamente eficaz através dos módulos de comunicação e raciocínio social com que o dotamos.
Aliado aos mecanismos internos de controle, que gerenciam os ciclos de interação até que um objetivo parcial seja alcançado, tal nível de colaboração provê os agentes de capacidades comunicativas e de raciocínio suficientemente flexíveis para diminuir a dependência funcional entre eles.
O domínio de abrangência dos agentes, representado aqui por o domínio lingüístico, ao ser &quot;encapsulado «num nível de colaboração multi-agentes, torna a tarefa de concepção e manutenção destes menos trabalhosa e complexa ao projetista.
A este nível de colaboração, abrangendo os módulos de comunicação, raciocínio social e controle, denominamos Camada de Cooperação.
A camada de cooperação visa suprir a sociedade com agentes dotados de mecanismos básicos para uma tarefa conjunta e cooperativa, tornado- os autônomos e motivados à cooperação.
A cooperação desenvolve- se em torno de o domínio lingüístico, com o módulo de controle servindo como interface entre o domínio de aplicação e a camada de cooperação, como esquematizado na Figura 6.1.
Em este capítulo, descrevemos a camada de cooperação através de um estudo de caso sobre a resolução da ambigüidade léxica, considerando os aspectos relacionados no capítulo 2 e nas caracterizações do modelo proposto apresentadas no capítulo 5.
Em a seção problema, relacionando as informações necessárias à camada de cooperação (subseção estruturas dos agentes numa subsociedade definida para tratar do problema, nas subseções 6.2.1 a 6.2.3.
Em a seção 6.3, o funcionamento da subsociedade é exemplificado através das mensagens necessárias à tarefa cooperativa, e de uma cooperação num ciclo de resolução de conflitos na subseção 6.3.1.
Léxica O modelo de cooperação na subsociedade utiliza comunicação direta, sem uso de uma estrutura intermediária compartilhada (blackboard), pois evidenciamos (capítulo 4) ser desnecessário para este problema específico, que os agentes compartilhem todas as informações relevantes à solução.
Além disso, a caracterização da resolução da ambigüidade léxica não necessariamente aponta para uma definição de um agente próprio para este fim, o que acarretaria a multiplicação de capacidades já existentes na sociedade, e a redundância do conhecimento necessário.
Por estas razões, e dada ainda a multiplicidade de fenômenos que ocasionam a ambigüidade, optamos por não desenvolver um agente específico para sua resolução.
A interação dos agentes na subsociedade ocorre através dos seus módulos de comunicação, conforme exemplificado na Figura 6.2, até que um objetivo individual seja alcançado, ou até que uma requisição por informações seja preenchida.
Como a principal interação ocorre entre os agentes sintático, léxico-morfológico e semântico, a arquitetura pode ser simplificada, agregando as identificações de cada agente aos demais.
Tal identificação se constitui de uma identidade do agente, e da descrição de suas capacidades.
A identidade do agente é uma expressão de mais alto nível que possui, entre seus componentes, uma estrutura mais abrangente incluindo o nome do agente, seu endereço, e características de mais baixo nível de sua implementação.
A resolução da ambigüidade converge para os conflitos entre múltiplas hipóteses concorrentes.
De este modo, o protocolo deve refletir aspectos como:
Apresentação, validação e decisão sobre as hipóteses veiculadas durante o processo de resolução.
Além disso, têm- se agentes distintos contribuindo com resultados parciais heterogêneos e a interação deve, deste modo, constituir um consenso entre as soluções propostas por os agentes cooperantes.
Em a resolução de uma ambigüidade por a subsociedade constituída para este fim, a interação cooperativa é determinada quando o analisador sintático necessita de informações adicionais para a resolução de um conflito.
Uma requisição por informações adicionais é disparada, então, para os agentes competentes na subsociedade.
Tendo em vista tal característica, torna- se necessário incrementar o conjunto de estados do protocolo para que os agentes possam dispor de uma primitiva para Requisição por informações adicionais.
Propomos, assim, uma extensão ao protocolo de Koning que reflita esta requisição, conforme o esquema apresentado na Figura 6.3.
Esta extensão é justificada por a dificuldade que a proposição de múltiplas hipóteses impõe na resolução de conflitos.
O ciclo de resolução acarretaria várias etapas comunicativas para a análise de cada hipótese e, ainda, todas as opiniões geradas teriam de ser agregadas num mecanismo complexo de escolha das opiniões mais coerentes.
Concluímos que uma simples requisição por opiniões acerca de um conteúdo mutuamente conhecido diminuiria a sobrecarga de recursos computacionais envolvida na troca de mensagens.
Novo estado a ser atingido dependendo da força expressa em:
Content. Exemplificamos a aplicação do modelo descrito no capítulo 5 descrevendo a implementação dos agentes Léxico-MORF, Sintático e Semântico, considerando uma subsociedade para o estudo de caso abordado.
A implementação do agente considera os componentes do modelo:
O Domínio Lingüístico e a camada de cooperação (Comunicação, Descrição Externa, Controle e Ação).
O agente léxico-morfológico (Léxico-MORF) tem por função realizar a análise léxico-morfológica de uma palavra, ou seja, a pesquisa e a estruturação dos morfemas através de um dicionário de bases, e a agregação de suas terminações correspondentes.
O conhecimento deste agente constitui- se num dicionário de bases e formas, cuja manipulação é realizada por funções que constituem as capacidades do agente.
Representamos as suas capacidades através da declaração das funções que o compõem.
Como exemplo de capacidades, o agente Léxico-MORF tem a habilidade de encontrar uma palavra no dicionário e agregar suas características através de duas funções básicas:
Busca_ Palavra (palavra,* característica), Busca_ Prox_ Palavra (palavra,* característica).
As características constituem- se em informações sobre sua categoria sintática, informações de concordância (número, pessoa, grau e gênero) e traços semânticos, obtidas por a aplicação de funções complementares a suas capacidades, como por exemplo:
Busca_ Descritor (palavra,* lista_ descrs), Busca_ Terminações (palavra,* termin).
Os objetivos do agente resumem- se ao reconhecimento de palavras ou expressões válidas numa cadeia de símbolos de entrada, associando suas características (traços morfológicos, sintáticos e semânticos) correspondentes.
Portanto, o objetivo individual a perseguir constitui- se no sucesso em encontrar a palavra especificada no dicionário, ou seja, para as duas capacidades exemplificadas, os resultados esperados podem ser:
Busca_ Palavra (palavra,* característica) NIL, Portanto, podemos representar o domínio lingüístico do agente Léxico-MORF através do seguinte quadro:
Conhecimentos: O dicionário;
Capacidades: Busca_ Prox_ Palavra (palavra,* característica)· Objetivos:
A descrição externa do agente Léxico-MORF contém, como definido no capítulo anterior, informações provenientes das descrições externas dos outros agentes na sociedade, ou seja, as capacidades, objetivos e a identificação dos outros.
De este modo a comunicação utiliza- se desta estrutura para direcionar a cooperação.
As informações deste nível para este agente são esquematizadas no quadro a seguir:
Busca_ Conceito (palavra,* conceito),{ Análise_ Semântica(* estrutura_ sint) $ * represen_ log, Busca_ Conceito (palavra,* conceito) NIL;
Busca_ Sintagma (ptr_ frase,* regras),{ Análise_ Sintática (frase_ entr,* regras) $ * estrutura_ sint;
O agente Léxico-MORF realiza como ação enviar as informações sobre os itens léxicos ao agente Sintático, como resultado da aplicação de suas capacidades:
A função do agente sintático (Sintático) é realizar a análise sintática de uma frase, demonstrando a sua gramaticalidade ou não, através da construção de a (s) estrutura (s) sintática (s) que a representa (m).
O conhecimento do agente Sintático abrange a gramática, através das suas regras de construção sintática.
De maneira genérica, a principal capacidade deste agente é construir as derivações possíveis através da aplicação das regras da gramática (parsing), e isto é representado, também de forma genérica, por uma função que recebe como parâmetros a frase de entrada e um conjunto de regras gramaticais, por exemplo:
Análise_ Sintática (frase_ entr,* regras), Busca_ Sintagma (ptr_ frase,* regras).
O objetivo do agente Sintático é construir a (s) estrutura (s) sintática (s) da frase de entrada, cujo resultado, se for uma estrutura vazia, designa a agramaticalidade da mesma.
Exemplificamos o objetivo do agente Sintático como:
Análise_ Sintática (frase_ entr,* regras) $ * estrutura_ sint O domínio lingüístico para o agente Sintático é esquematizado no seguinte quadro:
Conhecimentos: A gramática;
Capacidades: Busca_ Sintagma (ptr_ frase,* regras)· Objetivos:
Construir a (s) estrutura (s) sintática (s) da frase de entrada:
O agente Sintático possui informações sobre os agentes Léxico-MORF e Semântico em sua descrição externa, de acordo com o exemplo que estamos abordando, esquematizado da seguinte maneira:
Busca_ Prox_ Palavra (palavra,* característica),{ Busca_ Palavra (palavra,* característica) NIL;
Busca_ Conceito (palavra,* conceito),{ Análise_ Semântica(* estrutura_ sint) $ * represen_ log, Busca_ Conceito (palavra,* conceito) NIL;
À medida que as estruturas sintáticas são geradas, o agente Sintático tem por ação enviar estas estruturas ao agente Semântico, como resultado da aplicação de suas capacidades:
A o deparar- se com uma ambigüidade, o agente requisita maiores informações aos demais agentes da subsociedade para iniciar um ciclo de resolução de conflito:
O agente semântico (Semântico) tem por finalidade construir uma representação lógica de uma frase enunciada, além de relacionar cada palavra a um conceito ou a um conjunto de nodos conceituais que representam uma faceta de seu significado.
O conhecimento necessário a este agente é uma rede conceitual que relaciona as palavras à classes ontológicas representativas de seu significado conceitual, conforme uma abordagem em redes semânticas ou frames.
O principal objetivo do agente é construir uma representação da frase enunciada num formato lógico adequado ao domínio em que está inserido ou, por uma abordagem mais simples, encontrar características conceituais que possam servir como restritores sintáticos (inibindo o uso de árvores desnecessárias) ou mesmo semânticos (relacionando conceitos adequados a um grupo de palavras).
Em este projeto, utilizamos esta última abordagem para a exemplificação do modelo proposto, devido a a complexidade de uma modelagem semântica completa, o que novamente está fora de o escopo do presente trabalho.
Mesmo assim exemplificamos, de forma genérica, as capacidades do agente Semântico através da sua habilidade em conduzir uma busca conceitual e executar a uma análise semântica de um grupo de constituintes ou sintagmas, ou:
Análise_ Semântica(* estrutura_ sint), Busca_ Conceito (palavra,* conceito).
Os objetivos do agente Semântico decorrem diretamente dos resultados bem sucedidos da aplicação destas capacidades, ou seja:
Análise_ Semântica(* estrutura_ sint) $ * represen_ log, Busca_ Conceito (palavra,* conceito) NIL.
O seguinte quadro esquematiza o domínio lingüístico para o agente Semântico:
Conhecimentos: Uma rede conceitual;
Capacidades: Busca_ Conceito (palavra,* conceito)· Objetivos:
Busca_ Conceito (palavra,* conceito) NIL A descrição externa do agente Semântico contém as descrições externas dos outros agentes na sociedade, que são esquematizadas no quadro a seguir:
Busca_ Prox_ Palavra (palavra,* característica),{ Busca_ Palavra (palavra,* característica) NIL;
Busca_ Sintagma (ptr_ frase,* regras),{ Análise_ Sintática (frase_ entr,* regras) $ * estrutura_ sint;
O agente Semântico também pode deparar- se com conflitos, causados por a necessidade de informações adicionais para a busca na rede conceitual, e esta informação vem dos demais agentes na subsociedade:
Inicialmente, todos os agentes trabalham na frase a ser analisada, através da análise léxico-morfológica nos dicionários (agente Léxico-MORF), da estruturação dos ítens léxicos por o agente Sintático, à medida que este os recebe do agente léxico-morfológico (Figura 6.5), e assim por diante.
Para uma frase como (6-1), o agente Léxico-MORF executa suas capacidades e envia seus resultados para o agente Sintático (Figura 6.5).
De este modo, a frase a ser analisada é tratada de forma paralela por os diversos agentes, e os resultados parciais são compartilhados entre si sempre que mensagens de requisição são disparadas na sociedade.
Enquanto isto, o agente Semântico percorre a frase tentando reconhecer as palavras e seus relacionamentos conceituais.
Estas informações podem auxiliar os demais agentes, restringindo a construção de estruturas sintáticas desnecessárias ou resolvendo um conflito ocasionado por algum fenômeno lingüístico.
À medida que o agente Sintático constrói as árvores sintáticas para a frase, ele as envia ao agente Semântico, para a continuidade dos objetivos deste último, como:
Dependendo do tipo de ambigüidade (estrutural, léxica semântica e léxica categórica), a subsociedade formada terá diferentes agentes e diferentes objetivos, além de ações e atos comunicativos distintos.
No entanto, o esquema de cooperação e controle da interação, ou seja, a busca do consenso através da troca de mensagens de alto nível usando um protocolo adequado, como o descrito na Seção 6.1.1, será basicamente o mesmo.
O processo de análise inicia quando o agente Sintático possui informações suficientes sobre a palavra, vindas do agente Léxico-MORF, para utilizar suas capacidades.
À medida que a estrutura sentencial é construída, uma ambigüidade léxica em nível categorial, identificada por mais de um descritor do mesmo item léxico, conduz o agente sintático a trabalhar nas subestruturas possíveis entre as construídas.
Tomemos como exemplo, a frase (6-2):
O agente Léxico-MORF envia os resultados de seu processamento para o agente (TELL:
Sender Léxico-MORF: Receiver Sintático:
Content&quot;(QD, nome_ prop)&quot;) (TELL:
Sender Léxico-MORF: Receiver Sintático:
Content «(DSUHFLRX, verbo)&quot;) (TELL:
Sender Léxico-MORF: Receiver Sintático:
Content «(R, art)&quot;) (TELL:
Sender Léxico-MORF: Receiver Sintático:
Content «(R, pron)&quot;) (TELL:
Sender Léxico-MORF: Receiver Sintático:
Content «(FDQWR, nome)&quot;) (TELL:
Sender Léxico-MORF: Receiver Sintático:
Content «(FDQWR, verbo)&quot;) (TELL:
Sender Léxico-MORF: Receiver Sintático:
Content&quot;(, prep)&quot;) (TELL:
Sender Léxico-MORF: Receiver Sintático:
Content «(VDOD, nome)&quot;) O agente utiliza suas capacidades para construir uma representação sintática para a frase, à medida que recebe as informações categóricas do agente Léxico-MORF.
Uma ambigüidade léxica é detectada através da multiplicidade de descritores morfossintáticos para o morfema o:
Determinante e pronome (pessoal oblíquo e demonstrativo);
E para o morfema canto:
Substantivo e verbo na 1ª pessoa do tempo presente do indicativo, como por exemplo:
A análise sintática tradicional irá gerar, para o próximo nível, todas as estruturas sintáticas possíveis segundo uma gramática pré-definida.
Algumas árvores possíveis do fragmento ambíguo são mostradas na Figura 6.6.
B) c) Outras contruções podem ser percebidas de acordo com a interpretação de diferentes Lingüístas.
Lembremos, entretanto, que em frases mais complexas e com maior grau de ambigüidade poderá ser gerada uma explosão combinatória de soluções, devido a a interdependência entre os níveis lingüísticos, advinda de uma abordagem modular e seqüencial.
O modelo distribuído procura atenuar esta propagação através da cooperação entre os módulos, quando os agentes com alternativas conflitantes podem requerer mais informações à subsociedade.
Em este caso, o agente sintático pode recorrer ao agente semântico para ajudar- lo a solucionar a multiplicidade categórica em função de informações conceituais apropriadas, ou seja:
O agente semântico possui em seu conhecimento as informações conceituais e o relacionamento entre os itens léxicos segundo alguma metodologia semântica (redes semânticas, estruturas de frames, entre outros).
Em este exemplo, como &quot;canto «pode ser um verbo substantivado (cantar) ou um substantivo (localização), sua relação com Objetos Físicos ou Animados depende do conceito relacionado ao seu complemento.
Isto determina um conflito para este agente, que dispara uma requisição por informações sobre o complemento sintagmático deste item através da mensagem:
O agente sintático, após a análise do sintagma requerido, propõe ao semântico:
O complemento &quot;de a sala «é um sintagma preposicional, e sua relação conceitual não está associada a uma ação, neste caso produzida por o verbo &quot;cantar», mas sim a um substantivo que determina uma localização física, como é o caso do substantivo &quot;canto».
Em a ação cooperativa, o agente semântico dá continuidade ao ciclo de resolução dos conflitos surgidos:
Este agente recebe a proposição do agente semântico (em broadcast, enquanto no ciclo de resolução) e confirma a informação (&quot;FDQWR», Nome), por já ter- lo encontrado durante sua execução, aceitando a proposição como verdadeira:
O agente Sintático recebe as informações do Semântico e a aceitação do agente Léxico-MORFO constituindo, desta forma, um consenso entre os agentes da subsociedade sobre (&quot;FDQWR», Nome).
O agente aceita a proposta e descarta as informações incoerentes com seu novo conhecimento, evitando a construção de árvores desnecessárias.
Além disso, a sua aceitação encerra o ciclo de resolução iniciado por ele e responde ao Semântico:
O agente Semântico, recebendo esta última mensagem do Sintático, encerra o seu ciclo de resolução de conflito iniciado com &quot;GDVDOD «e continua sua execução com as informações remanescentes do agente Sintático, até a conclusão de seus objetivos.
Como resultado desta cooperação, algumas estruturas menos promissoras podem ser descartadas do conjunto de soluções possíveis, o que ocasiona uma sensível economia de recursos computacionais.
Ao mesmo tempo, uma análise semântica parcial já está delineada, e a carga sobre o analisador semântico pode ser diminuída quanto a o processo de associação de representações semânticas às múltiplas árvores sintáticas geradas.
Descrevemos, neste capítulo, a camada de cooperação através da estruturação da comunicação, do protocolo e das mensagens possíveis entre os agentes, encapsulando o domínio lingüístico no modelo descrito anteriormente (Capítulo 5).
Demonstramos o funcionamento da subsociedade, exemplificando a cooperação entre os agentes para a resolução de uma situação de ambigüidade léxica.
Nosso principal objetivo, neste trabalho, foi avançar na proposta de uma abordagem arquitetural para o PLN, baseada em princípios advindos da Inteligência Artificial Distribuída.
Nosso ponto de partida constituiu- se nos trabalhos de (Boitet &amp; Seligman 94, Csuhaj-varjú&amp; Alez 93, Guha &amp; Lenat 94, Small 80, Stefanini 93) mas, principalmente, no sistema TALISMAN, cuja granularidade, na constituição dos agentes componentes, abrange os próprios domínios lingüísticos de processamento.
Partimos da investigação de dois problemas inerentes ao tratamento computacional da LN, visando caracterizar seu comportamento e parametrizar diretrizes que contribuíssem para uma abordagem considerando a cooperação e a distribuição como metas principais.
Inicialmente, focalizamos um fenômeno lingüístico em particular, que contribui para a complexidade do processo de análise em todos os domínios lingüísticos:
A ambigüidade.
As conclusões deste estudo demonstraram que o tratamento da ambigüidade configura- se, basicamente, como uma resolução de conflitos entre fontes heterogêneas de conhecimento.
Modelando tais fontes como agentes especializados e autônomos, foi possível isolar o conhecimento específico a cada domínio, tornando a concepção e manutenção independentes a cada um de eles.
Através desse enfoque, cada agente pode ser concebido com objetivos individuais específicos à classe de métodos de análise a que pertence, enquanto a parte responsável por a interação com outras fontes de conhecimento é genérica à sociedade que o recebe.
Em seguida, estudamos questões envolvendo a arquitetura tradicional em que os sistemas para PLN vinham sendo desenvolvidos, isto é, uma abordagem seqüencial.
A problemática envolvendo as limitações desta abordagem, apontadas no capítulo 2, nos levou a concluir que o fluxo de dados unidirecional, a arquitetura fechada e o controle centralizado contrapunham- se às características do PLN, ou seja, manipular grandes bases de conhecimentos, e interagir com tipos de conhecimentos distintos, dificulta o backtracking, quando necessário, e o acesso à informações entre etapas não adjacentes de análise.
Desta forma, definimos uma estratégia de cooperação baseada num protocolo de aprendizagem cooperativa, simulando aspectos de negociação para troca de informações entre módulos adjacentes de análise.
Isto possibilita que os agentes troquem, além de resultados parciais e fragmentos de informações, conhecimentos fora de seu escopo de competência para a consecução de objetivos individuais.
Para finalizar, verificamos que algumas vantagens surgem a partir de a abordagem distribuída, tais como:
A economia de recursos, devida à construção direta da solução ou à construção de uma quantidade menor de derivações;
A execução em paralelo da análise semântica, no caso de uma ambigüidade léxica semântica, por exemplo;
A distribuição dos esforços e recursos durante a resolução de um problema complexo;
A possibilidade de inclusão de novos agentes na sociedade através da troca de descrições externas de uns com os outros;
A facilidade de manutenção e concepção da parte relativa ao domínio lingüístico dos agentes individuais;
A concordância com a abordagem cognitiva de análise da linguagem humana (Binder &amp; Morris 95, Burgess &amp; Hollbach 88, Lindsay &amp; Norman 77, Marslen-Wilson 75).
Utilizamos- nos de comunicação direta para a cooperação interagente, evitando assim o uso de uma estrutura intermediária compartilhada (blackboard), por exemplo, a fim de descentralizar ao máximo os agentes e o controle.
Além disso, nem todos na sociedade precisam compartilhar todas as informações na resolução de conflitos locais.
Esta estratégia aumenta sua autonomia quanto as decisões locais, e torna a sociedade mais flexível e aberta à entrada de outros agentes.
Para tratar os conflitos lingüísticos durante a fase de análise, utilizamos uma metodologia próxima à proposta em, definindo uma dependência social fraca entre os agentes, através da mutualidade entre capacidades e objetivos.
Os conflitos lingüísticos são abordados por meio de uma estratégia de formação de subsociedades, utilizando uma estrutura de dados que representa a descrição externa dos agentes.
Uma vez que os agentes já estão na sociedade, não existe a necessidade de tornar redundantes o conhecimento, as capacidades e objetivos.
Limitamos o escopo do problema lingüístico (capítulo 2) à ambigüidade léxica categórica.
Nosso estudo de caso abordou aspectos de sua resolução, caracterizando a necessidade de conhecimentos morfológicos, sintáticos e semânticos.
Em o limiar de um conflito, isto é, quando surge uma ambigüidade, é natural que os agentes que possuem conhecimento e capacidades para auxiliar em sua resolução se agrupem temporariamente, definam novos objetivos intermediários e os concluam.
Esta estratégia mostra- se adequada não só para o tratamento deste tipo de conflito, mas sempre que situações intermediárias necessitem compartilhar soluções parciais para a continuidade da tarefa da sociedade.
Embora outras alternativas, tais como, apontem para uma granularidade fina, através dos sistemas baseados na palavra, ou mesmo nos sintagmas, preferimos explorar a granularidade em nível de domínio de análise.
Tal escolha se justifica, devido a o alto grau de acoplamento funcional existente entre os agentes em sistemas baseados na palavra, assim como no fato de tais agentes serem altamente cognitivos, quando reúnem conhecimentos de diferentes domínios.
Se, por um lado, tal assertiva os torna simples em nível funcional, por outro lado, o grau de interação é forçosamente maior, tornando muito complexa a comunicação, e aumentando a sobrecarga comunicativa, sobretudo, quando se ultrapassa o nível sentencial, em direção a o texto.
No entanto, uma granularidade &quot;grossa «41 dificulta, por exemplo, uma interação forte, como é apontado por Demazeau em, limitando os agentes à simples troca de conhecimento ou intenções.
Inicialmente, o protocolo de comunicação deverá onerar muito a fase de concepção do sistema, porém, sofrendo pouco ou nenhum impacto adicional quando de a modificação dos agentes.
A manutenção de um agente com este nível de granularidade também se tornará difícil e trabalhosa, à medida que modificações forem necessárias em seus métodos e capacidades internas.
Em a tarefa de &quot;agentificação «de alguns módulos do projeto LEXIS, implementados em linguagem &quot;C «para a plataforma SUN/ UNIX, consideramos o uso de uma abordagem De o inglês coarse.
Projeto LEXIS, em desenvolvimento no Instituto de Informática da PUCRS, tem por objetivo modelar e analisar computacionalmente a Língua Portuguesa através da geração de ferramentas para seu tratamento automatizado.
O projeto já conta com um analisador léxico-morfológico, um dicionário baseado em árvores trie e um analisador sintático, baseado em Gramáticas de Adjunção de Árvores.
A partir de alguns componentes deste projeto, modelamos a camada de cooperação, encapsulando em cada componente lingüístico as classes DPSK+ P necessárias à definição de capacidades de comunicação e cooperação.
Alguns exemplos da estrutura do projeto de software conduzido são apresentados no anexo A deste trabalho.
Os estudos na área de tratamento automático da LN tendem, naturalmente, a considerações que ultrapassam a sentença.
O estudo do texto constitui o esforço atual e futuro dos pesquisadores da Lingüística e da Lingüística Computacional e, sob este enfoque, a complexidade de análise e síntese aumentam proporcionalmente com a ocorrência de fenômenos lingüísticos característicos do domínio pragmático.
Estudos sobre a formação de subsociedades dinâmicas podem ajudar no tratamento em nível textual, tornando a sociedade verdadeiramente aberta a outros domínios (pragmático e discursivo, por exemplo) e tornando a replicação dos agentes uma idéia interessante em vista de a análise simultânea de várias frases de um texto.
Agentes específicos representando contextos distintos ou capacidades distintas, podem entrar e sair da sociedade, à medida que surge a necessidade de conhecimento contextual ou a necessidade de usar outras habilidades na sociedade, como exemplificado na Figura 7.1.
A arquitetura apresentada neste trabalho pode ser estendida para tratar outros fenômenos da linguagem (elipse e anáfora definida, por exemplo).
Investigações nesta linha já estão sendo conduzidas, através do projeto NALAMAS.
O estudo do sistema TALISMAN e a revisão bibliográfica do uso de IAD em sistemas de PLN, apresentados no capítulo 4, já pretendem ser uma contribuição ao projeto, e a evolução do modelo proposto neste trabalho constitui um estudo necessário a respeito de formas de adaptação dinâmica dos agentes, frente a novos conflitos lingüísticos.
As limitações impostas por a granularidade do agente podem diluir- se, na medida que o escopo de competência dos agentes seja subdividido, forçando a concepção de mais de um agente para o mesmo domínio, por exemplo.
Tal medida pode, perfeitamente, estabelecer- se em estudos posteriores.
Através deste trabalho, esperamos ter contribuído para a compreensão das metodologias distribuídas e cooperativas e sua aplicação ao tratamento dos fenômenos lingüísticos.
Através do modelo distribuído apresentado, corroboramos a visão cognitiva em que os processos da linguagem ocorrem de forma paralela e distribuída, e que tal abordagem pode ser adequada para as futuras concepções de sistemas para o processamento lingüístico.
