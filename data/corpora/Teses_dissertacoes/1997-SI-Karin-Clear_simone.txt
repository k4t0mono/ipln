Em este trabalho estão sendo propostos mecanismos para auxiliar os usuários na recuperação e na classificação de grandes volumes de mensagens eletrônicas, considerando o uso de Correio Eletrônico como fonte de informação.
O mecanismo de recuperação permite a localização e o acesso a mensagens, bem como a informações sobre mensagens e a estrutura de classificação adotada para elas, usando técnicas de indexação total e recuperação de textos.
O mecanismo de classificação é baseado no conceito de folder virtual, que permite a associação lógica entre mensagens e folders provendo assim, facilidades adicionais e maior flexibilidade nos procedimentos de classificação e/ ou reclassificação de mensagens.
De entre os benefícios providos por os mecanismos propostos, dois são de especial relevância.
Em primeiro lugar, o mecanismo de recuperação permite o acesso a qualquer informação explicitamente contida no texto das mensagens, como também àquelas presentes nos cabeçalhos ou implicitamente na forma por a qual foram classificadas, independente da localização prévia da mensagem em si.
Ou seja, o mecanismo de recuperação permite não só a recuperação ou filtragem de mensagens, mas também o acesso às informações a elas relacionadas, sem que para isto seja necessário que o usuário conheça (ou lembre) a forma como as mensagens estão organizadas.
Em segundo lugar, o mecanismo de classificação auxilia na classificação automática e na reorganização das mensagens levando em consideração a manutenção da consistência entre o propósito estabelecido para os folders e o conjunto de mensagens a eles associadas.
Os mecanismos são propostos em complementação às demais funções tradicionalmente oferecidas por sistemas de correio eletrônico, como por exemplo, enviar, receber, transferir, visualizar, imprimir, copiar, etc..
Com o surgimento das redes de computadores por volta de a década de 70, começou a difundir- se o uso de um novo meio de comunicação:
O Correio Eletrônico.
A exemplo dos demais meios de comunicação, o correio eletrônico destinava- se originalmente a agilizar o intercâmbio de informações e expandir o alcance de propagação das mesmas.
Inicialmente, limitado por a pouca disponibilidade de acesso e por a restrita abrangência das redes de computadores existentes, o correio eletrônico era um recurso utilizado por poucos.
Mais tarde, com a popularização do uso dos computadores, a proliferação das redes locais e o crescimento das redes internacionais, o correio eletrônico adquiriu uma abrangência mundial.
Atualmente, o correio eletrônico é visto como um dos meios de comunicação mais eficientes, uma vez que reúne características pertencentes às diversas tecnologias de comunicação existentes (e.
g fax, telefone, telex), apresentando uma relação custo/ benefício bastante satisfatória.
Em virtude de isto, o número de usuários vêm crescendo a cada ano e, conseqüentemente, o fluxo de mensagens entre eles.
Entre os benefícios oferecidos por o correio eletrônico, destacam- se a facilidade de multiplicação de informações, a possibilidade de endereçamento a grandes grupos de usuários, e a velocidade de transmissão.
Uma mesma mensagem pode ser transmitida a centenas ou milhares de usuários em frações de segundo.
Devido a estes benefícios, surgiu um grande número de aplicações (e.
g listas de distribuição de mensagens, conferências eletrônicas, automação de escritórios, gerência e controle de projetos, controle de requisições, etc.), transformando os sistemas de correio eletrônico de meros sistemas para transmissão e recepção de mensagens em excelente fonte de divulgação e busca de informações atualizadas, como também em ferramentas para gerenciamento e delegação de tarefas.
Entretanto, estes benefícios são também a origem de um dos maiores problemas no uso de correio eletrônico:
O excessivo volume de mensagens recebidas.
Existem estimativas de que usuários regulares recebam de 30 a 100 mensagens por dia.
Devido a a diversidade de procedência, as mensagens recebidas não obedecem a uma seqüência para cada um dos assuntos de interesses do usuário, são muitas vezes desprovidas de qualquer tipo de padronização e os textos nos campos subject são pouco representativos.
Além de isto, estas mensagens são recebidas junto a outras que não interessam ao usuário (junk mail) dificultando o processo de localização de informações urgentes, importantes ou relevantes.
Assim sendo, muitas vezes a taxa de recebimento de mensagens ultrapassa a capacidade natural de absorção por parte de o usuário, provocando um grande acúmulo de mensagens em sua caixa postal.
Este fenômeno é, conhecido na literatura como information overload.
O acúmulo de mensagens torna extremamente difícil o seu gerenciamento, uma vez que em meio a um grande volume, é bastante difícil distinguir- se as mensagens prioritárias, efetuar- se uma classificação segundo critérios adequados, ou ainda, descartar a correspondência inútil.
Embora os problemas decorrentes do acúmulo de mensagens atinjam a todos ao usuários que fazem uso intensivo do correio eletrônico, dependendo do objetivo e da forma de utilização adotados, estes usuários apresentam diferentes necessidades ao combater seus efeitos.
Um estudo sobre a diversidade de uso de sistemas correio eletrônico identificou três funções básicas nas organizações, que serão aqui denominadas:
Gerenciamento de informações, gerenciamento de tempo e gerenciamento de tarefas.
Estas funções, segundo o estudo, estariam diretamente relacionada a duas estratégias de utilização identificadas nos usuários, que foram classificados como:
&quot;priorizadores «(prioritizers) e &quot;arquivadores «(archivers).
Os usuários considerados como priorizadores são aqueles interessados em limitar o tempo despendido com o uso do correio eletrônico, procurando otimizar a sua utilização.
Este comportamento é típico em funções de gerenciamento de tempo e gerenciamento de tarefas.
Os usuários arquivadores, por outro lado, utilizam o correio eletrônico como fonte de informação, e portanto, dispõem- se a dedicar mais tempo à utilização do correio eletrônico para evitar a possibilidade de deixar de ler alguma mensagem importante ou interessante.
Portanto, aqueles usuários que utilizam o correio eletrônico como ferramenta para gerenciamento de tempo e tarefas, têm maior necessidade de identificar e priorizar mensagens importantes.
Já os que utilizam o correio eletrônico como ferramenta para o gerenciamento de informações, têm maior necessidade de organizar e recuperar mensagens posteriormente.
Vale ressaltar que estes comportamentos não são mutuamente exclusivos.
Entretanto, normalmente existe um tendência a manifestar preferência por um dos dois comportamentos.
Encontram- se na literatura diversas propostas para o tratamento dos problemas decorrentes do acúmulo de mensagens.
Tais propostas baseiam- se em sua maioria na utilização de recursos para a filtragem e processamento automático de mensagens.
Através destes recursos, é permitido ao usuário configurar previamente um conjunto de regras para selecionar automaticamente mensagens de seu interesse, descartar aquelas que não lhe interessam e priorizar mensagens importantes, entre outras funções (e.
g transferir, responder, etc.).
Estas propostas usam como estratégia básica de solução a redução do volume de mensagens na caixa postal do usuário, sem que seja necessário para isto a sua intervenção direta.
Embora essas abordagens sejam bastante satisfatórias para usuários do tipo priorizadores, nem sempre são adequadas para usuários arquivadores.
Segundo a pesquisa realizada em, usuários arquivadores não consideram interessante a possibilidade de eliminar automaticamente mensagens inúteis.
Isto deve- se basicamente a dois motivos:
Mensagens ora inúteis (ou desinteressantes) podem, como o passar do tempo, tornarem- se úteis (ou interessantes);
A dificuldade de caracterizar semanticamente, por meio de regras o que poderia ser considerado como uma mensagem inútil.
Além de isto, o processo de classificação automática de mensagens também não é apreciados por estes usuários que afirmam:
&quot;Eu não confio numa fórmula para organizar minhas mensagens antes de eu ver- las.
Tenho medo de que elas sejam organizadas de uma forma em a qual eu nunca mais vá encontrar- las.
Prefiro primeiro ler- las e depois, então, organizar- las manualmente».
Assim sendo, para estes usuários prevalece a necessidade de recursos consistentes para a classificação e o armazenamento de mensagens, com o intuito de facilitar sua recuperação posteriormente.
Em virtude de os problemas expostos anteriormente e com base nas necessidades de usuários arquivadores, estão sendo propostos neste trabalho mecanismos para a manipulação de grandes volumes de mensagens eletrônicas no sentido de prover facilidades para a classificação e recuperação de informações.
A intenção básica ao prover estes mecanismos é considerar toda informação recebida como relevante independente dos interesses do usuário no momento do recebimento da mensagem.
Partindo- se deste princípio, deseja- se evitar que o usuário tenha que descartar informações que eventualmente poderão vir a ser úteis, apenas por não possuir condições de armazenar- las de forma adequada e confiável e assim garantir o controle, ou o nível de organização necessário, para a gerência de sua caixa postal.
Para tanto, foram desenvolvidos um mecanismo de recuperação de informações e um mecanismo de classificação, através de os quais o usuário poderá utilizar o correio eletrônico como um sistema de informações.
O mecanismo de recuperação baseia- se no uso de técnicas de recuperação utilizadas por sistemas de recuperação de textos, permitindo a recuperação de informações não estruturadas com eficiência e de forma independente dos esquemas de classificação estabelecidos por o usuário.
O mecanismo de classificação é baseado no conceito de folder virtual que permite a associação lógica entre mensagens e folders, garantindo uma maior flexibilidade na classificação e recuperação de mensagens.
Ambos os mecanismos estão sendo propostos em complementação às funções básicas de manipulação de mensagens, tais como enviar, receber, transferir, etc..
Providos por um sistema de correio eletrônico já existente.
De entre os benefícios apresentados por os mecanismos propostos, dois de eles são de especial relevância:
O mecanismo de recuperação permite que o usuário localize e recupere informações facilmente;
Em contraste com os sistemas e/ ou ferramentas existentes, tanto comerciais como não-comerciais, o mecanismo de recuperação proposto não é limitado à recuperação de mensagens, mas permite também a recuperação de informações sobre as mensagens e/ ou sobre a estrutura de classificação adotada por o usuário.
O mecanismo de classificação permite a organização e a reorganização de mensagens em folders, permitindo a manutenção da consistência entre a intenção de classificação e o conjunto de mensagens que o folder representa, através da introdução do conceito de folder virtual.
Os capítulos a seguir descrevem os estudos realizados e soluções propostas considerando- se os problemas citados, de forma que, no capítulo 2, serão discutidas as principais abordagens para o tratamento de information overload, bem como exemplos de sistemas e ferramentas que as implementam.
Os mecanismos de recuperação e classificação são descritos no capítulo 3, onde é apresentada uma visão geral da proposta, os conceitos relacionados, o modelo de dados adotado, bem como e as características dos mecanismos.
Em o capítulo 4 são abordados os aspectos de implementação, e o projeto de um sistema prototípico para a utilização dos mecanismos.
As conclusões e perspectivas de trabalhos futuros são apresentada no capítulo 5.
Segundo, o volume e o fluxo de informações em sistemas de comunicação baseados em computador (CMCS) podem se tornar insuportáveis, especialmente quando as mensagens não são necessariamente seqüenciais ou quando o usuário participa simultaneamente de vários grupos de discussão ou conferências, resultando no fenômeno conhecido como information overload.
Information overload apresenta- se inicialmente como um problema, mas além de isto, representa um constante desafio a ser superado.
Diferentes trabalhos têm sido propostos na literatura, com o intuito de minimizar os efeitos resultantes desse fenômeno.
Em foram analisadas as características de diferentes propostas disponíveis na bibliografia), visando- se detectar o grau de adequação das mesmas, considerando- se o uso do correio eletrônico como fonte de informação.
Foi observado que a grande maioria das propostas estudadas apresentam suas abordagens de tratamento baseadas no uso de mecanismos como:
Repositórios públicos, folders, estruturação de conteúdos, filtragem e processamento automático de mensagens.
Em este capítulo, serão analisados os principais aspectos relacionados ao tratamento de information overload, considerando- se as necessidades dos usuário arquivadores.
Para tanto, serão apresentadas na seção 2.1 as principais características, vantagens e desvantagens dos mecanismos mais utilizados nas diferentes propostas.
Em a seção 2.2 serão apresentados exemplos de sistemas e ferramentas que utilizam estas abordagens, e na seção 2.3 uma análise comparativa entre os exemplos apresentados, baseada nos recursos disponíveis em cada ferramenta.
Information Overload Segundo termo information overload refere- se a dois aspectos em particular:
A a distribuição excessiva de mensagens aliada ao crescimento da densidade de usuários, o que resulta no acesso a um número de itens superior à capacidade natural do ser humano de responder- los ou absorver as informações em eles contidas.
A a insuficiência de organização das mensagens recebidas, segundo tópicos específicos ou com base em seus conteúdos, que impede ou dificulta que as informações em elas contidas sejam identificadas como importantes ou significativas, o que foi denominado &quot;entropia da informação «Considerando- se estes aspectos, surgem como solução naturais para o tratamento de information overload a redução do fluxo de mensagens, a estruturação das informações, e/ ou a redução do volume de mensagens recebidas na caixa postal.&amp;&amp;&amp;
A redução do fluxo de mensagens, está mais relacionada a uma estratégia pessoal de uso do correio eletrônico do que ao uso de um mecanismo em específico.
Seguindo esta solução, o usuário evita que as mensagens cheguem à caixa postal através da suspensão da subscrição em conferências ou grupos de discussão e/ ou reduzindo o universo de interlocutores.
Entretanto, se por um lado esta estratégia evita a ocorrência de information overload, por outro, reduz também a utilidade e as potencialidades associadas ao uso do correio eletrônico como fonte de informação.
Considerando- se as restrições inerentes a este tipo de solução, podese dizer que a redução do fluxo de mensagens, adotada desta forma, apresenta- se como uma alternativa pouco interessante para o usuário arquivador.
Procurando também reduzir o fluxo de mensagens à caixa postal, encontra- se propostas baseadas no uso de repositórios públicos de mensagens, viabilizando o acesso a um grande volume de informações sem que, no entanto, o usuário receba mensagens indesejadas ou pouco interessantes (úteis) uma vez que busca por informações, a medida que as necessita.
Em estes repositórios, como por exemplo Usenet News e Anyone Server, os usuários procuram por mensagens à medida que possuem disponibilidade para &quot;processar- las».
Entretanto, é importante ressaltar que ao tentar selecionar mensagens nestes repositórios o usuário poderá encontrar o mesmo tipo de dificuldade para localizar ou priorizar mensagens em sua caixa postal, caso não sejam oferecidas facilidades adequadas para isto.
Por estruturação das informações entende- se a melhor organização das informações recebidas, o que é mais compatível com as necessidades de usuários do tipo arquivador do que a redução do fluxo de mensagens.
A classificação das mensagens por tópicos através do uso de folders e a estruturação de seus conteúdos, têm sido utilizadas como mecanismos para a organização das informações, como será visto nas seções a seguir.
Folders são pastas eletrônicas que possibilitam a organização das mensagens segundo alguma classificação estabelecida por o usuário.
O usuário pode definir um conjunto ou uma hierarquia de folders organizando as mensagens em diferentes categorias, onde ficam disponíveis para referências futuras.
Para a maioria dos sistemas, os folders são implementados como arquivos físicos onde as mensagens são armazenadas num formato específico.
A atribuição das mensagens aos arquivos é feita através de critérios informalmente estabelecidos por o usuário e implicitamente associados ao nome atribuído ao folder.
Uma vez armazenada num folder, a mensagem lá permanece, até que seja determinada sua remoção.
Normalmente, a localização das informações contidas nas mensagens é feita por a verificação dos conteúdos dos folders, através de funções de localização de texto providas por ferramentas para a visualização de mensagens (mail readers e browsers), ou através de comandos do sistema operacional (e.
G. Comandos grep ou pick do Unix).
Vale ressaltar, que estes recursos podem eventualmente apresentar baixa performance quando existe um número elevado de folders e/ ou estes contêm muitas mensagens.
Se por um lado a distribuição das mensagens em diversos folders pode facilitar ao usuário a sua localização, uma vez que as agrupa por assunto, o uso dos folders como unidade de armazenamento de mensagens e o caráter implícito dos critérios de classificação podem provocar uma série de problemas.
Alguns destes problemas são destacados e exemplificados a seguir:
Dificuldade de determinar um folder apropriado para mover uma mensagem:
Exemplos típicos desta situação ocorrem quando uma mensagem pode ser classificada em mais de um folder, obrigando o usuário a optar por um de eles ou duplicar a mensagem.
Outro problema típico é a dificuldade do usuário em lembrar o significado atribuído aos folders.
Necessidade de repetição da consulta em vários folders:
Esta situação ocorre quando não existe um folder específico para o assunto em questão.
Também quando o usuário não lembra o significado exato dos folders ou mesmo da forma como uma mensagem foi classificada.
Necessidade de reorganizações periódicas das categorias de classificação:
Quando o número de folders utilizado é grande, torna- se necessária a reorganização periódica das categorias de classificação em função de novos interesses do usuário, da diversidade da informação recebida, ou do volume de mensagens contido em eles, para facilitar a localização das mesmas.
Tal procedimento é bastante trabalhoso, uma vez que exige a intervenção direta do usuário para localizar mensagens e transferir- las para suas novas classificações.
Esta necessidade é também caracterizada por situações onde os critérios inicialmente definidos para um folder necessitam ser alterados conforme a ação do tempo, o que é bastante comum para usuários arquivadores, como foi ressaltado anteriormente no capítulo 1.
Dificuldade de manter consistentes os critérios de classificação de um folder com o conjunto de mensagens em ele contidas:
Muitas vezes, uma mensagem é movida para um determinado folder e, com o passar do tempo, deixa de atender aos critérios estabelecidos (e.
g Pode confundir o usuário na hora da classificação de novas mensagens.
Outra situação que gera esta dificuldade é a transferência acidental de uma mensagem para um folder inadequado.
Considerando- se as situações anteriores, pode- se constatar que a ausência de uma definição explícita dos critério de classificação torna pouco confiável o processo de organização das mensagens, fazendo deste uma tarefa cansativa, que nem sempre garante bons resultados na recuperação das mesmas.
O uso dos folders como unidade de armazenamento agrava esta situação, uma vez que impede que as mensagens sejam recuperadas ou reorganizadas de forma independente da maneira por a qual foram armazenadas.
Mediante os exemplos apresentados, pode- se dizer que a gravidade dos problemas descritos é diretamente proporcional ao volume de mensagens a serem organizadas, e à quantidade de folders existentes.
Assim sendo, embora o uso de folders caracterize- se como um mecanismo simples e flexível de classificação, não atende plenamente às necessidades dos usuários arquivadores que tendem a manipular um grande volume de mensagens, e portanto, necessitam de recursos consistentes para classificação de informações.
Uma mensagem eletrônica, assim como memorandos, cartas ou outras formas de comunicação escrita, possui elementos descritivos preestabelecidos que lhe atribuem uma forma semi-estruturada (por ex.:
Figura 2.1 adaptada de.
O cabeçalho é a parte estruturada da mensagem.
Dependendo do sistema de correio eletrônico utilizado, variam as informações em ele contidas.
Entretanto, algumas informações são padronizadas por o.
O cabeçalho é gerado automaticamente por os sistemas de correio eletrônico, com base em dados de sua configuração (From, Date, Received) e informações fornecidas por os usuários (Te o, Cc, Subject -- os campos Cc e Subject são opcionais), e inclui ainda informações como código de identificação da mensagem.
Alguns sistemas provêm ainda campos para solicitação de aviso de recebimento (Acknowledge), identificação do sistema de correio utilizado por o remetente (x-Mailer), endereço para notificação de erros (X-Errors), referência à mensagem respondida (InReply-To), prioridade da mensagem (Priority), nível de segurança (Security Level), entre outros.
Cabeçalho From andy Wed Jul 29 08:47:18 1992 Received:
By 60-m inutes.
Cbs. Com id Wed, 29 Jul 92 08:47:18 0500 From:
Andy Rooney Cbs.
Com\&gt; Te o:
Wallace@ 60-m inutes.
Cbs. Com (Mike Wallace) Date:
Wed, 29 Jul 92 8:47:18 CDT Cc:
Susan X-- mailer:
ELM Ola, So para avisar que ja retornei de viagem.
Um Abraco, Andy.
O conteúdo de uma mensagem padrão possui formato livre e constitui- se exclusivamente de texto desprovido de qualquer formatação.
Entretanto, pode conter documentos formatados, gráficos, imagens, sons, programas, entre outros, desde que devidamente codificados.
Com a evolução das redes e dos sistemas de correio eletrônico as mensagens passaram a incorporar extensões ao conteúdo (attachments), sob a forma de referência a outros objetos do ambiente do usuário, como por exemplo hipertextos, programas, anotações.
A referência a estas extensões são feitas através de campos do cabeçalho e o acesso é normalmente feito através da integração entre o conteúdo da mensagem e outras aplicações disponíveis no sistema do destinatário.
Entretanto, a estrutura básica da mensagem permanece sendo composta de uma parte estruturada e outra não estruturada, uma vez que os objetos anexados são posteriormente extraídos das mensagens e tratados por as ferramentas correspondentes.
Visando facilitar a troca de informações padronizadas (e.
g, avisos de chamadas telefônicas e convites para reuniões), alguns sistemas também implementam o uso de mensagens estruturadas, como por exemplo Information Lens, Object Lens, Andrew Message System e PAGES.
Considera- se mensagem estruturada aquela que, além de o cabeçalho, tem seu conteúdo organizado em campos com valor semântico definido (template), como ilustra a figura 2.2, extraída de (Mallone, 1989).
Em este caso, as mensagens são normalmente vinculadas a tipos ou classes (figura especializações provida, ou não, de herança de atributos.
Deliver Save Cancel Message Editor for LENS Meeting Announcement Te o:
LENS Developers From: Thomas Malone cc:
Subject: LENS Meeting This Monday Place:
Default Explanation Alternatives Topic:
Lens Day: Monday Meeting Date:
Time: 3:00 Place:
E 53-301 Text:
O uso de mensagens estruturadas facilita o processo de recuperação e classificação de mensagens, uma vez que as mesmas encontram- se préclassificadas por os tipos aos quais pertencem eliminando parte dos problemas na classificação por folders descritos na seção 2.1.2.1.
Entretanto, o uso de tipos distintos de mensagens associados ao uso de folders pode ocasionar problemas, como por exemplo, no Information Lens, onde o conteúdo dos folders é restrito a um único tipo de mensagem.
Isto impede que o usuário reúna num único folder mensagens de tipos diferentes mas que versem sobre um mesmo assunto, o que reduz a flexibilidade de classificação e pode dificultar a posterior recuperação.
Já o Object Lens permite que os folders façam referência a diferentes tipos de mensagens.
Entretanto, para cada folder deve ser estabelecido um tipo padrão, sobre o qual serão definidos os atributos para visualização das mensagens, e somente os atributos comuns ao tipo padrão poderão ser exibidos.
A composição e a interpretação do conteúdo da mensagem estruturada são também facilitados, uma vez que o conteúdo é composto por pares atributo-valor.
Sendo assim, a filtragem de mensagens torna- se mais precisa e o processamento automático mais confiável, como será visto na seção 2.1.3.
Além de isto, a existência de hierarquias de tipos pré-definidos possibilita o seu compartilhamento por os usuários, gerando uma linguagem comum entre eles e viabilizando o processamento automático de mensagens com base no tipo manipulado Com base nas características expostas, pode- se dizer que o uso de mensagens estruturadas é adequado para aplicações de Correio Eletrônico onde existe um certo grau de estruturação e padronização das informações (e.
g controle/ delegação de tarefas, comunicação de grupos de trabalho, sistemas de requisições, automação de escritórios) (Khoshafian, 1991), o que é bastante comum aos usuários &quot;priorizadores».&amp;&amp;&amp;
Entretanto, o uso de correio eletrônico feito por usuários &quot;arquivadores», envolve aplicações que apresentam características como:
Necessidade de comunicação entre sistemas heterogêneos:
A estruturação de mensagens aqui não se aplica, uma vez que cada sistema pode usufruir de uma hierarquia de tipos própria, provocando uma incompatibilidade de tipos na aplicação das regras;
Necessidade de manipulação de uma grande diversidade de informações, sem que exista uma padronização ou estruturação natural para as mesmas.
Como alternativa a estas duas situações, as mensagens estruturadas são normalmente utilizadas através de um tipo padrão composto de um campo único de conteúdo com texto em formato livre.
Esta solução faz com que o tratamento destas mensagens estruturadas seja o mesmo das mensagens semi-estruturadas, anulando os benefícios trazidos por a estruturação dos conteúdos.
Assim sendo, embora o uso de mensagens estruturadas represente uma boa solução para o tratamento de grandes volumes de mensagens, permitindo aumentar o poder de expressividade na manipulação das mesmas, para os usuários arquivadores, torna- se pouco adequada, uma vez que sua contribuição é limitada, quando se deseja ou necessita tratar mensagens semi-estruturadas ou sistemas heterogêneos.
A redução do volume de mensagens recebidas na caixa postal do usuário é usualmente feita através de mecanismos de seleção associados ao processamento automático de mensagens, visando minimizar o esforço de leitura do usuário.
A filtragem em sistemas de correio eletrônico é caracterizada por a seleção de um conjunto de mensagens.
O uso de filtros tem como objetivo principal, reduzir o esforço do usuário na identificação de mensagens para tratamento posterior (e.
g classificação, remoção).
Em o processo de filtragem é considerada sob dois aspectos:
Positivo e negativo.
A filtragem negativa é efetuada no sentido de ignorar a informação recebida.
Já a filtragem positiva implica em selecionar ou pré-classificar mensagens para processamento posterior.
A filtragem positiva em sistemas de mensagens é apresentada sob 3 abordagens:
Filtragem Social -- estabelecida com base na procedência da mensagem, ou seja, na pessoa e/ ou instituição de a qual a mensagem foi recebida;
Filtragem Econômica -- baseada no custo de leitura da mensagem para o usuário e normalmente especificada sobre atributos como o tamanho da mensagem e o número de destinatários;
Filtragem Cognitiva -- baseada nas informações contidas na mensagem.
Em alguns sistemas como por exemplo, ISCREEN e Tapestry, Procmail, Eudora a filtragem atua sobre mensagens semi-estruturadas.
Assim, as filtragens social e econômica são aplicadas sobre os campos do cabeçalho e a filtragem cognitiva fica restrita à buscas de palavras no texto do conteúdo.
Outros sistemas como Information Lens, Object Lens, Andrew Message System e PAGES, ampliam os benefício da filtragem cognitiva atribuindo um maior valor semântico ao conteúdo através da estruturação do mesmo em campos como foi visto na seção A filtragem associada ao processamento automático de mensagens, podem ser utilizados para explicitar os critérios para a classificação e seleção uma vez que são definidos através da caracterização de informações contidas no cabeçalho e/ ou no texto das mesmas.&amp;&amp;&amp;
A associação da filtragem ao processamento automático é normalmente feita através do uso de regras.
Uma regra, para a grande maioria das ferramentas e/ ou sistemas de Correio Eletrônico, é composta de seleção e ação, onde seleção é especificada através de um filtro, e a ação, por um conjunto de procedimentos definido sob a forma de scripts.
Assim, as mensagens que satisfazem aos critério de seleção estabelecidos por o filtro, são submetidas às ações especificadas.
O processamento automático de mensagens está sendo considerado aqui, com o conjunto de funções que pode ser executado sobre uma determinada mensagem através da aplicação automática de regras prédefinidas por o usuário.
Além de as funções de classificação e filtragem anteriormente citadas, outras operações também podem ser aplicadas de forma automática, como por exemplo:
Transferência (Forward), remoção (Delete), rejeição (Reject) e cópia para arquivo (Copy).
Sistemas que trabalham com mensagens estruturadas podem implementar outras funções como resposta a mensagens padronizadas, ou outras funções específicas de cada tipo, permitindo uma maior agilidade na manipulação de mensagens e a execução direta de algumas tarefas do usuário.
Entretanto, valem as mesmas observações feitas anteriormente quanto a o uso de mensagens estruturadas entre sistemas diferentes.
A utilidade deste tipo de recurso, também fica profundamente prejudicada quando a troca de mensagens ocorre entre usuários de sistemas distintos.
Alguns sistemas utilizam a estrutura da mensagem como base para a definição das regras.
Este recurso facilita a composição das mesmas deixando mais claro ao usuário o tipo de filtro que ele está estabelecendo.
Entretanto, não permite a combinação entre atributos de tipos de mensagens diferentes de forma direta.
Este tipo de limitação, dificulta ao usuário a definição de regras envolvendo mais de um tipo de mensagem, como por exemplo, &quot;mover para o folder importante todos os avisos de reunião ou notificações de alteração de data».
Outros sistemas provêm uma linguagem própria textual para a especificação das regras, ou ainda, utilizam- se de linguagens de programação utilizadas na implementação do sistema, como é o caso dos sistemas baseados em agentes autônomos.
Propostas baseadas no conceito de agentes autônomos e semiautônomos, possibilitam que os usuários deixem a definição das ações ao encargo de seus respectivos agentes, os quais atuarão com base no conhecimento adquirido a partir de a interação com o usuário e/ ou outros agentes.
Podem ser citados como exemplos de sistemas baseados em agentes autônomos, o Active Mail, Maximus e PAGES.
Este tipo de sistema apresenta como principal vantagem a possibilidade de isenção do usuário no processamento de algumas mensagens, permitindo que o agente atue como um assistente humano (ou como secretária).
Entretanto, existem dois problemas básicos.
O primeiro é relativo à competência do agente -- ou seja, de que maneira este agente irá construir o conhecimento necessário para agir de forma autônoma, e até que ponto ele conseguirá agir assim.
O segundo, refere- se grau de confiança que o usuário pode depositar neste agente (quem pode garantir ao usuário que o agente está trabalhando da maneira que ele acredita estar?) (
Maes, 1994).
O momento da aplicação das regras, bem como o conjunto de mensagens sobre as quais podem atuar, variam de sistema para sistema.
Quanto a o momento de aplicação das regras, é normalmente determinado por o tipo de evento reconhecido por o sistema.
O evento mais usual, é a chegada de uma mensagem nova.
Entretanto alguns sistemas também reconhecem eventos mais específicos como por exemplo, um determinado instante do relógio interno, ou ainda, uma intervenção direta do usuário.
Sistemas que restringem a aplicação de regras somente à chegada de mensagens novas normalmente, limitam o universo de mensagens ao qual as regras podem ser aplicadas às mensagens da caixa postal do usuário.
A utilização de outros tipos de evento oferece a vantagem de poder- se aplicar regras também sobre as mensagens armazenadas nos folders.
Esta facilidade permite a utilização das regras não só como mecanismo de classificação e/ ou priorização mas também, como mecanismo de recuperação de mensagens.
Apesar de reduzir o esforço do usuário na manipulação de mensagens, o uso de filtragem e processamento automático apresenta problemas, que serão descritos a seguir.
O uso de regras para a classificação de mensagens torna os critérios de seleção explícitos, facilitando a localização das mensagens e minimizando os problemas citados na seção 2.1.2.1.
Note- se, contudo, que o uso desse recurso não elimina as possibilidades de inconsistência entre os critérios do folder e das mensagens em ele contidas, já que as mensagens podem ser classificadas por outras manipulações.
Por exemplo, a transferência manual de mensagens (às vezes até acidental), ou o uso de múltiplos regras.
Existem ainda as inconsistências decorrentes da ação do tempo, como foi comentado na seção 2.1.2.1.
Os filtros que atuam sobre os conteúdos de mensagens semiestruturadas têm o poder de expressão limitado por os recursos disponíveis para a captação da semântica dos mesmos.
Uma vez que a semântica do conteúdo de uma mensagem em linguagem natural não pode ser facilmente identificada, o uso dos filtros não permite uma bom grau de expressividade das regras, sendo necessário o uso de expressões bastante complexas para imprimir a semântica desejada a um filtro.
O uso de expressões muito complexas, entretanto, pode resultar em seleções imprecisas ou incompletas.
E, ainda, basear o processamento automático das mensagens em filtros cujo grau de expressividade é insuficiente, pode provocar efeitos indesejáveis tais como descartar informações importantes, ou ainda, não localizar- las posteriormente.
Portanto, o uso deste tipo de mecanismo, apresenta vantagens uma vez que possibilitam a manipulação automática das mensagens, entretanto, caso o usuário não tenha pleno domínio do processo de definição das regras e de sua aplicação, o sistema pode reagir de forma inesperada àquela por ele desejada.
Outro fator importante a ser observado é a adequação deste tipo de recurso em relação a o tipo de função explorada no uso do correio eletrônico, como mostra o exemplo a seguir:
Em um ambiente de escritórios, onde é de grande importância a circulação de documentos e que muitas vezes a atividade do usuário consiste em encaminhar diferentes tipos de documentos às pessoas certas, o conteúdo dos documentos muitas vezes é irrelevante, sendo desnecessária a sua leitura.
Este é um exemplo típico de uso do correio eletrônico como ferramenta de gerência de tempo e de tarefas, comum a usuários do tipo &quot;priorizadores».
Entretanto, num ambiente acadêmico, onde o correio eletrônico é bastante utilizado para a troca de conhecimento entre pesquisadores, o maior interesse está no conteúdo das mensagens, e é de extremo interesse do usuário absorver as informações ali contidas, o que não pode ser feito por processamento automático.
Em este último caso, que descreve o uso do correio eletrônico como ferramenta de gerência de informação, típico de usuários arquivadores, as funções de classificação e priorização são extremamente úteis.
Entretanto, funções de remoção podem ser bastante indesejáveis, uma vez que algum conhecimento útil pode ser descartado por falhas de filtragem.
Assim como, outras funções automáticas mais complexas envolvendo mensagens estruturadas, possivelmente não são aplicáveis devido a o tipo de mensagem utilizada e a heterogeneidade dos sistemas utilizados.
Assim, o uso de filtragem aliado ao processamento automático constitui uma solução potencialmente adequada para o tratamento de information overload, uma vez que resolve boa parte dos problemas decorrentes da necessidade de manipulação de grandes volumes de mensagens.
Porém, em virtude de os problemas acima descritos, pode- se dizer que o baixo poder de expressividade dos filtros, considerando- se o baixo grau de estruturação semântica das mensagens manipuladas por usuários arquivadores, e a ausência do controle de manutenção da consistência na classificação das mensagens, sugerem que esta, utilizada de forma isolada, é uma solução incompleta para a classificação e recuperação de mensagens semi-estruturadas.
Encontram- se na literatura diferentes propostas de sistemas e ferramentas de correio eletrônico para minimizar os efeitos do acúmulo de informações (information overload).
Em este capítulo, serão descritos alguns dos sistemas e ferramentas de correio eletrônico estudados durante o desenvolvimento deste trabalho, que foram selecionadas por apresentarem características relevantes para o tratamento dos problemas descritos no capítulo 1.
A descrição das ferramentas apresenta uma forma sucinta, concentrando- se especificamente nas características relacionadas com o tratamento de information overload.
Um estudo mais genérico sobre ferramentas de correio eletrônico, destacando suas características, funções e estrutura, pode ser visto em.
Desenvolvido como projeto de pesquisa na MIT's Sloan School of Management, Information System é um sistema para compartilhamento de informações, cujo principal objetivo é combater o excesso de mensagens que atinge os usuários de correio eletrônico e serviços de informações on-line.
Fundamentado nos conceitos de filtragem e processamento automático de informações, o Information Lens (IL) utiliza recursos provenientes das áreas de inteligência artificial e interfaces gráficas com o usuário para implementar um &quot;assistente inteligente «capaz de priorizar mensagens recebidas e organizar- las em folders, e também processar automaticamente determinados tipos de mensagens.
O IL tem o seu funcionamento baseado no uso de mensagens estruturadas organizadas em tipos relacionados entre si através de uma hierarquia de herança.
Os mecanismos de filtragem e processamento automático são implementados através de regras de produção.
As regras são associadas aos tipos de mensagens e podem ser livremente definidas por os usuários.
A condição é representada por um teste (IF) sob forma de comparação de valor ou localização de strings sobre o valor dos campos, enquanto que a ação (THEN) representa um procedimento a ser executado sobre a mensagem.
Vale ressaltar que estas regras só podem ser aplicada às mensagens contidas na caixa postal do usuário (incoming messages), não sendo possível aplicar- las às mensagens já transferidas para os folders.
Um recurso interessante, disponível no IL, é a possibilidade de atribuição de características às mensagens.
O usuário pode definir uma regra onde especifica que a característica muito importante é atribuída às mensagens provenientes do Sr. Silk ou do Sr. Siegel e, então, reutilizar esta característica numa outra regra (fig. 2.4).
O uso deste recurso, permite múltiplas combinações entre os atributos e ainda evita que a mesma condição tenha que ser rescrita para várias regras, oferecendo maior poder de expressão.
As regras podem ser utilizadas para agrupar mensagens em folders, sendo que cada um de eles só pode conter mensagens de um mesmo tipo.
O Object Lens (OL )) (lai , 1988 ) foi desenvolvido com base na experiência do Information Lens. Visto como a segunda geração do Information Lens, o Object Lens incorporando os conceitos básicos utilizados no primeiro projeto, porém, generalizando- os para a representação de outros tipos de informações (por ex..
Pessoas, tarefas, produtos) e não só para a representação de mensagens (Robinson, 1991).
Em o OL as mensagens são representadas por instâncias de objetos estruturados.
Assim como no IL, os objetos pertencem a tipos específicos representados por templates e os tipos são organizados numa hierarquia de especializações provida de mecanismo de herança.
Cada tipo de objeto possui um conjunto de ações que podem ser executadas sobre ele.
A diferença básica entre os dois sistemas neste ponto, reside no fato de que não só as mensagens são representadas através de objetos.
Regras, folders, pessoas, tarefas, entre outras entidades envolvidas na aplicação, são também representadas desta maneira e podem ser associadas entre si através de links lógicos.
As mensagens podem ser agrupadas em folders.
Entretanto, para o Object Lens, folders são também objetos.
Assim sendo, a associação entre mensagens e folders, é feita através de links lógicos.
Para cada folder é definido qual o tipo default de objeto será agrupado no folder.
Entretanto, não é feita nenhuma verificação de tipo no momento da associação.
O efeito resultante é que, somente os campos compartilhados com o tipo default são exibidos no momento da inspeção do conteúdo do folder.
Assim como no Information Lens, os mecanismos de filtragem, permitem que se estabeleçam filtros cognitivos, sociais e econômicos e são também implementados através do uso de regras.
Porém, no Object Lens, as regras não são vinculadas a um tipo de mensagem em específico, mas sim, constituem- se em objetos que podem ser ativados automaticamente por agentes, ou por determinação do usuário.
Enquanto no IL as regras eram aplicadas somente às mensagens que chegavam à caixa postal do usuário, no OL, as regras são aplicáveis também às mensagens contidas nos folders e podem ser acionadas por diferentes condições, como por exemplo, &quot;todos os dias à meia noite».
Esta característica imprime maior flexibilidade à aplicação das regras, evitando a restrição de disparar as regras somente no recebimento da mensagem, e permitindo que diversas regras possam ser aplicadas à mesma mensagem em momentos diferentes, conforme às necessidades do usuário.
As regras seguem o mesmo padrão de especificação do IL, com a possibilidade adicional de incluir links nos campos, permitindo o aninhamento de condições, envolvendo múltiplos campos de diferentes tipos de mensagem.
ISCREEN é um sistema baseado em regras destinado à filtragem de mensagens textuais (semi-estruturadas) integrado a um sistema de automação de escritórios (Ois).
ISCREEN tem como proposta central, atuar como um assistente para os usuários do Ois, auxiliando nas tarefas de definição de regras, detecção de conflitos e verificação de inconsistência, durante o tratamento de mensagens.
O ISCREEN não utiliza nenhuma estruturação para as mensagens, além de aquela provida por os campos do cabeçalho.
Uma vez que não utiliza mensagens estruturadas em campos, a filtragem cognitiva restringe- se à localização de palavras-chave no conteúdo das mensagens, reduzindo a capacidade de expressão semântica das regras.
Entretanto, a filtragem social apresenta- se fortalecida por a associação de uma base de conhecimento corporativo ao sistema.
As mensagens não são associadas explicitamente a qualquer tipo ou classe pré-definidos do sistema ou definidos por o usuário.
Entretanto, é permitida a classificação das mensagens através de conjuntos de condições, possibilitando a caracterização de um conceito (ou atribuição de característica).
As regas são definidas em termos de condições e ações.
As condições são definidas com base em:
Pares de atributos e valores, classificação de mensagens e asserções.
Os pares atributos-valores especificam um nome de atributo reconhecido por o sistema e um conjunto de valores que podem estar associados a eles para que a condição seja satisfeita.
Um classificação representa um conjunto de condições associadas a um &quot;conceito «para utilização posterior em regras e/ ou novas classificações de Information Lens.
Assim como as classificações, as asserções são também definidas por o usuário, podendo ser ativadas ou desativadas quando conveniente.
As asserções permitem definir instruções de filtragem sob circunstâncias especiais.
A figura 2.5, extraída de mostra uma regra que utiliza a asserção &quot;em férias «que especifica que num determinado período o usuário estará de férias.
As asserções podem ainda utilizar variáveis, possibilitando o mapeamento de seus valores no momento de recebimento da mensagem.
A associação de valor é feita através da associação do valor que possui o atributo especificado na mensagem.
Em o exemplo da figura 2.5 a variável X irá assumir o valor do atributo from que satisfizer a condição (o endereço do gerente ou de John Doe).
As ações das regras são definidas sobre a própria mensagem recebida, ou sobre outra mensagem especificada (como por exemplo, uma mensagem padrão de resposta).
A consulta à mensagens recebidas, pode ser feita através da verificação do conteúdo da caixa postal, ou da verificação do conteúdo de folders, aos quais as mensagens são adicionadas através da operação file.
O conjunto de ações disponíveis para execução é dependente do Ois ao qual o ISCREEN está associado.
Estas ações podem incluir operações como send, forward, file, etc..
The purpouse ofthis rule is te o:
Tapestry é um sistema projetado para receber, filtrar, armazenar e visualizar documentos -- incluindo mensagens de correio eletrônico -- e provê suporte à filtragem colaborativa.
O sistema armazena não só as mensagens, mas anotações sobre estas mensagens, feitas por diferentes usuários.
Assim, ao estabelecer um filtro, pode- se utilizar estas anotações além de os atributos convencionais das mensagens.
Uma característica interessante de Tapestry é o fato de que as mensagens recebidas são armazenadas num repositório central e indexadas por campos (e.
g to, date, sender, words), que podem ser referidos em consultas posteriores.
A filtragem de mensagens é feita através da execução &quot;batch «contínua de consultas estabelecidas por o usuário, cujo resultado é transferido para sua caixa postal privada.
O resultado de uma consulta é limitado a um conjunto de mensagens ou anotações que são transferidas para a caixa postal privada do usuário.
As mensagens à disposição do usuário em sua caixa postal privada podem ser submetidas a um segundo nível de filtragem através de funções de priorização e classificação distintas das funções de seleção providas por a linguagem de consulta.
NOT EXISTS (mreply:
A classificação de mensagens é feita através do uso de folders e a linguagem de consulta, chamada TQL (Tapestry Query Language), é similar ao cálculo de predicado de primeira ordem.
TQL combina fórmulas atômicas com operadores lógicos, permitindo o uso de variáveis livres quantificadas.
TQL possui ainda o operador LIKE que possibilita o uso de &quot;string matching «nas consultas sobre campos alfanuméricos.
A linguagem atua sobre os campos definidos para uma mensagem, incluindo o campo words que armazena o conteúdo da mesma.
TQL não é dirigida ao usuário final, mas, segundo, também poderia ser utilizada desta maneira.
Um exemplo de consulta em TQL, extraído de, pode ser visto na figura 2.6, ilustrando a seguinte consulta ad-hoc:
&quot;Mostre as mensagens que são notificações de erro, que já possuem mais de duas semanas e que ainda não foram respondidas».
Procmail é uma ferramenta de correio eletrônico, que entre outras funções permite a filtragem, o processamento automático de mensagens, execução de programas vinculada ao recebimento de mensagens.
Ao contrário de os exemplos anteriores, Procmail não se constitui de um sistema completo de correio eletrônico, provido de todas as funções necessárias para o envio e recebimento de mensagens.
Procmail é uma ferramenta que pode ser associada a qualquer sistema de correio eletrônico que processe mensagens no padrão utilizado na Internet para o provimento das facilidades de filtragem e processamento automático.
Procmail atua diretamente sobre a caixa postal do usuário provendo recursos para filtragem e processamento.
Filtragem social, cognitiva e econômica, associadas ao processamento automático de mensagens, podem ser estabelecidas através da implementação de scripts que são acionados por o recebimento de mensagens novas.
A linguagem de definição dos scripts, que atuam como regras é bastante poderosa, permitindo a integração de recursos do sistema operacional para o processamento das mensagens, o que lhe confere uma grande flexibilidade.
Entretanto, esta linguagem é pouco amigável e provê poucos recursos para a recuperação de textos.
A figura 2.7 ilustra a definição de uma regra que determina que &quot;toda a mensagem recebida de Peter sobre compiladores deve ser transferida para William, mantendo- se cópia no folder petcompil».
A classificação de mensagens é feita através do uso de folders convencionais (petcompil na figura 2.7) ou através de diretórios contendo uma mensagem por arquivo.
Uma vez movidas para os folders, as mensagens não sofrem mais a ação dos filtros.
Tomando por base as necessidades dos usuários arquivadores quanto a a recursos para o tratamento de information overload decorrentes do uso de correio eletrônico como ferramenta de gerência de informação, a figura 2.8 mostra uma análise comparativa das características dos sistemas e ferramentas descritos na seção 2.2 em relação a os mecanismos para tratamento de information overload descritos na seção 2.1.
Analisando- se os dados reunidos no quadro-resumo resultante, observa- se a deficiência de mecanismos que garantam a consistência na classificação de mensagens, bem como de mecanismos para a recuperação que permitam o acesso direto à informação, de forma independente das unidades de armazenamento adotadas.
Com base nesta análise, foi constatado que as soluções disponíveis, não cobrem completamente as necessidades dos usuário arquivadores para classificar e recuperar informações em grandes volumes de mensagens semi-estruturadas, o que motivou a sugestão de uma abordagem complementar, descrita no capítulo 3.
Os mecanismos de recuperação e classificação propostos neste trabalho têm por objetivo atender às necessidades daqueles usuários que utilizam o correio eletrônico como ferramenta para gerenciamento de informações, i.
e, usuários arquivadores.
O posicionamento destes usuários diante de o acúmulo de mensagens na caixa postal é bastante contraditório, uma vez que precisam do acesso a grandes volumes de informações, e entretanto, este mesmo volume dificulta o acesso efetivo a tais informações.
De acordo com, arquivadores são indivíduos que:
Aumentam a taxa de recebimento de mensagens subscrevendo- se voluntariamente à listas de distribuição de mensagens;
Salvam grande parte de suas mensagens;
Mantêm um grande número de folders;
Tendem a ler todas as mensagens recebidas, ou ao menos tentam fazer- lo;
Têm dificuldade em encontrar mensagens que foram armazenadas.
Assim, as principais necessidades destes usuários para o tratamento de information overload, não residem em diminuir o volume de mensagens recebidas, mas sim em classificar e armazenar as informações recebidas de forma que possam rápida e facilmente recuperar- las quando necessário.
Tais usuários não têm interesse nas mensagens em si, mas nas informações que podem ser extraídas de seu conteúdo e dos campos do cabeçalho.
Desta forma, precisam de ferramentas com recursos mais ricos e mais eficientes para a recuperação de informações.
Os problemas relativos à classificação de mensagens, apresentados na seção classificação mais flexível e ao mesmo tempo consistente.
Em esta necessidade é evidenciada por o caracterização do aspecto dinâmico presente nos interesses dos usuários, que podem alterar- se com o passar do tempo em decorrência de novas atividades ou mesmo devido a a evolução de seu conhecimento.
Fundamentados nas necessidades acima descritas e na evidente potencialidade do uso de mensagens eletrônicas como rica fonte de informação, os mecanismos aqui propostos têm como idéia básica a mudança do enfoque normalmente utilizado na filtragem, classificação e recuperação de mensagens.
Como foi visto no capítulo 2, os sistemas e ferramentas existentes têm seu enfoque centrado em combater a ocorrência de information overload reduzindo o volume de mensagens na caixa postal, através de facilidades que permitem ao usuário (nesta ordem):
Filtrar mensagens através da utilização de regras que efetuarão a seleção de mensagens conforme os diferentes critérios estabelecidos;
Descartar as mensagens inúteis, mover as mensagens selecionadas para os respectivos folders, ou submeter- las a qualquer outro tipo de processamento como por exemplo transferência ou resposta automáticas;
Inspecionar o conteúdo dos folders em busca de mensagens previamente classificadas e posteriormente inspecionar o conteúdo das mensagens em busca das informações desejadas, uma vez que os filtros normalmente não atuam sobre os conteúdos dos folders, salvo exceções como Os mecanismos aqui propostos, ao invés de combaterem o acúmulo de mensagens pretendem tratar os efeitos decorrentes deste acúmulo, através de recursos para a gerência de grandes volumes de mensagens, implementando facilidades para classificação e recuperação de informações que permitem:&amp;&amp;&amp;
Classificar mensagens sob múltiplas perspectivas, sem que para isto seja necessária a duplicação das mensagens;
Garantir a consistência entre os propósitos de classificação definidos para os folders e as mensagens a eles associadas;
Redefinir os propósitos de classificação estabelecidos para os folders, sem que para isto seja necessário remanejar as mensagens a eles associadas;
Recuperar as mensagens independente de qualquer estrutura de classificação adotada por o usuário;
Ou seja, recuperar mensagens da caixa postal ou de quaisquer folders a que tenham sido associadas, de forma totalmente transparente ao usuário;
Recuperar não só as mensagens, mas também folders e informações sobre estes, de forma flexível, com base em atributos das mensagens (cabeçalho e conteúdo), em atributos dos folders (e.
g quantidade de mensagens, data de criação) ou combinações entre estes, propiciando o uso do correio eletrônico como um efetivo sistema de informações;
Para suportar estas facilidades, o mecanismo de recuperação foi desenvolvido com base nas técnicas utilizadas por sistemas de recuperação de textos (Text Retrieval Systems), permitindo a recuperação de informações semi-estruturadas com eficiência e de forma independente dos esquemas de classificação estabelecidos por o usuário.
Já o mecanismo de classificação foi desenvolvido com base no conceito de folder virtual, que permite a associação lógica entre mensagens e folders, para imprimir maior flexibilidade na classificação e recuperação de mensagens.
Ambos os mecanismos estão sendo propostos em complementação às funções básicas de manipulação de mensagens, tais como enviar, receber, transferir, etc., providos por um sistema de correio eletrônico já existente.
As seções a seguir apresentam, respectivamente, os principais conceitos utilizados no desenvolvimento dos mecanismos propostos, o modelo de dados adotado, o mecanismo de recuperação, e o mecanismo de classificação.
Os desenvolvimento dos mecanismos aqui propostos foi estruturado basicamente sobre os conceitos de mensagem e folder virtual.
As mensagens, para os mecanismos de classificação e recuperação, representam a unidades lógicas de informação.
Cada mensagem é tratada como um documento independente com formato semi-estruturado, conforme descrito na seção 2.1.2.2.
A opção de uso do padrão definido por o, justifica- se na intenção de melhor compatibilizar mensagens provenientes de diferentes fontes, uma vez que esta é uma característica marcante, quando considera- se o uso de correio eletrônico como fonte de informação.
A adoção de um formato padrão, permite um tratamento homogêneo de todos os formatos de mensagens, possibilitando, no futuro, o tratamento de formatos específicos como derivações do formato genérico.
Para este trabalho, portanto, uma mensagem eletrônica possui formato semi-estruturado e é constituída de duas partes:
Cabeçalho (parte estruturada) e Conteúdo (parte não-estruturada) O folder, como nas demais propostas, é a estrutura utilizada por um usuário para a classificação de mensagens.
Entretanto, o folder aqui não foi implementado como uma unidade física de armazenamento de mensagens.
As mensagens são associadas de forma lógica aos folders, o que permite uma maior flexibilidade na classificação, evitando que uma mesma mensagem tenha que ser copiada para vários folders por atender a mais de um critério de classificação, e facilitando também procedimentos de reclassificação de mensagens.
Pode- se dizer que os folders são estruturas virtuais.
Assim, o usuário pode definir quantos folders forem convenientes para a organização de suas mensagens sem que haja prejuízo em relação a o espaço de armazenamento.
Foram definidas três tipos de folders virtuais:
Manuais, automáticos e do sistema.
Utilizando- se os folders manuais, a classificação é feita através de manipulação direta por o usuário, ficando implícita a definição e manutenção dos critérios estabelecidos.
Utilizandose os folders automáticos, a classificação das mensagens é feita através de uma expressão de recuperação, ficando explícita a definição e manutenção dos critérios.
Os folders do sistema são utilizados para o gerenciamento de mensagens, sendo sua manipulação feita exclusivamente por os procedimentos de controle do sistema.
Além de os folders virtuais, um folder físico foi definido para o gerenciamento de mensagens descartadas.
Este folder físico, tem como objetivo específico prover facilidades de recuperação (undelete) das mensagens descartadas quando isto for necessário ou conveniente ao usuário.
Um folder manual representa um conjunto de mensagens.
De o ponto de vista do usuário, este tipo de folder segue a mesma filosofia dos folders convencionais, descrita na seção 2.1.2.1, deixando ao encargo do mesmo o controle dos critérios e procedimentos de classificação.
Ou seja, as mensagens são atribuídas_ a os/ removidas_ de os (desclassificadas) folders manuais através da aplicação explícita de funções de classificação de mensagens.
Isto permite que qualquer mensagem possa participar de um determinado conjunto, conforme as necessidades do usuário, ficando, contudo, a manutenção da consistência deste tipo de folder ao encargo do usuário.
Um folder automático representa um conjunto de mensagens que atendem a critérios específicos num dado momento.
Os folders automáticos são especificados através de um nome e uma expressão de recuperação de mensagens.
Esta expressão é aplicada sempre que o usuário deseja recuperar as mensagens representadas por este folder.
Esta abordagem garante a consistência entre os critérios de classificação de um folder e o conjunto de mensagens a ele associado.
Para garantir esta integridade, não é permitido atribuir ou remover mensagens a/ de folders automáticos.
Os folders do sistema são estruturas cujos critérios de classificação são determinados e mantidos por o sistema.
Um conjunto mínimo de folders do sistema foi definido neste trabalho com base naqueles normalmente providos por os sistemas e ferramentas de correio eletrônico.
São eles:
NEW -- Mensagens recebidas por o usuário e ainda não lidas OLD -- Mensagens já lidas REPLY -- Mensagens recebidas em resposta a mensagens enviadas respondidas Mensagens recebidas que já foram Cada mensagem é classificada segundo pelo menos um dos folders do sistema (NEW ou OLD), podendo ser classificada segundo mais de um de eles (e.
g REPLY, OLD).
Os folders definidos constituem apenas um conjunto inicial, que pode ser estendido no futuro para prover mais facilidades ao usuário, como por exemplo, today, from_ listserver, entre outros.
Para representar os principais conceitos utilizados por o mecanismos propostos, foi adotado um modelo de dados orientado a objetos baseado na sintaxe do modelo O2.
A escolha de um modelo de dados orientado a objetos foi motivada por as facilidades oferecidas para representar:
Atributos multivalorados, necessários para a caracterização das propriedades de mensagens e folders;
Propriedades opcionais, presentes nos descritores das mensagens;
Objetos complexos, necessários para melhor representar a associação entre mensagens e folders;
Comportamento associado a classes de objetos, permitindo uma melhor especificação de funcionalidades, tanto para mensagens como para folders;
Modelos de dados orientados a objetos provêm ainda recursos adicionais, bastante convenientes, como a abstração de dados, herança de O modelo de dados utilizado para o desenvolvimento dos mecanismos foi definido sobre três classes de objetos:
Mensagens, &quot;Lixeira «(Folder DISCARDED), e Folders Virtuais cujas interfaces públicas encontram- se descritas na figura 3.1.;
As mensagens são modeladas através da classe MSG que é caracterizada por os campos padrões definidos no e por as operações aplicadas com maior freqüência sobre mensagens de correio eletrônico, como por exemplo, enviar, descartar, responder, etc..
A &quot;lixeira «é modelada através da classe DISCARDED que representa o folder físico para gerência da remoção lógica de mensagens.
Este classe abriga as mensagens eliminadas por o usuário, provendo como operações apenas a remoção física destas mensagens ou sua reintegração à caixa posta do usuário.
Os folder virtuais são modelados através da classe FLD que captura as propriedades comuns aos diferentes tipos de folders definidos na seção dispõe de um nome, uma data de criação, um conjunto de operações para seu gerenciamento (e.
g create, remove, rename), e a operação msgs_ in que recupera o conjunto de mensagens associadas ao folder no momento de sua aplicação.
Entretanto, por possuírem características funcionais distintas, cada um dos diferentes tipos -- manual, automático e do sistema -- é modelado através de subclasses definidas para a classe FLD.
A subclasse que representa os folders do sistema é ainda especializada em outras subclasses, estabelecendo- se assim uma hierarquia de especializações, como ilustra a figura 3.2.
Desta forma, os folder manuais, automáticos e do sistema, são representados, respectivamente, por a extensão das subclasses MAN_ FLD, AUT_ FLD e SYS_ FLD, cujas interfaces encontram- se ilustradas nas figuras 3.3, 3.4 e 3.5.
Em a subclasse MAN_ FLD as propriedades herdadas da classe FLD são adicionadas do atributo MSGS -- que representa o conjunto de mensagens associadas aos folders manuais -- e das operações classify e unclassify que permitem a associação e a dissociação de mensagens a eles (classificação manual).
Para esta subclasse, a operação MSGS_ IN é sobrescrita, de forma que sua implementação retorna o valor do atributo Class MAN_ FLD inherit FLD type (msgs:
Set (MSG)) unclassify (msgs:
Set (MSG)), create (Name:
String). Em a subclasse AUT_ FLD as propriedades herdades de FLD são adicionadas do atributo EXPRESSION -- onde é armazenada a expressão de consulta que representa o conjunto de mensagens associadas aos folders automáticos -- e da operação Set-EXPRESSION que permite a definição e/ ou alteração da expressão de consulta.
A operação MSGS_ IN é sobrescrita, de forma que sua implementação dispara a expressão de consulta armazenada no atributo EXPRESSION, retornando, assim, o conjunto de mensagens que atendem aos critérios definidos para o folder naquele momento.
A subclasse SYS_ FLD também estende as propriedades da classe FLD através da adição de um atributo MSGS -- que representa o conjunto de mensagens associadas aos folders do sistema -- e da adição de operações para associação e dissociação de mensagens, que são sobrescritas para cada uma das especializações da subclasse SYS_ FLD, de acordo com o propósito definido para cada uma de elas.
Esta operações não devem estar disponíveis aos usuários, mas apenas disponíveis como funções de controle internas ao sistema.
Class SYS_ FLD inherit FLD type (msgs:
Set (MSG)) sys_ unclassify (msgs:
Set (MSG)), with extension end method body set_ expression (exp:
String) in class AUT_ FLD AUT_ FLD f f..
Expression $= exp;
Observe- se que a modelagem dos folders através da classe FLD e suas subclasses permite um tratamento homogêneo para folders manuais, automáticos e do sistema, baseado no uso de ligação dinâmica (dynamic binding) para a seleção das implementações apropriadas para as operações, de acordo com o tipo de folder em questão.
Este tratamento homogêneo irá imprimir uma maior expressividade e flexibilidade aos mecanismos de recuperação e classificação, como será visto nas seções posteriores.
O mecanismo de recuperação aqui proposto tem como principais objetivos minimizar as dificuldades de localização e recuperação de mensagens anteriormente destacadas na seção 2.1.2.1;
E ampliar as facilidades de recuperação providas por as ferramentas de correio eletrônico para informações de qualquer natureza.
Como foi visto na seção referida anteriormente, grande parte das dificuldades dos usuários origina- se da forma por a qual as mensagens são armazenadas ou classificadas;
Por a presença de um grande volume dessas;
Como também por a dificuldade de expressão semântica nas consultas devido a diversidade de assuntos e o caráter não-estruturado dos conteúdos.
Considerando- se os objetivos expostos, consonantes com as necessidades dos usuários arquivadores, o desenvolvimento do mecanismo de recuperação foi inspirado nas facilidades de:
Localização e recuperação de informações apresentadas por sistemas baseados em Full Text Information Retrieval (Ir), como por exemplo a localização de documentos através da comparação de strings, padrões aproximados, freqüência de ocorrência, uso de sinônimos, etc.;
Consulta providas por as linguagens de consulta de sistemas de banco de dados que provêm recursos de recuperação adequados à manipulação de informações semanticamente estruturadas.
A associação destas facilidades visa:
Suportar a localização de mensagens com base em informações presentes nos cabeçalhos, conteúdos ou ainda na sua forma de classificação, sem a necessidade de inspeção do conteúdo dos folder (semelhantes àquelas providas por sistemas baseados em Ir);
Oferecer a possibilidade de definição de consultas ad-hoc para a recuperação de diferentes objetos (folders e mensagens), bem como de atributos de estes (informações sobre folders e/ ou sobre mensagens) com base na qualificação e/ ou comparação entre estas informações (como nas consultas providas por linguagens de consulta em banco de dados).
Para tanto, foi desenvolvida uma linguagem de consulta tomando como base as características estabelecidas para a linguagem O2SQL devido a o seu poder de expressão e a sua compatibilidade com o modelo definido para os mecanismos.
A possibilidade de utilização de O2SQL como linguagem de consulta foi inicialmente considerada, mas devido a sua ampla generalidade esta possibilidade foi rapidamente descartada.
A intenção principal do mecanismo de recuperação é prover uma linguagem de consulta de propósito específico, com sintaxe bastante simplificada, que possa ser facilmente mapeada a partir de comandos de uma interface gráfica apropriada onde o usuário poderia descrever sua consultas (seguindo, por exemplo, uma filosofia &quot;mail by example&quot;).
Além de isto, a linguagem a ser utilizada deve incorporar as facilidades de Ir.
Para tanto, às estruturas básicas de O2SQL foram adaptados construtores específicos para a qualificação de folders e mensagens, bem como um conjunto inicial de operadores para prover facilidades de Ir.
A figura 3.6 mostra a sintaxe definida para a linguagem, usando BNF, através de a qual são descritas as consultas.
Cabe destacar, que esta linguagem não foi desenvolvida com o intuito de atender diretamente às necessidades do usuário final, sendo necessário para isto sua integração com uma interface adequada.
Entretanto, sua similaridade com linguagens de bancos de dados convencionais, leva a crer que poderia ser utilizada diretamente por usuários com alguma experiência na definição de consultas em bancos de dados.
Uma suposição similar é feita em que provê uma linguagem de consulta baseada em cálculo de primeira ordem, porém limitada à seleção de mensagens.
As consultas podem ser compostas através da utilização de operadores de conjuntos sobre consultas atômicas, respeitando- se a compatibilidade entre tipos resultantes.
Uma consulta atômica é estruturada em quatro cláusulas básicas, descritas a seguir.
A os resultados de consultas podem ser atribuídos identificadores (consulta nominada), permitindo sua posterior utilização em outras consultas, provendo desta maneira uma estratégia de consulta baseada em sucessivos refinamentos SELECT:
Em a cláusula SELECT é especificado o tipo de resultado devolvido por a consulta.
O resultado de uma consulta pode ser um conjunto de mensagens (msglist), um conjunto de folders (folderlist), uma lista de atributos de mensagens e/ ou atributos de folders (infolist).
Msglist e folderlist são respectivamente conjuntos de identificadores internos de mensagens e folders (surrogate).
A visualização deste resultado não é tratada neste trabalho.
From Folder:
Permite ao usuário especificar quais entre os folders existentes serão considerados no processamento da consulta (flds).
O conjunto padrão a ser considerado, caso nenhum outro seja informado, são todos os folders existentes (extensão da classe FLD).
Restrições podem ser feitas especificando- se subclasses da Classe FLD (MAN_ FLD, AUT_ FLD, SYS_ FLD, e suas subclasses) ou folders selecionados por uma consulta nominada prévia (folderlist).
Opcionalmente, restrições adicionais podem ser estabelecidas sobre o conjunto de folders especificado através do uso de condições de seleção aplicando- se operadores relacionais, lógicos ou de texto sobre seus atributos (Sub-cláusula WITH).
Esta cláusula é opcional, sendo necessária apenas quando são desejadas informações sobre folders, com base em atributos de folders, ou ainda, quando deseja- se estabelecer condições adicionais através do uso da cláusula WHERE descrita a seguir.
From MESSAGE:
Permite ao usuário especificar o conjunto de mensagens a ser considerado no processamento da consulta (msgs).
O conjunto padrão a ser considerado são todas as mensagens existentes (extensão da classe MSG).
Este conjunto pode ser especificado de duas maneiras:
Ou, usando apenas as mensagens associadas aos folders definidos na cláusula From Folder especificadas por o uso da expressão f..
Msgs_ in;
Ou, usando- se um conjunto de mensagens obtido numa consulta prévia (msglist).
Assim como no caso de os folders, o conjunto resultante de mensagens também pode ser restringido através do uso de condições de seleção.
Esta cláusula é também opcional, sendo necessária apenas quando deseja- se recuperar informações com base em informações sobre mensagens, ou quando deseja- se estabelecer condições adicionais através do uso da cláusula WHERE descrita logo a seguir.
Where: A cláusula WHERE pode ser utilizada quando deseja- se estabelecer condições de seleção comparando atributos de mensagens e atributos de folders.
As condições são especificadas através do uso de operadores relacionais, lógicos, de conjunto e para recuperação de textos.
A seguir, serão ilustradas as potencialidades da linguagem através de exemplos de utilização.
Exemplo 3.1:
Uma consulta Simples a) Quais as mensagens novas enviadas por John Smith?
SELECT m Usando a cláusula From Folder a consulta fica restrita apenas ao folder do sistema NEW.
Restrições adicionais são feitas através da cláusula From Message.
A primeira de elas é feita através do uso da operação msgs_ in disponível para os objetos da classe FLD, que limita o conjunto de mensagens a ser utilizado apenas àquelas associadas ao folder NEW.
Adicionalmente, uma outra restrição é feita, através da seleção das mensagens que possuem o string` john smith' no campo From do cabeçalho.
Exemplo 3.2:
Uso de sinônimos b) Quais as mensagens classificadas no folder manual` call for papers' falam sobre inteligência artificial e foram recebidas antes de 10/03/96?
SELECT m m..
Date 10/03/96 Se artificial intelligence, Ai, art..
Intel., A. I., I. A, etc., forem definidos como sinônimos para inteligência artificial, a condição expressa por o uso do operador HAS irá selecionar todas as mensagens onde pelo menos um dos sinônimos definidos aparece no conteúdo.
Observe- se que neste exemplo todas as mensagens existentes são consideradas, uma vez que nenhuma restrição foi estabelecida (especificação da classe MSG na cláusula From Message).
Vale observar também, que a cláusula From Folder também não foi utilizada, uma vez que não desejava- se utilizar informações de folders como referência para a consulta.
Exemplo 3.3:
Consulta Incremental c) Quais as mensagens enviadas por` John Smith' que ainda não foram respondidas?
J_ TOREPLY: $=
SELECT m WHERE m f..
Msgs_ in Esta consulta seleciona de entre todas as mensagens existentes (extensão da classe MSG), aquelas foram enviadas por` John Smith' e depois faz uma restrição adicional, selecionando apenas aquelas que não pertencem ao conjunto de mensagens associadas ao folder do sistema ANSWERED (restrição estabelecida através do uso conjunto da cláusula From Folder e da Cláusula WHERE).
O resultado desta consulta será utilizado na definição da consulta a seguir.
Quais as mensagens importantes enviadas por` John Smith' que ainda não foram respondidas?
SELECT m WHERE m f..
Msgs_ in Observe- se que nesta consulta são comparadas as mensagens obtidas na consulta anterior, com o conjunto de mensagens associadas ao folders automático de nome important.
Esta mesma consulta poderia ser expressa através de uma expressão composta de expressões simples, utilizando- se os operadores de conjunto, como pode ser visto a seguir:
SELECT m SELECT m e) «Onde está a mensagem que recebi de John em a qual ele falava sobre os preços do sistema?
Eu lembro que a movi para um folder com o mesmo SELECT m and m..
From HAS 'John' WHERE m..
Subject $= f..
Name Este exemplo ilustra uma situação bastante comum na utilização de correio eletrônico, que mostra o quão real é a necessidade do usuário contar com uma linguagem flexível para capturar adequadamente o significado de uma consulta, permitindo a modelagem semântica de acordo com suas necessidades e/ ou as informações que possui para poder chegar a um resultado satisfatório.
Note- se a utilização de busca por prefixo, que permite a localização de mensagens onde existam palavras iniciadas por` sys' ou ainda com a descrição de valores (palavras iniciadas com &quot;).
A possibilidade de recuperar informações através de comparações entre atributos do folder e atributos das mensagens imprime também uma maior flexibilidade ao mecanismo Como foi citado anteriormente, o mecanismo aqui proposto provê, não apenas a localização de mensagens, mas também de folders e de informações.
Estas facilidades podem ser utilizadas em auxílio à localização de mensagens;
Como etapas intermediárias para a filtragem de informações (sem que para obter- las seja necessário recuperar toda a mensagem);
Extração de informações.
Exemplo 3.5:
Recuperando Folders f) Quais são os folders que possuem mais de 500 mensagens?
SELECT f A estrutura da consulta neste exemplo, é bastante similar às consultas anteriores, diferenciando- se apenas por o fato de que é especificado o retorno de um conjunto de folders na cláusula SELECT.
Observe- se que apesar de não estarem presentes neste exemplo, as cláusulas From MESSAGE e WHERE poderiam ser utilizadas para selecionar folders com base em informações das mensagens a ele associadas, como mostra o exemplo a seguir;
Porém, recuperando informações de folders e mensagens.
Exemplo Informações sobre mensagens folders g) Quais os nomes dos folders manuais que contêm mais de 50 mensagens com pelo menos uma mensagem recebida hoje?
SELECT f..
Name WITH f..
Msg_ count\&gt; 50 WITH m..
Date $= hoje h) Quem enviou hoje mensagens que ainda não foram lidas?
SELECT m..
From Assim como as consultas que resultam em listas de mensagens ou listas de folders, o resultado desta consulta também pode ser armazenado para uso em consultas mais complexas, onde a presença de set_ value é permitida.
Quando John Smith enviou mensagens importantes e quais eram os subjects destas mensagens?
SELECT TUPLE (m..
Date, m..
Subject) Esta última consulta exemplifica o uso do construtor de tuplas, o qual permite a associação entre diferentes informações, sejam elas provenientes de folders e/ ou mensagens.
Entretanto, por possibilitar a criação de tipos complexos estranhos aos tipos estabelecidos no modelo de dados, resultados construídos por o construtor tuple não podem ser reutilizados em consultas posteriores.
Através dos exemplos anteriores, procurou- se ilustrar a flexibilidade e a alta expressividade da linguagem de consulta definida, que agrega:
Características das linguagens de bancos de dados convencionais (através de recursos de seleção e projeção de atributos);
Características de linguagens de consulta para recuperação de textos indexados (através do uso de sinônimos, prefixos e do operador de busca HAS);
Operadores para o tratamento de objetos multivalorados(,,, msg_ in, etc.).
Esta associação de características visa explorar ao máximo o potencial de mensagens semi-estruturadas como fonte rica de informação atualizada.
Além de prover recursos eficientes para a recuperação de mensagens, a linguagem definida pode também ser utilizadas para a definição de folders automáticos como será visto na seção seguinte.
A possibilidade de recuperação de listas de mensagens e/ ou folders permite dizer que a linguagem de consulta pode ser também utilizada para a definição de regras, com vistas a o processamento automático desses objetos, embora este tema não tenha sido abordado neste trabalho.
O principal objetivo do mecanismo de classificação é oferecer flexibilidade, consistência e facilidade de organização das mensagens em folders, o que conseqüentemente beneficiará o processo de recuperação de mensagens.
O mecanismo de classificação está baseado no conceito de folders virtuais previamente descrito na seção 3.2.2.
A associação lógica de mensagens aos folders apresenta várias vantagens para o processo de classificação, solucionando os problemas apresentados na seção 2.1.2.1 decorrentes da utilização dos folders como unidades armazenamento.
De entre as vantagens, pode- se destacar:
A possibilidade de associar uma mesma mensagem a diversos folders, estabelecendo assim múltiplas perspectivas de classificação, sem que para isto seja necessária a duplicação da mensagem;
A possibilidade de localização de mensagens sem que seja necessária a inspeção do conteúdo de diferentes folders, quando a forma de classificação original é desconhecida;
O uso de folders automáticos oferece vantagens adicionais.
Em particular, a manutenção da consistência entre os critérios de classificação estabelecidos para o folder e as mensagens associadas a ele, uma vez que para estes folders as mensagens são associadas dinamicamente.
A associação dinâmica é feita através da execução de uma expressão de consulta definida para cada folder, disparada somente no momento em que se deseja manipular (ou examinar) o conteúdo deste.
Esta consulta devolve o conjunto de mensagens que atende aos critérios especificados naquele dado momento.
Outra vantagem no uso de folders automáticos é a possibilidade de alteração da estrutura de classificação de mensagens apenas através da alteração das expressões de consulta que definem estes folders.
Estas vantagens mostram que a abordagem de classificação aqui proposta pode ser mais poderosa do que o uso de regras para classificação automática de mensagens onde a consistência não é mantida automaticamente e a restruturação não é suportada.
Embora o uso de folders automáticos ofereça poderosos recursos para a classificação de mensagens, existem situações em que se torna inviável ou indesejável explicitar os critérios de classificação, como foi visto na seção 2.1.2.1.
Portanto, para atender este tipo de situação, faz- se necessário o uso de estruturas que possibilitem a classificação arbitrária de mensagens (como ocorre no processo convencional de classificação manual de mensagens).
O uso de folders manuais provê esta mesma flexibilidade de classificação oferecida por os folders convencionais.
Entretanto, esta flexibilidade é acompanhada por as vantagens oferecidas por a associação lógica de mensagens ressaltadas anteriormente.
Com o uso de folders manuais, mensagens podem ser agrupadas através de critérios subjetivos, podendo ser explicitamente associadas/ dissociadas destes folders.
Além de isto, as propriedades de diferentes tipos de folders podem ser combinadas entre si, uma vez que um folder automático pode ser definido com base no conteúdo de outros manuais, assim como um folder manual pode ser criado a partir de o conteúdo de um folder automático.
As funcionalidades oferecidas por o mecanismo de classificação foram modeladas através dos métodos definidos para a classe FLD e suas subclasses, e visam atender a basicamente dois propósitos:
Gerenciamento da estrutura de classificação, e b) classificação manual de mensagens.
A estrutura de classificação é aqui considerada como o conjunto de todos os folders manuais e automáticos e do sistema existentes num dados momento, representada por a extensão da classe FLD.
Um conjunto de métodos foi definido para que o usuário possa gerenciar apropriadamente esta estrutura através da criação, alteração (e.
g rename, set_ expression) e remoção (remove, remove&amp; discard) de folder manuais e automáticos.
Estas operações também se aplicam aos folders do sistema, entretanto, só podem ser disparadas por procedimentos sob controle do próprio sistema.
Observe- se que o uso de uma classe genérica permite um tratamento homogêneo para folders manuais e automáticos por parte de o usuário, salvo para a aplicação de funcionalidades específicas de cada subclasse.
Para melhor destacar as potencialidades das funcionalidades definidas para a gerência da estrutura de classificação serão exemplificadas, a seguir, a criação, alteração e a remoção de folders.
Folders manuais e automáticos são criados através do uso da operação create, a qual foi definida com argumentos distintos nas classes MAN_ FLD e AUT_ FLD.
Para a criação de folders manuais basta a definição de um nome para o mesmo.
Para a criação de um folder automático deve ser informada adicionalmente a expressão de consulta que estabelece os critérios de classificação.
O exemplo 3.7, a seguir, ilustra a criação de um folder manual e de um folder automático.
Exemplo 3.7:
Criando folders manuais e automáticos a) MAN_ FLD.
Create(` urgente') Este exemplo mostra a simples criação de um folder manual que recebeu o nome` urgente'.
AUT_ FLD.
Create(` conferência', SELECT m WITH m..
Text HAS` conferência') Este exemplo ilustra a criação de um folder automático que recebeu o nome` conferência 'e reúne mensagens que possuem a palavra` conferência' em seu conteúdo.
Embora os folders manuais e automáticos sejam definidos de maneira distinta e abordem a classificação de mensagens seja feita sob aspectos diferentes (dinamicamente nos folders automáticos e estaticamente nos folders manuais), através do modelo de dados e da linguagem de consulta é possível estabelecer um tratamento homogêneo para ambos, bem como sua fácil integração.
Em o exemplo 3.8 é mostrado como um folder automático pode ser definido com base em outros folders, sejam eles automáticos, manuais ou do sistema.
Exemplo 3.8:
Criando folders automáticos a partir de outros folders AUT_ FLD.
Create(` importante_ esta_ semana', SELECT m Em este exemplo, o folder automático` importante_ esta_ semana 'é criado com a definição de uma expressão de consulta que reúne todas as mensagens classificadas manualmente como` urgente' até o momento da consulta a este folder e também todas aquelas classificadas automaticamente como` conferência'.
A remoção de folders pode ser feita em duas modalidades:
Sem a remoção das mensagens associadas (método remove da classe FLD);
Ou com a remoção das mensagens associadas (método remove&amp; discard da classe FLD).
Em o primeiro caso, apenas o folder (manual ou automático) é eliminado, e as mensagens a ele ora associadas permanecem no sistema, mantendo os links existentes com os demais folders.
Portanto, a eliminação de folders através da operação remove não implica na remoção de mensagens, apenas a sua dissociação do folder a ser removido.
Em o segundo caso, a eliminação do folder é acompanhada da remoção das mensagens por ele representadas.
Entretanto, aquelas mensagens associadas ao folder a ser removido, que tenham sido classificadas manualmente em outros folders, não serão eliminadas, mantendo os vínculos originais com estes.
Folders do sistema não permitem alterações por parte de o usuário, ficando este tipo de alteração ao exclusivo encargo do sistema.
Já os folders manuais e automáticos estão sujeitos à aplicação de operações com este fim, que podem atuar sobre sua definição ou sobre seu conteúdo.
O processo de alteração da definição de folders manuais ou automáticos, por parte de o usuário, pode ser efetuado homogeneamente através da aplicação da operação rename definida para a classe FLD, possibilitando a alteração do nome dos folders.
Já o processo de alteração do conteúdo (ou seja, do conjunto de mensagens associadas) é distinto para folders manuais e do sistema.
A alteração de conteúdo de um folder manual, deve ser feita explicitamente através da utilização dos métodos classify e unclassify, como será visto na seção 3.5.2.,
enquanto que a alteração de conteúdo dos folders automáticos é feita através da redefinição da expressão de consulta que define os critérios de classificação.
Assim, foi definida para classe AUT_ FLD a operação set_ expression, que permite a (re) definição da expressão de consulta que retorna o conjunto de mensagens associadas aos folder.
A utilização desta operação permite a restruturação da classificação de forma simples e consistente, em detrimento à tarefa manual de transferência das mensagens para uma nova estrutura, que é bastante trabalhosa e ainda sujeita a enganos.
O exemplo 3.9 ilustra o quão simples é redefinir a estrutura de classificação de acordo com novos interesses do usuário.
Exemplo 3.9:
Redefinindo um folder automático Considere- se a aplicação da operação set_ expression para o folder` importante_ esta_ semana' criado no exemplo 3.8: SELECT m Este exemplo mostra como é simples alterar a semântica associada a um folder automático, tornando desnecessário remanejar mensagens entre os folder envolvidos na alteração.
Depois desta alteração, sempre que o usuário fizer acesso ao conjunto de mensagens importantes para a semana, terá a sua disposição as mensagens de seu projeto e não mais aquelas pertencentes ao folder` conferência' como era conveniente na semana anterior.
Ainda em relação a a alteração de conteúdo de folders automáticos, vale lembrar que o conteúdo de um folder automático é também dinamicamente alterado sempre que houver alteração nos objetos da classe MSG.
Isto deve- se ao fato de que a remoção ou a chegada de novas mensagens pode provocar alterações no conjunto de mensagens que atendem aos requisitos especificados na expressão de consulta definida.
Cabe ressaltar que isto não implica em nenhum ônus, já que as consultas são resolvidas somente quando é solicitado o conteúdo do folder.
As operações para associação e dissociação manual de mensagens a/ de folders têm seu uso restrito apenas aos folders manuais.
Esta restrição foi adotada devido a garantia da manutenção da consistência suportada para os folders automáticos.
Assim, foram definidos os métodos classify e unclassify somente para a subclasse MAN_ FLD.
Embora à primeira vista possa parecer, esta restrição não reduz as potencialidades do mecanismo de classificação, uma vez que os folders automáticos podem ser definidos com base em folder manuais, como já foi ilustrado no exemplo 3.8.
Embora os métodos definidos para a subclasse MAN_ FLD não desfrute dos mesmos benefícios da subclasse AUT_ FLD apresentados no exemplo 3.9, a tarefa de restruturação é facilitada por a possibilidade de aliar os recursos de consulta aos métodos classify e unclassify.
Como ilustra o exemplo 3.10 a seguir, através dos recursos de recuperação e classificação manual pode- se estabelecer uma relação correlata àquela apresentada anteriormente no exemplo 3.8, uma vez que o resultado de consultas sobre o conteúdo de um folder automático ou do sistema pode ser associado a um identificador e depois utilizado na aplicação do método classify disponível para a classe FLD_ MAN.
Exemplo 3.10:
Criando folders manuais a partir de outros folders X: $=
SELECT m reply_ john_ 10/03.
Classify Em este exemplo, são explicitamente movidas para o folder manual reply_ john_ 10/03 aquelas mensagens recebidas de John Smith que já haviam sido respondidas naquele dia, criando assim uma visão estática das instâncias de MSG que satisfaziam a condição especificada no momento da consulta.
Ainda com relação a a classificação manual de mensagens é importante destacar a diferença conceitual assumida entre a dissociação de uma mensagem de um folder (método unclassify definido para a subclasse MAN_ FLD) e a eliminação desta mensagem (método discard definido para subclasse MSG).
Em o primeiro caso, as mensagens são dissociadas do folder manual para qual o método é aplicado.
Em o segundo caso, as mensagens são dissociadas de todos os folders aos quais encontram- se associadas e são movidas para o folder DISCARDED, onde permanecem até que sua remoção física seja determinada, ficando estas mensagens inacessíveis à qualquer expressão de consulta.
O principal propósito dos mecanismos descritos no capítulo 3 é prover recursos para um acesso fácil e rápido a todas as informações relacionadas com as mensagens.
Ou seja, conteúdos, descritores e estrutura de classificação.
Para garantir o acesso a todas esta informações de forma flexível e viável em termos de desempenho, a implementação dos mecanismos foi projetada usando como base técnicas de indexação e recuperação de documentos.
O uso de tais técnicas tem se destacado na recuperação de informações em grandes volumes de documentos (Information Retrieval -- Ir) (Baeza-Yates, 1992 a).
Em as seções a seguir, serão apresentados:
Aspectos relevantes no uso de técnicas de recuperação de informações, a arquitetura básica e os principais componentes definidos para a implementação dos mecanismos propostos.
Serão também abordadas as necessidades básicas para a integração dos mecanismos propostos, com sistemas de correio eletrônico.
A tarefa básica de um sistema de Ir é satisfazer as necessidades do usuário identificando de entre uma coleção de documentos quais destes contêm a informação desejada.
O processo de identificação pressupõe a localização de documentos com base em seu conteúdo.
Em esta seção, serão analisados os principais aspectos relacionados ao uso de técnicas de Ir, com o intuito de comprovar sua adequação no provimento de recursos para a localização de informações em mensagens de correio eletrônico com conteúdo não estruturado, consideradas neste trabalho.
De entre as diferentes técnicas utilizadas por sistemas de Ir, as técnicas que utilizam a indexação total dos documentos (Full Text Document Retrieval) tornaram- se uma solução bastante popular para o suporte de aplicações envolvendo buscas em textos on-line.
Sua principal vantagem reside no processo de consulta.
O processo de consulta é bastante simplificado, consistindo apenas em informar palavras ou seqüências de strings para que sejam verificadas sua existência nos textos, permitindo ao usuário definir um processamento semântico particular para os dados presentes nos textos armazenados através refinamentos feitos sobre os textos recuperados.
Diversos recursos de pesquisa são providos para auxiliar o processo de consulta, como por exemplo pesquisa por aproximação, pesquisa posicional, utilizando sinônimos por freqüência de ocorrência, entre outras.
Esta abordagem de consulta evita que sejam necessários os processos de indexação semântica bastante complicados dispendiosos Embora o processo de indexação total de documentos seja mais simples por não envolver aspectos semânticos, o custo de atualização dos índices é bastante elevado, uma vez que exige a re-indexação completa da base de pesquisa quando esta é alterada.
Quando a base de consulta de uma aplicação é estável (ou seja, quase não sofre modificações), como é o caso de enciclopédias, arquivos históricos, etc., o custo de indexação fica bastante diluído, pois esta operação é feita uma única vez e depois são efetuados muitos acessos.
Entretanto, quando a base de consulta de uma aplicação é constantemente atualizada, os índices precisam ser reconstruídos, implicando num custo de indexação muito alto, comprometendo assim o uso desta técnica para este tipo de aplicação.
Considerando- se aplicações como Correio Eletrônico, não é possível enquadrar- se a base de consultas em nenhum dos dois casos descritos no parágrafo anterior, uma vez que, embora o conjunto de mensagens seja alterado com freqüência, o conteúdo das mensagens recebidas permanece inalterado.
Para este tipo de aplicação, onde a base de consulta existente permanece inalterada, mas é constantemente acrescida de novos documentos, técnicas de indexação incremental têm sido amplamente utilizadas.
A indexação incremental provê a atualização dos índices, sem que seja necessária sua reconstrução total.
A reconstrução total dos índices é substituída por o uso de índices diferenciais que são gerados apenas para os documentos novos e depois anexados aos índices já existentes.
Desta forma, os custos de indexação são sensivelmente reduzidos.
Com base nas características acima expostas, observa- se que as técnicas utilizadas por sistemas de recuperação de informações baseados na indexação total dos documentos, mais particularmente aqueles baseados em técnicas de indexação incremental, mostram- se como recursos bastante adequados para a implementação das funcionalidades previstas para os mecanismos propostos neste trabalho.
Por este motivo, a implementação dos mecanismos de recuperação e classificação propostos, foi totalmente projetada com base na utilização de técnicas de Ir para textos totalmente indexados.
Para validar a adequação destas técnicas, um protótipo está sendo desenvolvido, utilizando- se uma biblioteca de funções para indexação total/ recuperação de textos, que permite a construção e a atualização de índices segundo a técnica incremental, bem como uma função de consulta.
Uma breve descrição das funções providas por esta biblioteca pode ser vista na seção componentes será discutida a partir de seção 4.2.
A biblioteca utilizada implementa as funções de criação, atualização e consulta de índices construídos sobre o conteúdo total de documentos, permitindo consultas por prefixos, com a utilização de sinônimos e por freqüência de ocorrência.
A biblioteca é composta de um conjunto de 4 funções.
São elas:
Inddir: Indexa todos os arquivos existentes num dado diretório especificado;
Reinddir: Efetua a indexação de todos os arquivos existentes num dado diretório, porém, considerando apenas as alterações existentes no diretório (criação, remoção ou alteração de arquivos) após a criação (ou atualização) do índice já existente, criando um índice diferencial.
Portanto, o índice gerado não faz referência aos arquivos que permaneceram inalterados;
Merge: Integra o índice original com o índice diferencial gerado por a função reinddir gerando um terceiro índice atualizado.
A integração dos índices pode ser feita em duas modalidades (update merging ou add merging).
Em o primeiro caso, os arquivos presentes no índice original, que não estiverem presentes no novo índice, não são incluídos no novo índice.
Em o segundo caso, serão incluídos no novo índice todos os arquivos presentes nos dois índices (original e diferencial), considerando- se as versões mais recentes.
Query: Efetua uma consulta sobre um determinado índice.
A consulta é efetuada informando- se o índice e a expressão de consulta.
As expressões de consulta permitem o uso de palavras, prefixos e combinações entre estes através do operador lógico Ou.
Uma palavra representa uma seqüência de caracteres sem separadores.
São considerados separadores todos os símbolos não declarados na tabela de símbolos.
O resultado de uma consulta é o conjunto de arquivos que apresentam ao menos uma vez a expressão definida e o número de vezes que a expressão aparece em cada arquivo.
A partir de estas funções, foram definidos as demais estruturas de implementação para o protótipo, uma vez que esta biblioteca dispõe dos recursos necessários para o provimento das funções básicas de indexação e recuperação segundo as características de sistemas de Ir.
A adoção desta biblioteca de funções, em específico, ocorreu devido a a sua pronta disponibilidade para utilização na implementação do protótipo.
Como foi mencionado anteriormente, os mecanismos aqui propostos não têm a intenção de constituírem- se numa solução completa para o tratamento de mensagens eletrônicas.
Os mecanismos descritos no capítulo 3, tem por objetivo complementar as funções básicas de um sistema de correio eletrônico no sentido de oferecer ao usuário facilidades para classificação e recuperação de informações.
Assim, a implementação dos mecanismos foi projetada de maneira que os elementos necessários ao seu funcionamento atuassem de forma totalmente independente de qualquer outro recurso para gerência de mensagens, interagindo com estes, apenas através das próprias mensagens.
Em outras palavras, o mecanismos foram implementados, partindo- se da premissa de que atuariam sobre um conjunto de mensagens já devidamente processados por um sistema de correio eletrônico e armazenado por este último num repositório de trabalho.
Portanto, para a utilização dos mecanismos, assume- se a existência de um sistema servidor de correio eletrônico e/ ou uma ferramenta cliente, com capacidade de extrair as mensagens recebidas para arquivos textos padrão, os quais serão posteriormente manipulados por os mecanismos propostos.
Esta necessidade não representa uma restrição, uma vez que a extração de mensagens faz parte das facilidades universalmente suportadas por ferramentas de correio eletrônico.
Outra alternativa para a utilização dos mecanismos, seria a implementação de uma ferramenta específica para este fim, incorporando os mecanismos, com os demais recursos necessários para o processamento do envio e recebimento de mensagens.
A figura 4.1 apresenta uma visão geral da arquitetura do protótipo, a qual é dividida em quatro subsistemas:
Indexação, armazenamento, recuperação e interface com o sistema de correio eletrônico.
Estes subsistemas serão descritos nas seções subseqüentes.
Foram definidos quatro índices para a indexação das mensagens e da estrutura de classificação:
Message contents, message header, folder descriptor, e message-folder association.
Estes índices suportam a recuperação de mensagens, folders e informações sobre eles de forma totalmente independente.
Os índices message header e message contents mantêm as referências às informações contidas nas mensagens.
A utilização de dois índices distintos para as mensagens (contents e headers) tem por objetivo ampliar as facilidades de recuperação oferecidas por a biblioteca utilizada, simplificando a recuperação dos valores dos descritores e garantindo a preservação de seu significado semântico.
O uso destes dois índices tem também como objetivo simplificar o mapeamento das consultas expressas na linguagem definida para as função de recuperação correspondentes.
O índice folder descriptor mantém referências às informações relativas aos folders (atributos da classe FLD), incluindo, portanto, tanto folders manuais, automáticos, como também do sistema.
O uso deste tem por objetivo permitir que sejam recuperados folders, dados valores para seus atributos.
O índice folder-message association faz referência aos links lógicos existentes entre as mensagens e os folders manuais e/ ou do sistema.
O uso deste índice tem por objetivo permitir a localização de mensagens em folders (manuais e do sistema) e vice-versa.
A atualização dos índices está diretamente relacionada com os seguintes eventos:
Recebimento e remoção de mensagens, criação e alteração (rename, set_ expression) de folders e classificação manual de mensagens.
Também o procedimento de restauração de mensagens logicamente removidas (DISCARDED) implica na atualização destes índices.
A seguir serão analisados os impactos destes eventos em cada um dos índices.
Os índices message contents e message header precisam ser atualizados apenas quando mensagens são recebidas ou ainda quando são removidas, uma vez que as informações contidas no cabeçalho e no conteúdo das mensagens nunca sofrem alterações.
A classificação manual de mensagens não implica na alteração destes índices, uma vez que envolvem apenas alterações nos links lógico entre mensagens e folders manuais e/ ou do sistema.
Uma vez que informações sobre folders e mensagens são mantidas isoladamente, criações e alterações em folders também não implicam na atualização destes índices.
Entretanto, quando um folder é removido através da operação remove&amp; discard, que remove também as mensagens a ele associadas, a atualização dos índices de mensagens se faz necessária.
Este índice necessita ser atualizado quando um novo folder é criado, quando o nome de um folder é alterado, quando a expressão de consulta de um folder automático é alterada, ou quando um folder é removido (operações remove e remove&amp; discard).
Operações de classificação manual ou demais operações disponíveis para mensagens não afetam este índice.
Este índice é diretamente afetado por operações de associação e dissociação de mensagens a folders manuais e do sistema -- (sys ) classify e (sys ) unclassify.
Além de estas operações, também a remoção de mensagens e folders implicam a atualização deste índice.
Já a criação de mensagens e folders não requerem qualquer alteração.
O subsistema de armazenamento é responsável por a manutenção das mensagens, folders e também dos índices a eles relacionados.
Os dados são todos armazenados em arquivos texto, divididos em diretórios conforme o tipo.
A utilização dos diretórios visa facilitar o processo de indexação e de atualização dos índices.
Assim, o armazenamento das informações é feito utilizando- se os seguintes diretórios:
Messages, folders, msg_ fld e discarded, sendo que estes diretório são subdivididos em outros diretórios como ilustra a figura 4.2.
Também os arquivos de índices são mantidos por o subsistema de armazenamento.
Estes arquivos são armazenados num diretório à parte.
A seguir serão descritas as unidades de armazenamento de dados contidas em cada um desses diretórios.
O diretório Messages mantém os arquivos de mensagens.
Cada mensagem é armazenada em dois arquivos em formato ASCII.
Um contendo o texto original da mensagem, armazenado no subdiretório CNTTS e outro contento as informações do cabeçalho, armazenado no subdiretório HDR.
A divisão da mensagem nestes dois arquivos, visa facilitar a identificação dos campos do cabeçalho, otimizando o processo de recuperação nas consultas.
Os arquivos do diretório CNTTS possuem o texto original da mensagem, enquanto os arquivos do diretório HDR possuem as informações contidas no cabeçalho, segundo o formato a seguir:
Onde: Campo é cada um dos campos presentes no cabeçalho da mensagem O diretório Messages, atua como repositório único de mensagens, contornando desta forma, os problemas relativos à classificação física de mensagens em folders, descritos na seção 2.1.2.1.
Embora reúna um grande volume de mensagens, o desempenho não é prejudicado devido a a estrutura de indexação existente.
O diretório folders, mantém as informações descritivas dos folders, estruturadas em arquivos individuais para cada folder.
Estes arquivos são distribuídos nos subdiretórios conforme o tipo de folder que descrevem (automático, manual ou do sistema).
A subdivisão dos folders, conforme os tipos visa otimizar o processo de recuperação, e também de atualização dos índices.
As informações descritivas dos folder são representadas da seguinte maneira:
Onde: Fld_ att é cada um dos atributos definidos para a classe FLD Em o diretório FLD_ MSG são mantidas as associações entre as mensagens e os folders manuais ou do sistema.
A divisão das associações em dois subdiretórios (MAN e SYS) visa otimizar a recuperação e a atualização dos índices correspondentes.
As associações entre folders e mensagens, tanto para folders manuais como para folders do sistema, são representadas utilizando- se um arquivo para cada folder que possui mensagens associadas, onde são armazenados os identificadores das respectivas mensagens.
O diretório Discarded armazena as mensagens descartadas por o usuário no mesmo formato utilizado por o diretório Messages.
Entretanto, não são mantidos os índices correspondente, uma vez que não estão previstas operações de consulta para estas mensagens.
Cada mensagem que é descartada por o usuário tem seus arquivos correspondentes movidos dos subdiretórios do diretório Messages para os subdiretórios do diretório Discarded, onde permanecerá até que seja determinada sua remoção física (operação purge) ou sua restauração (operação undelete).
Em este último caso, as mensagens são transferidas novamente para o diretório messages.
O subsistema de recuperação, tem como principal função mapear as consultas expressas na linguagem descrita na seção 3.4 para as operações de Ir correspondentes.
Como foi visto na seção 4.1 as funções de recuperação em sistemas de Ir são bastante elementares, baseando- se na detecção de documentos que possuem uma determinada expressão (vide função query provida por a biblioteca utilizada).
A linguagem de consulta definida oferece recursos mais ricos, permitindo uma maior capacidade de expressão semântica na definição das consultas.
Assim, para que sejam obtidos os resultados correspondentes a cada consulta expressa na linguagem definida, fazem- se necessárias diversas operações de recuperação sobre as estruturas de armazenamento e os índices estabelecidos.
Para estabelecer a correspondência entre as consultas expressas na linguagem e as funções de recuperação correspondentes, foi definido um conjunto de primitivas de recuperação que implementam as operações de consulta sobre mensagens, folder e informações sobre estes, através do uso da função de recuperação provida por a biblioteca de funções.
Assim sendo, a execução das consultas expressas na linguagem descrita na seção 3.4 é feita em dois passos:
Primeiro a tradução da expressão de consulta no conjunto de primitivas, e depois, a partir de estas primitivas, o conjunto de funções de recuperação correspondente é executado.
A seguir, na seção 4.5.1 serão apresentadas as primitivas definidas.
O processo de mapeamento das expressões da linguagem para o conjunto de primitivas correspondente será visto na seção 4.5.2, seguido da descrição do processo de tradução das funções primitivas em consultas aos índices e estruturas definidas na seção 4.5.3.
O mapeamento das expressões de consulta visa simplificar a integração dos recursos de consulta presentes na linguagem e na biblioteca de Ir.
O conjunto de primitivas de consulta foi definido com base na álgebra para valores complexos (ALGcv) descrita em (Abiteboul, 1995) uma vez que os objetos das classes MSG e FLD caracterizam- se como objetos complexos.
Embora a referida álgebra apresente um conjunto completo de operadores para o tratamento de consultas em tipos complexos, o conjunto de primitivas definidas restringiu- se exclusivamente àqueles recursos necessários para o tratamento dos tipos definidos (MSG e FLD), considerando- se, ainda, apenas as funcionalidades de consulta previstas por o mecanismo de recuperação.
Não é propósito deste conjunto de primitivas implementar na íntegra o conjunto de operações da álgebra.
Entretanto, as primitivas definidas cobrem as possibilidades de mapeamento requeridas, como será mostrado na descrição do processo de mapeamento na seção 4.5.2.
Em as seções a seguir, são apresentadas as primitivas definidas, que assumem o seguinte conjunto de definições a seguir e tem sua sintaxe definida com base na BNF apresentada na figura 4.3 onde foram omitidos os termos comp_ cond, fld_ cond e msg_ cond por possuírem a mesma especificação apresentada na sintaxe da linguagem de consulta.
Considere- se um tipo complexo T. Uma relação do tipo T é um conjunto finito de valores do tipo;
Considere- se MSG um tipo complexo definido de acordo com as propriedades da classe MSG, onde:
Cada instância msg deste é uma mensagem de correio eletrônico, e -- msglist é uma relação do tipo complexo MSG.
Considere- se FLD um tipo complexo definido de acordo com as propriedades da classe FLD onde:
Cada instância fld deste é um folder manual, automático ou do sistema, e -- folderlist é uma relação do tipo complexo FLD.
Considere- se F_ MSGLIST como a relação resultante da aplicação da operação unnest de ALGcv sobre relações do tipo FLD:
F_ MSGLIST: $=
unnest msgs_ in (folderlist) Considere- se M_ FLDLIST como a relação resultante da aplicação da operação de junção definida em ALGcv entre msglist e folderlist:
Sintaxe: SELECT_ FLD (fldlist_ in, fld_ cond):
Fldlist_ out Esta primitiva implementa a operação de seleção sobre os folders especificados no parâmetro fldlist_ in devolvendo como resultado uma folderlist (fldlist_ out).
Em fldlist_ in podem ser especificados:
Todos os folders da Classe FLD;
Cada uma das subclasses definidas a partir de a Classe FLD;
Ou uma folderlist com folders pré-selecionados por uma operação prévia.
A seleção é feita com base nas condições especificadas no parâmetro fld_ cond.
Sintaxe: SELECT_ MSG (msglist_ in, msg_ cond):
Msglist_ out Esta primitiva implementa a operação de seleção sobre as mensagens especificadas no parâmetro msglist_ in, devolvendo como resultado uma msglist (msglist_ out).
Em fldlist_ in podem ser especificados:
Todos as mensagens da Classe MSG;
Ou uma msglist com mensagens pré-selecionadas em operação prévia.
A seleção é feita com base nas condições especificadas no parâmetro msg_ cond.
Sintaxe: MSG_ IN (fldlist_ in):
F_ msglist_ out Esta primitiva retorna todas as mensagens vinculadas aos folders informados no parâmetro fldlist_ in, mantendo a correspondência foldermensagens.
Desta forma, é gerado como resultado uma F_ MSGLIST (f_ msglist_ out).
Esta primitiva tem como objetivo suprir as necessidades de consultas que fazem referência a mensagens vinculadas a um From MESSAGE na linguagem de consulta).
A preservação dos vínculos existentes entre folders e mensagens visa atender às facilidades de consulta previstas, que possibilitam a comparação dos atributos de um folder, com os atributos das mensagens a ele vinculadas.
Sintaxe: FLD_ MSG (f_ msglist_ in, (comp_ cond| msg_ cond):
F_ MSGLIST Esta primitiva implementa a operação de seleção sobre o resultado da primitiva MSG_ IN (parâmetro f_ msglist_ in), com base nas condições estabelecidas o parâmetro msg_ cond.
Este tipo de seleção se faz necessária quando é utilizada a cláusula WHERE numa expressão de consulta.
Sintaxe: MSGxFLD (msglist_ in, fldlist_ in, comp_ cond):
M_ FLDLIST Esta primitiva permite a associação entre folders e mensagens, a partir de as mensagens especificadas no parâmetro msglist_ in e dos folders especificados em fldlist_ in, conforme as condições especificadas no parâmetro comp_ cond.
Este tipo de associação se faz necessário nas situações de consulta onde deseja- se comparar atributos de mensagens com atributos de folders, mas no entanto, o conjunto de mensagens referido não foi obtidos a partir de o conjunto de folders em questão.
Um exemplo desta situação pode ser visto na seção 3.4 (exemplo 3.3).
O resultado gerado é uma estrutura do tipo M_ FLDLIST.
Sintaxe: GET_ INFO (list, result_ spc):
Result_ out Esta primitiva efetua uma projeção sobre os resultados das demais primitivas (parâmetro list), de acordo com as definições presentes no parâmetro result_ spc, devolvendo como resultado:
Folders, mensagens ou informações sobre estes.
Sintaxe: Union:
Result_ out Esta primitiva implementa a operação de união sobre resultados de consultas compatíveis.
Sintaxe: Intersec:
Result_ out Esta primitiva implementa a operação de interseção sobre resultados de consultas compatíveis.
Sintaxe: Minus:
Result_ out Esta primitiva implementa a operação de diferença sobre resultados de consultas compatíveis.
As expressões de consultas definidas usando- se a linguagem apresentada na seção 3.4 são mapeadas para as primitivas definidas na seção anterior, com base nos parâmetros especificados em cada uma das cláusulas.
O processo de mapeamento de consultas inicia- se com a tradução das cláusulas From Folder e From MESSAGE, seguida da tradução da cláusula WHERE e termina com a tradução da cláusula SELECT.
A figura 4.4 ilustra o processo de mapeamento descrito logo a seguir.
Como foi estabelecido na seção 3.4, a cláusula From Folder, quando presente, efetua um seleção sobre os folder existentes, WITH.
Assim, esta cláusula pode ser facilmente mapeada para a primitiva SELECT_ FLD, onde o parâmetro folderlist é representado por a extensão da classe ou por a folderlist informada em in, e o parâmetro fld_ cond representado por a condição especificada na cláusula WITH.
A Primitiva SELECT_ FLD retorna uma lista de folders (folderlist) que será posteriormente utilizada no mapeamento das demais cláusulas.
A cláusula From MESSAGE, quando presente, tem mapeamento dependente do argumento presente na sub-cláusula in:
MSG_ IN seguida da primitiva FLD_ MSG.
O parâmetro utilizado em MSG_ IN é o resultado da primitiva SELECT_ FLD e os parâmetros utilizados em FLD_ MSG, são respectivamente o resultado de MSG_ IN e a condição especificada em WITH (fig. 4.4 -- B).
Msglist (fig. 4.4 -- A).
O mapeamento da cláusula WHERE é dependente do mapeamento efetuados para as cláusulas From Folder e From MESSAGE:
Existindo como resultado do mapeamento de From MESSAGE uma msglist, o mapeamento de WHERE será efetuado através da primitiva MSGxFLD que efetuará o produto cartesiano entre a msglist e a fldlist resultantes do mapeamento das cláusulas From anteriores seguido de uma seleção com base no argumento especificado para -- Existindo como resultado do mapeamento de From MESSAGE uma F_ MSGLIST, o mapeamento de WHERE será efetuados através da primitiva FLD_ MSG que utilizará como parâmetros a F_ MSGLIST resultante da cláusula From MESSAGE e a condição especificada em Por fim, a cláusula SELECT é mapeada através da Primitiva GET_ INFO que utilizará como parâmetros os resultados das etapas anteriores e a lista de resultados especificada na consulta.&amp;&amp;&amp;
Os exemplos a seguir, ilustram o processo de mapeamento das consultas, para cada um dos cinco casos descritos e ilustrados na figura Exemplo 4.1: Existindo apenas as cláusulas SELECT e From SELECT f..
Name Esta consulta, que recupera todos os nomes de folders manuais que iniciam com a letra a, é mapeada para a seguinte seqüência de primitivas:
SELECT_ FLD (MAN_ FLD, «f..
Name HAS` a*'&quot;):
Fldlist1 GET_ INFO:
Namelist Exemplo 4.2: Existindo apenas as cláusulas SELECT e From SELECT TUPLE (m..
From, m..
Date) Esta consulta, que recupera os remetentes e as datas de todas as mensagens sobre inteligência artificial, pode ser traduzida por a seguinte seqüência de primitivas:
SELECT_ MSG (MSG, «m..
Content HAS` Ai'&quot;):
Msglist1 GET_ INFO):
Name_ date_ list Exemplo 4.3: Existindo as cláusulas SELECT, From Folder e From MESSAGE com a utilização de f..
Msgs_ in SELECT m Esta consulta, que recupera as mensagens novas enviadas por um usuário chamado` John' pode ser traduzida por a seguinte seqüência de primitivas:
Select_ fld (NEW,&quot;):
Fldlist2 MSG_ IN (fldlist2):
F_ msglist1 FLD_ MSG:
F_ mslglist2 GET_ INFO (f_ msglist2, m):
New_ from_ John Exemplo 4.4: Existindo as cláusulas SELECT, From Folder, From MESSAGE e WHERE, com a utilização de f..
Msgs_ in SELECT m WHERE m..
Subject $= f..
Name Esta consulta, já anteriormente descrita no exemplo 3.4 do capítulo 3, que compara atributos de mensagens e folders utilizando a cláusula WHERE, é mapeada através da seguinte seqüência de primitivas:
Select_ fld (MAN_ FLD,&quot;):
Folderlist3 MSG_ IN (folderlist3):
F_ msglist3 FLD_ MSG (f_ msglist3, «m..
Content HAS` sys*' And` &quot;*'&quot;):
F_ msglist4 FLD_ MSG (f_ msglist4, «m..
Subject $= f..
Name&quot;): F_ msglist5 GET_ INFO (f_ msglist5, m):
Preço_ sistema Exemplo 4.5: Existindo as cláusulas SELECT, From Folder, From MESSAGE e WHERE, sem a utilização de f..
Msgs_ in SELECT m WHERE m f..
Msgs_ in Esta consulta, também anteriormente descrita na seção 3.4 no exemplo 3.3, utiliza- se da comparação entre atributos de mensagens e folders, sendo que a seleção do conjunto de mensagens foi feito independente do conjunto de folders selecionado.
Seu mapeamento é feito através da seguinte seqüência de primitivas:
Select_ fld (ANSWERED,&quot;):
Fldlist4 SELECT_ MSG (MSG, «m..
From HAS John&quot;):
Msglist2 MSGxFLD (fldlist4, msglist2, «m f..
Msgs_ in):
M_ fldlist1 GET_ INFO:
John_ te o_ reply Consultas envolvendo os operadores de conjunto sobre resultados (UNION, INTERSEC e MINUS) são mapeadas através das primitivas correspondentes.
Como foi visto anteriormente na seção 4.1, a função da biblioteca de Ir fornece apenas os recursos básicos de consulta necessários à implementação das primitivas.
Assim, cada primitiva necessita decompor as condições de consulta, informadas como parâmetro, num conjunto correspondente de chamadas à função de consulta da biblioteca de Ir.
A decomposição das condições de consulta segue os algoritmos comumente utilizados por processadores de consultas, efetuando as devidas operações de seleção, união, interseção e diferença, sobre os resultados parciais obtidos.
Os resultados parciais, são obtidos através da aplicação da função de consulta nos índices correspondentes aos parâmetros informados nas primitivas.
As seções a seguir, descrevem a relação existente entre as primitivas que se utilizam da função de consulta da biblioteca de Ir e os índices definidos.
As demais primitivas, utilizam- se dos resultados providos por as primitivas descritas.
O processamento destas consultas envolve ainda o tratamento do uso de operadores relacionais, o qual não é suportado por a função de consulta da biblioteca de Ir.
Em estes casos, quando as consultas envolvem este tipo de operador, são primeiro efetuadas as consultas aos índices e depois cada primitiva efetua as operações de seleção adicionais necessárias através de estruturas internas a sua implementação.
Sintaxe: SELECT_ FLD (FLDLIST_ IN, fld_ cond):
FLDLIST_ OUT Esta primitiva é implementada através de operações de consulta sobre o índice folder descriptor utilizando as condições decompostas de fld_ cond e considerando a classe especificada em FLDLIST_ IN.
Caso FLDLIST_ IN especifique uma FOLDERLIST, resultante de outra consulta, o resultado final será obtido através da interseção da consulta ao índice folder descriptor com a FOLDERLIST informada em Sintaxe:
SELECT_ MSG (MSGLIST_ IN, msg_ cond):
MSGLIST_ OUT Esta primitiva é implementada através de operações de consulta sobre os índice message header e message content, utilizando as condições decompostas de fld_ cond e considerando o conjunto de mensagens especificados por MSGLIST_ IN.
Caso MSGLIST_ IN especifique uma MSGLIST, resultante de outra consulta, o resultado final (MSGLIST_ OUT) será obtido através da interseção da consulta aos índices message header e message content com a MSGLIST informada em MSGLIST_ IN.
As consultas parciais são efetuadas sobre o índice message content quando houver referência ao atributo m..
Content. As demais serão efetuadas sobre o índice message header.
Sintaxe: MSG_ IN (FLDLIST_ IN):
F_ MSGLIST_ OUT Esta primitiva é implementada através de operações de consulta sobre o índice message-folder association ou através da execução de uma operação de consulta.
Para cada folder manual ou do sistema presente no parâmetro FLDLIST_ IN, é efetuada uma consulta ao índice, que retorna o conjunto de mensagens associado ao folder mantendo a correspondência folder-mensagens.
Para os folders automáticos, é executada a expressão de consulta definida no atributo &quot;expression».
A partir de a união destes resultados, é gerado como resultado uma Sintaxe:
MSGxFLD (MSGLIST_ IN, FLDLIST_ IN, comp_ cond):
M_ FLDLIST Esta primitiva é implementada com base em operações de consulta aos índices folder descriptor, message header, message content e folder_ message association.
Os índices são consultados, conforme os atributos utilizados na construção de comp_ cond.
Os acesso aos índices visam a obtenção de informações sobre os folders e mensagens para que sejam efetuas as restrições necessário sobre o produto cartesiano entre MSGLIST_ IN e FLDLIST_ IN.
Este subsistema possui duas funções básicas:
Estabelecer a integração dos mecanismos propostos com o sistema e/ ou ferramenta de correio eletrônico utilizado para o provimento das demais funções de gerência de mensagens -- estabelecer a integração do subsistema de recuperação com os recursos de consulta eventualmente disponíveis.
Assim sendo, este subsistema é constituído de dois componentes:
System Interface e User Interface.
O primeiro (System Interface), é encarregado de estabelecer a integração com o sistema de correio eletrônico ou ferramenta utilizada por o usuário.
Como foi mencionado na seção 4.2, é necessário que o sistema de correio eletrônico seja configurado de modo que as mensagens recebidas sejam repassadas da caixa postal de entrada do sistema, sob a forma de arquivo, para um diretório que representará a caixa postal de entrada para os mecanismos.
A função deste componente é detectar a chegada destas mensagens na caixa postal do mecanismo e encaminhar- las ao subsistema de indexação.
O segundo componente (User Interface), é encarregado de encaminhar as solicitações de consulta ou de operações de gerência da estrutura de classificação aos subsistemas de indexação e/ ou recuperação e receber as respostas correspondentes.
As solicitações de consulta constituem- se de consultas utilizando a linguagem definida para o mecanismo de recuperação (e.
g, consultas adhoc, recuperação do conteúdo dos folders) ou de chamadas às primitivas de recuperação descritas na seção 4.5.1.
Estas solicitações são encaminhadas ao subsistema de recuperação para que sejam processadas.
Após o processamento das requisições, o subsistema de recuperação informa os resultados ao subsistema de interface.
As solicitações de operações de gerência da estrutura de classificação, constituem- se das operações de criação, remoção ou alteração de folders, como também, das operações de classificação manual (classify/ unclassify).
Estas requisições são encaminhadas ao subsistema de indexação que executa os procedimentos necessários para efetivar estas operações.
A figura 4.5 ilustra o subsistema de indexação, apresentando o esquema de funcionamento de seus componentes.
Em este trabalho foram propostos mecanismos para a classificação e a recuperação de informações em Correio Eletrônico.
Os mecanismos propostos foram desenvolvidos considerando- se as necessidades de usuários &quot;arquivadores «no sentido tratar adequadamente information overload.
O mecanismo de classificação é baseado no conceito de folder virtual, que permite a associação lógica entre mensagens e folders provendo assim, facilidades adicionais e maior flexibilidade nos procedimentos de classificação e/ ou reclassificação de mensagens.
O mecanismo de recuperação é baseado em facilidades de recuperação de informações sobre textos totalmente indexados (full text retrieval) e em facilidades de consulta a banco de dados, o que lhe confere recursos adicionais na recuperação de informações, favorecendo o uso do correio eletrônico como sistema de informação.
De entre as contribuições apresentadas por os mecanismos propostos, destacam- se:
A introdução do conceito de Folder Virtual, que minimiza os problemas decorrentes da utilização de folders como unidades físicas de armazenamento, reduzindo significativamente as dificuldades de localização de informações.
Ainda, o uso de folders automáticos facilita o processo de restruturação da distribuição das mensagens em folders e permite a manutenção da consistência dos critérios de classificação adotados.
A utilização de uma abordagem de consulta que permite, não só o acesso às mensagens e aos folders, mas também o acesso independente à qualquer formação existente sobre estas mensagens e/ ou sua forma de classificação.
Além de isto, esta abordagem permite que as consultas sobre mensagens sejam estabelecidas através da qualificação não só de seus atributos, como também dos atributos dos folders a que eventualmente estejam associadas e/ ou combinações entre estes, e vice-versa ampliando o poder de expressão para a definição de filtros.
A o comparar- se as facilidades providas por os mecanismos com as facilidades disponíveis nas demais propostas analisada no capítulo 2, percebe- se que a introdução do conceito de folder virtual e a utilização de recursos de recuperações de informações (Ir) vêm suprir as principais deficiências existentes quanto a a classificação e recuperação de informações, conforme ilustrado na figura 5.1.
Vale ressaltar, que a abordagem aqui propostas tem um caráter complementar às demais, reconhecendo- as como relevantes para o tratamento dos problemas freqüentemente enfrentados por os usuários do tipo &quot;arquivador».
O fato dos mecanismos aqui propostos não incluírem recursos como o uso de tipos estruturados de mensagens e facilidades para o processamento automáticos das mesmas, deve- se justamente ao reconhecimento da efetividade destes recursos principalmente no que diz respeito às necessidades de usuários &quot;priorizadores».
Assim, considerandose estes como recursos relativamente consolidados, as pesquisas realizadas no decorrer deste trabalho foram direcionadas no sentido de buscar facilidades adicionais, com o objetivo de eliminar as lacunas ainda existentes quanto a a classificação e recuperação de informações, considerando- se as necessidades de usuários &quot;arquivadores».
Entretanto, embora tais recursos não tenham sido contemplados no escopo deste trabalho, a viabilidade de integração destes com os mecanismos desenvolvidos é bastante clara, uma vez que os mecanismos desenvolvidos atuam sobre uma base conceitual compatível.
No que se refere ao uso de mensagens estruturadas, sua inclusão no contexto definido para os mecanismos pode se dar através de especializações da classe MSG.
A incorporação de facilidades para o processamento automático pode ser feita através da extensão da linguagem, permitindose a definição de regras baseadas em evento-condição- ação, o que implicaria também na extensão das funções providas por o subsistema de interface com sistemas de correio eletrônico.
Além de o tratamento de mensagens estruturadas e do processamento automático de mensagens, outras possíveis extensões aos mecanismos propostos incluem:
A adição de recursos mais poderoso para a recuperação de informações em textos, como por exemplo pesquisa posicional, referência aproximada, entre outros.
A inclusão de novos recursos poderia ser feita através da substituição da biblioteca de Ir ora utilizada, bem como anexando- se os operadores correspondentes à sintaxe da linguagem;
Ampliação dos recursos de classificação no sentido de permitir o estabelecimento de hierarquias de folders, o que poderia ser implantado através da criação de uma nova classe de objetos caracterizada como uma agregação do tipo coleção sobre a classe folder;
Aplicação dos mecanismos definidos para a gerência e manutenção de repositórios públicos de informações como por exemplo news servers;
Integração dos mecanismos propostos com outros sistemas de comunicação mediados por computador (CMCS), como por exemplo conferências eletrônicas e aplicações de ensino à distância;
De o ponto de vista do projeto de implementação, podem ainda ser desenvolvidos trabalhos para atuar na otimização das consultas, considerando- se as características específicas da linguagem e das estruturas de indexação e armazenamento utilizadas.
Também a detecção da ocorrência de ciclos nas definições ou nas consultas envolvendo folders automáticos necessita ser tratada.
Considerando- se as conclusões obtidas, acredita- se que, como resultado do desenvolvimento deste trabalho, foram geradas contribuições significativas para o tratamento de information overload em sistemas de correio eletrônico.
