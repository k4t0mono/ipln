O desenvolvimento distribuído de software (DDS) vem trazendo novos desafios ao gerenciamento de projetos.
Em ambientes de desenvolvimento distribuído, a área de integração ganha fundamental importância para integração dos processos de gerenciamento de projetos e engenharia de software.
Entretanto, as características de unificação, consolidação, articulação e ações integradoras essenciais ao sucesso do projeto, com atendimento dos seus requisitos e expectativas das partes interessadas, sofrem influência de um conjunto de fatores devido a a dispersão das equipes de desenvolvimento.
Este trabalho visa identificar os fatores que influenciam os projetos de desenvolvimento distribuído de software e apresentar um modelo para identificar o índice de integração em projetos DDS, com base na percepção da equipe do projeto com relação a os fatores selecionados.
Além de isto, serão apresentados os resultados da aplicação do modelo proposto num conjunto de projetos, envolvendo diferentes empresas.
Serão apresentados, também, os resultados da análise estatística dos dados coletados e os resultados do índice de integração identificados nos diferentes projetos.
As conclusões deste estudo permitem que as empresas e gerentes de projetos atuem em pontos vulneráveis dos projetos, e ao meio científico fornece subsídios para criação de novos índices ou sua adaptação para avaliação de fatores específicos.
Palavras-chave: Gerenciamento de projetos, Integração, Projetos Distribuídos, Fatores de sucesso, Desenvolvimento de Software, Desenvolvimento Distribuído, Índice, DDS.
Muitas organizações estão adotando o desenvolvimento distribuído de software (DDS) como forma de ganhar vantagem competitiva em seu mercado e atender a necessidade do desenvolvimento de sistemas de informação mais complexos, sofisticados, melhores, mais baratos e em menor prazo.
De acordo com Qiu Entre elas, podemos destacar aproveitamento de talentos especializados, independente de sua localização, redução dos custos de desenvolvimento com a alocação de equipes em mercados mais atrativos, redução do tempo de lançamento de produtos, com benefício em relação a o fuso horário diferenciado, ou disponibilidade de recursos mais especializados, bem como a proximidade do cliente, o que facilita a comunicação e o relacionamento.
Entretanto, o desenvolvimento de projetos em ambiente de DDS vem trazendo novos desafios ao gerenciamento de projetos (GP) e a engenharia de software (ES).
As tradicionais áreas do gerenciamento de projetos, como, gerenciamento do escopo, tempo, custo e qualidade ganham complexidade com a distribuição da equipe e das atividades do projeto.
As áreas de recursos humanos, comunicação, riscos, aquisição e, principalmente, integração, vem crescendo em importância devido a a dispersão da equipe e às novas características da engenharia de software.
A evolução da engenharia de software vem criando novas disciplinas e papéis, segmentando cada vez mais as atividades por especialistas.
Pessoas desempenhando papéis específicos de analista, designer, desenvolvedor, teste, entre outros, são comuns nos projetos de desenvolvimento de software e novas funções vêm surgindo ao longo de o tempo.
Esses profissionais vêm desempenhando seus papéis em equipes cada vez mais distribuídas, fazendo com que o gerenciamento de recursos humanos e da comunicação em projetos de software se torne um desafio.
Muitos dos sistemas de informação atuais são divididos em componentes menores, sendo produzidos por equipes diferentes e integrados no final.
Essas equipes além de estarem tecnologicamente habilitadas necessitam possuir habilidades para colaboração virtual.
Todos estes aspectos, aliados ao fato dos clientes não serem mais locais e estarem distribuídos globalmente, fazem com que os riscos dos projetos aumentem e o gerenciamento de projetos, mais especificamente da integração de projetos, se torne indispensável para o sucesso dos projetos de desenvolvimento distribuído de software e consequentemente das organizações.
Em este cenário, a área de gerenciamento da integração com suas características de unificação, consolidação, articulação e ações integradoras, se torna fundamental para finalizar os projetos e atender aos requisitos e expectativas das partes interessadas.
Entretanto, a integração de projetos distribuídos de software sofre a influência de diversos fatores que podem afetar de forma positiva ou negativa o sucesso do projeto.
Este trabalho busca identificar os fatores que influenciam o sucesso dos projetos de desenvolvimento distribuído de software e apresentar um modelo para identificar o índice de integração de um projeto DDS com base na percepção da equipe do projeto com relação a os fatores pesquisados, tomando como base o modelo PDI (Perceived Distance Index).
Além disso, o modelo proposto foi aplicado em estudos de casos (estudos de casos múltiplos) com projetos de desenvolvimento distribuído de software com a participação de organizações que trabalham com desenvolvimento de software no mercado nacional e internacional.
Os resultados dos estudos de casos foram apresentados às organizações participantes, sendo coletadas suas impressões sobre os resultados apresentados e sobre os processos e artefatos do modelo.
Essas impressões foram analisadas e incorporadas ao modelo final proposto por este estudo.
Justificativa A distribuição da equipe em ambiente de DDS aumenta a complexidade do projeto, pois apresenta as seguintes características:
Os membros estão distribuídos, a necessidade de comunicação e interações eletrônicas são maiores, geralmente possuem membros de diferentes organizações, utilizam redes de trabalho, necessitam de comunicação contínua e estruturada, a autoridade está vinculada ao processo e ao conhecimento, exige maior acesso à informação que está em formato eletrônico, ocorre o compartilhamento contínuo do trabalho incompleto, exige o compartilhamento do conhecimento, os processos são informatizados e o aprendizado é realizado por comunicação eletrônica e artefatos.&amp;&amp;&amp;
Devido a essas características, muitos são os fatores que podem afetar o sucesso do projeto de desenvolvimento distribuído de software.
A os fatores que impactam os projetos tradicionais, como os principais riscos de projetos de software, avaliados por Ropponen e Lyytinen e Boehm, os Fatores Críticos de Sucesso e os Processos Críticos de Planejamento, apontados por Zwikael e Globerson, são adicionados novos fatores inerentes ao desenvolvimento distribuído.
Por exemplo, questões relativas a utilizar um modelo formal ou aplicar a avaliação de especialistas para estimar o esforço de desenvolvimento do software continuam presentes nos projetos.
Outro exemplo, se refere aos problemas de comunicação que continuam tendo influência na qualidade da integração do software.
Estudos com times multifuncionais de desenvolvimento estão recebendo uma crescente atenção por a necessidade de atingir uma grande integração no processo de desenvolvimento de produtos, por exemplo, estudos mostram que a integração bem-sucedida do conhecimento multidisciplinar pode ser alcançada, entre os limites do projeto, através de atividades que envolvam múltiplas comunidades profissionais e sociais.
Esses estudos apontam que o desempenho das atividades, os comportamentos interpessoais e o desempenho do time são potencializados quando seus membros estão dedicados ao time e/ ou projeto, sendo que esta dedicação é reforçada quando o gerente do projeto está próximo a os membros do time de uma maneira interpessoal.
Entretanto, em ambientes de DDS as equipes do projeto e, principalmente, o gerente do projeto pode não estar fisicamente próximo de os patrocinadores, clientes e das equipes distribuídas.
Esse fato dificulta o relacionamento interpessoal e a percepção de equidade de tratamento entre as equipes.
Em o desenvolvimento distribuído de software, especial atenção tem sido dada ao gerenciamento de projetos, pois os gerentes de projetos se deparam com novos desafios que requerem novas habilidades para o desenvolvimento do produto e o gerenciamento do projeto.
De essa forma, as tarefas dos gerentes de projetos de equipes de DDS, comparadas as equipes tradicionais de software (colocalizadas), devem incluir uma grande quantidade de funções administrativas e facilitadoras para integração das partes interessadas no projeto.
Essas funções devem ser balanceadas, de maneira adequada, entre todos os processos do gerenciamento de projetos.
Um dos principais desafios do gerente de projeto de equipes distribuídas é minimizar os impactos da dispersão do projeto, seja ela física ou geográfica, organizacional, temporal ou entre grupos de interessados.
Além disso, um cuidado particular deve ser destinado para a distância percebida entre os membros da equipe.
A distância percebida (ou proximidade percebida) está relacionada a percepção de estar perto ou distante das outras pessoas ou grupos do projeto.
Muitos são os fatores que podem afetar o paradoxo de &quot;estar fisicamente próximo e perceber como distante «ou &quot;estar fisicamente distante e perceber como próximo».
Por exemplo, a distância percebida num time colocalizado, que tenha dificuldade de saber em que os outros membros estão trabalhando, pode ser maior do que em equipes distribuídas com alto índice de integração.
Entender e medir a distância percebida pode beneficiar o desenvolvimento distribuído de software.
Conhecer os fatores que afetam os projetos de desenvolvimento distribuído de software e avaliar a percepção da equipe com relação a esses fatores, permitirá aos gerentes de projetos e as organizações, realizar ações corretivas e preventivas para a integração do projeto, aumentando a percepção de cada membro de estar próximo de os outros membros da equipe, independentemente do tipo de dispersão do projeto.
Com isso, muitos dos riscos relativos ao ambiente de DDS, como por exemplo, diminuição da moral do time, dificuldade de comunicação face a face e perda de confiança, poderão ser minimizados ou eliminados antes que se tornem efetivos e prejudiquem o sucesso do projeto.
Além disso, essas ações permitirão melhorar o desempenho das atividades, os comportamentos interpessoais, o desempenho do time e a percepção de proximidade e equidade das equipes.
Questão de pesquisa e Objetivos Os estudos realizados apontam a importância da integração em projetos de desenvolvimento distribuído de software e a necessidade de identificar os fatores que afetam a integração do projeto, pois os mesmos podem comprometer a distância percebida e o sucesso do projeto.
Com o propósito de nortear os estudos, houve a necessidade de definir a questão de pesquisa, bem como o objetivo geral e quatro objetivos específicos.
Estas definições foram fundamentais no direcionamento dos trabalhos e na avaliação dos resultados alcançados.
Devido a a importância do gerenciamento da integração e à existência de vários fatores que impactam os projetos de desenvolvimento distribuído de software, emerge a seguinte questão de pesquisa:
Como identificar o nível de integração de um projeto de software em ambiente de DDS?
Essa questão de pesquisa serve de base para a realização dos estudos, delimitando o escopo da pesquisa e direcionando as decisões sobre os rumos da mesma em todas as suas fases.
Com base na questão de pesquisa, tem- se como objetivo geral, propor um modelo de identificação do índice de integração em projetos de desenvolvimento de software em ambiente de DDS.
Considerando esse objetivo geral, foram definidos os seguintes objetivos específicos:
Aprofundar a base teórica:
Visando a definição e priorização dos fatores que influenciam o gerenciamento e a integração de projetos distribuídos, possibilitando uma definição mais precisa dos fatores a serem utilizados no modelo proposto.
Desenvolver um modelo de identificação do índice de integração de um projeto de software:
Definir um modelo para a geração de um índice que permita identificar o nível de integração dos processos de gerenciamento de projetos de DDS, composto por:
Instrumentos de coleta de dados, processo de análise desses e apresentação dos resultados.
Aplicar o modelo em projetos de desenvolvimento de software:
Testar o modelo gerado em diferentes organizações e projetos de DDS.
Apresentar os resultados alcançados:
Apresentar os resultados para as organizações e projetos onde o modelo foi aplicado e documentar o estudo.
A questão de pesquisa, o objetivo geral e os objetivos específicos direcionaram os esforços para a elaboração dos resultados apresentados nesta dissertação.
Em paralelo a estes objetivos, o trabalho procurou identificar uma possível correlação entre os fatores utilizados, principalmente com relação a o fator &quot;Dispersão «que é inerente aos projetos de desenvolvimento distribuído de software, fazendo com que o modelo proposto não seja aplicável diretamente em equipes tradicionais de desenvolvimento de software.
Estrutura do trabalho Esta dissertação está dividida em sete capítulos.
O primeiro apresenta uma introdução sobre a delimitação do tema, a justificativa de sua escolha, a definição da questão de pesquisa, seus objetivos e a estrutura do trabalho.
Em o capítulo 2 é realizada uma descrição da base teórica estudada, apresentando os principais estudos utilizados como referência para elaboração deste trabalho.
Em o capítulo 3 a metodologia utilizada é apresentada com o detalhamento das etapas da pesquisa e da aplicação do modelo nos estudos de casos.
Em o capítulo 4 são apresentadas as atividades realizadas na construção do modelo.
Em o capítulo 5 são apresentados os estudos de casos realizados para testar o modelo e seus resultados.
O capítulo 6 descreve o modelo final do índice de integração em projetos de desenvolvimento de software em ambiente de DDS e no último capítulo são apresentadas as conclusões deste estudo.
Um estudo da literatura foi realizado para elaboração deste trabalho, buscando aprofundar os conhecimentos em áreas do gerenciamento de projetos, engenharia de software, desenvolvimento distribuído de software, distância percebida e modelos de avaliação de projetos.
Em as próximas seções estão descritas as principais áreas e estudos realizados.
Gerenciamento de projetos na engenharia de software Esta seção apresenta as principais abordagens utilizadas na Engenharia de Software (ES) e sua visão com relação a o gerenciamento de projetos.
As principais abordagens identificadas são:
RUP, SWEBOK, NBR/ ISO 12207 e CMMI.
Não é objetivo dessa seção detalhar cada metodologia ou processo, mas sim identificar os principais processos das metodologias mais conhecidas atualmente e posicionar o gerenciamento de projetos dentro desses processos.
O RUP é um processo de desenvolvimento e implementação de software da IBM Rational.
Ele é estruturado num framework de processos com o objetivo de conter as melhores práticas aceitas por o mercado para engenharia de software e gerenciamento de projetos de software.
O framework pode ser adaptado às necessidades e características dos projetos, para isto dispõem de:
Um conjunto de processos baseados nas melhores práticas adotadas por o mercado.
As organizações podem utilizar esses processos, já utilizados em outras organizações, sem a necessidade de desenvolver- los internamente.
Facilidade de adaptação dos processos, podendo inserir ou excluir partes do processo, customizando as suas necessidades.
Um guia para início e planejamento de projetos, com um modelo inicial dos processos a serem utilizados, suas entradas, ferramentas, técnicas e saídas.
Incluindo os recursos necessários.
O desenvolvimento é feito em quatro fases de forma iterativa.
Cada iteração acrescenta novas características ao produto de forma incremental.
A figura 1 apresenta o ciclo de vida de desenvolvimento do software com suas iterações e as disciplinas associadas.
As disciplinas do RUP são:
Modelagem de Negócios, Requisitos, Análise Design, Implementação, Teste, Implantação, Gerenciamento de Configuração e Mudança, Gerenciamento de Projeto e Ambiente.
Podemos verificar que o desenvolvimento de software no RUP é feito de forma iterativa.
Cada iteração pertence a uma das fases definidas por a metodologia:
Iniciação, Elaboração, Construção e Transição.
Para a realização de cada iteração são utilizadas, em diferentes níveis, as disciplinas definidas na metodologia, de forma a atingir seus objetivos.
As iterações iniciais se utilizam mais das disciplinas de Modelagem de Negócios e Requisitos do que as finais, que possuem ênfase nas disciplinas de Teste e Implantação.
A cada iteração, novas características são incrementadas ao software, até que se chegue ao produto final e ocorra a transição para o ambiente de produção.
A disciplina de gerenciamento de projetos deve garantir a entrega de um produto que atenda às expectativas dos clientes, através do gerenciamento dos demais processos, superando as dificuldades que forem surgindo.
Para atingir esse objetivo, o gerente de projeto possui no framework uma forma estruturada de gerenciar projetos de software, com um guia para planejamento, execução, monitoramento e controle do projeto e gerenciamento de riscos.
Com foco principalmente sobre os aspectos importantes de um processo de desenvolvimento iterativo:
Algumas áreas de conhecimento do gerenciamento de projetos não são cobertas por o RUP, como por exemplo:
Gerenciamento de recursos humanos, Gerenciamento de custos e Gerenciamento de Aquisições.
O SWEBOK é um guia que delimita a engenharia de software e disponibiliza os processos atuais mais utilizados na área, estruturados através do corpo de conhecimento da engenharia de software, fornecendo aos envolvidos no projeto um guia para realização do projeto.
Em esta seção serão abordados alguns aspectos do SWEBOK e sua abordagem com relação a o gerenciamento do projeto.
Os cinco principais objetivos do guia são:
Disponibilizar e divulgar uma visão atual e consistente da engenharia de software;
Definir claramente o papel e os limites da engenharia de software com relação a outras disciplinas como tecnologia da informação, gerenciamento de projeto, engenharia, matemática, etc;
Identificar o conteúdo da disciplina de engenharia de software;
Disponibilizar o acesso ao conteúdo da engenharia de software através do corpo de conhecimento em engenharia de software;
Ser uma base para licenciamento de produtos.
O corpo de conhecimentos em engenharia de software é subdividido em dez Áreas de Conhecimento (KA).
Requisitos de software Projeto (Design) de software Construção de software Teste de software Manutenção de software Gerenciamento de configuração de software Gerenciamento da engenharia de software Processo de engenharia de software o Gerenciamento do processo de software o Medição da engenharia de Software Ferramentas e métodos de engenharia de software Qualidade de software O gerenciamento de projetos é uma das disciplinas relacionadas à engenharia de software.
As disciplinas reconhecidas por o guia SWEBOK são:
Engenharia da Computação;
Ciência da Computação; Gerenciamento;
Matemática; Gerenciamento de Projetos;
Gerenciamento da Qualidade;
Ergonomia do Software;
Engenharia de sistemas.
Os elementos do gerenciamento de projetos são descritos nos processos de engenharia de software na área de Gerenciamento da engenharia de software dentro de os processos de Gerenciamento do processo de software.
Onde são descritos os seguintes processos:
Iniciação e definição do escopo Compreende a determinação e a negociação dos requisitos, análise de viabilidade e o processo de verificação e validação dos requisitos.
Planejamento do projeto de software Incluem os processos de planejamento para determinação das entregas, esforço, cronograma e estimativa dos custos, alocação de recursos, gerenciamento de riscos, gerenciamento da qualidade, e o plano de gerenciamento.
Promulgação do projeto de software (Implementação) Os tópicos aqui são a implementação de planos, gerenciamento de contratos com fornecedores, a implementação do processo de medição, o processo de monitoramento, o processo de controle, e a elaboração de relatórios.
Análise e avaliação É a revisão e avaliação da satisfação dos requisitos e do desempenho do projeto.
Encerramento Determinação do encerramento e encerramento das atividades.
O gerenciamento de projetos no SWEBOK é considerado uma área de apoio à engenharia de software, os processos de gerenciamento de projetos vistos anteriormente são realizados através das práticas do PMBOK.
Standardization) e o IEC (International Electrotechnical Commission) dentro de um esforço conjunto dessas organizações.
A Iso/ IEC 12207 teve seu desenvolvimento proposto em 1988 e a primeira versão foi publicada em agosto de 1995, sendo que no ano de 1998 foi publicada a versão brasileira.
Em esta seção serão abordados alguns aspectos da norma Iso/ IEC 12207 e sua abordagem com relação a o gerenciamento de projetos de software.
A Iso/ IEC 12207 é a norma que define o processo de desenvolvimento de software.
Essa norma tem como objetivo principal estabelecer uma estrutura comum para os processos do ciclo de vida de desenvolvimento de software, visando ajudar as organizações a compreenderem todos os componentes presentes na aquisição e fornecimento de software e, assim, conseguir firmar contratos e executar os projetos de forma mais eficaz.
Os processos na Iso/ IEC 12207, figura 2, são de responsabilidade de uma organização, mas não são exclusivos dessa, ou seja, uma organização pode executar um ou mais processos e um processo pode ser executado por uma ou mais organizações.
Em este caso, uma das organizações será a responsável por o processo total, mesmo que tarefas individuais sejam realizadas por pessoas diferentes em diferentes organizações.
Os processos são agrupados de acordo com a sua natureza, ou seja, o seu objetivo principal no ciclo de vida do software.
Os elementos do gerenciamento de projetos estão descritos dentro de os Processos Organizacionais sendo que no Gerenciamento são definidas as atividades básicas de gerenciamento, incluindo o gerenciamento do projeto relativo à execução dos processos do ciclo de vida.
As principais atividades são:
Iniciação e definição do escopo Esta atividade consiste das seguintes tarefas:
Planejamento Esta atividade consiste das seguintes tarefas:
Programação para a conclusão das tarefas;
Estimativa de esforço;
Adequação dos recursos necessários para executar as tarefas;
Atribuição de tarefas;
Atribuição de responsabilidades;
A quantificação dos riscos associados com as tarefas ou o com o próprio processo;
Medidas de controle da qualidade para ser empregado em todo processo;
Os custos associados ao processo de execução;
Prestação dos serviços de infraestrutura.
Execução e Controle Esta atividade consiste das seguintes tarefas:
Revisão e avaliação Esta atividade consiste das seguintes tarefas:
Encerramento Esta atividade consiste das seguintes tarefas:
Capability Maturity Model Integration (CMMI) é um modelo de maturidade para melhoria dos processos para o desenvolvimento de produtos e serviços.
Este modelo consiste nas melhores práticas que endereçam atividades de desenvolvimento e manutenção, cobrindo o ciclo de vida dos produtos da sua concepção até a entrega e manutenção.
Em esta seção serão abordados alguns aspectos do CMMI e sua abordagem com relação a o gerenciamento do projeto.
O CMMI apresenta áreas de processos (PA) distribuídas em níveis de maturidade e categorias.
As categorias de processos encontradas no CMMI são:
Gerenciamento do Processo Gerenciamento de Projetos Engenharia Suporte Abaixo são apresentados os níveis de maturidade e os processos associados:
Nível 1: Inicial Nível 2: Gerenciado o Gerenciamento de Requisitos o Planejamento do Projeto o Gerenciamento de Acordos com Fornecedores o Mensuração e Análise o Qualidade Assegurada o Gerenciamento da Configuração Nível 3: Definido o Desenvolvimento de Requisitos o Solução Técnica o Integração do Produto o Verificação e Validação o Foco no Processo Organizacional o Definição do Processo Organizacional o Treinamento Organizacional o Gerenciamento Integrado do Projeto o Gerenciamento de Risco o Análise e Resolução de Decisões Nível 4: Gerenciado Quantitativamente o Desempenho do Processo Organizacional o Gerenciamento Quantitativo do Projeto Nível 5: Otimizado o Inovação e implantação Organizacional o Análise e Resolução de Causa Raiz Em a categoria de gerenciamento de projetos são encontradas as seguintes áreas de processos:
Planejamento de Projetos Estabelecer e manter planos que definem as atividades do projeto.
Monitoração e Controle de Projetos Prover um entendimento do progresso do projeto, para que ações corretivas apropriadas possam ser tomadas quando o desempenho do projeto desvia significativamente do plano.
Gerenciamento de Acordos com Fornecedores Gerenciar a aquisição de produtos de fornecedores.
Gerenciamento Integrado do Projeto Estabelecer e gerenciar o projeto e as partes interessadas relevantes de acordo com um processo integrado e definido que é adaptado do conjunto de processos padrões da organização.
Gerenciamento dos Riscos Identificar potenciais problemas antes que ocorram para que atividades de tratamento possam ser planejadas e invocadas quando necessárias durante a vida do produto ou projeto para mitigar impactos adversos ao atendimento dos objetivos.
Gerenciamento Quantitativo do Projeto Gerenciar quantitativamente o processo definido do projeto para atingir os objetivos de qualidade e desempenho dos processos estabelecidos.
Como modelo de maturidade, o CMMI descreve as características mais importantes na elaboração de um processo, desta forma metodologias como PMBOK e PRINCE2 para gerenciamento de projetos podem ser utilizadas por as organizações para buscarem aderência ao CMMI e atingirem seus níveis de maturidade.
Esta seção apresentou brevemente as principais abordagens que tratam do gerenciamento de projetos de software, como parte de seus processos.
Foram analisados, a metodologia RUP, o guia de conhecimento em engenharia de software SWEBOK, a norma ABNT NBR Iso/ IEC 12207 e o Modelo CMMI.
Alguns destes modelos apresentam o gerenciamento de projetos com parte de seus processos para engenharia de software ou como uma área de processo para melhoria de processos no desenvolvimento de produtos e serviços, como por exemplo, o CMMI.
De acordo com estes estudos, muitas das abordagens de engenharia de software se apoiam no PRINCE2 ou no PMBOK para seus processos de gerenciamento de projetos.
O PRINCE2 e o PMBOK tratam especificamente do gerenciamento de projetos e são utilizados nos mais variados tipos de projetos, incluindo projetos de software, pois podem ser utilizados em conjunto com outras abordagens, complementando as necessidades do gerenciamento de projetos desta natureza.
O gerenciamento de projetos só foi possível por o surgimento de aliados ao longo de os anos.
Esses aliados criaram organizações e metodologias para o gerenciamento de projetos.
Entre eles podemos destacar o PMI (Project Management Institute), com o Guia PMBOK, e o PRINCE2 (PRojects In Controlled Environments).
O PMI (Project Management Institute) é uma organização, sem- fins lucrativos, fundada em 1969 por profissionais da área de gerenciamento de projetos.
O objetivo primário do PMI é evoluir a prática, a ciência e a profissão de gerenciamento de projetos em todo o mundo de uma maneira consciente e pró-ativa, de tal forma que as organizações em todos os lugares adotem, valorizem e utilizem o gerenciamento de projetos e atribuam os seus resultados a isto.
O gerenciamento de projetos permite a um indivíduo falar com outro numa linguagem comum, não importando a sua indústria, a geografia, ou se gerência projetos, programas ou portfólios.
Atualmente conta com mais de 420.000 membros credenciados, distribuídos em 250 capítulos em mais de 170 países.
Os padrões globais do PMI são muito utilizados por os profissionais e interessados em gerenciamento de projetos.
Esses padrões garantem que um framework básico para o gerenciamento de projetos seja aplicado mundialmente de forma consistente.
São 11 padrões globais, sendo o principal de eles o PMBOK (Guia do Conhecimento em Gerenciamento de Projetos) com uma circulação de mais de 2 milhões de exemplares.
Atualmente o PMI dispõe dos seguintes padrões:
Guia do Conhecimento em Gerenciamento de Projetos ­ (Guia PMBOK) ­ Quarta edição Guia de Extensão do PMBOK para Construção-Terceira edição Guia de Extensão do PMBOK para Governo-Terceira edição Práticas Padrões para Análise de Valor Agregado Práticas Padrões para Gerenciamento da Configuração do Projeto Práticas Padrões para a Estrutura Analítica do Trabalho ­ Segunda edição Práticas Padrões para Cronograma Framework de Desenvolvimento da Competência em Gerenciamento de Projetos ­ Segunda Edição Modelo de Maturidade Organizacional em Gerenciamento de Projetos (OPM3®) ­ Segunda edição O Padrão para o Gerenciamento de Programas ­ Segunda edição O Padrão para o Gerenciamento de Portfólio ­ Segunda edição O Guia do Conhecimento em Gerenciamento de Projetos (Guia PMBOK) é uma norma reconhecida para a profissão de gerenciamento de projetos.&amp;&amp;&amp;
Em ele são descritos os métodos, processos e práticas, estabelecidas como melhores práticas para o gerenciamento de projetos no mercado.
Sua evolução ocorre a partir de a experiência e utilização dos processos em muitas organizações e da contribuição dos profissionais de gerenciamento de projetos.
O foco do PMBOK está em fornecer um guia para o gerenciamento de projetos individuais.
Para conjuntos de projetos, como programas ou portfólios, existem outras normas.
Em ele são definidos os aspectos gerenciais e os conceitos relacionados, descrevendo o ciclo de vida do gerenciamento de projetos e os seus processos.
Os processos descritos são aqueles reconhecidos como boas práticas em gerenciamento de projetos.
Ele também fornece e promove uma linguagem comum dentro de a profissão de gerenciamento de projetos para se discutir, escrever e aplicar os conceitos do gerenciamento de projetos.
O PMI considera esta norma como uma referência básica sobre gerenciamento de projetos para seus programas de desenvolvimento profissional e para suas certificações.
Conforme descrito no PMBOK, o gerenciamento de projetos consiste em aplicar conhecimentos, habilidades, ferramentas e técnicas para realizar o trabalho do projeto a fim de atender os requisitos e objetivos definidos, e satisfazer as partes interessadas.
O gerenciamento de projetos, descrito no PMBOK, é realizado através da aplicação e integração apropriadas dos 42 processos descritos no guia, agrupados logicamente em 5 grupos de processos.
São eles:
Em a figura 3 pode ser visto o fluxo básico de execução dos grupos de processos dentro de os limites do projeto.
Os grupos de processos são vinculados por as saídas que produzem.
A saída de um processo de planejamento fornece ao grupo de processos de execução o plano de gerenciamento e os documentos do projeto.
Dificilmente os grupos de processos são eventos distintos ou que ocorrem uma única vez, conforme pode ser visto na figura 4, geralmente se sobrepõem ao longo de todo o projeto.
Conforme o andamento do projeto, novos planejamentos podem ocorrer, por exemplo, devido a ações para correção de desvios identificados nos processos de monitoramento e controle, ou mudanças de escopo gerando a necessidade de atualizações nos documentos do projeto e principalmente no plano de gerenciamento.
Analisando a figura 4, podemos verificar que o grupo de processos de iniciação ocorre ao longo de todo o projeto.
O grupo de processos de monitoramento e controle ocorre desde o início do projeto até seu encerramento, sendo mais ativo no meio de o projeto, acompanhando a tendência do grupo de processos de execução.
A tabela 1 mostra os processos descritos no PMBOK distribuídos entre os grupos de processos e as áreas de conhecimento.
Em essa figura podemos verificar a dispersão dos processos de gerenciamento de projetos nos grupos e áreas.
Observando essa distribuição verificamos que a maioria dos processos estão distribuídos no grupo de processos de planejamento e que a área de gerenciamento da integração do projeto é a única que possui processos em todos os grupos de processos.
Em o guia, os processos são apresentados conforme sua área de conhecimento identificada para o gerenciamento de projetos, como escopo, tempo, custo, qualidade e termos dos processos, práticas, entradas, saídas, ferramentas e técnicas.
As áreas de conhecimento descritas são:
Gerenciamento da integração do projeto Descreve os processos e atividades que devem ocorrer no projeto de forma a selecionar, adaptar e coordenar os demais processos do gerenciamento de projetos.
Esta área é responsável por o entendimento inicial do projeto e alocação do gerente do projeto, por a elaboração de todos os planos, por a execução das atividades do projeto para realização do produto do projeto de acordo com o planejamento.
Por as correções que se fizerem necessárias ao longo de o projeto, quando algo não sair conforme o planejado, por controlar as solicitações de mudanças e finalmente por garantir o encerramento do projeto com sucesso e satisfação das partes interessadas.
Essa é uma área chave de atuação do gerente do projeto, pois permite uma visão global de todos os aspectos do projeto, permitindo definir e tomar as ações necessárias para o bom andamento do mesmo.
Desenvolver o termo de abertura do projeto Desenvolver o Plano de Gerenciamento do Projeto Orientar e gerenciar a execução do projeto Monitorar e controlar o trabalho do projeto Realizar o controle integrado de mudanças Encerrar o projeto ou fase Gerenciamento do escopo do projeto Descreve os processos e atividades que devem ocorrer no projeto de forma a estabelecer, organizar, validar e controlar o escopo do projeto.
Evitando a realização de atividades não necessárias e controlando as mudanças de escopo solicitadas.
Coletar Requisitos Definir o escopo Criar EAP Verificar o Escopo Controlar o escopo Gerenciamento de tempo do projeto Descreve os processos e atividades que devem ocorrer no projeto de forma a estabelecer as atividades a serem realizadas, a sequência de realização, os recursos necessários, a duração e o cronograma das atividades do projeto.
Evitando que a falha no andamento de uma atividade comprometa a finalização pontual do projeto e entrega de seus objetivos.
Definir atividades Sequenciar atividades Estimar recursos da atividade Estimar duração da atividade Desenvolver o cronograma Controlar cronograma Gerenciamento de custos do projeto Descreve os processos e atividades que devem ocorrer no projeto de forma a estimar os custos, definir o orçamento e manter o controle sobre os mesmos.
Evitando que o aumento dos custos possa comprometer a finalização do projeto e sua previsão orçamentária.
Estimar custos Determinar o orçamento Controlar custos Gerenciamento da qualidade do projeto Descreve os processos e atividades que devem ocorrer no projeto de forma a planejar os aspectos de qualidade, realizando a garantia e controle da qualidade do produto e do projeto.
O planejamento da qualidade envolve estabelecer políticas, recursos, ferramentas e técnicas para que o projeto atenda às expectativas de qualidade das partes interessadas.
Evitando que a falta de qualidade cause frustração nos clientes e usuários, além de o retrabalho das atividades.
Planejar a qualidade Realizar a garantia da qualidade Realizar o controle de qualidade Gerenciamento de recursos humanos do projeto Descreve os processos e atividades que devem ocorrer no projeto, de forma a planejar os recursos humanos, montar uma equipe de projeto consistente e vencedora, identificar e trabalhar as capacidades e características inexistentes no time do projeto e gerenciar tantos os aspectos técnicos, como comportamentais e humanos da equipe.
Evitando que a falta de conhecimento e habilidade da equipe comprometa os demais fatores do projeto, como o Processos:
Desenvolver o plano de recursos humanos Contratar ou mobilizar a equipe do projeto Desenvolver a equipe do projeto Gerenciar a equipe do projeto Gerenciamento das comunicações do projeto Descreve os processos e atividades que devem ocorrer no projeto de forma a planejar as necessidades de comunicação das partes interessadas, planejar as comunicações de forma a atender suas necessidades, criar e utilizar mecanismos de distribuição da comunicação, gerenciar as expectativas e prover relatórios de desempenho às partes interessadas do projeto.&amp;&amp;&amp;
Evitando que as falhas na comunicação afetem a motivação das partes interessadas e prejudiquem o andamento do projeto.
Além de isto, evitando o fluxo de informações paralelas e informais que podem atrapalhar o projeto.
Identificar as partes interessadas Planejar as comunicações Distribuir informações Gerenciar as expectativas da partes interessadas Relatar desempenho Gerenciamento de riscos do projeto Descreve os processos e atividades que devem ocorrer no projeto, de forma a planejar o gerenciamento de riscos para que os mesmos sejam identificados e analisados qualitativamente e/ ou quantitativamente, elaborando plano de reposta e/ ou contingência para os mesmos.
Além de isto, contém os processos para monitorar e controlar os riscos.
Evitando que os riscos atuem com elemento surpresa no projeto, prejudicando sua realização e resultado.
Planejar o gerenciamento de riscos Identificar riscos Realizar análise qualitativa de riscos Realizar análise quantitativa de riscos Planejar resposta aos riscos Monitorar e controlar riscos Gerenciamento de aquisições do projeto Descreve os processos e atividades que devem ocorrer no projeto, de forma a planejar as aquisições necessárias, identificar e selecionar fornecedores, administrar os contratos e realizar o encerramento das aquisições.
Evitando que a aquisição de bens ou serviços para o projeto possa comprometer o andamento do projeto e a própria corporação.
Planejar aquisições Conduzir aquisições Administrar aquisições Encerrar aquisições O PRINCE2 (PRojects In Controlled Environments) é um método baseado em processos para o efetivo gerenciamento de projetos.
É um método de domínio público, não proprietário, oferecendo orientação sobre as melhores práticas de gerenciamento de projetos.
Sendo originalmente baseado no PROMPT, um método de gestão de projetos criado por a Simpact Systems Ltd em 1975 que havia sido aprovado em 1979 por o CCTA (the Central Computer and Telecommunication Agency), antigo nome do OGC (Office of Government Commerce), como o padrão a ser utilizado para todos os projetos de sistemas de informação do governo.
O lançamento do PRINCE ocorreu em 1989, substituindo o PROMPT em projetos do governo.
Possui domínio público e os direitos de autor são retidos por a coroa britânica, sendo uma marca registrada da OGC.
O PRINCE2 foi publicado em 1996, tendo recebido contribuições de um consórcio com cerca de 150 organizações européias.
Embora tenha sido desenvolvido originalmente para projetos de Ti, ele é agora aplicado a uma ampla gama de projetos empresariais.
As atividades de planejamento não seguem a tradicional abordagem por atividades, mas sim baseada no produto a ser gerado por o projeto.
As entregas do projeto e/ ou produto são divididas em três categorias principais:
Gerenciamento Técnicos Qualidade Isso é importante, pois, geralmente, os planos se concentram nos aspectos técnicos, ciclo de vida do produto (análise, design, construção implantação), deixando em segundo plano os aspectos gerenciais e de qualidade que são importantes no ciclo de vida do projeto (planos, cronogramas, relatórios de qualidade e desempenho, auditorias, as atividades e os recursos responsáveis por executar- las no projeto.
Também fornece um conjunto de processos de trabalho e especifica o conjunto de informações que devem ser coletadas durante a realização do projeto.
Assim como em outras metodologias, uma linguagem comum é fornecida permitindo que todas as partes interessadas possam se comunicar e entender uns aos outros.
De fácil adaptação e flexível pode ser aplicado a projetos de vários tipos e tamanhos.
Entre as principais características podemos citar:
Foco na justificativa de negócios.
Contém uma estrutura organizacional voltada ao gerenciamento do projeto.
A abordagem do planejamento é baseada no produto e não nas atividades.
Possui grande ênfase na divisão do projeto em fases gerenciáveis e controláveis.
Conforme exposto na metodologia, todo o projeto deve ter um início, meio e final organizado e controlado.
A o iniciar um projeto, para seguir adiante, o mesmo deve ser organizado e planejado de maneira adequada, durante sua execução o controle e a organização devem ser mantidos, para que no final ao encerrar o projeto os pontos pendentes possam ser finalizados de forma organizada e controlada.
Para isto, existe um conjunto de processos que descrevem o que um projeto deve fazer e quando.
A metodologia descreve os papéis, técnicas e os processos do gerenciamento de projetos, conforme abaixo:
Os principais papéis do gerenciamento de projetos são:
O Gerente de Projeto É a pessoa responsável por o projeto, ou seja, a pessoa que mantém o projeto organizado e controlado durante seu início, meio e final.
O gerente do projeto elabora o plano de projeto, determinando as atividades e as pessoas responsáveis por elas, garantido à execução com qualidade e nos prazos acordados.
Estes papéis correspondem aos principais interessados no projeto.
O cliente é a pessoa que está patrocinando o projeto.
O usuário é a pessoa que vai utilizar o produto do projeto ou que será impactado por os resultados do projeto.
Um cliente pode não ser um usuário ou vice-versa.
O fornecedor ou especialista é a pessoa responsável por executar efetivamente as atividades do projeto.
O gerente do projeto deve manter essas pessoas organizadas e coordenadas para que os objetivos do projeto sejam atingidos no prazo, no custo e na qualidade esperada.
Todo projeto deve ter um comitê composto por o cliente (ou executivo), usuário e fornecedor ou alguém que possa representar- los.
Como base nos relatórios de desempenho do projeto preparados por o gerente do projeto, uma visão do progresso e dos possíveis problemas previstos são revisados.
Por sua vez, o comitê fornece as decisões necessárias para continuidade do projeto e resolução dos possíveis problemas.
As principais técnicas de gerenciamento de projetos são:
O Garantia da Qualidade O projeto deve ter uma forma independente de avaliação do seu avanço de forma a atender as necessidades de garantia do negócio (custos e benefícios), garantia do usuário (objetivos e requisitos) e garantia dos técnicos (adequação da solução).
A garantia pode ser feita por um time de garantia.
Todos os projetos necessitam realizar trabalhos administrativos, para manter as comunicações, atualizar os planos, organizar reuniões, preparar pautas e atas, atualizar documentos, etc..
Este trabalho geralmente é feito por o gerente do projeto, mas em projetos maiores ou muitos projetos em paralelo estas atividades podem ser feitas por um escritório de apoio ao projeto.
Os projetos devem estar preparados para mudanças, para isso a metodologia define como deve ser feito o gerenciamento de riscos, o gerenciamento da qualidade controle das mudanças.
Este processo define com o comitê do projeto deve controlar o projeto como um todo.
O comitê do projeto pode autorizar a iniciação de um estágio ou do próprio projeto.
Esse processo é realizado do início ao final do projeto.
Através deste processo é feita a avaliação dos pré-requisitos do projeto, isto é necessário, para garantir que os mesmos estão identificados.
Esse é o primeiro processo a ser realizado, sendo considerado como préprojeto.
Os objetivos deste processo são os seguintes:
Avaliar as justificativas e concordar ou não com o prosseguimento do projeto.
Antes de prosseguir, estabelecer uma base estável de gerenciamento.
Avaliar se existe um Business Case documentado e aceitável para o projeto.
Antes de prosseguir, garantir que existe uma base sólida e aceitável para o projeto.
Chegar a um acordo do comprometimento dos recursos para a primeira fase.
Permitir e incentivar que o comitê do projeto tome posse do projeto.
Definir a linha de base para tomada de decisão durante a realização do projeto.
Garantir que o tempo e esforço necessário por o projeto, seja realizado de maneira sensata e observando os riscos do projeto.
Este processo provê ao comitê do projeto pontos chaves de decisão sobre prosseguir com o projeto ou não.
Através deste processo são descritas as atividades de monitoramento e controle do gerente do projeto para garantir que o desempenho do projeto esteja de acordo com o previsto e para a tomada de ações caso haja distorções em relação a o planejado.
Esse processo constitui o núcleo do esforço do gerente do projeto sobre o projeto, onde a integração do projeto é avaliada, sendo o processo que trata do dia-a-dia do gerenciamento do projeto.
Este processo busca garantir que os produtos planejados são criados e entregues de maneira a:
Garantir que os produtos de trabalho alocados ao time estão efetivamente autorizados e que a verificação e aceitação dos mesmos estão acordadas.
Garantir que o trabalho está em conformidade com os requisitos das interfaces identificadas nos pacotes de trabalho.
Garantir a execução do trabalho.
Analisar com regularidade os relatórios de progresso e realizar previsões.
Garantir que os produtos concluídos estão de acordo com os critérios de qualidade.
Obter aprovação das entregas dos produtos.
O Encerrando o Projeto Através deste processo é feito um encerramento organizado e controlado do projeto.
O responsável por encerrar o projeto é o gerente do projeto, seja por o seu final ou por o encerramento prematuro.
Informações do projeto devem ser preparadas para o comitê do projeto aprovar e confirmar que o projeto pode encerrar.
Os objetivos do encerramento do projeto são, portanto:
Verificar o cumprimento dos objetivos ou apontamentos definidos no Documento de Iniciação do Projeto.
Confirmar que todo Documento de Iniciação do Projeto foi cumprido e que a satisfação do cliente com os resultados foi alcançada.
Formalizar a aceitação dos entregáveis.
Assegurar que todas as entregas foram realizadas e aceitas por o cliente.
Confirmar que os acordos de manutenção e operação estão em vigor (quando aplicável).
Definir todas as recomendações para as ações de acompanhamento.
Capturar as lições resultantes do projeto e completar o relatório de Lições Aprendidas.
Elaborar um Relatório Final do Projeto.
Informar a intenção de dissolução da organização do projeto e de seus recursos para a organização.
Desempenha um papel importante em outros processos, sendo repetido ao longo de a duração do projeto.
Os principais processos que envolvem planejamento são:
Planejando a Iniciação de um Estágio Planejando o Projeto Planejando um Estágio Produzindo um Plano de Exceção É fornecido, por a metodologia, um produto base para iniciar a atividade de planejamento.
A metodologia também possui um framework de planejamento que pode ser aplicada a qualquer tipo de projeto.
Isto envolve:
Estabelecer os produtos necessários.
Determinar a sequência de produção de cada produto.
Definir a forma e o conteúdo de cada produto.
Identificar as atividades necessárias para a sua geração e entrega.
Esta seção apresentou brevemente as principais metodologias de gerenciamento de projetos.
Foram analisados os métodos PRINCE2 e o Guia PMBOK (Um Guia do Conhecimentos em Gerenciamentos de Projetos).
Conforme essas metodologias, para a realização de um projeto de software são necessários diversos processos que devem ser executados até a sua finalização.
Esses processos interagem uns com os outros, sendo necessário organização e controle de forma a desenvolver o software que atenda aos requisitos especificados por as partes interessadas (clientes e usuários).
Diferentemente do PRINCE2, onde os processos de integração estão distribuídos entre os outros processos (figura 5), no PMBOK existe uma área de conhecimento específica para o gerenciamento da integração do projeto devido a sua importância.
De acordo com o PMBOK, essa área descreve os processos e atividades que devem ser realizados para selecionar e coordenar os vários processos necessários para o ciclo de vida do desenvolvimento de software, incluindo o gerenciamento do projeto e os processos de engenharia de software.
Essa área é responsável por os seguintes aspectos:
Entendimento dos requisitos de software e início formal do projeto.
Alocação do gerente do projeto.
Elaboração do plano de desenvolvimento de software (plano do projeto) e planos auxiliares.
Execução das atividades de engenharia de software (análise, design, codificação, testes, implantação, entre outros).
Monitoramento e controle, incluindo as correções que se fizerem necessárias ao longo de o projeto, quando algo não estiver saindo conforme o planejado.
Controlar as solicitações de mudanças.
Garantir o encerramento do projeto com sucesso, ou seja, com a satisfação das partes interessadas, principalmente clientes e usuários do software.
Fatores que influenciam os projetos de software Esta seção descreve os principais riscos de projetos de software avaliados por Ropponen e Lyytinen e Boehm e apresenta os Fatores Críticos de Sucesso e os Processos Críticos de Planejamento apontados por Zwikael e Globerson De acordo com Boehm, muito dos projetos que fracassam poderiam ter seus problemas evitados ou drasticamente reduzidos se houvesse uma preocupação com a identificação e solução de seus maiores riscos desde suas fases iniciais.
Gerentes de projetos de sucesso geralmente são bons gerentes de risco, mesmo que eventualmente não utilizem um processo formal de risco, eles acabam utilizando o conceito geral de exposição ao risco (probabilidade x impacto) para guiar suas prioridades e ações.
Seus projetos tendem a evitar armadilhas e a produzir bons produtos.
A disciplina de gerenciamento de riscos em projetos de software busca formalizar um processo para identificar, avaliar e eliminar os riscos antes que se tornem uma ameaça para o sucesso do projeto ou uma fonte de retrabalho.
O resultado do gerenciamento de riscos é evitar resultados insatisfatórios nos projetos.
Este conceito de resultados insatisfatórios no projeto pode variar de acordo com a visão das partes interessadas do projeto.
Para os clientes e desenvolvedores, custos acima de o orçamento e atrasos no cronograma podem ser um resultado insatisfatório.
Para os usuários, produtos com funcionalidades incorretas, deficiências na interface com o usuário, baixo desempenho e confiabilidade são resultados insatisfatórios.
Para as equipes de suporte e manutenção a baixa qualidade de um software pode ser insatisfatória.
Baseado nestes componentes de resultados insatisfatórios e em pesquisas com vários gerentes de projetos experientes, Boehm identificou uma lista com as dez fontes primárias de riscos em projetos de software, conforme abaixo:
Carências de pessoal Calendários e orçamentos não realistas Desenvolvimento de requisitos e propriedades incorretas Desenvolvimento de interfaces com o usuário incorretas Gold-plating Contínuo fluxo de mudanças de requisitos Inconsistências nos componentes externos fornecidos Problemas nas atividades executadas externamente Deficiências de desempenho Conflitos inerentes da ciência da computação Muitos dos riscos críticos dos projetos estão relacionados ao entendimento do domínio do projeto e a delimitação correta do trabalho a ser realizado.&amp;&amp;&amp;
Esses riscos devem ser inicialmente avaliados no planejamento do projeto e incorporados ao plano do projeto.
Entretanto, isto nem sempre ocorre devido a falhas no gerenciamento de riscos ou principalmente a falhas no gerenciamento da integração do projeto.
Muitas vezes os riscos são identificados, mas os planos de ação e contingência não são avaliados por as outras áreas de conhecimento do gerenciamento do projeto e/ ou incorporados ao plano do projeto.
Estudos realizados por Ropponen e Lyytinen, baseadas no trabalho de Boehm, sobre os 10 maiores riscos de software listados acima, definiram seis componentes de riscos do desenvolvimento de software, são eles:
Riscos de cronograma e prazo Riscos de funcionalidades do sistema Riscos de subcontratação Riscos de gerenciamento de requisitos Riscos de utilização e desempenho dos recursos Riscos de gerenciamento do pessoal Em os estudos realizados foram examinados como o gerenciamento de risco (ou a falta de ele) e fatores ambientais (tais como métodos de desenvolvimento, experiência do gerente) influenciava cada componente de risco.
A análise mostra que tomar consciência da importância do gerenciamento de riscos e de práticas sistemáticas de gerenciamento de projetos tem um efeito sobre os componentes de risco identificados.
Contingências ambientais que afetam todos os componentes de risco também foram observadas.
Isso sugere que os riscos do software podem ser melhor gerenciados por a combinação de considerações específicas de gerenciamento de risco com uma compreensão detalhada do contexto ambiental e das boas práticas de gerenciamento, tais como utilizar e confiar em gerentes de projetos experientes e bem treinados, para a execução de projetos corretamente dimensionados.
Os gerentes de projetos devem realizar os processos de gerenciamento da integração do projeto levando em consideração o ambiente do projeto e seus riscos associados.
Estudos realizados por Zwikael e Globerson, avaliando a literatura existente, identificaram os principais fatores críticos de sucesso dos projetos.
A seguir, são apresentados os fatores identificados em ordem decrescente da freqüência, citados nos trabalhos pesquisados.
Plano do projeto Suporte da alta gerência Recrutamento de pessoal Monitoração e feedback Envolvimento do cliente Requisitos e objetivos do projeto Gastos adequados Tarefas técnicas Comunicação Estratégia do projeto Resolução de Problemas Alta qualidade dos processos Propriedade Comprometimento do time do projeto com os objetivos Aceitação do cliente Expectativas realistas Marcos do projeto menores (frequentes) Gerente do projeto Local Políticas Requisitos de Logística Observando a lista anterior, nota- se que o principal fator crítico de sucesso é o próprio plano do projeto.&amp;&amp;&amp;
De acordo com os estudos, embora quase metade dos processos do PMBOK esteja vinculado ao grupo de Planejamento, muitos gerentes de projetos não conseguem identificar quais são os processos mais cruciais.
O resultado é que o gerente de projeto, que tem pouco tempo e, portanto incapaz de adequadamente realizar todos os processos, pode escolher em realizar os que são mais fáceis ou mandatórios para iniciar o projeto.
Por exemplo, a não existência de um gerenciamento de riscos ou falhas neste processo fazem com que os riscos apontados por Boehm deixem de ser tratados adequadamente, através de um plano de gerenciamento de riscos, prejudicando o projeto.
Zwikael e Globerson partindo da definição que um projeto de sucesso é aquele que finalizou no prazo, no custo, atingiu o desempenho esperado e com alta satisfação do cliente, identificaram os processos críticos do planejamento do projeto.
Abaixo eles são apresentados em ordem decrescente do seu impacto no sucesso do projeto.
Definição das atividades Desenvolvimento do cronograma Desenvolvimento do plano do projeto Planejamento das aquisições Determinar o orçamento Planejamento do escopo Planejamento organizacional Sequenciar as atividades Planejamento da qualidade Planejamento das comunicações Planejamento dos riscos Definição do escopo Estimar durações das atividades Aquisição do time Estimativa de custo Planejamento de recursos Com base nos processos acima e analisando os esforços dos gerentes de projetos, Zwikael e Globerson, verificaram que os gerentes de projetos normalmente, não dividem o seu tempo de forma eficaz entre os diferentes processos, quando aplicado uma análise de custo-benefício'.&amp;&amp;&amp;
Por exemplo, muito tempo é gasto em planejamento de recursos, embora muito pouco tempo seja gasto em processos conceituais, como planejamento da qualidade e planejamento das comunicações.
Esses estudos concluíram que os gerentes de projetos deveriam considerar uma diferente distribuição de esforços entre os processos de planejamento, levando à melhoria da eficácia global do planejamento no ambiente do projeto.
Em essa seção foram apresentados os fatores que influenciam os projetos de software, independente de serem distribuídos ou colocalizados.
Os estudos abordaram as dez fontes de riscos identificadas por Boehm, os seis componentes de riscos do desenvolvimento de software definidos por Ropponen e Lyytinen, os Fatores Críticos de Sucesso e os Processos Críticos de Planejamento apontados por Zwikael e Globerson.
Em esses estudos, observa- se a importância do gerenciamento do projeto em todo o seu ciclo de vida, abrangendo todos os processos do início ao fim do projeto.
Conforme visto nos estudos realizados do PMBOK, essa abrangência é obtida através dos processos de gerenciamento da integração do projeto.
A o analisar o processo de desenvolver o plano de gerenciamento do projeto da área de integração, observamos a importância desse plano para o projeto e a necessidade da integração e coordenação de várias áreas e processos para o seu desenvolvimento.
Além disso, os processos de integração são os responsáveis por garantir a utilização desse plano nas demais fases do projeto (execução, monitoramento e controle, e encerramento).
Os estudos de Zwikael e Globerson mostram que os gerentes de projetos devem investir melhor o seu tempo, distribuindo de forma adequado entre todos os processos de gerenciamento do projeto.
Desenvolvimento Distribuído de Software (DDS) Em esta seção são apresentadas as visões de alguns autores com relação a o desenvolvimento distribuído de software, com suas motivações, benefícios, características e desafios.
Os conceitos relativos ao desenvolvimento distribuído de software são apresentados nas seções abaixo, de acordo com a principal nomenclatura utilizada por os autores em seus trabalhos.
Segundo Audy e Prikladnicki, vivemos num ambiente onde a globalização dos negócios traz novos e grandes desafios para o processo de desenvolvimento de software, tornado esse cada vez mais distribuído e global, ampliando a complexidade do desenvolvimento dos sistemas de informação.
Em este cenário, existem três fatores que tem gerado o ambiente propício para o desenvolvimento distribuído de software, são eles:
A globalização, o aumento da importância dos sistemas de informação e os processos de terceirização (outsorcing).
Para as empresas, estar num ambiente geograficamente distribuído tem permitido usufruir de uma das maiores vantagens da globalização, que se refere ao fato de poderem produzir e comercializar seus bens e serviços em mercados globais.
Além de isto, elas se beneficiam ao aproveitarem as vantagens de custos (dos recursos humanos, benefícios fiscais, etc), qualidade, agilidade e customização às realidades regionais que cada local pode oferecer.
Audy e Prikladnicki apontam o desenvolvimento distribuído de software como um dos desafios do desenvolvimento de software relacionado a processos, sendo que a velocidade, mudanças e competição global estão fazendo com que as empresas redefinam seus processos para atuar em mercados globais.
Para isto, o desenvolvimento distribuído de software tem se apresentado como uma opção devido a o avanço da economia, a sofisticação dos meios de comunicação, a pressão para diminuição dos custos e aumento da qualidade, e a possibilidade de obter recursos em âmbito global.
Segundo os autores, as principais razões envolvidas no DDS são:
Demanda e custos, rapidez de resposta ao mercado, mercado e presença global, rigor e experiência no desenvolvimento, sinergia cultural e escala.
Muitas dessas razões são também citadas por outros autores da área.
Quanto a o nível de dispersão em DDS, os autores identificam quatro situações com base no tipo de distância física e suas características principais, conforme segue:
Mesma localização física:
Os recursos estão todos no mesmo local, não existe diferenças de fuso horário e as diferenças culturais são pequenas.
Distância nacional:
Os recursos estão localizados no mesmo país, pode haver diferenças de fuso horário e as diferenças culturais podem ser maiores que as encontradas na mesma localização física.
Distância continental:
Os recursos estão localizados em países diferentes, mas dentro de um mesmo continente, sendo que o fuso horário exerce um papel importante, podendo dificultar algumas ações.
Distância global:
Os recursos estão localizados em países diferentes e em continentes diferentes, formando em muitos casos uma distribuição global, sendo que o fuso horário exerce um papel fundamental, podendo impedir algumas ações.
Com base nos níveis de dispersão apresentados, os autores definem que o desenvolvimento distribuído de software caracteriza- se por a distância física e/ ou temporal entre alguns elementos (cliente, usuário e desenvolvedores, por exemplo) envolvidos no processo de desenvolvimento, sendo que quando a distância física envolve mais de um continente fica caracterizado o desenvolvimento global de software.
Os autores apresentam os principais desafios do desenvolvimento distribuído de software de acordo com as seguintes categorias:
Pessoas, processos, tecnologia, gestão e comunicação, sendo que os três primeiros são também aplicáveis ao desenvolvimento de software colocalizado.
Relacionados a pessoas:
Capacitação pessoal, coordenação de pessoas, motivação, produtividade e trabalho em equipe, e adicionalmente para DDS, confiança, conflitos, diferenças culturais, ensino de DDS, espírito de equipe, formação de equipes e grupos, liderança e tamanho da equipe.
Relacionados a processos:
Análise de custo/ benefício, especificação de requisitos, DDS, gerência de projetos, gerência de riscos, gestão do conhecimento, manutenção de software, melhoria de processos de software, padrões de desenvolvimento de software, planejamento organizacional, planejamento de projeto, processo de estimativa, qualidade e teste de software e reutilização.
E adicionalmente para DDS, arquitetura de software, engenharia de requisitos, gerência de configuração e processo de desenvolvimento.
Relacionados à tecnologia:
Ferramentas de apoio e infraestrutura de comunicação.
E adicionalmente para DDS, tecnologias de colaboração e telecomunicações.
Relacionados à gestão:
Para DDS, coordenação, controle e interdependência, gestão de portfólio de projetos, gerenciamento de projetos, gerência de riscos, legislação (incentivos fiscais e tributário, bem como, propriedade intelectual), modelos de negócio, e seleção e alocação de projetos.
Relacionados a comunicação:
Para DDS, Awareness, contexto, estilo de comunicação, formas de comunicação, fusos horários.
De acordo com Sangwan, o desenvolvimento distribuído de software tem ganho espaço nos últimos anos, causando um grande impacto em todo o ciclo de vida do desenvolvimento do software, incluindo as práticas de gerenciamento.
Os autores abordam que o desenvolvimento distribuído de software global ou desenvolvimento de software global (GSD ­ Global Software Development) apresentam muitos para os e contras, que devem ser cuidadosamente gerenciados, principalmente com os aspectos de agilidade e disciplina dos processos.
Sangwan Em uma versão simplificada, definem o desenvolvimento de software global como uma maneira de desenvolver software que usa equipes de múltiplas localizações geográficas.
Essas equipes podem ser tanto da mesma organização, como colaboradores ou terceiros de outras organizações, podendo os mesmos estarem localizados num país ou em diversos países.
Em estas situações existe a distância física entre os times que estão trabalhando juntos no desenvolvimento de um sistema de informação incorporando complexidade e desafios interessantes que começam a ser estudados.
Segundo os autores, muitos fatores tecnológicos, organizacionais e econômicos tem incrementado a globalização dos projetos de desenvolvimento.
Entretanto, os autores destacam a inerente dificuldade para coordenar projetos onde os times estão distantes fisicamente, uma vez que existem evidências que o compartilhamento do conhecimento, em times colocalizados, ocorre por seus membros estarem trabalhando próximos uns dos outros.
Conforme Sangwan, os projetos de desenvolvimento de software global apresentam diferentes estruturas e tamanhos, podendo envolver múltiplas divisões, organizações, culturas, e idiomas num único projeto.
Muitas vezes, os participantes nunca se encontraram anteriormente, possuem diferentes níveis de conhecimento e experiências e podem ter motivações que conflitam com os objetivos do projeto.
Algumas dificuldades, apontadas por os autores, se referem a visibilidade das atividades dos outros membros da equipe, falta de informação disponíveis, causando suposições conflitantes com os requisitos ou que introduzem problemas no software, diferentes senso de urgência entre membros, divergências culturais e de idioma, e algumas questões de logística.
Com relação as dificuldades apontadas acima, os autores sugerem como solução ações de socialização e considerações com relação a infraestrutura técnica, práticas de gerenciamento e processos organizacionais.
Para isto, os autores apresentam uma framework com papéis e responsabilidades claramente definidas, uma infraestrutura bemdefinida para facilitar a coordenação e colaboração, e muitos outros aspectos.
Os autores também apresentam alguns fatores críticos de sucesso para o desenvolvimento global de software, são eles:
Redução da ambiguidade Maximizar a estabilidade Entendimento das dependências Facilitar a coordenação Balancear flexibilidade e rigidez Para Karolak, o desenvolvimento de software colocalizados está ficando cada vez mais difícil de justificar.
Com a comunidade de software começando a apreciar a economia de mesclar diferentes habilidades e domínios de conhecimento, e a sofisticação dos meios de comunicação, as pressões de custo e tecnologia estão levando as organizações a adotarem projetos virtuais, pois os mesmos estão apresentando custos mais adequados ou competitivos do que desenvolver um produto de software no mesmo local, na mesma organização ou até no mesmo país.
Alguns obstáculos, como a falta de processos maduros, prevalência de linguagens de desenvolvimento não padronizadas, comunicações instáveis, e ferramentas com capacidades pequenas de integração estão sendo resolvidos e estão diminuído de importância.
Esse fato está permitindo que grupos de diferentes localizações e culturas, e com diferentes expectativas e objetivos se unam como um time global de desenvolvimento de software.
Karolak aponta algumas questões específicas do ambiente de projetos virtuais que os gerentes de projetos estão enfrentando, entre elas, negligenciar os aspectos de integração do projeto, falhas no gerenciamento das diferentes expectativas culturais, na definição clara dos papéis e responsabilidades, e na definição das atribuições de propriedade sobre os processos e produtos.
A essas questões são adicionadas as súbitas mudanças nos usuais custos, prazos, e qualidade que todo o gerente de projeto convive na tentativa de entregar o produto para o cliente.
Segundo o autor, o desenvolvimento virtual de produtos é consideravelmente mais complexo que o gerenciamento do mais complexo projeto colocalizado (&quot;in house&quot;).
O desenvolvimento de produtos globais significa utilizar recursos corporativos independente de sua localização.
Isso gera novas oportunidades, como explorar o potencial de utilização de conhecimento externo, diminuir os custos de desenvolvimento, reduzir o cronograma, atingir altos níveis de qualidade, e acessar mercados até então não disponíveis.
Essas oportunidades estão sendo geradas devido a um crescimento da demanda de mercado maior que o de fornecedores, expansão do mercado global, necessidade de parcerias estratégicas para atingir alguns mercados e crescimento das organizações globais.
Para tirar proveito dessas oportunidades, especial atenção deve ser dada a alguns aspectos críticos, como infraestrutura de comunicação, gerenciamento da configuração do software, e papéis e responsabilidades.
Karolak expõe que o desenvolvimento virtual de software pode assumir muitas formas.
Membros de um mesmo time podem trabalhar em casa ou em escritórios localizados em diferentes locais.
Diferentes times de software podem desenvolver diferentes partes de um produto em diferentes localizações ou o time de desenvolvimento pode estar numa localização e o time de manutenção em outra.
Em muitos casos, organizações virtuais podem utilizar a terceirização como parte de seu projeto de software, seja utilizando recursos de outras área da mesma organização ou de outras empresas.
A figura 6, adaptada de Karolak, mostra o contraste existente entre os times virtuais e não virtuais (colocalizados) de desenvolvimento.
Em times não virtuais todas as atividades são conduzidas numa mesma localização com interações entre os envolvidos realizadas num mesmo momento.
Em times virtuais os membros dos times não estão colocalizados, desta forma a comunicação pode não existir num mesmo momento, fazendo com que reuniões, troca de idéias, e resultados sejam realizadas de forma independente entre os membros.
Essas diferenças geram riscos relativos a perda da comunicação face a face, diminuição da moral da equipe e perda de confiança.
De acordo com Karolak, uma vez identificada a necessidade de um time distribuído é necessário aplicar tecnologia virtual para propiciar a formação e o conjunto da equipe, bem como, gerenciar os riscos constantemente.
O autor aborda vários aspectos importantes para o sucesso de um projeto distribuído, entre eles os citados a seguir:
Necessidade de uma infraestrutura que permita a integração das equipes distribuídas, considerando as necessidades de comunicação e colaboração de cada equipe e dos membros distribuídos, e que a infraestrutura de comunicação possibilite a integração das equipes provendo alternativas quando de a dificuldade de comunicação face a face, ou queda da moral e da confiança entre as equipes.
A divisão do esforço do projeto deve levar em consideração questões como a percentagem de esforço/ orçamento de cada parte interessada, fases do desenvolvimento, arquitetura da solução, conhecimento e experiência, liderança, disponibilidade da equipe distribuída, ferramentas e recursos.
O projeto deve ter documentada a sua estrutura organizacional com a definição das responsabilidades e hierarquia de prestação de contas para cronograma, custo, qualidade, ferramentas e métodos, gerenciamento da configuração, controle da qualidade e resolução de conflitos.
As diferenças culturais das partes interessadas no projeto devem ser pesquisadas e levadas em consideração na formação e integração do time do projeto.
Em a formação da equipe, pessoas que são confiáveis e respeitadas por os demais membros devem ser colocadas em posições de gerenciamento, buscando manter uma estrutura de gerenciamento simples, que facilite a comunicação e a tomada de decisão em cada unidade do projeto.
Deve existir um processo de gerenciamento da configuração com representantes de todas as partes funcionais e organizacionais interessadas, para revisão, aprovação ou rejeição de mudanças no software, garantindo a execução dos processos, uso de ferramentas padronizadas, controle da documentação necessária e comunicação aos demais membros do projeto.
Deve existir um plano de integração e manutenção definindo a estratégia, tipos de ferramentas, mecanismos de testes, critérios de aceitação, documentação e suporte remoto necessário, dos membros das diferentes unidades distribuídas do projeto, para integrar e realizar a manutenção dos componentes do software desenvolvido.
De acordo com Rad e Levin, os times de projetos virtuais tem apresentado um crescimento acelerado durante as últimas décadas, primeiramente graças a o desenvolvimento de ferramentas web para manipulação da comunicação do projeto.
Os autores apontam que alguns dos processos e técnicas tradicionais do gerenciamento de projetos devem ser modificadas, e outras devem ser desenvolvidas completamente para dar suporte as características específicas dos times de projetos virtuais.
Projetos globais com times virtuais têm emergido como um maneira em a qual o custo e a duração dos projetos podem ser reduzidos mantendo um razoável controle sobre o escopo e a qualidade dos projetos.
A globalização dos negócios tem resultado num grande interesse na existência de um conjunto compreensivo de melhores práticas para o gerenciamento de projetos.
Embora os princípios das melhoras práticas para o gerenciamento de projetos possam ser utilizadas em projetos virtuais os limites físicos não fazem parte dos processos de gerenciamento de projetos tradicionais e devem ser adaptados para o gerenciamento das diferentes localizações da equipe.
Segundo os autores, uma mudança fundamental com a utilização de times virtuais é que a localização geográfica não é mais limitante para a definição e procura de oportunidades de negócios que suportam os objetivos estratégicos e competitivos da organização.
Além disso, elas podem usufruir de uma das principais vantagens das organizações com times virtuais, que é permitir que seus recursos possam ser alocados rapidamente e com eficiência de custo.
O custos totais do projeto tendem a diminuir devido a possibilidade de alocação de pessoas experientes, sem que haja a necessidade de custos de viagens, e a utilização de recursos em países onde a taxa cambial está mais competitiva.
O tempo do projeto pode ser diminuído utilizando a produção 24 horas por dia através do desenvolvimento conhecido como follow-the-sun ou round- the-- clock.
Entretanto, principalmente em organizações projetizadas, se a utilização de times virtuais não forem corretamente suportadas e planejadas, seu insucesso pode ser mais devastador e drástico que em projetos com times tradicionais.
Rad e Levin apresentam a necessidade do gerenciamento dos aspectos gerais do projeto (escopo, custo, qualidade, cronograma, aquisições, integração, risco, resolução de conflitos) e das pessoas (comunicação, liderança, habilidades e experiência, sistema de informação, políticas e procedimentos).
Os autores também definem as características dos membros de um time distribuído, conforme abaixo:
Comprometimento com as metas e objetivos do projeto.
Ambiente colaborativo para o trabalho do projeto.
Demonstrar credibilidade em todos os aspectos do projeto.
Comunicação efetiva entre o time do projeto e as demais partes interessadas.
Um senso de comunidade entre o time do projeto.
Ênfase na melhoria contínua pessoal e do time.
Efetiva resolução de conflitos entre os membros do time.
Ênfase na curiosidade criativa nas atividades do projeto.
Reconhecimento da contribuição de outros membros.
Atitude de consideração com os demais membros.
Os autores também descrevem um modelo para avaliação de times virtuais, chamado Ideal.
Algumas características desse modelo serão descritas na seção que aborda alguns modelos de avaliação de projetos de DDS.
De acordo com Carmel, é difícil gerenciar times de software globais.
A globalização do software é como uma força centrífuga que impulsiona as coisas para fora de o centro, da mesma maneira, que dispersa os desenvolvedores para todos os cantos do mundo.
A força centrífuga deve ser balanceada por forças centrípetas, forças contrárias, que direcionam em direção a o centro, ou seja, aos objetivos do projeto.
O autor reconhece que mesmo em projetos &quot;normais «o desenvolvimento de software é cheio de dificuldades e apresentam muitas falhas.
Entretanto, o autor não aborda todos os problemas do desenvolvimento de software e foca nas diferenças existentes entre projetos &quot;normais «e os times globais de software.
Segundo o autor, as diferenças que distinguem os times globais de software dos times normais (não global) são:
Distância (distância dos desenvolvedores entre si e de seus clientes e usuários), diferenças de fuso horário, e cultura nacional (incluindo idioma, tradições nacionais, costumes, e normas de comportamento).
A distância geográfica (dispersão) entre os locais de desenvolvimento tem um impacto direto em todas as formas de comunicação.
A comunicação é menos frequente e mais restrita.
A distância também afeta todas as maneiras de coordenação e controle.
Em geral o gerenciamento de programadores e designers é mais dependente de uma coordenação informal (como na socialização) do que controles e comandos.
Sendo que esse tipo de coordenação necessita de uma comunicação muito intensiva.
Além disso, a distância dificulta a resolução de problemas, a socialização, a supervisão conhecida como &quot;walking around», e a riqueza da comunicação face a face.
O fuso horário agrava os problemas de comunicação, principalmente entre equipes que possuem horários de trabalho que não se sobrepõem.
Em esse caso, o uso de tecnologias de comunicação síncronas sempre compromete um dos times a estender seu horário de trabalho.
Com relação a cultura nacional, essa pode ser considerada uma das mais confusas características das equipes distribuídas.
Cultura nacional envolve tradições étnicas ou nacionais, costumes, normas de comportamento, bem como, idioma.
Times com diferentes culturas tem mais potencial, mais potencial para produtividade como para problemas, em relação a times que possuem grupos com culturas homogêneas.
Problemas podem resultar de desconfiança, falhas de comunicação e falta de coesão.
Os gerentes globais devem manter um conflito sadio de idéias e opiniões, enquanto controlam as diferenças culturais entre os membros do time.
Diversidade cultural também representa um potencial tremendo para trazer novas idéias e perspectivas.
As diferenças culturais podem ser fundidas para criar uma sinergia cultural, com novas maneiras de resolver problemas, desenhar um produto, ou pensar sobre o processo de produção de software.
De acordo com Carmel, os times de software globais têm sido vistos com grande otimismo, pois são organizações sociais em que indivíduos se comunicam e colaboram além de os limites nacionais.
Esse time de desenvolvimento tem sido impulsionado, por fatores como:
Talentos especializados, aquisições, redução do custo de desenvolvimento, presença globalizada, redução do time- to-- market, proximidade do cliente, experiência, rigor no desenvolvimento, tamanho do software, transparência da localização, e ambiente propício para organizações e times virtuais.
Para Carmel, times de software globais são separados por limites nacionais mas que colaboram ativamente num mesmo projeto de software ou sistema.
O autor descreve que existem diferenças entre equipes distribuídas e tradicionais (colocalizadas), sendo que essas características devem ser levadas em consideração no gerenciamento de projetos.
Essas características podem ser vistas na tabela 2.
Com base nas características dos times distribuídos, Carmel apresenta as forças centrífugas e centrípetas que impactam os projetos de DDS.
As forças centrífugas exercem forças contrárias aos objetivos do projeto e que podem levar- lo ao fracasso.
Por outro lado, as forças centrípetas, se bem exploradas, mantêm o time de projeto organizado e focado em seus objetivos.
As forças centrífugas são problemas que fazem com que os times de software globais se afastem dos objetivos do projeto e inibam seu desempenho.
A Dispersão geográfica diz respeito a dificuldade de se gerenciar algo distante.
O espírito de equipe depende de um processo de coordenação, muitas vezes informal, que desmorona quanto os times estão dispersos.
Tecnologias de comunicação porém são alternativas com relação a riqueza e a satisfação geradas por a comunicação face a face, que podem atenuar a perda do contato pessoal em times compostos por múltiplos sites.
Diferenças culturais tratam das diversas dimensões de diferenças culturais, principalmente das diferenças culturais dos desenvolvedores de software de várias nações.
As forças centrípetas são soluções que fazem com que os times de software globais se aproximem dos objetivos do projeto e aumentam sua eficiência.
Infraestrutura de telecomunicação serve com fundação para todas as outras estratégias, técnicas, e soluções utilizadas no projeto.
Tecnologia de colaboração engloba desde ferramentas de trabalho em grupo, como email, até ferramentas especializadas de tecnologias de colaboração para a engenharia de software.
Dispersão significa que a coordenação informal não pode ser feita da maneira usual.
A coordenação deve ser canalizada através das diversas formas de tecnologias colaborativas.
Metodologia de desenvolvimento aborda a necessidade de formalização do processo de desenvolvimento, pois um processo ad hoc não funciona em times globais.
A organização necessita selecionar e adaptar um framework de desenvolvimento para que seja utilizado por todas as equipes.
A arquitetura do produto deve ser concebida cuidadosamente, pois a mesma deve corresponder a arquitetura dos locais de dispersão das equipes.
Desenvolvimento da equipe se refere aos aspectos relativos aos recursos humanos do projeto, mostrando como unir as diferentes equipes para que atinjam os mais altos níveis de desempenho.
As técnicas de gerenciamento abordam a estrutura do time do projeto, o gerenciamento de conflitos, métricas específicas para times globais, reconhecimentos, prêmios e compensações, e a seleção do gerente de desenvolvimento de software global.
Além de os autores descritos na seção anterior, outros autores foram estudados com o objetivo de entender aspectos específicos que influenciam o desenvolvimento distribuído de software, como por exemplo, os desafios da distribuição, os problemas de comunicação, coordenação, colaboração, integração de componentes, calendários e orçamentos.
Estudos com times multifuncionais de desenvolvimento estão recebendo uma crescente atenção por a necessidade de atingir uma grande integração no processo de desenvolvimento de produtos.
Isso é importante, pois alguns estudos apontam que o desempenho das atividades, os comportamentos interpessoais e o desempenho do time são potencializados quando seus membros estão dedicados ao time e/ ou projeto, sendo que esta dedicação é reforçada quando os gerentes de projetos estão próximos aos membros do time de uma maneira interpessoal.
Em a área de engenharia de software especial atenção tem sido dada ao Desenvolvimento Distribuído de Software (DDS), pois além de os problemas usuais, vistos na seção 2.3, os mesmos se deparam com novos desafios que requerem novas habilidades para o desenvolvimento do produto e gerenciamento do projeto.
Dorina Gumm descreve que por muitas razões econômicas e tecnológicas, as empresas estão, cada vez mais, realizando projetos em nível global.
Projetos globais são altamente distribuídos, com especialistas de diferentes empresas, países e continentes trabalhando juntos.
Essa distribuição requer novas técnicas de coordenação de projetos, gerenciamento de documentos e comunicação.
A complexidade da distribuição inclui vários tipos de projeto, tais como projetos de software global, interorganizacional, ou open-source que são distribuídos de diferentes maneiras e enfrentam desafios particulares.
Entender o fenômeno da distribuição é crucial para analisar os métodos e ferramentas existentes ou novas para sua aplicação em projetos distribuídos.
A figura 7 mostra os diferentes componentes que podem estar distribuídos e os desafios mais frequentes desta distribuição.
Dorina Gumm utiliza as seguintes dimensões para descrever a maneira em a qual uma pessoa ou artefato pode estar distribuído.
Essas dimensões são:
Distribuição física ou geográfica Indivíduos e grupos de interessados podem estar distribuídos entre espaços físicos, organizações, e no tempo, enquanto outras entidades podem estar distribuídos entre espaços físicos, organizações, e grupos de interessados.
Distribuição física é uma das características de projetos distribuídos.
Pessoas e coisas podem estar distribuídos entre diferentes localizações físicas em diferentes níveis.
Em alguns projetos, a distribuição de pessoas ou objetos entre diferentes andares no mesmo prédio pode ser uma distância desafiadora.
Outros projetos tratam com localizações distribuídas na mesma cidade, entre diferentes cidades ou países, ou mesmo entre diferentes continentes.
Distribuição organizacional É uma outra característica de projetos distribuídos.
Essa está relacionada a estrutura em que as pessoas trabalham no projeto, mas essa estrutura não necessariamente representa seu trabalho diário ou o ambiente de sua empresa.
Um exemplo de distribuição organizacional é quando várias divisões de uma mesma companhia estão envolvidas num projeto ou quando diferentes instituições trabalham juntas num problema particular.
De acordo com Dorina Gumm, a distância organizacional emerge como o maior desafio em projetos distribuídos, criando dificuldades em manter uma visão comum do produto e em estabelecer processos transparentes.
Distribuição temporal Se refere à sincronização do horário de trabalho, isto é, o período de tempo em que os membros do projeto estão disponíveis para interações em tempo real.
Diferenças temporais têm sua origem na distribuição física devido a possíveis diferenças de fuso horário entre as diversas localizações.
Em alguns casos, essa diferença de fuso horário é vista como uma vantagem pois pode aumentar a velocidade do desenvolvimento.
Distribuição entre os grupos de interessados Artefatos, habilidades, e outras entidades podem ser distribuídas não somente entre localizações e organizações, mas também entre grupos de interessados.
A especificação de requisitos, por exemplo, às vezes está distribuída entre usuários, gerentes, analistas, e desenvolvedores.
Esse tipo de distribuição requer um grande esforço para gerenciamento da documentação quando os requisitos são documentados com diferentes pontos de vista, em diferentes níveis de detalhes, e com várias ferramentas de documentação.
Alguns autores como Kraut e Streeter, Herbsleb, Evaristo e Scudder, Cusumano e Wolf Apontaram a comunicação e a coordenação entre os principais fatores que influenciam o sucesso dos projetos.
Através dos estudos de Whitehead podemos verificar que técnicas de colaboração têm sido desenvolvidas para suportar o ciclo de vida do desenvolvimento de software e maximizar as forças centrípetas.
Blom Mostrou a tendência cada vez mais frequente nos projetos de desenvolvimento de software da integração de componentes prontos e/ ou desenvolvido por outras empresas, como por exemplo, COTS (commercial-off- the- shelf).
A integração destes componentes implica em desafios relativos ao esforço de integração, confiabilidade do funcionamento correto e arquitetura do produto.
Garcia e Hirata mostraram que as questões de calendários e orçamentos não realistas, que geram riscos de cronograma e prazos, continuam presentes nos projetos distribuídos.
Devido a isto, muitas métricas, técnicas de estimativas, desenvolvimentos de modelos, e processos de desenvolvimento para a engenharia de software estão sendo adotados por as organizações para suportar as atividades do time de desenvolvimento, entre elas, Pontos de Função (FP), Pontos de Casos de Uso (UCP) e COCOMO II (Construtive Cost Model II).
Essas ferramentas e técnicas são requeridas para integrar, planejar e controlar melhor a execução do projeto sendo a base para a análise de valor agregado (EVA), recomendada por o PMBOK para monitoramento e controle de projetos.
Conforme Garcia e Hirata, para o efetivo planejamento, monitoramento e controle dos projetos de software, as seguintes questões devem ser observadas:
Uma definição compreensiva e completa do escopo do software, o dimensionamento funcional, utilizando uma métrica de software, uma estimativa paramétrica do esforço e duração e, sistematicamente, monitorar e controlar o desempenho do projeto, utilizando a métrica de dimensionamento funcional.
Esse estudo evidência a importância do processo de monitorar e controlar o trabalho do projeto da área de integração do projeto.
Autores que tratam do gerenciamento de equipes distribuídas, foram estudados para identificar as necessidades e características específicas do gerenciamento de projetos de desenvolvimento distribuído de software.
Entre ao autores encontramos vários termos para este tipo de desenvolvimento, entre eles, Desenvolvimento global de software, Desenvolvimento distribuído de software global, Desenvolvimento de software global, Times de projetos virtuais, Projetos virtuais, Desenvolvimento de produtos globais, Times distribuídos, Times virtuais Times globais de software, Times multifuncionais, entre outros.
Em este trabalho adotamos o termo Desenvolvimento distribuído de software para o desenvolvimento de software que usa equipes dispersas nas diferentes dimensões expostas por Dorina Gumm.
De acordo com Karolak, os conceitos e tópicos apresentados para o desenvolvimento global podem ser aplicados na maioria dos projetos de desenvolvimento distribuído de software, mesmo para aqueles distribuídos numa mesma cidade.
Sangwan Citam que algumas evidências sugerem efeitos similares da distância em times separados por mais de 50 metros, se comparados com times globais.
Já Herbsleb Preconiza que quando os membros do time estão afastados por mais de 30 metros, a frequência da comunicação atinge níveis tão baixos quanto os de membros separados por muitas milhas de distância.
A integração do projeto deve levar em consideração um balanceamento dos esforços em seus processos de forma a minimizar as forças centrífugas e maximizar as forças centrípetas descritas por Carmel.
A inclusão de estudos específicos sobre fatores que influenciam o desenvolvimento distribuído de software, como por exemplo, os desafios da distribuição, os problemas de comunicação, coordenação, colaboração, integração de componentes, calendários orçamentos, permitiu consolidar entendimento e confirmar muitos dos fatores apontados por outros autores.
Os estudos mostraram que os autores concordam em muitos aspectos com relação a as características e fatores de sucesso em times distribuídos, permitindo a seleção de um conjunto de fatores de importância relevante para a construção do modelo do índice de integração.
A base teórica estudada permitiu consolidar os pressupostos sobre o papel do gerenciamento da integração do projeto no desenvolvimento distribuído de software e da importância de definir uma maneira de identificar o índice de integração do projeto, com o objetivo de permitir aos gerentes de projeto a realização de avaliações sistemáticas do projeto, além de priorizar as ações corretivas ou preventivas, necessárias para aumentar os índices dos fatores mais carentes.
Modelos de avaliação de projetos de DDS Alguns modelos de avaliação de projetos de DDS foram estudados com o intuito de servir de base para o modelo do índice de integração.
Em esta seção são apresentados alguns dos modelos pesquisados e suas principais características.
Rad e Levin descrevem um modelo de cinco níveis, chamado de modelo Ideal, para avaliação de times virtuais.
O modelo define esses níveis por a sofisticação do desempenho do time.
Cabe observar que a maturidade de um time e a maturidade da organização a qual ele pertence estão intimamente relacionadas.
Seria muito difícil um time maduro sobreviver numa organização imatura.
De a mesma forma, é muito difícil um time imaturo ser encontrado numa organização madura.
O objetivo do modelo de maturidade do time é medir a habilidade coletiva do time do projeto para entregar projetos que atendam os requisitos, no tempo e custos definidos.
Além disso, o modelo categoriza alguns atributos em estágios progressivos que significam o nível de maturidade.
Esse níveis de maturidade são:
Inicial, 2-Desenvolvido, 3 Reforçado, 4-Avançado e 5-Liderado.
Os atributos avaliados são agrupados em três grandes categorias:
De acordo com a precisão e confiabilidade dos dados, e da quantidade de esforço que pode ser alocado no processo de avaliação, um conjunto de ferramentas podem ser utilizadas para obter uma aproximação da sofisticação do time em manipular o gerenciamento das atividades do projeto num ambiente virtual.
Para isso, uma das ferramentas usadas é um questionário com questões sobre o gerenciamento do projeto de acordo com cada nível de maturidade.
O atributos de cada nível são versões reforçadas dos atributos dos níveis anteriores ou novos.
A figura 8 mostra um exemplo de tópicos incluídos no nível 2.
Organização o Existe um amplo apoio organizacional para times virtuais.
Pessoas o Os membros do time se comunicam entre si.
Coisas o O time desenvolve um termo de abertura detalhado.
Para uma avaliação definitiva da maturidade do time, além de o questionário apresentado, as observações do time devem ser ampliadas e aprofundadas através de extensivas entrevistas com as partes interessadas e uma revisão exaustiva da documentação das políticas, procedimentos e sistemas de apoio.
O modelo da proximidade percebida, de Wilson, é um construto diádico e assimétrico que reflete a percepção de uma pessoa do quão próximo ou distante está uma outra pessoa.
O modelo mostra como a comunicação e os processos de identificação social, bem como, determinados fatores individuais e sócio-organizacionais, afetam os sentimentos de proximidade.
Cada vez mais nos encontramos em situações paradoxais em que estamos fisicamente longe de alguém e nos sentimos muito próximos (&quot;far-but-Close&quot;) ou estamos próximos fisicamente de alguém e nos sentimos distante (&quot;Close-but-Far&quot;).
Tratar de proximidade e distância em termos puramente físicos proporciona uma visão muito limitada de como as pessoas a vivenciam.
Devido a isso, os autores exploraram o fenômeno paradoxal de se sentir perto de colegas geograficamente distantes e propõem um modelo de fatores que predizem esses sentimentos.
Um dos objetivos do modelo é sugerir maneiras por as quais as organizações podem alcançar muitos dos supostos benefícios da colocalização, sem as dificuldades práticas de ter todos os membros trabalhando num único local.
Segundo os autores, existem situações em que a proximidade percebida e a física estão alinhadas, conforme pode ser visto nos quadrantes 1 e 3 da figura 9.
Em outras situações não existe o alinhamento entre a proximidade percebida e a física, como pode ser observado nos quadrantes 2 e 4.
Segundo os autores, o modelo da proximidade percebida é diádica porque as pessoas formam percepções específicas dos outros no decorrer de os seus trabalhos.
Percepções de proximidade são naturalmente assimétricas, por exemplo, um analista da tesouraria pode perceber o gerente de contas como próximo sem que o gestor de conta tenha a mesma percepção do analista.
As percepções de proximidade tem tanto um componente cognitivo como um afetivo.
A dimensão cognitiva refere- se a uma avaliação mental de como um colega parece estar distante.
A dimensão afetiva reconhece que o sentimento de proximidade percebido não é uma avaliação puramente consciente ou racional, está sujeito a emoções e sentimentos.
Primeiramente, o modelo concentra- se nas percepções de distância individuais de cada membro, e não na percepção agregada de todos os membros da equipe ou na percepção de qualquer membro da equipe como um todo.
Em segundo lugar, o modelo destina- se para ser aplicado aos membros das equipes que estão trabalhando numa tarefa complexa e interdependente.
Sem interdependência ou objetivos comuns, membros da organização provavelmente não possuem níveis suficientes de comunicação ou de identificação para avaliar completamente a proximidade percebida.
Terceiro, o modelo se destina a ser aplicável aos membros da equipe com a perspectiva de trabalhar juntos no futuro.
Breve momentos de interação, sem perspectivas de trabalho futuro em conjunto estão fora de o escopo do modelo.
A percepção de proximidade das pessoas com relação a os outros é o produto de suas comunicações e processos de identificação, e os fatores individuais e sócioorganizacionais que os afetam.
Comunicação e identificação são os principais processos que afetam a percepção da proximidade com relação a outro membro.
A frequência, a profundidade e a interatividade das comunicações aumentam as percepções de proximidade.
Essas características da comunicação afetam a percepção de proximidade através de três mecanismos:
Aumenta a importância cognitiva, reduzindo a incerteza e visualizando o contexto dos outros.
A identificação é outro processo fundamental por a qual a proximidade percebida é afetada.
A identificação é um processo de autoclassificação em relação a os outros e é também um resultado desse processo.
Quando se trabalha de forma colocalizado ou à distância, as pessoas podem descobrir ou criar identidades comuns.
Esse é o processo de identificação.
A identificação afeta a percepção de proximidade entre duas pessoas através de três mecanismos:
Criando uma base para um terreno comum, reduzindo a incerteza (tal como a comunicação faz), e por meio de certas atribuições positivas quando os dados reais são ausentes.
Os fatores sócio-organizacionais podem ser divididos em dois, estrutura da rede de trabalho e estrutura das garantias organizacionais.
Existem evidências de que a estrutura da rede de trabalho afeta tanto a comunicação quanto a identificação.
Densidade da rede, por exemplo, é a média do vigor das relações entre os membros da equipe e é maximizada quando todos os membros da equipe são ligados por fortes relacionamentos.
Redes de trabalho densas promovem a identificação com o grupo, fortalece as normas, e o sentimento de participação numa comunidade muito unida.
Portanto, um indivíduo numa rede densa é susceptível de se identificar mais fortemente com os outros indivíduos do grupo, e envolver- los numa comunicação mais frequente e aprofundada, promovendo a proximidade percebida.
A estrutura das garantias refere- se as condições que tornam as coisas parecerem estar seguras e justas numa organização.
Essas garantias incluem promessas, contratos, regulamentos, garantias, recursos legais, processos padronizados e alguns recursos de tecnologia.
Por exemplo, uma organização com fortes garantias estruturais pode ter um rigoroso padrão de contratação.
Como resultado, os empregados da organização se sentem confortáveis com a comunicação à distância com colegas, pois sentem- se seguros que eles estão lidando com profissionais competentes e confiáveis.
Garantia estruturais podem aumentar significativamente os processos de comunicação e identificação entre indivíduos à distância.
Com um elevado nível da estrutura das garantias, as pessoas terão mais propensão para se comunicarem abertamente, para divulgar informações pessoais e para descobrir ou criar uma identidade comum com os outros membros da equipe.
A estrutura das garantias desenvolve uma expectativa de que os problemas serão tratados de forma justa e rápida antes de sair fora de controle.
Em o trabalho geograficamente disperso, o potencial de interpretação errada é maior do que em equipes colocalizadas, mas com sistemas e funções bem definidas pode- se reduzir as chances de falhas no entendimento das expectativas ou intenções.
Eles também podem ajudar a reduzir a incerteza da interação à distância e o tempo necessário para renegociar as regras das interações, cada vez que as pessoas começam a trabalhar juntos à distância.
Embora as variáveis relativas as diferenças individuais tenham recebido pouca atenção em pesquisas sobre equipes geograficamente dispersas, os autores acreditam que algumas características individuais afetam a percepção de proximidade através de sua influência sobre a comunicação e identificação.
Como trabalhar à distância tem sido associada a sentimentos de isolamento e incerteza, é esperado que indivíduos que estão dispostos a lidar com essas condições serão mais propensos a se envolver em comunicação com outras pessoas distantes e se identificar com elas.
De a mesma forma, os indivíduos que estão confortáveis e acostumados a lidar com o trabalho virtual serão mais propensos a se envolver nos processos de comunicação e identificação levando à percepção de maior proximidade com os outros indivíduos distantes.
Este modelo destaca variáveis importantes sob o controle das organizações que poderiam ser usadas como alavancas para aumentar a sensação de proximidade, independentemente da distância física real.
Isso é importante, uma vez que os gerentes de projetos não têm um bom entendimento do que influência os relacionamentos à distância e acabam recorrendo a reunir os recursos face a face (condição com que está familiarizado).
Se as variáveis do modelo forem cuidadosamente gerenciadas por as organizações, elas podem reduzir os custos humanos e financeiros relativos a reunir os membros da equipe.
O modelo sugere que muitas das variáveis podem ser controladas por as organizações e alavancadas para aumentar a sensação de proximidade entre os membros dos grupos virtuais.
Embora o foco do modelo tenha sido na importância de a percepção de proximidade no âmbito dos grupos amplamente distribuídos, os autores acreditam que também é relevante para outras modalidades organizacionais e para a percepção da proximidade entre duas entidades distintas, por exemplo, entre um supervisor e um subordinado, ou entre um membro da equipe e um líder de equipe externa.
Muitos dos fatores do modelo também são relevantes para os membros da equipe que trabalham em proximidade física.
Pois de certa forma, todas as empresas são sistemas distribuídos do conhecimento que precisam acessar e integrar diversos conhecimentos mantidos por os indivíduos e a percepção da proximidade pode ajudar a responder a este desafio, mesmo para os membros colocalizados.
O modelo PDI (Perceived Distance Index) foi baseado em estudos de caso conduzidos em projetos de softwares distribuídos ao longo de cinco anos no Brasil e na Índia.
O modelo apresentado por Audy e Prikladnicki, se baseia na definição de distância percebida apresentada por Evaristo E nas forças centrífugas em equipes de DDS propostas por Carmel.
O objetivo deste modelo é quantificar a distância percebida por os integrantes de um projeto de DDS.
Esta distância percebida pode ser maior que a distância real existente nas dimensões de distribuição descritas por Dorina Gumm.
Em cada dimensão é possível observar a distância percebida por cada integrante da equipe e que pode diferir da distância real da distribuição.
Essa percepção de distância percebida possui um papel fundamental na dispersão do projeto.
Por exemplo, se na distribuição temporal os membros dos times estabelecerem processos e ferramentas de comunicação eficientes para comunicação assíncrona quando trabalham com fusos horários diferentes, mesmo que a distância temporal seja grande a distância percebida tende a ser baixa.
Caso isso não ocorra, a distância temporal percebida será alta e funcionará como agressor aos objetivos do projeto.
De acordo com Prikladnicki e Audy, uma das principais dificuldades enfrentadas por os gerentes de projetos de equipes distribuídas de desenvolvimento de software é a falta de percepção da distância percebida existente entre colaboradores de um mesmo projeto.
A distância percebida pode ser bem maior do que as efetivamente existentes nas dimensões expostas anteriormente.
Por exemplo, equipes distribuídas de uma mesma empresa, que compartilham a mesma cultura organizacional, mesmo que em diferentes países, podem apresentar menos problemas, que equipes com integrantes de duas empresas, com culturas organizacionais diferentes, trabalhando num mesmo local.
Em este caso, o que limita a confiança, a cultura, o contexto, a comunicação e a coordenação em projetos de DDS é a distância percebida e não a distância física.
Em este modelo, as cinco forças centrífugas foram mapeadas em seis fatores, conforme a tabela 4.
Com base nestes fatores foram definidos as fases e os questionários a serem utilizados no modelo.
Abaixo são apresentados as fases, um exemplo de pergunta do questionário e o resumo dos resultados obtidos numa das aplicações do modelo.
Para avaliação dos fatores acima (tabela 4), o modelo está dividido em três fases, Coleta, Cálculo e Análise e ação, conforme segue:
Coleta é a fase onde cada integrante da equipe responde um conjunto de perguntas divididas em dois grupos.
O primeiro grupo é de perguntas relacionadas ao perfil do colaborador e o segundo grupo a perguntas relacionadas a cada um dos fatores do modelo.
Cálculo é a fase onde a partir de as respostas dos integrantes da equipe, são gerados dois índices:
Índice do fator e índice do colaborador.
O índice do fator determina a participação do fator na distância percebida da equipe como um todo.
O índice do colaborador representa a distância percebida de um integrante da equipe em relação a a equipe do projeto.
Análise e ação é a fase onde os dados coletados e calculados nas fases anteriores são interpretados.
É possível observar o comportamento dos fatores avaliados e da equipe do projeto, e então analisar possíveis causas de problemas.
O primeiro grupo de perguntas avalia o perfil do colaborador, como por exemplo, cargo, país onde trabalha, país de nascimento, anos de experiência com desenvolvimento de software, data que iniciou no projeto, entre outros.
O segundo grupo de perguntas está relacionado aos fatores avaliados no modelo.
Cada fator do modelo é avaliado de acordo com seu grau de impacto no mesmo, 1 para baixo impacto e 7 para alto impacto no projeto.
Abaixo segue um exemplo de pergunta do segundo grupo para o fator de Comunicação.
Este modelo foi aplicado em equipes distribuídas entre o Brasil e a Índia com resultados bastante satisfatórios.
Abaixo segue os resultados obtidos por Audy e Prikladnicki:
Conforme se observa na tabela 5, os resultados foram divididos por país e por os papéis dos integrantes no projeto.
Embora pudesse ser esperado que os fatores, Cultura, Fuso-horário e Distância física apresentassem os maiores índices de distância percebida, os resultados acima mostraram que mesmo em projetos de DDS, os fatores que mais são percebidos são Contexto (Coordenação), Confiança (Espírito de equipe) e Comunicação.
Os estudos realizados identificaram alguns modelos de avaliação de projetos de desenvolvimento distribuído de software.
O modelo Ideal, de Rad e Levin, se propõe a avaliar a maturidade de times virtuais através da aplicação de um questionário de acordo com a categoria de atributos definida por os autores.
Além disso, o modelo pressupõe uma exaustiva análise da documentação dos projetos e da organização e entrevistas extensivas com os membros do projeto e das partes interessadas.
O modelo da Proximidade Percebida, de Wilson, destaca variáveis importantes sob o controle das organizações que poderiam ser usadas como alavancas para aumentar a sensação de proximidade, independentemente da distância física real.
Entretanto, esse modelo não apresenta mecanismos formais para identificação e avaliação destas variáveis.
O modelo PDI (Perceived Distance Index), de Audy e Prikladnicki, foi baseado em estudos de caso conduzidos em projetos de softwares distribuídos, ao longo de cinco anos, no Brasil e na Índia.
O modelo apresentado por Audy e Prikladnicki, se baseia na definição de distância percebida apresentada por Evaristo A metodologia utilizada possui enfoque científico, conforme tabela 6, baseado na construção de um modelo e teste do mesmo em campo, visando analisar a aplicabilidade do modelo para identificar o índice de integração em projetos de software em ambiente de DDS.
Para isso, após a construção do modelo, como parte da pesquisa qualitativa exploratória, o mesmo foi testado com base em dados empíricos coletados através da aplicação do modelo em múltiplos estudos de caso.
A pesquisa realizada é de natureza aplicada, pois busca resolver problemas práticos na área do gerenciamento da integração de projetos de software em ambiente de DDS.
Área esta que está vinculada a área da computação dentro de as ciências exatas.
A estratégia qualitativa foi utilizada no estudo pois esta estratégia, de acordo com Wohlin, estuda o objeto da análise em seu ambiente natural.
Essa característica está alinhada à nossa proposta de construir e aplicar o modelo desenvolvido em projetos de desenvolvimento distribuído de software e interpretar os fatos observados nesta aplicação.
Essa abordagem é particularmente adequada para o desenvolvimento de novas teorias, em áreas ou abordagens ainda não consolidadas, requerendo uma forte base teórica.
Esta pesquisa é do tipo exploratória pois tem como objetivo ajudar a compreender a situação-problema enfrentada por o pesquisador, neste caso, a integração de projetos de software em ambiente de DDS.
O tipo de desenho de pesquisa é Nãoexperimental e transversal, pois foram coletados dados de diversos projetos em diferentes organizações de desenvolvimento distribuído de software, num único momento dos projetos, com o propósito de analisar a percepção dos respondentes com relação a os fatores do modelo de identificação do índice de integração, proposto neste estudo.
O método de pesquisa utilizado foi o estudo de caso.
De acordo com Wohlin, um estudo de caso é conduzido para investigar uma entidade ou fenômeno num específico momento do tempo.
Esse método é uma investigação empírica que investiga um fenômeno contemporâneo dentro de seu contexto da vida real.
Em esse método a base teórica deve ser consistente, sendo que no início da pesquisa o estudo teórico deve ser amplo e complementar ao tema central da pesquisa.
A unidade de análise definida para o estudo se refere ao processo de integração em projetos de software em ambiente de DDS.
O estudo de caso foi desenvolvido em múltiplas organizações de desenvolvimento de software em projetos com ambiente de DDS, caracterizando múltiplos casos ou múltiplos estudos de caso.
Em este documento, em alguns casos, foi adotado o termo &quot;estudos de casos «para os múltiplos estudos de casos realizados.
As organizações selecionadas foram escolhidas por conveniência, levando- se em consideração a similaridade dos sites para replicação do estudo.
Para a condução dos estudos de casos foi desenvolvido o Protocolo de Análise para Estudos de Caso com base no seguinte processo:
Definição e planejamento:
Desenvolvimento da teoria, seleção dos casos e projeto do protocolo de coleta de dados.
Preparação, coleta e análise:
Condução dos estudos de caso individuais e seus resultados.
Análise e conclusão:
Análise e conclusão dos múltiplos estudos de casos cruzados, modificação da teoria, desenvolvimento de implicações e geração do relatório de casos cruzados.
A realização de múltiplos estudos de casos está relacionada a validade e confiabilidade da pesquisa, pois um dos aspectos relevantes para a utilização de múltiplos estudos de caso, se refere ao aumento da validade externa do estudo e sua possível generalização.
Para avaliar a validade e confiabilidade do instrumento de coleta de dados ou construto, além de a validação de face e conteúdo e pré-teste, os dados coletados foram analisados através da técnica de estatística denominada Allfa de Cronbach.
Os dados coletados também foram submetidos à outras análises, utilizando ferramentas de análise de dados do Excel e do software SPSS, com a ajuda de um profissional e acadêmico da área de estatística, mas seus resultados não se mostraram relevantes para os objetivos da pesquisa.
A análise fatorial é um tipo de procedimento destinado à redução e ao resumo dos dados.
Esta análise foi realizada para estudar as relações entre o conjunto de muitas variáveis (fatores do modelo proposto) interrelacionadas verificando se o mesmo poderia ser representado em termos de alguns fatores fundamentais.
Entretanto, os estudos mostraram que não haviam evidências de que um fator do modelo proposto pudesse ser avaliado através de qualquer outro fator do modelo.
A análise de clusters é uma técnica utilizada para classificar objetos ou casos em grupos relativamente homogêneos chamados de clusters (ou conglomerados).
Os objetos de cada cluster tendem a ser semelhantes entre si, mas diferentes de objetos de outros clusters.
Esta análise foi aplicada com o intuito de agrupar os respondentes em cluster com o objetivo de identificar características comuns entre eles.
Entretanto, esta análise não resultou em agrupamentos significativos para a pesquisa, além de isto, o agrupamento dos respondentes dentro de o conjunto de projetos não se mostrou relevante, pois de certa forma, os respondentes já estavam agrupados por projetos e avaliavam ambientes similares mas próprios de cada projeto.
A análise de correlação entre os fatores do modelo foi realizada, pois era esperado uma correlação entre os fatores do modelo, principalmente com o fator dispersão.
Os resultados desta análise estão descritas na seção «5.3.5.
Análise de correlação dos fatores do modelo».
A estatística descritiva dos estudos de casos foram geradas e utilizadas como apoio em algumas análises, entretanto, as mesmas não foram aprofundadas pois os princípios aplicados à estudos estatísticos não são aplicados a estudos de casos, pois os mesmos não são selecionados como amostras representativas de uma população.
Desenho de pesquisa Para encaminhamento e direcionamento da pesquisa foram definidas algumas fases e suas respectivas etapas.
Essas etapas foram construídas de forma que a etapa anterior serve de base para a próxima etapa, permitindo um acompanhamento dos avanços da pesquisa e fornecendo os subsídios necessários para a próxima fase.
Estudos de Casos Modelo Final desenho de pesquisa (Figura mostra as principais etapas do desenvolvimento da pesquisa realizada.
Etapas da pesquisa Abaixo segue a descrição sucinta de cada uma das etapas realizadas durante o decorrer da pesquisa.
Base Teórica: A base teórica foi aprofundada, na etapa inicial da Fase 1 da pesquisa, para definição dos fatores que impactam na integração dos projetos de software em ambiente de DDS e elaboração dos instrumentos de coleta de dados do modelo.
Além disso, uma análise mais profunda do modelo PDI (Perceived Distance Index) foi realizada para permitir a definição das fases de coleta, cálculo, e análise e ação do modelo de identificação do índice de integração proposto.
Modelo Preliminar`: Em o modelo preliminar` (modelo preliminar uma linha) foi desenvolvido o modelo inicial proposto, levando em consideração os fatores que influenciam a integração de projetos de software identificados na base teórica.
Esse modelo era composto por os instrumentos de coleta de dados a serem utilizados nos estudos de casos e na definição dos mecanismos de cálculo e análise dos dados.
Esses mecanismos foram desenvolvidos com base no estudo aprofundado do modelo PDI para definição das adaptações necessárias ao novo modelo do índice de integração.
Em esta fase foi realizada a validação de face e conteúdo, sendo que os desvios e sugestões identificados foram avaliados e incorporados ao modelo.
Revisão por Especialistas:
Em esta etapa foi realizada uma avaliação dos mecanismos de cálculo e análise de dados do modelo preliminar' por um especialista da área de gerenciamento de projetos de software e por um dos autores do modelo PDI.
Os desvios e sugestões identificados nessa fase foram avaliados e incorporados ao modelo antes da realização do pré-teste e dos estudos de casos.
Modelo Preliminar`: Em esta etapa, modelo preliminar duas linhas, foi gerado o modelo revisado com as correções dos desvios identificados por os especialistas e por as sugestões que foram considerados relevantes para o sucesso da pesquisa.
Em essa fase também foi realizado um pré-teste com a aplicação do modelo num projeto piloto para avaliação de todo seu ciclo.
As adequações necessárias foram implementadas para a realização dos estudos de casos.
Estudos de casos:
Esta etapa deu início a Fase 2 da pesquisa.
Em essa etapa foram realizados os estudos de casos com a aplicação do modelo de identificação do índice de integração em projetos de desenvolvimento distribuído de software definido nesta pesquisa.
Para isso, foram selecionados 15 projetos em 6 organizações de desenvolvimento de software para realização dos estudos de casos.
O objetivo era testar o modelo de identificação do índice de integração em projetos de DDS selecionados.
Modelo final:
Com base nas etapas anteriores e principalmente com os resultados dos estudos de casos, foram feitos os ajustes finais no modelo.
Em esta etapa, foram feitas as análises dos dados coletados, melhorias no modelo preliminar' e a geração deste documento com a descrição da pesquisa realizada e dos resultados alcançados, finalizando este trabalho.
Seleção dos participantes A seleção das organizações e projetos participantes levaram em consideração a unidade de análise e os objetivos da pesquisa de forma a responder a questão de pesquisa.
Esta seleção foi feita de forma não probabilística, sendo dirigida por conveniência levando- se em consideração a similaridade dos ambientes para replicação do estudo.
A seleção dos respondentes do projeto foram realizadas de maneira aleatória, buscando sempre que possível o máximo de respondentes e uma diversificação dos mesmos entre os papéis do projeto.
Para a seleção das organizações buscou- se um sub-grupo de elementos representativos do grupo de organizações de desenvolvimento de software de acordo com os seguintes critérios:
Mínimo de 5 e máximo de 10 organizações de desenvolvimento de software.
Desenvolver projetos de software em ambiente de DDS.
Possuir locais de trabalho dispersos geograficamente.
Possuir um conjunto de processos bem-definido, de preferência com algum nível de maturidade.
Possuir profissionais de gerenciamento de projetos para a condução dos projetos.
Possuir equipes de desenvolvimento no Rio Grande do Sul.
Possuir disponibilidade de profissionais para participar do estudo de caso.
A seleção dos projetos foi realizada em conjunto com as organizações participantes buscando- se um sub-grupo de elementos representativos do grupo de projetos de software em ambiente de DDS de acordo com os seguintes critérios:
Mínimo de 1 e máximo de 5 projetos de desenvolvimento de software.
O projeto deve ser desenvolvido em ambiente de DDS.
O projeto deve ser conduzido por um gerente de projeto.
O projetos deve ser de manutenção ou de desenvolvimento de software.
Possuir locais de trabalho dispersos geograficamente com pelo menos duas unidades.
Estar em planejamento, execução ou encerramento de acordo com os grupo de processos do PMBOK.
Possuir parte da equipe de desenvolvimento no Rio Grande do Sul.
Possuir disponibilidade de profissionais para participar do estudo de caso.
A seleção dos respondentes foi realizada em conjunto com os gerentes dos projetos selecionados de acordo com os seguintes critérios:
A participação do gerente do projeto ou responsável por o projeto era mandatória.
Os respondentes deveriam pertencer a uma das unidades (locais) do projeto.
Os respondentes deveriam desempenhar uma das seguintes responsabilidades:
Gerenciamento, Desenvolvimento ou Qualidade.
Os respondentes deveriam ter, ou ter tido, participação ativa num dos papéis do projeto.
Os respondentes deveriam ter disponibilidade para participar do estudo de caso.
Os respondentes poderiam ser de outras empresas, terceirizados, desde que atendessem aos demais critérios estabelecidos.
Em esta seção descrevemos o perfil das 6 empresas selecionadas e dos 15 projetos participantes da pesquisa, entretanto, alguns informações não serão divulgadas devido a questões de sigilo e acordos de confidencialidade assinados entre o pesquisador e algumas empresas participantes.
Abaixo segue a lista das empresas e organizações participantes em ordem alfabética e uma pequena descrição de suas características.
Dbserver A empresa desenvolve soluções informatizadas abrangendo todo o ciclo de vida de desenvolvimento de software.
A os serviços de projeto, construção e testes agrega a oferta de ferramentas para produtividade desse ciclo de vida dentro de o clientes.
A empresa está sediada no parque tecnológico Tecnopuc e possui experiência a nível nacional e internacional.
Possui seu foco de atuação em tecnologias de software, desenvolvendo projetos corporativos de missão crítica para banco de dados e web.
Os serviços abrangem o ciclo de vida completo de desenvolvimento de sistemas, utilizando os centros de competências em verticais de mercado como varejo, finanças, utilities, governo, telecomunicação, comunicação, educação, saúde e manufaturas.
Possui três linhas de desenvolvimento de projetos, Linha Ágil, Fábrica de software e RUP, com aplicação de processos de desenvolvimento aderente aos preceitos de qualidade presentes nos modelos e metodologias de referência como Métodos Ágeis, CMMI, RUP PMI.
Entre seus clientes estão:
Hp, Tlantic/ Sonae, Visanet, Sicredi, Zaffari, RBS, entre outros.
A DELL computadores possui um centro de pesquisa e desenvolvimento em ebusiness, localizado no parque tecnológico Tecnopuc.
Essa organização é responsável por o desenvolvimento dos sistemas de e-business corporativo que são utilizados internamente por outras unidades de negócios da DELL.
Os projetos desenvolvidos nesse centro possuem clientes e usuários internos e são projetos pagos por as unidades requisitantes.
Todos os projetos são desenvolvidos para suprir a demanda interna da empresa, sendo que a distância entre os times dos projetos e os clientes e usuários são muito grandes.
Devido a o fato do GDC Brazil (Global Delivery Center Brazil) ser sediado em Porto Alegre e seus clientes ficarem localizados principalmente nos Estados Unidos, os projetos geralmente possuem distância continental.
O centro de pesquisa e desenvolvimento da Hp investiu cerca de R$ 267 milhões em pesquisa e desenvolvimento nos últimos 5 anos.
O laboratório da Hp no Brasil tem, cada vez mais, trabalhado em projetos estratégicos de pesquisa e desenvolvimento de produtos e soluções que irão compor o portfólio da empresa globalmente.
O propósito da organização de P&amp;D da Hp no Brasil é entregar produtos inovadores que provêem vantagens competitivas para a Hp, trabalhando em colaboração com unidades de negócios e alavancando conhecimentos horizontais entre elas.
Esse centro está localizado no parque tecnológico Tecnopuc e possui três laboratórios:
Enterprise Computing Lab, Enterprise Printing Lab e Personal computing Lab.
Esse centro reúne cerca de 600 colaboradores, entre profissionais próprios e parceiros de universidades e institutos de pesquisa.
O centro desenvolve novos produtos e soluções a partir de a realização de pesquisa básica e aplicada.
A Hp Software, localizada no parque tecnológico Tecnopuc, é uma divisão da Hp ligada a área de Applications Services da Hp Enterprise Services, antiga EDS.
Essa divisão desenvolve sistemas de informação nas plataformas.
Net e Java para clientes corporativos da Hp.
Entre seus clientes podemos citar:
Caixa Econômica Federal, Sicredi, Rede Globo, ANBIMA, entre outros.
Esta operação desenvolve soluções customizadas para seus clientes desde o levantamento de requisitos do software até sua implementação em produção, possuindo grande experiência nas áreas bancária, financeira e de comunicação.
É uma provedora de serviços e tecnologias, desenvolvimento e soluções SAP.
Os serviços de desenvolvimento de software podem ser contratados nas modalidades de consultoria, outsorcing/ offshoring e fábrica de projeto.
Entre os serviços de desenvolvimento disponíveis estão a manutenção evolutiva de sistemas, desenvolvimento de sistemas sob medida, tunning de aplicação, integração de sistemas, migração de tecnologia, troubleshooting, e projeto e arquitetura de sistemas.
Entre seus principais clientes estão empresas dos segmentos de energia, agribusiness, tecnologia e informação, transporte/ logística, petroquímica e varejo.
Entre eles, o Wal-mart Brasil, AES Sul, TotalBanco, Marcopolo, Vonpar, Stemac, Mercúrio, entre outros.
É uma empresa brasileira provedora de soluções de Ti sediada no parque tecnológico Tecnopuc.
Foi criada a partir de o espírito inovador do grupo Sonae, com o objetivo de exportar serviços e software para a Europa.
A Tlantic busca a integração empresa-universidade entre os profissionais altamente qualificados e os desafios da realidade do mundo da tecnologia da informação, incorporando um centro de pesquisa e desenvolvimento para a área de varejo.
Suas soluções englobam o comércio eletrônico, sistemas de gestão de escalas, software de POS para aplicações móveis, sistemas para integração de processos e integração de aplicações, entre outros.
Entre os clientes da empresa estão o grupo Sonae, o Boticário, Supermercados Extra, entre outros.
Entre os serviços oferecidos destacam- se a consultoria inicial para ajudar os clientes a definir o projeto, desenvolvimento e implementação de um sistema ou aplicativo, e serviços de manutenção e suporte.
Utiliza um processo de desenvolvimento de software com qualidade, que foi criado através das melhores práticas do RUP, PMBOK, e do CMMI.
Os 15 projetos selecionados possuem as características apresentadas na tabela 7.
Estes projetos foram selecionados em conjunto com as organizações participantes com base nos critérios de seleção definidos para os estudos de casos e suas características.
As características selecionadas buscaram avaliar o modelo em projetos com diferentes ciclos de vida, em diferentes situações com relação a o grupo de processos predominante no momento da pesquisa e o tipo de distância existente entre suas unidades.
Com relação a o ciclo de vida os projetos foram selecionados com base nas seguintes definições:
Cascata: Cada etapa do desenvolvimento de todo sistema é feita de forma completa antes de iniciar a próxima.
Incremental: O sistema é dividido em partes (módulos).
Cada etapa do desenvolvimento dos módulos é feita de forma completa antes de iniciar a próxima etapa.
Iterativo: O ciclo de desenvolvimento é realizado para cada requisito ou grupo de requisitos de maneira iterativa até que todos os requisitos estejam incorporados no sistema.
Conforme pode ser visto na tabela 7, os projetos selecionados possuem uma diversificação em termos de tamanho, número de unidades (locais) envolvidos, ciclo de vida, grupo de processos predominante e tipo de distância existente no projeto.
Líder de teste, Designer, Analista de suporte ao ambiente e Auditor de processos/ SQA.
Partindo da base teórica foram realizadas diversas etapas para a construção do modelo do índice de integração de projetos de software em ambiente de DDS.
As atividades realizadas em cada uma dessas etapas estão descritas neste capítulo.
Definição dos fatores Em a base teórica estudada, pode- se verificar que, além de as áreas de conhecimento do PMBOK (Escopo, Tempo, Custo, Qualidade, Recursos Humanos, Comunicações, Riscos e Aquisições), em projetos distribuídos de software merece destaque o processo de gerenciamento da integração.
Os aspectos relativos ao gerenciamento da integração dos projetos sofrem forte impacto devido a distribuição das equipes.
A dispersão dos times de desenvolvimento dificulta o gerenciamento do projeto, incorporando quebras nos controles tradicionais e mecanismos de coordenação, perda da facilidade de comunicação, do sentimento de equipe e diferenças culturais.
Devido a isso, uma pesquisa na literatura foi realizada com o intuito de identificar os principais fatores que afetam os projetos de desenvolvimento de software em ambiente de DDS e buscar um modelo que permitisse identificar o grau de convergência destes fatores com os objetivos do projeto levando em consideração a percepção de seus integrantes.
Os fatores incorporados no modelo foram os que apresentaram maior relevância na literatura pesquisada.
Em esta seção apresentamos as principais referências características, de cada fator, que são importantes para a integração do projeto e que foram incorporadas para serem identificadas por o modelo proposto.
Dispersão Uma das principais características do desenvolvimento distribuído de software é que as equipes de desenvolvimento não estão situadas numa mesma localização geográfica.
De acordo com Dorina Gumm, os projetos globais são altamente distribuídos com especialistas de diferentes empresas, países e continentes, trabalhando &quot;juntos», tal distribuição requer novas técnicas de coordenação do projeto, gestão documental e comunicação para sua efetiva integração.
De acordo com Gumm, independente do tipo de distribuição o conceito de distância percebida, descrito por Evaristo e Scudder, desempenha um papel importante na dispersão dos projetos.
O conceito de distância percebida é aplicável não somente à distribuição física, mas também, para a distribuição temporal ou organizacional.
A distância percebida em projetos distribuídos afeta a escolha dos meios de comunicação e as atividades de coordenação.
A dispersão dos times cria um ônus adicional nos mecanismos de coordenação e controle.
Karolak aponta que a dispersão apresenta riscos e que muitos desses riscos dependem da qualidade do gerenciamento do projeto.
Os principais riscos das equipes distribuídas, ou times virtuais, apontados são:
A diminuição da moral, a perda da comunicação face a face e a falta de confiança.
Definir o idioma a ser utilizado por o time, realizar atividades de socialização, adotar tecnologias virtuais para facilitar a comunicação e o compartilhamento de informações, identificar o time e seus líderes, e definir a documentação necessária para agrupar as equipes distribuídas são preocupações inerentes no desenvolvimento distribuído de software.
Audy e Prikladnicki apresentam os principais desafios gerados por o DDS.
São eles:
Pessoas, Processos, Tecnologia, Gestão e Comunicação.
Segundo os autores, os mesmos devem ser tratados antes que gerem grandes problemas.
Esses problemas podem ocorrer devido a falta de percepção da distância existente entre os colaboradores num mesmo projeto.
Essa falta de percepção geralmente é causada por um conjunto de fatores, além de a distância física, tais como diferenças culturais e dificuldades de comunicação.
Os estudos pesquisados mostram que a dispersão afeta vários aspectos dos projetos de desenvolvimento distribuído de software e que avaliar e incorporar as diferenças geográficas, temporais, culturais e de idiomas nos processos do projeto são fundamentais.
Além disso, a dispersão possui a tendência de potencializar os efeitos dos demais fatores identificados no modelo proposto por este estudo.
Papéis e Responsabilidades Um ponto crítico em gerenciar uma estrutura virtual distribuída é entender os papéis e responsabilidades dos membros do projeto.
Documentar a estrutura do projeto proporciona gerenciamento, gerando em cada membro da equipe e das outras partes interessadas um senso de organização um entendimento dos papéis responsabilidades de cada indivíduo.
Conforme Gotel, divulgar o papel de todos no projeto permite criar uma atmosfera de parceria.
Sangwan Sugerem que os papéis sejam definidos para todos os membros do time do projeto (além de os desenvolvedores) e que seja solicitado a todos os membros algum reporte da situação, respondendo algumas questões relacionadas ao seu papel.
Essa prática poderá ajudar a envolver todos os membros e permitir uma oportunidade para descobrir possíveis desvios, pois algumas vezes é difícil calibrar o nível de participação e entendimento de todos os membros de um time distribuído.
Em os estudos pesquisados fica evidente a necessidade que os papéis e responsabilidades sejam claramente definidos para todas as equipes do projeto.
Socialização Gotel Mostram, num estudo de caso realizado com estudantes trabalhando num projeto distribuídos, a importância da integração num nível mais fundamental e social, tanto localmente quanto globalmente, como pré-requisito para alcançar a integração técnica.
De acordo com os autores, os aspectos culturais são muitas vezes apontados como desafios em desenvolvimento de software global.
De essa forma, o suporte às questões sociais tem recebido muita atenção.
Os autores relatam que investiram em socialização para encorajar a integração das equipes, num nível social, através da troca de presentes e vídeos, como forma de alcançar respeito e confiança.
Eles sugerem ainda que o gerente de projeto invista em socialização para coesão do time, por exemplo, agende bate-papos, troca de presentes e material sobre países e culturas, anúncios de férias e feriados.
Carmel sugere uma reunião de &quot;kick-off «face a face com o máximo de membros presentes como forma de construir confiança, espírito de equipe, endereçar diferenças culturais e acelerar a comunicação entre os times.
Sempre que possível essa reunião deve prover dias intensivos de trabalho e socialização no início do ciclo de desenvolvimento.
Em ambientes altamente distribuídos, podem ser feitas reuniões de &quot;kick-off «ou de pontos de controle em cada unidade do projeto com a presença de integrantes de outras unidades como forma de promover a socialização.
Sangwan Descreve que, em projetos de sucesso, são frequentes as visitas de membros de outros times e a procura por se conhecerem fora de o ambiente de trabalho.
Um dos benefícios da socialização apontado por Ratcheva é que as relações pessoais e sociais, dentro de um determinado local (físico) ou comunidade virtual, são extremamente eficazes na identificação e obtenção de membros da equipe com conhecimento especializado e habilidade prática necessária ao projeto.
Esses estudos mostram a importância da socialização para integração das equipes distribuídas reforçando seus objetivos e motivações.
Confiança e colaboração Confiança é fundamental para a colaboração entre os membros da equipe.
Um time em que os membros não confiam nos demais não funciona efetivamente.
De acordo com Gotel, o projeto deve criar um ambiente confiável que suporte a delegação de trabalho, possibilitando que o respeito possa ser conquistado.
Segundo Karolak, a falta de confiança é uma consequência natural da perda da interação face a face.
O comportamento, as relações pessoais, o trabalho em grupo e o desempenho de todo o time, são impactados significativamente por a maneira como os membros do time vêem, se relacionam e mostram respeito com os demais membros.
Confiança é de longe mais essencial em equipes distribuídas que em equipe tradicionais.
Em equipes virtuais (distribuídas), confiança é um elemento chave necessário para prevenir que a distância geográfica e organizacional dos membros da equipe se tornem numa distância psicológica.
As equipes virtuais requerem uma sólida base de confiança e colaboração mútua para funcionar eficazmente.
Identificar e aplicar estratégias de construção adequada da equipe para um ambiente virtual, não só melhora a eficácia organizacional, mas também terá impacto positivo na qualidade de vida dos membros da equipe virtual.
De acordo com Holton, a habilidade de trabalhar colaborativamente é reconhecida como uma das principais competências das organizações, uma vez que a confiança desenvolve um ambiente confortável e aberto para a colaboração.
Esses estudos mostram que para o desenvolvimento distribuído de software deve ser promovido um ambiente de confiança e colaboração entre as equipes distribuídas.
Comunicação e coordenação De acordo com Wolf, problemas de comunicação levam a falhas de coordenação e integração em equipes distribuídas.
A natureza dinâmica das dependências do trabalho no desenvolvimento de software, torna a colaboração muito volátil, consequentemente, afetando a habilidade das equipes de efetivamente comunicar e coordenar.
Carmel apresenta que em times distribuídos dois objetivos com relação a comunicação devem ser perseguidos.
Primeiramente, deve- se mudar da tradicional confiança na coordenação e comunicação informal de modo a incrementar a confiança em mecanismos formais.
Segundo, encorajar a comunicação informal entre os times distribuídos.
A comunicação informal contribui para a criatividade, a rápida solução de problemas e o entrosamento da equipe.
Coordenação das decisões de engenharia é uma das preocupações centrais da engenharia de software.
Herbsleb Argumenta que precisamos entender quais as necessidades de coordenação dos projetos e como podemos determinar os tipos de mecanismos de coordenação que precisam ser adotados para o progresso eficiente do projeto.
Isso inclui compreender as relações entre os diversos meios de coordenação que um projeto pode empregar.
De acordo com Audy e Prikladnicki, as pessoas deixam de se comunicar devido a as dificuldades impostas.
Comunicação clara e efetiva é absolutamente essencial para o sucesso das equipes distribuídas.
Os gerentes devem facilitar a comunicação entre os times com tarefas interdependentes ou com dependência crítica.
Métodos e ferramentas de comunicação oferecem um dos mais efetivos meios para obter e disserminar informações e controlar o projeto.
De acordo com Karolak, para determinar se a comunicação é efetiva deve- se avaliar duas dimensões:
O conteúdo da mensagem e a rapidez com que a comunicação é recebida por o destinatário.
Diferentes métodos de comunicação variam com relação a estas dimensões e devem ser utilizados de acordo com as necessidades de comunicação das equipes distribuídas.
Kommeren e Parviainen apontam que cada time deve gerenciar localmente suas operações e possuir capacidades básicas de gerenciamento.
Para Karolak pessoas confiáveis e respeitadas por os demais membros devem ser colocadas em posições de gerenciamento para superar questões técnicas, administrativas, culturais, entre outras.
Gotel Enfatizam que uma das lições de integração aprendida em seus estudos é a necessidade de ter líderes de integração para o desenvolvimento da comunicação e da socialização nos projetos.
Conforme os estudos avaliados, os times devem possuir pessoas com capacidades gerenciais, em posições de liderança, visando facilitar a coordenação e a comunicação entre as equipes.
As equipes distribuídas devem contar com um sistema de comunicação que seja rápido, confiável e disponível a todos os times do projeto.
Resolução de conflitos Rad e Levin definem conflito, em gerenciamento de projetos, como uma disputa, desacordo ou discórdia entre duas ou mais pessoas ou equipes.
Se pequenas questões não são resolvidas, elas podem se transformar em grandes conflitos.
Os membros do time, provavelmente, ficarão mais motivados se souberem que prováveis conflitos serão tratados de uma maneira aberta e cooperativa.
Detectar e resolver conflitos, o mais cedo possível, pode reduzir as incertezas do ambiente de trabalho, pois nada é menos produtivo que conflitos prolongados.
Responsabilidade e prestação de contas nos projetos pressupõem algum mecanismo de resolução de conflitos e a designação de alguém que decida em última instância os conflitos técnicos e de negócio.
Zanoni descreve que o relacionamento interpessoal e a resolução de conflito são críticos no processo de desenvolvimento de software.
Esses estudos mostram a necessidade da definição de mecanismos eficientes de resolução de conflitos entre os membros e equipes distribuídas.
Consenso dos requisitos A experiência mostra que muito esforço tem de ser gasto com o envolvimento direto de todos para a compreensão dos requisitos por todas as equipes envolvidas.
Os requisitos têm de ser discutidos extensivamente para se conseguir uma interpretação unificada, resultando em projetos ótimos e componentes de software que podem ser facilmente integrados.
A falta de entendimento comum dos requisitos pode resultar em falhas nas decisões de design e levar a um atraso dramático da fase de integração do projeto.
Um dos principais desafios do DDS do ponto de vista do desenvolvimento de software tem sido a engenharia de requisitos.
O desenvolvimento distribuído de software apresenta algumas características que o tornam fundamentalmente diferente do desenvolvimento colocalizado, exigindo alto nível de comunicação e coordenação.
De acordo com Audy e Prikladnicki, em ambientes distribuídos de software, dificuldades como distância, comunicação e cultura causam aprofundamento dos problemas inerentes ao processo de engenharia de requisitos.
Deve ser assegurado que todos os requisitos foram definidos sem ambiguidades, inconsistências ou omissões e que todos os erros foram detectados e corrigidos.
De acordo com Rad e Levin, nas fases iniciais do projeto é necessário um continuo diálogo entre o time do projeto e os clientes, com relação a os atributos das entregas, estabelecendo uma definição clara das características do produto com relação a os requisitos dos usuários e as necessidades do negócio.
Um gerenciamento apropriado dos requisitos começa com as necessidades do cliente sendo documentadas da forma mais detalhada possível.
Sangwan Reforça que outras fases da engenharia de software (design, codificação, teste, e processos de gerenciamento) são dependentes do processo de engenharia de requisitos.
Como estes processos são mais complexos em DDS, um esforço maior deve ser colocado na engenharia de requisitos para permitir uma execução adequada destas atividades.
Muitos estudos apontam a importância da engenharia de requisitos e seus efeitos nos demais processos do desenvolvimento de software.
Esse efeito em cascata reforça a importância nos projetos de DDS do consenso dos requisitos, de forma a eliminar possíveis requisitos divergentes e conflitantes.
Envolvimento do cliente Gotel Enfatizam que uma das lições de integração aprendida em seus estudos é a necessidade de um processo que sustente o envolvimento do cliente e que permita a alocação de tempo para troca de experiências.
De acordo com estes autores, a equipe de desenvolvimento enfrenta grandes dificuldades quando trabalha somente com a documentação de requisitos e isolado do cliente, podendo desviar da especificação ou dos requisitos esperados, causando riscos de integração.
De acordo com Rad e Levin, muitos dos projetos de desenvolvimento de software não estão claramente definidos quando de a sua autorização.
As necessidades, desejos e requisitos devem ser documentados, o mais rapidamente possível, com um contínuo diálogo entre a equipe do projeto e o cliente.
Com isso, a equipe do projeto será capaz de formular soluções alternativas e critérios de aceitação para cada solução.
Whitehead sugere que, especialmente nas fases de requisitos e testes, os engenheiros trabalhem com o cliente para garantir que os artefatos reflitam cuidadosamente suas necessidades.
Em os testes de aceitação formal o cliente geralmente interage com a equipe buscando falhas de conformidade do software com os requisitos especificados.
A ampliação da participação dos clientes nas fases de requisitos, design, codificação e testes iniciais manteriam os clientes envolvidos, durante esses estágios intermediários, permitindo assegurar mais ativamente que suas necessidades sejam satisfeitas.
Os estudos avaliados ressaltam a importância do envolvimento do cliente nas fases de requisitos e testes de aceitação.
Alguns estudos recentes sugerem a participação do cliente ao longo de o ciclo de vida do software como forma de garantir a satisfação de suas necessidades.
Métodos de estimativa Os projetos de desenvolvimento de software estão aumentando em tamanho e complexidade, fazendo com que métricas, técnicas de estimativas, modelos de desenvolvimento e processos de desenvolvimento para a engenharia de software sejam adotadas por as organizações a fim de apoiar as tarefas de desenvolvimento da equipe.
Conforme Garcia e Hirata, devido a a complexidade do software, o projeto de software é realizado por muitas equipes que podem estar localizados em diferentes organizações.
Em esse cenário, um conjunto de ferramentas e técnicas para estimar e monitorar esforços em projetos de software é muitas vezes necessário para integrar, planejar e controlar a execução do projeto.
De acordo com Sangwan, a entrada primária do processo de estimativa é a estimativa de tamanho de cada unidade de trabalho, conforme determinado por o time de arquitetura.
Os pré-requisitos para o desenvolvimento de estimativas inclui a identificação dos módulos a serem desenvolvidos e alguma estimativa de tamanho desses módulos.
A saída do processo de estimativa deve gerar uma estimativa de esforço em termos de recursos e cronograma.
Jorgensen e Boehm apresentam que, independente do processo de estimativa, ser baseado em julgamento de especialistas ou modelos de estimativa, as seguintes atividades são aplicáveis:
Entender o problema a ser estimado;
Acordar sobre as decisões e premissas relevantes para a estimativa;
Coletar informações relevantes para a estimativa;
Avaliar a importância (peso) das diferentes partes da informação;
De acordo com esses estudos, métodos de estimativas claros devem ser adotados por a equipe do projeto para planejamento das atividades do projeto.
Medidas de desempenho são úteis para dar visibilidade e entendimento, estabelecer uma linha de base de melhorias, planejar, monitorar e controlar produtos, processos e recursos.
Uma das formas que as métricas promovem o entendimento é tornando os aspectos de desenvolvimento ou manutenção mais vísiveis, permitindo visualizar como os processos, produtos, recursos, métodos e tecnologias se relacionam entre si.
Garcia e Hirata demonstram que, através de um sistema funcional métrico, é possível calcular o esforço e os custos de desenvolvimento, fornecendo os insumos para o planejamento e controle dos processos do projeto de software.
A fim de planejar, monitorar e controlar projetos de software, as seguintes questões principais devem ser abordadas:
Definição abrangente e completa do escopo do software, dimensionamento do software usando uma métrica funcional, estimativa paramétrica do esforço e duração e o monitoramento e controle sistemático do desempenho do projeto.
Rad e Levin argumentam que o monitoramento das medidas de desempenho é melhor sucedido quando formalizado e amplamente integrado aos procedimentos da organização para o gerenciamento do projeto.
Em esse cenário, a equipe do projeto saberá qual os dados esperados por o sistema de acompanhamento do projeto e qual será o volume, qualidade e frequência dos relatórios de acompanhamento.
Ferramentas de colaboração De acordo com Carmel, as ferramentas de colaboração possuem três objetivos principais, são eles:
Servir como uma base de conhecimento e memória do time, prover uma visão de 360º para cada membro do time e criar um senso de comunidade.
Whitehead argumenta que uma vez que começamos a trabalhar de forma distribuída, enfrentamos diversos problemas.
A linguagem natural que usamos para comunicar é maravilhosamente expressiva, mas frequentemente ambígua.
A memória humana é boa, mas não muito profunda e precisa o suficiente para lembrar inúmeros detalhes de um projeto.
A colaboração na engenharia de software tem objetivos múltiplos abrangendo todo o ciclo de desenvolvimento, entre eles:
Estabelecer o escopo e as capacidades de um projeto, direcionar a convergência para uma arquitetura final e design, gerenciar dependências entre as atividades, artefatos e organizações, reduzir a dependência entre os engenheiros, identificar, registrar e resolver os erros e registrar a memória organizacional.
Sangwan Apontam que os três pilares para uma efetiva infraestrutura de gerenciamento para DDS são:
Comunicação e colaboração, gerenciamento do conhecimento e gerenciamento da configuração do software.
Preparar uma infraestrutura adequada para o desenvolvimento distribuído é um fator significante de sucesso do projeto.
Ferramentas de colaboração devem suportar acessibilidade, colaboração e simultaneidade, processos, sensibilização e integração.
Esses estudos mostram a importância das ferramentas de colaboração para acesso as informações do projeto e o compartilhamento do trabalho e do conhecimento.
Infraestrutura de telecomunicação Projetos distribuídos de software requerem uma rede de comunicação confiável e com razoável largura de banda.
Devido a os altos custos de coordenação, nenhum esforço colaborativo sério pode ser iniciado sem que esteja disponível para o time do projeto uma conexão de alta velocidade para todas as formas de comunicação.
Organizações virtuais evoluíram largamente devido a melhorias tecnológicas nas últimas décadas.
Entre essas, está incluída a estrutura de telecomunicação com o aumento da banda de comunicação, diminuição do custo, melhor taxa de preçodesempenho e melhores softwares.
A infraestrutura de comunicação tem facilitado e tornado o custo de gerenciar equipes distribuídas mais atraente.
Audy e Prikladnicki reforçam a necessidade de uma comunicação de qualidade entre os engenheiros de software e os usuários e clientes, sendo necessário que a infraestrutura de comunicação seja definida corretamente.
A infraestrutura de telecomunicação é um fator primordial para o desenvolvimento distribuído de software.
Uma infraestrutura de telecomunicação eficiente pode minimizar a necessidade de comunicação face a face facilitando o uso de ferramentas de comunicação e colaboração.
Técnicas de gerenciamento De acordo com o PMBOK, o ciclo de vida de um projeto é composto por o ínicio do projeto, organização e preparação, execução do trabalho e encerramento do projeto.
Esse ciclo de vida é válido para projetos de desenvolvimento distribuído de software, mas os processos adotados por o gerente do projeto podem variar devido a dispersão do projeto.
Conforme Carmel, a estrutura de times colocalizado não é efetivo quando a equipe está distribuída, pois necessitam de uma estrutura mais flexível para suportar a dispersão do trabalho e a efetiva tomada de decisão.
Uma definição clara da estrutura do time provê transparência, permitindo que pessoas internas e externas ao time tenham entendimento das relações de autoridade e dos fluxos de informações do projeto.
Essa estrutura deve buscar um balanceamento entre a centralização e a descentralização, mantendo alguns papéis centralizados conforme necessário.
Em times dispersos algumas tarefas relacionadas à coordenação podem continuar informalmente, entretanto as tarefas do time como um todo devem ser coordenadas através de mecanismos formais.
Esses mecanismos formais fazem parte do processo de gerenciamento de projetos.
Audy e Prikladnicki apresentam os diferenciais do gerenciamento de projetos de DDS, como a necessidade de métricas especificas, formas de reconhecimento e bonificação diferenciadas e resolução de conflitos entre os grupos.
Esses estudos mostram que embora existam características próprias no gerenciamento de projetos de DDS, as melhores práticas de gerenciamento de projetos para iniciação, planejamento, execução, monitoramento e controle, e encerramento devem ser adaptadas e utilizados como mecanismos formais de gerenciamento.
Gerenciamento de mudanças e configuração O gerenciamento de configuração é a área de controle que tem o maior impacto sobre o cotidiano das operações de desenvolvimento distribuído de software.
Em uma base contínua, os engenheiros estão realizando mudanças no software, realizando testes em ambientes que incluem linhas de base com contribuições de outras equipes, e promovendo o seu software para os componentes que são finalmente integrados ao nível do sistema.
Todas as equipes têm de ter em mente as consequências da mudança de suas trajetórias de desenvolvimento individuais em termos de tempo, esforço e funcionalidade, bem como as consequências para a interface com outras equipes Segundo Karolak o gerenciamento da configuração de software garante que mudanças no software são gerenciadas.
Esse gerenciamento deve prover mecanismos eficientes para alguns desafios inerentes ao desenvolvimento de projetos distribuídos, como:
Gerenciar diferentes mudanças em diferentes unidades como um único produto, aplicar padrões consistentemente e incorporar mudanças de maneira oportuna.
O gerenciamento de mudanças deve garantir a participação de representantes de todas as partes afetadas, incluindo áreas funcionais e outras organizações, para revisar, aprovar e rejeitar mudanças propostas para o software e garantir a existência de um processo e documentações apropriadas.
Carmel descreve que as ferramentas de gerenciamento de configuração são as mais importantes para a engenharia de software em equipes distribuídas.
Essas ferramentas possibilitam mecanismos de controle e coordenação para o gerenciamento das equipes.
Como controle, estabelecendo um formalismo, sendo utilizado para controlar o processo, definir as regras e a estrutura de trabalho de cada equipe.
Como mecanismo de coordenação, promovendo um efetivo caminho para promover o diálogo entre as equipes distribuídas.
Rad e Levin definem que um processo de gerenciamento de mudança é mais efetivo quando é formalizado e integrado as políticas e procedimentos do gerenciamento de projetos da organização.
Um processo de gerenciamento de mudanças formalizado garante que todas as pessoas, em todo o projeto, sigam um conjunto estabelecido de procedimentos.
Uma estrutura formal de gerenciamento de mudanças tem como vantagens adicionais manter todas as partes interessadas envolvidas ou pelo menos informadas, sobre o desempenho do projeto, contribuindo para o espirito de equipe e a moral do time.
Esses estudos mostram a importância do gerenciamento de configuração e de mudanças em projetos de desenvolvimento distribuído de software.
Prover mecanismos de gerenciamento de mudanças e de configuração eficientes são fundamentais para os projetos de DDS.
Arquitetura do software De acordo com Carmel, gerentes experientes de equipes distribuídas reconhecem que a arquitetura do produto, sua boa decomposição e alocação, são necessárias para o gerenciamento de projetos complexos em equipes distribuídas.
De tal forma que a estrutura da equipe deve ser determinada por a arquitetura do software.
Uma arquitetura apropriada deve ser baseada em parte no principio da modularidade, possibilitando uma maneira de resolver e alocar atividades grandes e complexas.
Karolak afirma que considerações com respeito a arquitetura são provavelmente a base mais utilizada para a divisão de esforços em projetos distribuídos.
O desenvolvimento, manutenção e evolução da arquitetura de software se mostram cruciais em projetos de DDS, especialmente no que diz respeito à definição de interfaces.
A falta de uma contínua e ativa gestão da arquitetura, incluindo controle de mudanças, com representantes de todas as partes envolvidos, é suscetível a graves problemas, que parecem ser detectados apenas durante a estágio de integração do projeto.
Herbsleb descreve que a necessidade de comunicação entre as unidades do projeto deve ser reduzida sempre que possível.
Fazendo referência a Conway's Law (A estrutura do sistema espelha a estrutura da organização que o projetou), ele descreve que distribuição de atividades entre os diversos sites deve levar em consideração a modularidade da arquitetura e sempre que possível, somente dividir o desenvolvimento dos produtos quando planos, processos e interfaces estão bem estabelecidos e estáveis.
Sangwan Descreve a importância de otimizar a arquitetura de modo a facilitar a distribuição entre as equipes do projeto.
Os gerentes de projetos devem criar pacotes de trabalho que levam em consideração as capacidades individuais dos times, suas habilidades de trabalhar com outros times e o nível de coordenação requerida entre eles.
Identificar os módulos, suas responsabilidades e dependências com outros módulos ajudam os gerentes de projetos na definição dos pacotes de trabalho.
Conforme os estudos avaliados, a arquitetura do software tem papel fundamental na divisão das atividades entre as diversas equipes distribuídas.
A definição dos módulos da arquitetura do software deve levar em consideração a necessidade de minimizar os esforços de colaboração, coordenação e integração.
Metodologia e ferramentas de desenvolvimento Uma metodologia de desenvolvimento é o mapa que guia a equipe através do ciclo de desenvolvimento de software.
Para o gerenciamento efetivo de times distribuídos é necessária a implantação de uma metodologia de desenvolvimento abrangente.
Através da metodologia de desenvolvimento é possível agrupar atividades similares, reduzir atividades reduntantes e trabalho excessivo, organizar atividades em etapas e fases, aumentar a qualidade, garantindo que as atividades estão compreendidas e completas.
Além disso, serve para reduzir atividades irracionais e como documentação efetiva para o gerenciamento.
O uso de uma metodologia de desenvolvimento impõe rigor e demanda grande disciplina para as equipes distribuídas.
De acordo com Gotel O projeto deve adotar um conjunto de ferramentas de forma consensual que esteja disponível a todas as unidades do projeto, entretanto, nenhuma ferramenta deve ser imposta sem que seja levada em consideração as percepções, as restrições e as necessidades de treinamentos das diferentes equipes.
Equipes distribuídas que trabalham com o objetivo de desenvolver um projeto de software de grande porte podem se beneficiar de ter uma estrutura pré-definida para a sequência de passos a serem executados, os papéis que devem cumprir e os artefatos que devem ser criados.
Essa estrutura pré-definida assume a forma de um modelo do processo de software e serve para reduzir a quantidade de coordenação necessária para iniciar um projeto.
Whitehead descreve que muitas ferramentas estão disponíveis para dar suporte as práticas de engenharia de software, entre elas, ferramentas para as fases de requisitos, arquitetura, design, teste e inspeção, rastreabilidade e consistência.
Audy e Prikladnicki descrevem que uma metodologia de desenvolvimento auxilia diretamente na sincronização, fornecendo a todos os membros da equipe uma nomenclatura comum de tarefas e atividades.
A implantação e manutenção de uma metodologia de desenvolvimento e de processos de software envolve o treinamento, exposição e motivação da equipe.
Os autores também expõem a necessidade de ferramentas específicas para as tarefas de desenvolvimento de software, citando as ferramentas de gerência de configuração de software e de gerenciamento de projetos e as ferramentas Case (Computer Aided Software Engineering), entre outras, com o objetivo de:
Servir como repositório de informações sobre o projeto, reduzir o trabalho, fornecer suporte à coordenação de atividades e oferecer mecanismos para controle da qualidade.
Os estudos avaliados indicam a necessidade da definição de uma metodologia de desenvolvimento que seja clara para todos os times do projeto, sendo que a mesma deve ser apoiada por ferramentas de desenvolvimento que atendam as necessidades do projeto.
Integração Wolf Declaram que a comunicação entre os desenvolvedores possui um importante papel na integração do software.
A importância do estudo dos padrões de comunicação em relação a o desempenho do time está associada ao fato da comunicação ser o principal mecanismo de troca de conhecimento no trabalho em grupo.
Engenheiros de software diferem em experiência, conhecimento e na vivência que eles agregam na tarefa desenvolvida.
A performance do grupo depende não somente das informações disponíveis mas também das propriedades da comunicação que facilitam a disseminação do conhecimento e a integração dos módulos.
Equipes distribuídas necessitam trabalhar como uma única equipe, para integrar componentes e aplicações, sendo necessária especial atenção aos planos de integração em todos os níveis.
O planejamento da integração deve começar o mais cedo possível em projetos de desenvolvimento distribuído, sendo que as questões relativas à integração não devem ser subestimadas, nem deixadas para ser tratadas em fases posteriores do projeto.
Deve- se documentar claramente de forma consistente qualquer subcomponente, interface e processo de integração.
De acordo com Kommeren e Parviainen, falhas na integração em equipes distribuídas podem ocorrer devido a falhas na atribuição de responsabilidades, falta de um plano ou estratégia de integração, esforço ou duração da integração subestimados, falta de conhecimento e habilidade do time de integração, e a não existência de um controle centralizado.
A divisão do trabalho em times distribuídos introduz o perigo da falta de atenção explícita para a integração dos resultados de vários times.
Os autores também reforçam a necessidade da definição de critérios de aceitação como forma de minimizar os esforços para correção de defeitos de integração.
Karolak define que uma das partes mais difíceis do desenvolvimento de software é a integração, seja a integração de partes do software, integração de software e hardware, ou ambos.
Em equipes distribuídas a integração se torna mais difícil, pois nem sempre se tem acesso a todos os recursos necessários para a solução de problemas nessa fase.
O planejamento da integração deve começar bem antes do início da integração.
Esse planejamento envolve a criação de uma estratégia de integração, a aquisição de certos tipos de ferramentas, escrever ou utilizar pacotes de testes, determinar os critérios de aceitação, criar documentações e providenciar um nível correto de suporte.
A avaliação desses estudos deixam clara a necessidade da participação das equipes distribuídas e do cliente na definição de um processo de integração e a definição dos critérios de aceitação das entregas e das integrações dos módulos.
Modelo Preliminar'O modelo preliminar' proposto foi baseado no modelo PDI (Perceived Distance Index) desenvolvido por Prikladnick e Audy.
Esse modelo se baseia na definição de distância percebida apresentada por Evaristo E nas forças centrífugas em equipes de DDS propostas por Carmel, tendo como objetivo quantificar a distância percebida por os integrantes de um projeto de DDS.
Com base neste modelo, avaliamos os fatores que influenciavam a integração das equipes em projetos de desenvolvimento distribuído de software.
Para isso, além de as forças centrífugas, o modelo leva em consideração as forças centrípetas, também propostas por Carmel, bem como outros fatores relevantes pesquisados na base teórica.
De entre esses fatores foram selecionados 17 que em nossos estudos foram identificados como os mais importantes para serem utilizados no modelo, conforme tabela 8.
O conceito de distância percebida, de Evaristo, foi utilizado no modelo como forma de medir a percepção da equipe do projeto com relação a os fatores propostos no modelo de identificação do índice de integração de projetos em ambiente de DDS.
Utilizando a base teórica foram desenvolvidos os instrumentos de coleta de dados e feita a geração do modelo preliminar' (modelo preliminar uma linha).
Para isso, foram desenvolvidos o modelo de coleta, cálculo e análise, e três instrumentos de coleta de dados, com as seguintes dimensões:
Esses instrumentos foram então submetidos ao primeiro processo de avaliação, conforme Protocolo de Análise para Estudos de Casos (Apêndice A).
Os instrumentos de coleta de dados foram encaminhados para serem avaliados por dois especialistas.
As contribuições dos especialistas foram incorporadas ao modelo, conforme descritas abaixo:
A escala de valores foi modificada de 6 para 5 valores na dimensão 3.
Para isso, a opção &quot;0 Não sei ou Não aplicável «foi modificada para &quot;N/A ­ Não aplicável», sendo desconsiderada para efeito dos cálculos.
Em a questão sobre nível de maturidade da organização foram retiradas as respostas &quot;1-Inicial «e &quot;Não sei ou não aplicável «e incluída a resposta &quot;Não possui certificação CMMI».
O quadro de resposta da pergunta sobre a distribuição das equipes foi ampliado e o cabeçalho da questão foi revisado para maior clareza.
Os papéis e responsabilidades foram relacionados nas diversas dimensões.
Algumas perguntas foram revisadas para maior clareza e entendimento.
Algumas perguntas foram revisadas para não permitir respostas binárias ou dicotômicas (Sim/ Não), mas respostas de intensidade variando de &quot;Discordo plenamente «até &quot;Concordo plenamente».
Com a conclusão dessa etapa foi gerado o modelo preliminar' (modelo preliminar linha) que foi submetido à revisão por especialistas.
Revisão por especialistas O modelo de coleta, cálculo e análise foi submetido para verificação por especialistas, nesse caso, o mesmo foi submetido para um dos autores do Modelo PDI e para um profissional com longa experiência em gerenciamento de projetos distribuídos e auditorias de qualidade.
As observações desses especialistas e as ações realizadas estão descritas a seguir:
O modelo não deixava claro qual a escala das respostas, para isso, incluímos no modelo a descrição das possíveis respostas.
O modelo não levava em consideração as experiências dos respondentes.
Para isso, incluímos uma nova questão no documento de coleta de informações da dimensão 2 (Dados demográficos do respondente) referente a o nível de conhecimento do respondente com relação a o desenvolvimento distribuído de software.
Além disso, o modelo foi alterado para incluir o peso do respondente com base em um subconjunto das respostas da dimensão 2 do instrumento de coleta de dados.
A tabela de fatores continha duas colunas gerando uma idéia de dependência entre os fatores, para resolver isso, a mesma foi modificada para apenas uma coluna.
Houve o questionamento sobre a possibilidade de ter pesos entre os fatores, entretanto, consideramos que esse aspecto deveria ser avaliado em trabalhos futuros, visto que não foi identificado na base teórica subsídios para a atribuição de pesos.
Foi sugerida a expansão do modelo para geração de índices relativos aos papéis do projeto, mas devido a a quantidade e variedade de papéis, entendemos que estes gráficos podem ser pouco representativos de acordo com a quantidade de respondentes em cada papel.
Como alternativa, sugerimos gráficos por responsabilidades (gerenciamento, desenvolvimento e qualidade).
Modelo Preliminar' 'Com as contribuições dos especialistas foi gerado o modelo preliminar' (modelo preliminar duas linhas) sendo feito um pré-teste do modelo, conforme Protocolo de Análise de Estudos de Casos (Apêndice A) antes da realização dos estudos de casos.
O modelo revisado, com a contribuição dos especialistas, foi submetido a um préteste.
O objetivo do pré-teste era analisar o comportamento dos principais perfis que serão respondentes dos instrumentos de coleta de dados durante o seu preenchimento e coletar suas impressões e comentários sobre os mesmos.
Para isso, foi selecionado dentro de um projeto piloto um gerente de projeto, um desenvolvedor e um testador para responderem aos instrumentos e realizarem observações sobre o mesmo.
As observações pertinentes aos objetivos do estudo foram incorporadas ao modelo, bem como, algumas observações feitas por o próprio pesquisador durante o acompanhamento do pré-teste.
Com as observações realizadas foram feitos alguns ajustes nos instrumentos de coletas de dados e na fase de coleta.
Segue abaixo as mudanças realizadas:
O instrumento de coleta de dados da dimensão 1, com os dados demográficos da organização e do projeto, será preenchido de maneira assistida, se necessário, por o pesquisador ou por a pessoa responsável por aplicar a pesquisa com o gerente do projeto.
O objetivo é esclarecer pontos relevantes sobre a pesquisa e favorecer o entendimento e o correto do preenchimento da questão relativa à distribuição das equipes do projeto e suas responsabilidades.
Questões relativas à organização poderão ser respondidas por uma única pessoa da Empresa/ Organização quando a pesquisa for aplicada em mais de um projeto da mesma Empresa/ Organização.
Em o instrumento de coleta de dados foram feitas as seguintes alterações:
Em a dimensão 1 foi incluída uma questão sobre o ciclo de vida utilizado no projeto de software.
A questão sobre o grupo de processos que melhor define a situação atual do projeto foi alterada para deixar claro as referências aos grupos de processos do Em a dimensão 1 e 2, com relação a o conhecimento da equipe e do respondente dos processos de gerenciamentos do projeto do PMBOK, a opção Alto foi modificada para &quot;Alto (Conhecem e já utilizaram um ou mais processos) «de forma a diferenciar do conhecimento teórico dos processos da opção &quot;Médio (Conhecem os processos teoricamente)».
Em a dimensão 2, foram incluídos os papéis de Líder de Desenvolvimento e Líder de teste, além disso, o papel Analista de Qualidade foi alterado para Auditor de processos/ SQA.
Para efeito de análise da pesquisa o papel Líder de desenvolvimento será agrupado com o papel de Desenvolvedor e Líder de teste com o papel de Analista de teste.
Foi incluído também na dimensão 2, o papel de Líder do projeto como alternativa ao papel de Gerente do Projeto.
Em a dimensão 3 a questão referente a a resolução de conflitos foi alterada para incluir a palavra &quot;pessoais «de forma a deixar claro que se tratam de resolução de conflitos pessoais.
Em as perguntas, para facilitar o entendimento, os fatores avaliados na versão impressa foram identificados em negrito e alguns termos relevantes em itálico deixando clara a diferença entre as perguntas.
Os cabeçalhos de todos os instrumentos de pesquisa foram alterados de &quot;Empresa «para &quot;Empresa/ Organização «para permitir a diferenciação quando a pesquisa for realizada em diferentes organizações de uma mesma empresa.
Estudos de casos O modelo preliminar' foi aplicado em diversos projetos de desenvolvimento de software, conforme Protocolo de Análise para Estudos de Casos (Apêndice A).
Uma descrição completa do Modelo Preliminar' pode ser encontrada no Apêndice B deste documento.
O conteúdo dos instrumentos gerados pode ser encontrado no Protocolo de Análise para Estudos de Casos no apêndice A. Uma versão on-line dos instrumentos de coleta de dados das dimensões 2 e 3 utilizados nos estudos de casos foram disponibilizados no GoogleDocs e reproduzidos no apêndice D. Abaixo descrevemos resumidamente as três fases do modelo preliminar «com o intuito de facilitar o entendimento da pesquisa de campo realizada através dos estudos de casos.
Fase 1 -- Coleta Em esta fase são coletados os dados demográficos da organização, do projeto, dos respondentes e o questionário do Índice de Integração em projetos de DDS preenchidos por os membros da equipe do projeto.
Fase 2 -- Cálculo A partir de as respostas dos integrantes da equipe são gerados dois índices:
Índice do fator e o índice de integração.
O primeiro se refere a participação de determinado fator no índice de integração do projeto.
O segundo, índice de integração, representa o índice de integração do projeto com base na média de todos os fatores.
Índice do Fator: ÍndiceFator (f) $= NormalizadoFator (f) f $= x NormalizadoFator (f) f $= 1 Índice de Integração:
NormalizadoFator (f) ÍndiceIntegração $= f $= 1 Fase 3 ­ Análise e ação Em esta fase os dados são avaliados com o objetivo de identificar possíveis causas de problemas para a definição das ações corretivas e preventivas necessárias.
Com as informações geradas por o modelo podemos analisar os fatores individualmente ou em conjunto, conforme a necessidade do projeto e da organização.
Em a seção 5.3.4.
São apresentados os Índices dos fatores e o Índice de integração, do grupo de projetos participantes da pesquisa, com base na aplicação do modelo preliminar «nos estudos de casos.
Uma pesquisa de campo foi conduzida entre Agosto e Setembro de 2010 através do envio dos instrumentos de coleta de dados para as organizações que tiveram interesse em participar e que atendiam aos critérios de seleção para os estudos de casos.
Os instrumentos de coleta de dados foram preenchidos por os profissionais participantes dos projetos com a autorização de seus gerentes.
Para solicitar o apoio das equipes de projetos foram enviados textos com informações sobre a pesquisa e com o link do formulário do Googledocs para os gerentes de projetos (Apêndice E) e para os integrantes dos projetos (Apêndice F).
Ao todo foram 6 (seis) organizações participantes, 15 (quinze) projetos e 88 (oitenta e oito) respondentes.
Aplicação do modelo O modelo preliminar' foi aplicado em diversos projetos de desenvolvimento de software, conforme Protocolo de Análise para Estudos de Casos (Apêndice A).
Logo em seguida a realização dos estudos de casos e a partir de a análise dos resultados foi gerado o modelo final.
A aplicação do modelo foi realizada em empresas de desenvolvimento de software de Porto Alegre sediadas principalmente no parque tecnológico Tecnopuc e inclui empresas nacionais e multinacionais.
Com o objetivo de realizar uma análise estatística dos participantes selecionados, foram definidos parâmetros de caracterização das empresas, projetos e respondentes participantes.
Para isso, foram desenvolvidos instrumentos de coleta de dados com o objetivo de capturar dados demográficos sobre as características das organizações, projetos e respondentes, de forma a permitir a análise dos mesmos.
Abaixo são apresentadas a caracterização dos dados demográficos coletados e na próxima seção uma avaliação estatística das médias mais importantes.
Os participantes do estudo foram organizações com atuação em Porto Alegre, RS ­ Brasil, sendo sua grande maioria sediada no Parque Tecnológico da PUCRS (Tecnopuc).
Como requisitos básicos da pesquisa, todas as organizações participantes trabalhavam com desenvolvimento de software e possuíam projetos em ambientes de desenvolvimento distribuídos de software.
Em esse sentido, foram considerados os projetos dessas organizações que possuíam em seu escopo a integração de partes ou módulos dos sistemas desenvolvidos em mais de uma unidade de desenvolvimento.
Os dados demográficos foram coletados através dos instrumentos de coletas de dados do modelo, com o objetivo de permitir a caracterização das empresas, projetos e respondentes.
O objetivo dessa caracterização era permitir a análise das características das organizações, projetos e respondentes e seu enquadramento com relação a os objetivos do estudo.
Além disso, permitir a identificação de empresas, projetos e respondentes com características similares, permitindo seu agrupamento de acordo com as necessidades do estudo.
De essa forma, os critérios de caracterização propostos são separados em dois grupos:
Critérios genéricos e critérios específicos.
Os critérios genéricos são mais abrangentes e podem caracterizar as organizações, projetos e respondentes, visando diversos objetivos.
Os critérios específicos foram utilizados para determinação dos pesos dos respondentes conforme previsto no modelo.
As organizações participantes do estudo foram avaliadas através do instrumento de coleta de informações denominado &quot;Dimensão 1 ­ Dados demográficos da organização e do projeto «de acordo com os critérios apresentados na tabela 9.
Nível de maturidade CMMI Genérico Nível de maturidade da organização de acordo com o modelo CMMI Certificações Genérico Tipo de certificações da organização e de seus profissionais A caracterização das organizações não levou em consideração como critério o tipo da organização, uma vez que, para os estudos de casos, somente organizações de desenvolvimento de software foram selecionadas.
Os projetos participantes do estudo foram avaliados através do instrumento de coleta de informações denominado &quot;Dimensão 1 ­ Dados demográficos da organização e do projeto «de acordo com os critérios apresentados na tabela 10.
Experiência do gerente do Genérico Tempo de experiência (atuação) do projeto gerente do projeto (GP) em gerenciamento de projetos Certificações do GP Genérico Certificações do gerente do projeto Conhecimento da equipe Genérico Conhecimento da equipe com relação em GP aos processos do PMBOK Situação atual Genérico Situação atual do projeto com relação a os grupos de processos do PMBOK Ciclo de vida Genérico Ciclo de vida de desenvolvimento de software utilizado no projeto A caracterização dos projetos não levou em consideração como critério a existência de ambiente de DDS, uma vez que, para os estudos de casos, somente projetos com desenvolvimento de software em ambiente de DDS foram selecionados.&amp;&amp;&amp;
Os respondentes participantes do estudo foram avaliados através do instrumento de coleta de informações denominado &quot;Dimensão 2 ­ Dados demográficos do respondente «de acordo com os critérios apresentados na tabela 11.
Conhecimento em DDS Específico Nível de conhecimento do respondente em DDS Conhecimento do Genérico Conhecimento do respondente com relação a os respondente em GP processos do PMBOK Grau de instrução Específico Último grau de instrução finalizado por o respondente Os critérios específicos foram utilizados para diferenciar as respostas de um indivíduo muito experiente das respostas de um indivíduo menos experiente, com isto, o resultado final leva em consideração a experiência dos respondentes.
Para maior confiabilidade dos resultados o modelo atribui um peso a cada participante, considerando o tempo de atuação do respondente em desenvolvimento de software, o tempo de atuação do respondente em desenvolvimento distribuído de software, o grau de instrução e o conhecimento do respondente em DDS.
O papel do respondente no projeto é utilizado para o agrupamento dos papéis numa das três responsabilidades definidas por o estudo, conforme tabela 12.
Em esta seção serão apresentadas as distribuições da coleta dos dados demográficos das organizações, dos projetos e dos respondentes participantes da pesquisa.
As organizações que participaram do estudo desenvolvem diferentes tipos de software e possuem diferentes tamanhos, tempo de experiência em DDS, número de projetos DDS desenvolvidos e nível de maturidade por o modelo CMMI, conforme descrito a seguir:
Segundo o Instituto Brasileiro de Geografia e Estatística ­ IBGE e o Serviço de Apoio às Micro e Pequenas Empresas -- SEBRAE, o critério utilizado para a classificação do porte das empresas industriais é baseado no número de empregados, portanto:
Micro Empresa, até 19 empregados -- Pequena Empresa, de 20 a 99 empregados ­ Média Empresa, de 100 a 499 empregados, e Grande Empresa com mais de 500 empregados.
Alguns dos dados levantados se referiam ao tamanho das organizações patrocinadoras dos projetos e não das organizações responsáveis por o gerenciamento do projeto.
Devido a isso, foi necessário uma consulta extra com as organizações respondentes para determinar o seu tamanho efetivo, conforme figura 15.
As empresas executoras dos projetos foram classificadas de acordo com a escala do SEBRAE para classificação do porte das empresas de comércio e serviço, sendo:
Micro Empresa, até 9 empregados -- Pequena Empresa, de 10 a 49 empregados ­ Média Empresa, de 50 a 99 empregados, e Grande Empresa com mais de 100 empregados.
Analisando as informações do tamanho das organizações patrocinadoras e executoras dos projetos, pode- se verificar que embora os projetos DDS sejam patrocinados por empresas médias (67%) e de grande porte (33%) essas se utilizam de empresas pequenas (33%) para execução de seus projetos.
A maioria das organizações pesquisadas possui um tempo de experiência em projetos DDS acima de 10 anos (66%).
Esse dado mostra a familiaridade das organizações com o ambiente de DDS, foco desta pesquisa.
Esse fato é particularmente relevante uma vez que a pouca experiência das organizações em ambiente de DDS poderia afetar os resultados da pesquisa.
Embora a maioria das empresas possua mais de 10 anos (66%) de experiência em DDS, somente uma pequena parte das organizações possui acima de 20 projetos (33%) deste tipo (figura 17).
Esse fato esta relacionado à existência de projetos de longa duração em algumas organizações e ao fato de algumas dessas não utilizarem ambiente de DDS em todos os seus projetos.
A maioria das organizações pesquisadas possui o nível 2-Gerenciado (66%) de maturidade por o modelo CMMI.
Embora uma das organizações tenha apontado que não possui certificação CMMI, verificou- se durante a análise dos dados que a mesma alcançou o nível 3-Definido de maturidade por o modelo CMM e que utiliza, no projeto avaliado, um parceiro com nível 3-Definido de maturidade por o modelo CMMI.
Essa análise nos permite verificar a preocupação das organizações com seus processos e na evolução dos mesmos para obtenção de níveis de maturidade.
Com relação a os projetos avaliados podemos verificar que os mesmos variam de acordo com o tamanho da equipe, tempo de experiência do gerente do projeto, situação atual do projeto de acordo com os grupos de processos do PMBOK e o ciclo de vida de desenvolvimento, conforme verificamos a seguir.
A maior parte dos projetos possui equipes de até 10 membros (53%), conforme pode ser visto na figura 19.
Sendo que, se somarmos os projetos com equipes de 11 a 19 membros (27%), verificamos que 80% dos projetos pesquisados possuem menos de 20 membros.
Esses dados demonstram que mesmo em projetos DDS a grande maioria das organizações trabalha com equipes pequenas.
A maioria dos projetos avaliados estava em execução de acordo com os grupos de processos do PMBOK.
O grupo de processos de Monitoramento e controle não foi apresentado como alternativa na pesquisa, pois esse grupo de processos monitora e controla o projeto inteiro em paralelo aos demais grupos.
Conforme podemos observar por os dados analisados nesta seção, as organizações patrocinadoras dos projetos DDS são médias (33%) e grandes (67%) empresas.
Sendo que estas empresas utilizam pequenas empresas de desenvolvimento de software (33%) na realização de seus projetos.
O tempo de experiência destas organizações com projetos DDS está acima de 10 anos (66%), entretanto o número de projetos DDS desenvolvidos fica acima de 20 em somente 33% das organizações pesquisadas.
A maioria das organizações pesquisadas possui nível de maturidade gerenciado e definido mostrando a preocupação destas organizações com seus processos de desenvolvimento.
Os projetos pesquisados estão em execução, possuem entre 1 a 20 pessoas envolvidas e são gerenciados por profissionais com mais de 3 anos de experiência em gerenciamento de projetos.
Houve variação do perfil dos respondentes de acordo com os critérios avaliados em nosso estudo.
A distribuição dos respondentes pode ser vista nas figuras desta seção de acordo com as características avaliadas.
A figura 22 mostra o número de respondentes em cada papel do projeto.
Conforme esperado, os papéis predominantes dos respondentes são Desenvolvedor (24%) e Analista de teste.
O papel Gerente do projeto ou líder do projeto também teve uma participação efetiva.
Esse fato se deve a existência de pelo menos um gerente de projeto respondente da pesquisa para cada projeto e a inclusão de líderes de projetos nesta categoria.
Para efeitos de análise deste trabalho, os papéis Líder de desenvolvimento e Líder de testes foram agrupados com os papéis Desenvolvedor e Analista de teste, respectivamente.
A pesquisa aponta que a maioria (67%) dos respondentes, figura 23, tem mais de 5 anos de experiência em desenvolvimento de software.
Com relação a experiência em projeto DDS, figura 24, podemos observar que somente 8% dos respondentes têm acima de 10 anos de experiência em projetos DDS.
Este fato nos sugere um crescimento de projetos em ambientes DDS, nos últimos 10 anos, se levarmos em consideração que 66% das organizações responderam que possuíam acima de 10 anos de experiência em DDS.
Os respondentes consideram seu conhecimento em DDS com Médio (44%) e Alto, totalizando 74% dos respondentes (figura 25).
Este fato surpreende se considerarmos que 45% dos respondentes têm menos de 3 anos de experiência e 68% têm menos de 5 anos de experiência.
Esse fato nos sugere um aumento no número de projetos em ambiente de DDS, nos últimos anos, possibilitando uma vivência maior dos profissionais neste tipo de projeto.
Quase metade dos respondentes tem nível superior de instrução (figura 26).
Se levarmos em consideração MBA/ Especialistas e Mestrado este número se eleva para 76%, mostrando um grau de instrução elevado das equipes dos projetos.
Entre os respondentes não havia respondente com Doutorado, nem respondente que possuíam somente o nível Primário de instrução.
Os critérios específicos avaliados nesta seção foram utilizados para composição do peso dos respondentes, conforme descrito no modelo preliminar' (Apêndice B), são eles:
DDS e grau de instrução.
Em esta seção será apresentada a análise estatística dos dados coletados com o objetivo de avaliar os resultados da pesquisa.
Mesmo submetido a validação de face e conteúdo um instrumento de coleta de dados ou construto necessita ser avaliado quanto a a sua confiabilidade ou consistência interna.
Confiabilidade é a extensão por a qual uma escala produz resultados consistentes quando são feitas repetidas mensurações das características, ou seja, é a propriedade de que um instrumento de medida produza os mesmos resultados se submetido às mesmas condições.
Embora uma das maneiras para se avaliar a confiabilidade de um instrumento de coleta de dados, seja aplicar- lo mais de uma vez ao mesmo grupo de respondente, numa abordagem de teste e reteste, esta técnica apresenta vários problemas e não é efetiva para medir capacidades que se alteram ao longo de o tempo.
Devido a esses fatores, utilizamos a estatística denominada de Coeficiente alfa ou de Alfa de Cronbach para verificar a confiabilidade do instrumento de coleta de dados, ou seja, do construto desta pesquisa.
Uma vez que os itens de uma escala devem medir aspectos de um mesmo construto, eles devem ser correlacionados entre si.
O Coeficiente alfa ou o Alfa de Cronbach é uma medida da confiabilidade ou da consistência interna de um instrumento.
Este coeficiente varia de 0 a 1, e um valor de 0,6 ou menos, geralmente indica uma consistência interna insatisfatória.
Entretanto, alguns autores utilizam o valor de 0,8, ou acima, como indicativo de um bom instrumento.
Para essa análise de confiabilidade, os dados coletados foram analisados com o pacote SPSS, para cálculo do coeficiente alfa dos itens do modelo proposto nesta pesquisa.
As tabelas resultantes foram adaptadas do seu formato original e traduzidas para ficarem de acordo com as normas da ABNT.
A tabela 13 mostra o número de casos submetidos, a quantidade de casos excluídos e o total de casos avaliados, ou seja, foram avaliados a totalidade de respondentes da pesquisa.
Conforme exposto na tabela 14, o modelo atingiu um coeficiente alfa de Cronbach de 0,837, considerado indicativo de um bom instrumento e indicando uma confiabilidade de consistência interna satisfatória.
A tabela 15 mostra a média e o desvio padrão calculado para cada um dos fatores do modelo e utilizado com base para cálculo do coeficiente alfa.
Para garantir que não existiam itens pobremente correlacionados no modelo, determinamos a tabela 16 com o objetivo de verificar se o coeficiente alfa poderia ser melhorado, caso algum dos fatores fosse eliminado.
Variância da escala se o Correlação item-Alfa de Cronbach se o item for eliminado total corrigida item for eliminado Conforme podemos verificar na tabela 16 a eliminação de qualquer fator (item) do modelo não aumentaria o coeficiente alfa de 0,837, demonstrando que os fatores estão satisfatoriamente correlacionados entre si e que todos contribuem para o resultado global da escala ou instrumento.
Casos os fatores F13 (Técnicas de gerenciamento) e F16 (Metodologia e ferramentas de desenvolvimento) fossem eliminados, o coeficiente alfa não seria afetado com relação a confiabilidade, entretanto, poderia haver impacto na validade do modelo.
Os dados coletados foram processados com o auxílio da ferramenta de análise de dados do programa Excel para geração da estatística descritiva e são apresentados nesta seção para cada um dos fatores do modelo.
A estatística descritiva dos dados coletados de cada projeto pode ser encontrada no apêndice G. A geração destas informações não faz parte do modelo e foi gerada apenas como ferramenta de apoio desta pesquisa.
Tabela 17 ­ Estatística descritiva do conjunto de projetos pesquisados (continuação).
Média Erro padrão Mediana Modo Desvio padrão Variância da amostra Curtose Intervalo Mínimo Máximo Assimetria Soma Contagem Nível de confiança A tabela 17 foi dividida em duas partes, neste documento, para facilitar sua visualização e fornece informações sobre a tendência e a variabilidade centrais dos dados.
A pesquisa foi realizada com 88 profissionais da área de desenvolvimento de software, conforme pode ser visto no item Contagem da tabela 17.
As médias e os desvios padrão de cada fator foram utilizados na análise do alfa de Cronbach.
Em esta seção será apresentada a distribuição das respostas coletadas na pesquisa para cada uma das questões que obtiveram o maior índice de respondentes em cada uma das escalas do modelo.
A tabela completa com a distribuição das respostas em cada uma das escalas para todas as questões pode ser encontrada no Apêndice C. Analisando a distribuição das respostas da pesquisa, pôde- se determinar que para todas as questões realizadas tiveram respondentes que a consideraram não aplicável ao seu projeto.
Embora algumas das questões, como por exemplo, a questão 4 sobre diferenças de idioma, que atingiu o maior índice de não aplicável, fosse de certa forma esperado na pesquisa, algumas questões surpreenderam, por se tratarem de questões inerentes ao desenvolvimento de software.
A questão 6, referente a ações de socialização, foi a que apresentou o maior percentual de discordância plena por os respondentes.
Esse percentual, embora pequeno, demonstra que alguns projetos pesquisados possuem oportunidades de melhoria no fator de socialização.
O maior percentual de discordância apontada por os respondentes se encontra na questão 26, sobre os aspectos de coesão e acoplamento serem levados em consideração na arquitetura para minimizar os esforços de colaboração.
Esse percentual aponta que alguns dos projetos pesquisados possuem oportunidades de melhoria com relação a o fator Arquitetura.
A questão 14, sobre os mecanismos de resolução de conflitos, obteve o maior percentual de respostas neutro, nem discordo e nem concordo.
Considerando que este percentual representa quase metade dos respondentes da pesquisa e que os percentuais de não aplicável, Discordo plenamente (2,27%) e Discordo aumentam para 79,55% o número de respondentes entre Não aplicável e Neutro, podemos considerar que o fator de resolução de conflitos apresenta oportunidade de melhoria em muitos dos projetos pesquisados.
A maioria dos respondentes concorda que pessoas confiáveis, respeitadas por os demais membros e com capacidades gerenciais foram colocadas em posições de liderança para facilitar a coordenação entre as equipes distribuídas.
Esse percentual aliado ao fato da questão 9, pessoas confiáveis, respeitadas por os demais membros e com capacidades gerenciais, foram colocadas em posições de liderança para facilitar a comunicação entre as equipes distribuídas, apontam a liderança como elemento positivo para o fator de Comunicação e Coordenação do modelo proposto.
A questão 16 atingiu o maior percentual de respondentes que concordam plenamente que existe um forte envolvimento do cliente na definição do escopo das entregas.
Esse fato, aliado ao percentual de respondentes que concordam com esta afirmação, demonstra o envolvimento do cliente como fator positivo na maioria dos projetos pesquisados.
Em esta seção serão apresentados os índices dos fatores e o índice de integração do grupo de projetos pesquisados.
Esses índices se referem as médias dos índices encontrados nos projetos.
Em o eixo horizontal os valores de 1 a 17 correspondem aos fatores avaliados, conforme tabela 19.
Essa tabela será utilizada em outras partes deste documento para representação dos fatores do modelo do índice de integração.
O eixo vertical se refere ao percentual máximo de integração para o grupo de projetos avaliados.
Cabe observar, que o índice de integração e os índices dos fatores do modelo são dependentes dos pesos de seus integrantes, ou seja, quanto maior o peso de um respondente maior o impacto de suas respostas sobre os índices dos fatores avaliados.
Conforme podemos observar na figura 27, o índice de integração médio dos projetos avaliados ficou em 67,75%, os fatores com menores valores normalizados foram Resolução de conflitos com 56,15% e Socialização com 57,55%.
Esses percentuais não chegam a ser surpresas, pois estes fatores estão ligados ao gerenciamento dos recursos humanos, sendo um dos principais desafios no gerenciamento de projetos distribuídos.
Por outro lado, os fatores com maiores índices foram Infraestrutura de telecomunicação com 78,45% e Ferramentas de colaboração com 76,01% demonstrando que a maioria das organizações está investindo nestas áreas para trabalharem com DDS.
Em o apêndice G pode ser encontrado os índices dos fatores e o índice de integração de cada um dos projetos pesquisados.
A figura 28 mostra os índices dos fatores calculados no modelo preliminar».
A razão da existência deste gráfico era facilitar a identificação dos fatores que apresentam menor contribuição no índice de integração.
Por o gráfico podemos notar que os fatores 3 (Socialização), 6 (Resolução de conflitos), 7 (Consenso dos requisitos), 10 (Medidas de desempenhoArquitetura do Software) apresentam a menor contribuição no índice de integração com 5% em cada fator.
Entretanto, o gráfico se mostrou ineficiente quando apresentado aos gerentes dos projetos pesquisados.
Devido a isso, este gráfico foi eliminado no modelo final e a fórmula do índice do fator foi alterada, conforme descrito na seção 6.1.
Uma análise da correlação foi realizada para identificar possíveis correlações entre os fatores do modelo.
O objetivo era determinar uma possível relação entre as variáveis (fatores) e qual o tipo desta relação.
O coeficiente de correlação mede até que ponto duas variáveis de medida &quot;variam juntas».
O valor de qualquer coeficiente de correlação deve estar entre 1 e+ 1 inclusive.
Em a correlação, se os valores altos de uma variável tendem a ser associados aos valores altos da outra (correlação positiva), se os valores baixos de uma variável tendem a ser associados aos valores altos da outra (correlação negativa) ou se os valores das duas variáveis tendem a não estar relacionados (correlação próxima de zero).
Em a tabela 20 foram identificados os maiores coeficientes de correlação entre os fatores do modelo.
Entretanto, esses coeficientes não apontam para a existência de alta correlação entre os fatores do modelo.
Desta forma, uma simplificação do modelo através da exclusão de um fator para cálculo através de outro foi descartada neste momento.
Esse fato de certa forma surpreende, pois a expectativa inicial de nossos estudos era que a dispersão dos projetos de desenvolvimento distribuído de software estivesse altamente correlacionado com todos ou pelo menos alguns dos demais fatores identificados.
De essa forma, a análise de correlação não foi incorporada ao modelo.
Entretanto, sugere- se uma análise mais aprofundada desta correlação como objeto de estudos futuros.
Em a fase de cálculo do modelo preliminar' além de a geração dos dados demográficos, dos dados estatísticos para validação do instrumento de coleta de dados, e do índice de integração e dos fatores alcançados por o grupo de projetos pesquisados foram gerados os índices dos fatores e o índice de integração para cada um dos projetos pesquisados.
Esses resultados foram apresentados para as organizações e projetos participantes da pesquisa.
Para apoiar esta etapa foi desenvolvido o formulário de avaliação de resultados e algumas reuniões foram gravadas (áudio) para posterior consulta e análise.
Essas reuniões serviram de base para desenvolvimento do modelo final.
Em essas reuniões foram apresentados os gráficos com os resultados do modelo e avaliado, com as organizações, avaliando o seu grau de conformidade com a realidade do projeto pesquisado.
Em o apêndice I pode ser encontrado o formulário de avaliação e o agrupamento dos comentários e sugestões coletados nesta etapa.
Após a análise dos formulários de avaliação e das gravações das reuniões foram feitas as alterações que se mostraram pertinentes para a melhoria do modelo.
Essas alterações estão descritas na seção «6.1.
Alterações no modelo preliminar'».
Com a finalização da aplicação do modelo nos estudos de casos, o modelo preliminar' foi revisado com o objetivo de resolver algumas lacunas encontradas durante os estudos de casos, principalmente na análise dos dados e na apresentação dos resultados.
Em esta seção serão descritas as alterações realizadas no modelo preliminar' e apresentado o modelo final para identificação do índice de integração em projetos de desenvolvimento distribuído de software.
Os instrumentos de coleta de informações do modelo final proposto pode ser encontrado no apêndice H. Durante a realização dos estudos de casos e análise dos dados, alguns pontos de melhoria no modelo preliminar' foram identificados.
Esses pontos foram avaliados e incorporados ao modelo final, conforme descrito nesta seção.
Foi adicionado mais uma etapa na fase de coleta do modelo, separando a etapa de coleta de dados demográficos da organização e do projeto com renumeração das questões.
Essa alteração facilita o preenchimento dos dados da organização, evitando que cada gerente de projeto necessite preencher esses dados.
Além disso, evita entendimentos diferentes por parte de os projetos avaliados numa mesma organização.
Outro benefício é que os dados demográficos da organização podem ser preenchidos por alguém do nível gerencial da organização, como por exemplo, o gerente do escritório de projetos.
A questão 1, do instrumento de coleta de dados demográficos da organização, foi alterada para identificar o número de empregados da empresa patrocinadora do projeto, pois durante o seu preenchimento ocorreram dúvidas sobre qual organização deveria ser considerada na resposta.
Foi incluída a questão 2 no instrumento de coleta de dados demográficos da organização, para avaliar o tamanho da organização executora do projeto, sendo utilizada, como opções de respostas, a escala do SEBRAE para classificação do porte das empresas de comércio e serviço.
Essa alteração foi realizada em complemento a alteração anterior.
Foi excluída a questão 6 do instrumento de coleta de dados demográficos da organização e do projeto do modelo preliminar'.
Essa informação referente a o tamanho da equipe passou a ser obtida na questão 6 do instrumento de coleta de dados demográficos da organização do modelo final.
Esta alteração foi realizada devido a haver redundância nas questões.
Os dados demográficos do respondente passaram a ser necessários em todas as avaliações para garantir que caso tenha ocorrido mudanças no perfil do respondente, as mesmas sejam levadas em consideração na nova identificação do índice de integração.
Essa alteração permite garantir que se está trabalhando com a situação atualizada do respondente.
As questões com respostas NA (Não aplicável), desconsideradas para cálculo da média das respostas de um fator, foram melhor descritas no cálculo do modelo final de forma a não distorcer os resultados.
O peso de um respondente que considerou todas as questões do fator como não aplicável é desconsiderado para cálculo do índice do fator de forma a não distorcer os resultados.
O cálculo do índice do fator passou a ser calculado com base no percentual alcançado com relação a o percentual máximo que um fator poderia alcançar no projeto avaliado, correspondente ao valor NormalizadoFator (f) do modelo preliminar».
Em os resultados apresentados para as organizações, o gráfico com o índice dos fatores, calculado com base na participação de cada fator em relação a o total dos fatores, não mostrava uma informação relevante uma vez que seus valores ficavam muito próximos.
A estatística descritiva dos dados coletados e analisados que deram origem aos índices dos fatores e ao índice de integração, conforme solicitado nas apresentações dos resultados para as organizações, foram geradas apresentadas as organizações, mas não foram incorporadas ao modelo.
Em esta seção será descrito o modelo de identificação do índice de integração em projetos de desenvolvimento distribuído de software.
De acordo com Carmel, uma das principais características dos times distribuídos, com relação a os times tradicionais de desenvolvimento de software, é que seus membros estão distribuídos em diferentes unidades de trabalho.
Devido a essa distribuição, os projetos de desenvolvimento distribuído de software estão expostos à diferenças geográficas, temporais, culturais e de idiomas relativos a dispersão da equipe do projeto.
Diferentemente dos modelos de avaliação de equipes tradicionais, esse modelo busca identificar se as diferenças geográficas, temporais, culturais e de idiomas existentes no projeto foram avaliadas e incorporadas aos processos do projeto.
Além de isto, busca identificar os efeitos desta dispersão em outros fatores que influenciam a integração e o sucesso dos projetos em ambiente de DDS.
O modelo final proposto está dividido em três fases, são elas:
Coleta, Cálculo, e Análise e ação.
Cada uma dessas fases possui características próprias que estão descritas a seguir.
Conforme pode ser visto na figura 29, o modelo apresenta três fases distintas que devem ser realizadas em sequência para obtenção do índice de integração em projetos de desenvolvimento de software em ambiente de DDS.
Fase 1 -- Coleta A fase de Coleta é dividida em três etapas:
Etapa 1 -- Dados demográficos da organização Em esta etapa é enviado para a empresa ou organização o instrumento de coleta de informações demográficas da organização para preenchimento.
Esse instrumento deve ser preenchido por alguém responsável por os projetos da organização.
Esse preenchimento poderá ser feito de forma assistida por o pesquisador ou responsável por a pesquisa, caso ocorra dúvidas em seu preenchimento.
Etapa 2 -- Dados demográficos do projeto Em esta etapa é enviado para a empresa ou organização o instrumento de coleta de informações demográficas de cada projeto a ser pesquisado para preenchimento.
Esse instrumento deve ser preenchido, preferencialmente, por o gerente do projeto ou por alguém responsável por os projetos ou por a pesquisa na organização.
Esse preenchimento poderá ser feito de forma assistida por o pesquisador ou responsável por a pesquisa, caso ocorra dúvidas em seu preenchimento.
Etapa 3 -- Dados demográficos do respondente e Índice de Integração em Projetos DDS Em esta etapa cada integrante da equipe, incluindo o gerente de projeto, deve responder a um conjunto de perguntas divididas em dois grupos.
O primeiro grupo é de perguntas relacionadas ao perfil do respondente.
O segundo grupo está relacionado a perguntas sobre cada um dos fatores da tabela 19 e devem ser respondidas com uma das seguintes opções:
Não aplicável, Discordo plenamente, Discordo, Neutro, Concordo e Concordo plenamente.
Essa escala está baseada na escala itemizada de Likert.
A escala itemizada é uma escala de mensuração que apresenta números e/ ou breves descrições associadas a cada categoria.
As categorias são ordenadas em termos de sua posição na escala.
A escala Likert é uma escala de mensuração com cinco categorias de respostas, variando de &quot;discordo totalmente «a &quot;concordo totalmente», que exige que os participantes indiquem um grau de concordância ou de discordância com cada uma das várias afirmações relacionadas aos objetos de estímulo.
Outra característica importante da escala Likert é que ela é uma escala balanceada com cinco categorias, sendo que o número de categorias favoráveis e desfavoráveis é o mesmo.
Além disso, apresenta uma opção intermediária neutra ou imparcial, quando o respondente nem concorda e nem discorda com as afirmações sobre o objetivo do estímulo.
De essa forma, utilizamos a escala de valores descrita na tabela 21 de acordo com a escolha dos respondentes.
Como podemos observar na tabela 21, o modelo utiliza uma escala não-forçada, incluindo a opção &quot;Não aplicável «na escala.
Uma escala forçada é aquela que força os respondentes a manifestar uma opinião por não proporcionar as opções &quot;sem opinião «ou &quot;não conheço o assunto».
Para não causar constrangimento aos respondentes, optamos por a expressão &quot;Não aplicável «em relação as opções &quot;sem opinião «ou &quot;não conheço o assunto «descritas por Malhotra.
Devido a a generalidade do modelo, o mesmo possibilita o acréscimo de outras perguntas ou ainda mais alternativas para as respostas, dependendo da necessidade das organizações.
Entretanto, não é recomendável trabalhar com diferentes perguntas ou alternativas dentro de a mesma organização ou projeto, pois pode prejudicar a comparação dos resultados.
O modelo proposto pode ser aplicado em diferentes momentos do projeto quantas vezes forem necessárias.
Entretanto, para um melhor resultado da aplicação da pesquisa aconselha- se que a equipe do projeto já esteja alocada e trabalhando em conjunto, conforme pode ser visto na seção «6.3.
Recomendação para identificação do índice de integração».
Fase 2 -- Cálculo Em a fase de Cálculo, a partir de as respostas dos integrantes da equipe, são geradas a estatística descritiva dos dados coletados e dois índices:
Índice do fator e o índice de integração.
O primeiro, se refere ao índice alcançado por um determinado fator com relação a o índice máximo que poderia ser alcançado por o fator no projeto.
O segundo, índice de integração, representa o índice de integração do projeto com base na média de todos os fatores.
A escala utilizada no modelo é baseada na escala itemizada de Likert, sendo esta uma escala não comparativa, ou seja, um tipo de técnica de escalas em a qual cada objeto de estímulo é escalonado, independente dos outros objetos no conjunto de estímulos.
Devido a essa característica, necessitamos transformar esta escala numa escala razão, para cálculo, apresentação, e possibilidade de comparação dos resultados de forma quantitativa, conforme tabela 21.
As fórmulas para cálculo dos índices dos fatores e do índice de integração são apresentadas a seguir.
Em as fórmulas abaixo, usadas para cálculo dos índices, foram utilizadas as seguintes definições:
Resposta (r) (f) (q) é a resposta do respondente (r) para o fator (f) na questão (q).
PR (r) representa o peso de um respondente r;
O peso do respondente é utilizado para ajustar os valores e é gerado a partir de um subconjunto das respostas dos questionários de coleta.
O objetivo é diferenciar as respostas de um indivíduo muito experiente das respostas de um indivíduo pouco experiente, de forma que o resultado final leve em consideração a experiência dos respondentes.
O cálculo do peso foi baseado na proposta de Farias, e é gerado conforme descrito a seguir:
PR (r) $= Te a (r) TADD (r)+ f (r)+ k (r) MedianaTA MadianaTADD Te a (r) é a faixa de tempo de atuação do respondente r em desenvolvimento de software de acordo com a tabela 23: MedianaTA é a mediana do valor atribuído a partir de a faixa de tempo de atuação de cada colaborador em desenvolvimento de software;
TADD (r) é a faixa de tempo de atuação do respondente r em desenvolvimento distribuído de software de acordo com a tabela 24: MedianaTADD é a mediana do valor atribuído a partir de a faixa de tempo de atuação de cada colaborador em desenvolvimento distribuído de software;
Primário ou secundário, Superior;
MBA/ Especialista, Mestrado e Doutorado k (r):
Conhecimento do respondente r em DDS, sendo considerados os seguintes valores:
Nenhum ou baixo, Médio, Alto e Excelente.
A partir de o cálculo do peso, os índices podem ser calculados da seguinte forma:
Índice do Fator:
Este índice é o percentual alcançado por o fator, com relação a o valor máximo que o fator poderia atingir no projeto, com base nas respostas e nos pesos dos respondentes.
Quanto maior o percentual atingido por o fator melhor será seu desempenho e contribuição no índice de integração.
De acordo com o modelo, o valor máximo atingido por um fator corresponde a todos os respondentes do projeto responder que concordam plenamente em todas as questões relativas a um determinado fator.
Para efeito de cálculo, as questões com respostas NA (Não aplicável) são desconsideradas.
Se as respostas de todos os respondentes para as questões de um fator forem NA (Não aplicável), o fator não será considerado para cálculo do índice.
Se apenas alguns respondentes considerarem as questões de um fator como NA (Não aplicável), o respondente será desconsiderado no cálculo do índice do fator.
Para calcular este índice, as respostas de cada pergunta do fator são somadas para se calcular o valor médio das respostas.
SomRespFator: É a soma das respostas das perguntas de um respondente para um determinado fator.
Soma Re spFator (r) (f) $= Re sposta (r) (f) (q), onde:
Q $= 1 Resposta (r) (f) (q) é a resposta do respondente r para a questão q do fator f;
Caso a todas as questões do fator sejam respondidas com NA (Não aplicável) o respondente é excluído do cálculo do índice do fator.
Para isso, a contribuição máxima do respondente deve ser desconsiderada do cálculo do índice do fator.
PRNA $= PRNA+ (m × PR (r)), onde:
PRNA (Peso Respondente Não Aplicável):
Inicia com zero e é incrementado a cada respondente que possua todas as respostas de um fator como não aplicável.
Depois é calculada a média das respostas para o fator em questão.
MedRespFator: É a media das questões de um determinado fator.
Med Re spFator (r) (f) $= Som Re spFator (r) (f), onde:
A média das respostas do fator é então ajustada de acordo com o peso de cada respondente.
Conforme abaixo:
AjusteFator é o valor ajustado da média das respostas do colaborador r para o fator f;
AjusteFator (r) (f) $= Med Re spFator (r) (f) × PR (r) Logo após, calcula- se o valor total para cada fator, aplicando a fórmula a seguir:
TotalFator é o valor total do fator f para todos os respondentes;
R $= n TotalFator (f) $= AjusteFator (r) (f) r $= 1 Por fim, o índice do fator é calculado dividindo- se o valor total do fator por o valor máximo possível, excluindo- se os respondentes que consideraram o fator não aplicável:
TotalFator (f) ÍndiceFator (f) $= r $= n (m × (PR (r)) -- PRNA r $= 1 Índice de integração:
Este índice é o percentual de integração que o projeto atingiu com base na média de todos os fatores do modelo.
Esse índice é calculado através da média dos fatores, conforme abaixo:
ÍndiceIntegração $= f $= 1 O modelo proposto pode ser aplicado através da utilização de algumas ferramentas de apoio, tais como planilhas eletrônicas ou ferramentas específicas, desenvolvidas para dar suporte a este modelo.
Sugere- se, com a média das respostas dos fatores de cada respondente MedRespFator (r) (f), a geração da estatística descritiva dos dados coletados através de ferramentas estatísticas específicas, como por exemplo, o pacote de ferramentas de análise de estatística descritiva do programa Excel.
Uma vez calculado os índices dos fatores e o índice de Integração têm- se os elementos para a realização da fase 3, em que os dados são analisados e as ações planejadas.
Fase 3 ­ Análise e ação Em esta fase os dados são avaliados com o objetivo de identificar possíveis causas de problemas.
Com as informações geradas por o modelo, podemos analisar os fatores individualmente ou em conjunto, conforme a necessidade do projeto.
Abaixo segue alguns gráficos que podem ser gerados com os dados gerados por o modelo, somente para efeito de demonstração do cálculo do índice dos fatores e de integração.
Em esse gráfico é possível visualizar o comportamento de cada um dos fatores na identificação realizada num projeto.
Esse gráfico mostra que Infraestrutura de telecomunicação teve o melhor índice e Resolução de conflitos, o índice mais baixo nesta comparação.
Com esta informação, pode- se aplicar o Principio de Pareto para geração de um gráfico com os fatores que apresentam os índices mais baixos e que tendem a impactar negativamente no projeto.
Em este gráfico é possível fazer um comparativo do comportamento dos Índices dos fatores dos 4 (quatro) fatores do modelo que apresentaram os menores índices da pesquisa.
Esse gráfico pode ser usado para a priorização das ações de melhorias nos projetos.
Em este gráfico (figura 32) é possível fazer um comparativo do comportamento do Índice de integração em 3 projetos distintos.
O gráfico aponta que os projetos X1 e X2 atingiram um índice de integração acima de 60% e que o projeto X2 teve o menor índice entre os projetos observados.
O modelo permite a geração de outros tipos de gráficos e informações sobre o projeto, por exemplo, um gráfico para avaliar a percepção do índice de integração das pessoas que desempenham uma determinada responsabilidade dentro de o projeto (Gerenciamento, Desenvolvimento e Qualidade), como mostrado na figura 33.
Caso o número de respondentes de um determinado papel, seja significativo, pode- se gerar o gráfico de um papel específico (analistas, desenvolvedores, testadores e outros).
Com base na análise dos gráficos, é importante nesta fase buscar o significado de cada valor no contexto do projeto, comparar com avaliações anteriores, se isso for possível, e planejar ações objetivas para melhorar a integração das equipes.
Essas ações devem ser escritas e terem um responsável e uma data para sua conclusão, sendo monitoradas constantemente até o seu encerramento.
De acordo com o PMBOK, os projetos variam em tamanho e complexidade, mas não importa se são grandes ou pequenos, simples ou complexos;
Iniciando o projeto Organizando e preparando Realizando o trabalho do projeto e Encerrando o projeto.
Esta estrutura genérica permite uma visão de alto nível comum a todos os projetos e pode oferecer um quadro de referência para comparação de projetos.
De essa forma todos os projetos geralmente apresentam as seguintes características:
Um baixo nível de custo e de pessoal no início, atingindo um valor máximo quando o projeto é executado e diminuindo rapidamente no encerramento do projeto, conforme pode ser visto na figura 34.
Em o início do projeto a influência das partes interessadas, os riscos e as incertezas são maiores e diminuem ao longo de o ciclo de vida do projeto (Figura 35).
Em o início do projeto a capacidade de influenciar as características finais do produto, com um menor impacto sobre os custos, é mais alta.
Ao longo de o projeto essa influência tende a diminuir, pois os custos de mudanças e correções de erros aumentam significativamente conforme o projeto se aproxima do seu término (Figura 35).
Em a figura 35, pode- se observar o impacto das variáveis &quot;Custo das mudanças «e &quot;Influência das partes interessadas, riscos e incertezas «ao longo de o tempo do projeto.
De acordo com estas características, podemos observar a importância do envolvimento das partes interessadas nos processos de Desenvolver o termo de abertura e Desenvolver o plano de projeto da área de gerenciamento da integração.
É importante que o plano de gerenciamento seja elaborado com o envolvimento de todas as partes interessadas e que os fatores que impactam no gerenciamento dos projetos de desenvolvimento distribuído de software sejam identificados quando ao seu nível de integração.
Conforme visto acima, os custos das mudanças no projeto aumentam ao longo de o seu ciclo de vida, sendo mais bem absorvidos durante a preparação e organização do projeto.
Por isso, identificar os fatores que podem impactar negativamente e garantir que o planejamento da integração está adequado e institucionalizado no projeto é de fundamental importância para o seu sucesso.
Em esse sentido, recomendamos que a identificação do índice de integração do projeto seja realizada a partir de o início da execução do trabalho do projeto, quando os níveis de custos e pessoal aumentam.
A identificação do índice de integração do projeto, neste momento, é fundamental para tomada de ações corretivas e preventivas no projeto de forma a garantir que o mesmo seja bem-sucedido.
A figura 36 mostra o momento sugerido para realização da identificação do índice de integração em projetos de DDS.
Embora esse ponto seja recomendado para a maioria dos projetos, cabe salientar que projetos que possuam um longo período de iniciação e planejamento envolvendo muitos recursos podem requerer que a identificação do índice de integração seja antecipada.
Além disso, a repetição da aplicação do modelo é recomendada para acompanhamento dos fatores do modelo, inclusive, para avaliar os resultados da última fase do próprio modelo, chamada Análise e ação.
Esta seção apresenta um balanço da pesquisa realizada, juntamente com uma análise dos resultados alcançados.
Além disso, são apresentadas as contribuições da pesquisa para o meio acadêmico e organizacional, com algumas recomendações relevantes.
Em seguida as limitações do estudo são analisadas e no final são apresentadas as oportunidades de estudos decorrentes desta pesquisa.
O gerenciamento da integração é uma área fundamental no gerenciamento de projetos e principalmente em projetos de desenvolvimento distribuído de software.
Não é produzido por o Project Management Institute (PMI), dedica um capítulo inteiro ao gerenciamento da integração do projeto, comprovando a importância dessa área e o interesse mundial na prática do gerenciamento da integração.
A pesquisa partiu da base teórica do gerenciamento de projetos e da necessidade do gerenciamento de projetos de desenvolvimento distribuído de software.
Em os estudos avaliados, ficou evidente que, além de as áreas tradicionais do gerenciamento de projetos, como escopo, tempo, custo e qualidade, outras áreas ganhavam importância no gerenciamento de projetos distribuídos de software.
Entre elas, a integração dos projetos, uma vez que, uma das principais características dos projetos distribuídos é a dispersão da equipe e das atividades do projeto, seja ela, física ou geográfica, organizacional, temporal e/ ou entre grupos de interessados.
Em esse sentido, focamos na área de gerenciamento da integração do projeto, pois conforme descrito no PMBOK, essa área define os processos e as atividades que integram os diversos elementos do gerenciamento de projetos.
Em função de as características que a área de gerenciamento da integração possui, como unificação, consolidação, articulação e ações integradoras, que segundo o PMBOK, são essenciais para o término do projeto, para gerenciar com sucesso as expectativas das partes interessadas, e atender os requisitos, buscamos na base teórica os principais fatores que impactavam o gerenciamento da integração em projetos de DDS.
A o aprofundar os estudos realizados encontramos diversos fatores que impactavam a integração dos projetos e a necessidade do desenvolvimento de mecanismos de identificação desses fatores em projetos de DDS, permitindo identificar o nível de integração de um projeto de software em ambiente de DDS, conforme definido na questão de pesquisa deste estudo e atendendo ao nosso primeiro objetivo específico.
Os principais fatores encontrados foram:
Dispersão, Papéis responsabilidades, Socialização, Confiança e colaboração, Comunicação e coordenação, Resolução de conflitos, Consenso dos requisitos, Envolvimento do cliente, Métodos de estimativas, Medidas de desempenho, telecomunicação, Técnicas Ferramentas de gerenciamento, colaboração, Gerenciamento Infraestrutura de mudanças de configuração, Arquitetura do software, Metodologia e ferramentas de desenvolvimento e Integração.
Como resultado desses estudos, e do estudo do modelo PDI, foi possível descrever um modelo que permitisse identificar o nível de integração em projetos de DDS, com base na percepção da equipe do projeto em relação a os fatores definidos para o modelo.
Com isso, foi possível atender ao segundo objetivo específico dessa pesquisa.
Com a definição do modelo foi possível aplicar- lo em diversos projetos de DDS, conforme definido no terceiro objetivo específico dessa pesquisa.
A aplicação do modelo foi realizada através da aplicação do modelo proposto em 15 (quinze) projetos de DDS, abrangendo 6 (seis) organizações e 88 (oitenta e oito) respondentes.
Os resultados da aplicação do modelo foram apresentados às organizações e aos gerentes de projetos, como forma de avaliar os resultados gerados por o modelo.
Esses resultados foram considerados bastante satisfatórios, uma vez que todos os gerentes de projetos concordaram que os resultados apresentados estavam alinhados com a realidade dos projetos no momento da realização da pesquisa.
Outro ponto positivo dos resultados apresentados foram algumas considerações feitas por alguns gerentes dos projetos, como por exemplo, a utilização dos resultados da aplicação do modelo na reunião de post- mortem do projeto e o desejo de realizarem a aplicação do modelo de maneira sistemática e envolvendo equipes localizadas fora de o Brasil.
De o ponto de vista científico, os resultados se mostraram bastante adequados, conforme pode ser visto por a estatística descritiva dos dados coletados e por as avaliações de correlação e alfa de Cronbach realizadas neste estudo.
Porém, esses resultados devem ser analisados com cautela, pois representam um grupo da população de projetos de desenvolvimento distribuído de software e podem variar na medida em que novas execuções do modelo sejam realizadas.
Independente desse fato, consideramos que os resultados desta pesquisa atendem plenamente ao seu objetivo geral e permite satisfazer a questão de pesquisa definida.
Além disso, com a apresentação dos resultados para as organizações e elaboração deste documento foi possível atender ao quarto e último objetivo específico dessa pesquisa.
Como resultado adicional da pesquisa foi possível fazer uma classificação dos fatores identificados em fatores humanos e tecnológicos.
Os fatores humanos estão relacionados a integração e as interações entre os membros do projeto, incluindo todas as partes interessadas.
Já os fatores tecnológicos estão relacionados a estrutura, processos, técnicas e ferramentas utilizadas no projeto, conforme tabela 25.
Avaliando os fatores identificados em nossos estudos, verificamos que o principal fator que caracteriza os projetos de DDS é o fator Dispersão.
Além de isto, a dispersão dos projetos de DDS afeta principalmente a integração do projeto, por isso, pode- se considerar o fator Integração como o fator final a ser alcançado para o sucesso do projeto.
De uma maneira geral, quanto maior o nível de dispersão do projeto, maior será seus esforços e riscos de integração, pois o fator Integração se contrapõe ao fator dispersão.
Ambos os fatores, dispersão e integração, possuem aspectos humanos e tecnológicos, já os demais fatores são predominantemente humanos ou tecnológicos.
De uma forma geral, os fatores tecnológicos são dependentes das organizações e os fatores humanos dependentes das pessoas envolvidas nos projetos, ou seja, da equipe do projeto e demais partes interessadas.
Os fatores tecnológicos são facilitadores dos fatores humanos servindo de base e guia para o relacionamento entre as equipes distribuídas.
Os fatores tecnológicos estão relacionados aos ativos dos processos organizacionais e aos fatores ambientais da organização e do projeto.
Os fatores humanos estão relacionados ao efetivo gerenciamento do projeto e das interações entre seus membros.
Em este sentido, os fatores tecnológicos tendem a ser providos por a organização e os aspectos humanos a serem desenvolvidos por a equipe de gerenciamento do projeto.
De forma prática, os resultados alcançados também foram bastante interessantes, como podemos observar avaliando a média dos índices dos fatores do modelo dos projetos pesquisados.
Esses resultados apontaram que os fatores Socialização (57,55%) e Resolução de Conflitos apresentaram os menores índices na média dos projetos pesquisados.
Esses resultados, de certa forma, não surpreendem, pois os estudos mostram que a socialização ajuda na coesão do time, construindo confiança e espírito de equipe.
A falta de socialização permite a existência de objetivos e motivações divergentes entre os membros e as equipes do projeto, aumentando as chances de conflito entre os mesmos.
Outro fator que merece destaque é o fator Infraestrutura de comunicação que obteve o maior índice médio entre os fatores pesquisados.
Conforme discussões realizadas durante as apresentações dos resultados, esse fato está ligado aos avanços das tecnologias utilizadas na infraestrutura de comunicação que nos últimos anos tem se tornando cada vez mais disponível e confiável, a um baixo custo de aquisição.
Com base nisso, acreditamos que o impacto deste fator em projetos de DDS não será mais percebido, fazendo com que este fator futuramente possa ser excluído do modelo.
Avaliando os resultados de alguns projetos foi possível verificar que a percepção de seus integrantes varia de acordo com suas responsabilidades no projeto.
Como exemplo, analisando os resultados do projeto A1, pode ser verificado uma inversão dos resultados referentes aos fatores de dispersão e integração entre as equipes avaliadas.
O fator dispersão com índice de 80,59% na unidade 1 se contrapõe ao índice de 53,33% da unidade 2 do projeto.
O fator integração com índice de 56,22% na unidade 1 se contrapõe ao índice de 80% da unidade 2 do projeto.
Durante a apresentação dos resultados para o gerente do projeto foi possível avaliar o provável motivo destes resultados.
A unidade 1 é a principal equipe do projeto, inclusive sendo a base do gerente do projeto, e a unidade 2 é uma equipe de desenvolvimento localizada a cerca de 120 quilômetros da equipe 1.
Esta distância da equipe principal, de certa forma, explica a percepção da equipe 2 com relação a o fator dispersão.
Por outro lado, a equipe 1 é a responsável por integrar os módulos desenvolvidos por a equipe 2 ao sistema, este fato pode explicar a diferença com relação a o fator integração entre a equipe 1 (56,22%) e a equipe 2 (80,00%).
Conforme podemos verificar, os resultados da pesquisa se mostraram adequados e confiáveis, tanto do ponto de vista acadêmico quanto organizacional.
O conjunto de projetos selecionados para os estudos de casos apresentou uma diversificação interessante para a pesquisa, conforme pode ser visto através dos gráficos demográficos apresentados neste documento.
De essa forma, consideramos os projetos avaliados como sendo representativos da população de projetos de desenvolvimento distribuído de software, foco desta pesquisa.
Analisando os resultados dos índices dos fatores e dos índices de integração dos projetos pesquisados alguns resultados chamam a atenção, conforme pode ser visto na figura 37.
De os 15 projetos pesquisados dois projetos atingiram um índice de integração menor que 50%, sendo que ambos os projetos pertenciam a organizações que nos demais projetos avaliados atingiram índices de integração superiores a 70%.
O projeto F1 atingiu um índice de integração de 44,27% e o projeto B2 um índice de integração de 44,49% sendo que no momento da avaliação ambos os projetos estavam em planejamento.
Avaliando o resultado destes projetos em conjunto com suas organizações verificamos que os resultados estavam coerentes com a realidade dos projetos.
No caso de o projeto F1, o índice de integração refletia a experiência que estava sendo realizada por a organização para contratação de desenvolvimento de módulos através de pregão de software, onde a especificação é postada por a organização e desenvolvedores externos (terceiros) efetuam suas propostas para a realização do serviço.
Sendo esse um projeto piloto, os processos organizacionais não estavam adequados para este tipo de contratação mostrando que mesmo em organizações com nível de maturidade &quot;3 ­ definido «do CMMI, mudanças no processo de desenvolvimento afetam os resultados do projeto.
O projeto B2 apresentou um conjunto de índices dos fatores bastante baixos, sendo eles:
Socialização, Resolução de conflito, Consenso dos requisitos, Métodos de estimativas e Medidas de desempenho.
De acordo com a organização, o projeto no momento da realização da pesquisa estava em fase de planejamento, sendo que esta fase estava atrasada devido a pendências de planejamento de outras equipes.
Em este cenário, avaliamos que o modelo do índice de integração refletiu de forma bastante precisa a realidade do projeto, mostrando os principais fatores que estavam impactando o planejamento do projeto.
Os maiores índices de integração foram alcançados por os projetos A1 e F2.
Uma análise inicial dos dados demográficos desses projetos e de suas organizações não mostraram um padrão, entre os projetos, que explicassem os altos índices encontrados.
No caso de o projeto F2, que estava em encerramento, seu resultado está vinculado ao nível de maturidade dos processos organizacionais, a experiência e conhecimento do gerente do projeto em gerenciamento de projetos e DDS.
Além de isto, o projeto possuía uma das médias mais altas com relação a os pesos dos respondentes, sendo que esse peso reflete a experiência da equipe em desenvolvimento de software e DDS, bem como, conhecimento em DDS e grau de instrução.
Com relação a o projeto A1, alguns dados demográficos apontavam uma divergência com relação a o índice de integração obtido.
O gerente de projeto possuía menos de 1 ano de experiência em gerenciamento de projetos, o conhecimento do gerente do projeto e da equipe do projeto em gerenciamento de projetos era baixo, a média dos pesos dos respondentes era a mais baixa entre os projetos pesquisados.
Entretanto, verificamos durante a apresentação dos resultados para a organização que o gerente do projeto, através de sua experiência em desenvolvimento de software e DDS, utilizava os processos organizacionais que estavam no nível 2 (gerenciado) de maturidade CMMI para condução do projeto.
Outro ponto que chamou a atenção nesse projeto foi o baixo índice do fator integração entre os 17 fatores pesquisados.
Para avaliar melhor este fator, foi avaliado de forma independente os índices dos fatores de cada uma das equipes do projeto, sendo que nesta avaliação podemos observar que este índice estava vinculado a percepção de cada uma das equipes com relação a os fatores dispersão e integração, conforme descrito na seção anterior.
Estas análises demonstraram que a percepção do fator dispersão e do fator integração é dependente da distância entre as unidades e da responsabilidade por a integração dos módulos desenvolvidos por a diferentes unidades.
Os resultados da pesquisa mostraram que os projetos em planejamento apresentavam um índice de integração menor que os demais projetos.
Este fato vem de encontro a nossa sugestão do ponto inicial para identificação do índice de integração.
Além de isto, verificou- se que a realização de projetos com características diferentes dos projetos usualmente desenvolvidos na organização e não suportados por os processos e ativos organizacionais influenciam no índice de integração, mesmo em organizações com níveis de maturidade em desenvolvimento de software.
A partir de o estudo da base teórica e do modelo de referência PDI (Perceived Distance Index) foi possível elaborar um modelo de referência para identificar o nível de integração em projetos de desenvolvimento distribuído de software com base em fatores que impactam os projetos desta natureza.
O modelo apresenta fases para coleta, cálculo e, análise e ação para a avaliação da percepção dos integrantes do projeto com relação a os principais fatores que afetam os projetos de software de acordo com a base teórica pesquisada.
O modelo proposto possibilita sua utilização em projetos de desenvolvimento distribuído de software sejam eles nacionais ou internacionais.
Além disso, possibilita sua adaptação para inserção ou remoção de fatores de acordo com as necessidades das organizações de desenvolvimento de software.
O modelo proposto foi utilizado para a aplicação em estudos de casos múltiplos em diversos projetos, com ambiente de DDS, em organizações de desenvolvimento de software localizadas na região sul do Brasil.
O objetivo dos estudos de casos foi o de realizar a aplicação prática do modelo, visando avaliar a qualidade dos resultados gerados por o mesmo.
Além disso, identificar para as organizações a percepção dos integrantes das equipes do projeto com relação a os fatores pesquisados.
Em esse sentido, foram realizadas as apresentações dos resultados, para cada um dos projetos da pesquisa, com retornos bastante positivos sobre a mesma, inclusive com a sua utilização em reuniões de post- mortem de alguns projetos e a avaliação da possibilidade de ser repetida nos mesmos projetos e em outros da organização.
Através de técnicas de correlação, foi analisada uma possível correlação entre os fatores do modelo.
Esta análise foi importante, pois mostrou que, pelo menos nos projetos pesquisados, os fatores não estão correlacionados.
Esse fato, de certa forma surpreende, pois era esperada uma correlação de um ou mais fatores com o fator dispersão, característico de projetos de DDS.
Devido a isso, recomendamos a continuação da aplicação do modelo, conforme definido neste estudo, e futuras análises de correlações.
A análise alfa de Cronbach, além de permitir a avaliação da consistência e confiabilidade do instrumento de pesquisa, permitiu avaliar se algum dos fatores poderia ser removido de forma a simplificar o modelo.
A pesquisa mostrou que, pelo menos nos projetos pesquisados, a eliminação de qualquer um dos fatores pesquisados não aumentaria a confiabilidade do modelo.
Esse fato pode estar ligado a pouca correlação dos fatores encontrada na análise de correlação.
Uma das contribuições mais relevantes desta pesquisa, do ponto de vista organizacional, além de a sua aplicação para avaliação dos projetos de DDS, é a possibilidade de sua aplicação sistemática, permitindo às organizações acompanhar os resultados das ações implementadas para melhorar os índices que ficaram baixos nas avaliações anteriores.
Para a comunidade acadêmica, essa pesquisa abre muitos caminhos, pois disponibiliza um modelo que permite avaliar diversos fatores que impactam os projetos de desenvolvimento distribuído de software, possibilitando o estudo de tendências, comportamentos, correlações positivas e negativas, análises de causa e efeito, entre outros, viabilizando sua utilização em projetos nacionais e internacionais através de pequenas adaptações e permitindo o desenvolvimento de artigos científicos.
A versão on-line do questionário se mostrou bastante adequada para aplicação do questionário do modelo durante os estudos de casos, contribuindo para os resultados dessa pesquisa.
A ferramenta utilizada (Googledocs) facilitou a estruturação do instrumento de coleta de informações e a captura dos dados da pesquisa, sendo recomendada para utilização em trabalhos futuros.
Além disso, o modelo proposto poderá ser utilizado por acadêmicos e organizações para a coleta de informações, gerando uma base de dados que permita a realização de trabalhos futuros, correções de problemas e melhoria de processos.
A escolha do estudos de casos como método para aplicação e avaliação do modelo, através de uma pesquisa qualitativa e exploratória, demandou esforço e tempo superiores ao esperado inicialmente.
Embora a identificação das organizações com projetos em ambiente de DDS tenha sido de certa forma simples, devido a existência de um Parque Tecnológico (Tecnopuc) ligado a PUCRS.
Essas organizações, mesmo sendo receptivas a realização da pesquisa, possuem uma estrutura de autorização bastante complexa, além de isto, seus profissionais estão alocados em tempo integral em projetos e demandam pouco tempo para participação em pesquisas acadêmicas.
Esses fatos acarretaram na participação de um número menor de respondentes em relação a o potencial dos projetos pesquisados.
Apesar de a realização dos estudos de casos terem sidos adequados para a aplicação e teste do modelo proposto, não foi possível envolver respondentes das equipes dos projetos pesquisados que estavam localizadas em outros países.
Embora interessante para a pesquisa este tipo de respondente, a mesma não foi prejudicada devido a existência de equipes distribuídas regional e nacionalmente que responderam à pesquisa.
De essa forma foi possível avaliar efetivamente a influência da dispersão e dos demais fatores nestes projetos.
Existe a necessidade de ampliar os estudos de campo, aplicando num número maior de organizações e projetos, para ampliar a capacidade de generalização dos resultados e do próprio modelo.
Esta limitação está vinculada ao fato que o método mais adequado de generalização, em estudos de caso, é a generalização analítica, em o qual se utiliza uma teoria previamente desenvolvida como modelo com o qual se devem comparar os resultados empíricos obtidos nos estudos de casos.
De essa forma, os resultados apresentados são válidos para as organizações estudadas, sendo necessários novos estudos para sua generalização.
Outro ponto levantado nas apresentações dos resultados da pesquisa é que o modelo pesquisado não incorpora fatores para avaliação do projeto do ponto-de-vista do cliente.
Embora equipes localizadas internamente nos clientes, que participam do projeto possam ser avaliadas por o modelo, não era foco da pesquisa avaliar a percepção do cliente quanto a os resultados do projeto.
Muitas oportunidades de estudos são vislumbradas com base na continuidade deste trabalho.
Entre elas podemos destacar:
Desenvolver novos estudos de casos, visando ampliar a capacidade de generalização do modelo e ampliar seletivamente os fatores, de acordo com segmentos específicos da industria.
Além disso, este estudo pode ser expandindo de várias maneiras, cada uma de elas com objetivos específicos.
Entre elas podemos citar:
Expandir a análise fatorial, envolvendo novos estudos de casos, com o objetivo de avaliar as correlações entre o conjunto de variáveis (fatores), buscando identificar uma possível redução dos fatores do modelo e sua simplificação.
Criação de uma ferramenta para automatizar as fases do modelo proposto, de forma que, os resultados possam ser apresentados dinamicamente e permitam a realização de comparações entre projetos e grupos de projetos (Benchmarking), bem como, o acompanhamento gráfico da evolução dos fatores ao longo de o projeto.
Avaliação de novos fatores ou dos fatores existentes para sua incorporação ou remoção do modelo.
Por exemplo, o fator Infraestrutura de telecomunicação, apresentou nesse estudo um alto índice.
Caso seja mantida essa tendência, em avaliações futuras, o mesmo pode ser removido do modelo, pois provavelmente esse fator deixou de ser impactante em projetos de DDS devido a evolução e confiabilidade das novas tecnologias.
Através da execução do modelo em vários projetos, definir pesos para os fatores do modelo de acordo com a sua importância, impacto nos projetos, características da empresa e segmento de atuação, possibilitando a priorização dos mesmos.
