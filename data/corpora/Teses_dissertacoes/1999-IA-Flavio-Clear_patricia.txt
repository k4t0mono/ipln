Os ambientes de ensino à distância têm apostado cada vez mais no ensino colaborativo, incentivando os alunos a trocarem idéias e informações, visto que quando os alunos interagem entre si, eles se sentem mais motivados e engajados e, portanto, obtêm melhores resultados em seus estudos.
Um ambiente de ensino colaborativo irá, porém, delegar um maior número de tarefas ao professor, que deverá supervisionar todas as discussões entre os alunos, para que não fujam ao tópico previsto para a aula.
Além disso, as informações provenientes das interações entre os alunos irão fornecer ao professor recursos que lhe permitirão uma avaliação mais individualizada de seus alunos e de seu curso.
De este modo, este trabalho apresenta uma arquitetura Multiagente capaz de realizar a monitoração das ferramentas de comunicação num ambiente de ensino à distância.
Este sistema irá analisar as discussões que se encontram em andamento nestas ferramentas, que incluem lista de discussão, chat e newsgroup, disponibilizando ao professor informações estatísticas (percentual de participação e número de mensagens trocadas) e identificando possíveis associações nas interações, tais como, assuntos que interessam aos alunos, grupos de alunos que mais dialogam entre si, etc..
Com a constante necessidade de aperfeiçoamento, muitas instituições têm incentivado formas alternativas de ambientes de aprendizagem, entre as quais a Educação à Distância (EAD).
A EAD gera condições de acesso ao ensino a todas as pessoas que não estejam satisfatoriamente sendo atendidas por os meios de ensino tradicionais.
Trata- se de um meio de democratização do saber, disponibilizando informação e educação a todos aqueles que não dispõem necessariamente de um horário fixo para se dedicar às aulas tradicionais:
Encontram- se ocupados com seu trabalho ou possuem dificuldade de se locomover até as instituições educacionais.
Com o advento das redes de computadores, principalmente a Internet, a Educação à Distância obteve um grande salto de qualidade.
A partir de então, as novas tecnologias passaram a ser utilizadas, disponibilizando um meio de comunicação entre alunos e professores.
Porém, para proporcionar um melhor aprendizado ao aluno são necessários recursos que lhe ofereçam um aprendizado ativo, permitindo que ele internalize o conteúdo aprendido.
Em o aprendizado ativo, o aluno deverá aprender através da comunicação com seus colegas de estudo, compartilhando conhecimentos e dúvidas e vivendo experiências através de simulações.
Esse enfoque colaborativo de ensino tornou- se uma nova tendência na EAD, que está buscando ferramentas e metodologias (por exemplo na área de groupware), que possam ser apropriadas para o ensino e aprendizagem.
Um ambiente de ensino colaborativo irá, porém, delegar um número maior de atividades ao professor.
Isso porque todos os processos de comunicação entre os alunos devem ser supervisionados a fim de que as discussões e trabalhos realizados não fujam ao tópico de estudo previsto para a aula.
Além disso, estas interações irão fornecer ao professor informações que lhe permitirão avaliar individualmente seus alunos e seu curso.
De esta maneira, é proposto nesta dissertação um Sistema Multiagente que irá monitorar as principais ferramentas de comunicação num ambiente telemático de ensino, entre as quais estão listas de discussão, newsgroups e chat.
Esse sistema irá coletar dados a partir de as discussões que se encontram em andamento, analisar esses dados e transmitir os resultados ao professor.
Com estas análises, o professor poderá obter uma visão do andamento da turma e dos alunos, bem como extrair muitas informações importantes, tais como participação dos alunos, assuntos que interessam ao grupo e a um aluno especificamente, etc..
Inicialmente, no capítulo 2 são descritos alguns conceitos de Educação à Distância, bem como a definição de alguns termos empregados na área.
Em este capítulo também são apresentados alguns conceitos de groupware e de como as metodologias e ferramentas dessa área vem sendo utilizadas na Educação à Distância.
Em o capítulo 3 é descrita uma introdução sobre Inteligência Artificial Distribuída, buscando reunir os principais conceitos relacionados à área.
Em o capítulo 4 são apresentados os trabalhos relacionados à área de ensino colaborativo à distância.
O capítulo 5 apresenta os objetivos geral e específicos deste trabalho, bem como a motivação que levou ao desenvolvimento da arquitetura proposta.
Em o capítulo 6 é apresentada a arquitetura do sistema multiagente proposto, bem como são descritas especificações do protótipo desenvolvido.
Em o capítulo 7 são apresentadas as considerações finais e algumas perspectivas de aperfeiçoamento que podem ser realizadas como trabalho futuro.
Finalmente, no capítulo 8 é referenciada a bibliografia utilizada nesta dissertação.
Ao contrário de o que muitas pessoas imaginam, a EAD não tem o começo da sua história marcado por o surgimento das novas tecnologias.
A primeira forma de ensino à distância de que se tem conhecimento são os cursos por correspondência, que se iniciou a partir de o final do século XVIII, com o grande desenvolvimento do serviço postal na Europa.
Durante o século XIX até meados do século XX, esta era única forma de EAD de que se tinha conhecimento.
A partir de então, a EAD passou a ser influenciada por os novos meios de comunicação de massa como, por exemplo, o rádio e a televisão.
Porém, a grande barreira da EAD se encontrava na comunicação entre professores e alunos.
Tanto o rádio como a televisão eram meios de comunicação de uma única via, onde apenas o professor poderia transmitir a informação ao aluno.
A EAD carecia de tecnologias que proporcionassem ao professor e ao aluno uma comunicação bidirecional, onde o aluno pudesse participar mais efetivamente e criticamente do processo de ensinoaprendizagem.
O telefone e as conferências telefônicas passaram a auxiliar o processo de ensino por correspondência, proporcionando comunicação entre o professor e o aluno em cursos por correspondência.
Porém, estas são tecnologias de custo muito caro, o que tornava o ensino à distância inacessível à maioria das pessoas.
O surgimento das redes de computadores, e advento da Internet, beneficiou em muito a EAD, trazendo para esta área ferramentas e técnicas que propiciaram novas perspectivas de ensino.
A EAD carecia de mecanismos que permitissem aos alunos e professores comunicação de maneira direta, rápida e barata, através de serviços de comunicação tais como e-mail, listas de discussão, newsgroups, IRC e audio e videoconferência.
Utilizando estes serviços da Internet em seus ambientes de ensino à distância, os cursos à distância agora proveriam meios que possibilitariam uma maior interação e participação dos alunos no curso.
Além disso, o World Wide Web (Www), um ambiente multimídia, permite que o professor apresente o conteúdo de maneira mais atraente ao aluno, dispondo de recursos tais como sons, imagens, animação etc..
Uma nova fase surge no ensino à distância, que agora passa também a ser denominada Educação à Distância Mediada por Computador (EDMC).
Esses serviços de informação disponibilizados por a Internet podem ser classificados segundo dois principais critérios de avaliação:
Quanto a a variável tempo e quanto a a mídia envolvida.
Quanto a a variável tempo, as técnicas estão divididas em duas categorias:
Assíncronas e síncronas.
As ferramentas síncronas são aquelas em que a informação é transmitida ao aluno, ao mesmo tempo que está sendo disponibilizada.
Já as ferramentas assíncronas permitem que o aluno acesse a informação no momento que lhe for mais conveniente, já que esta permanecerá disponível para que seja futuramente acessada.
Quanto a a mídia envolvida, os serviços Internet podem ser classificados em ferramentas que utilizam texto plano simples, ou ferramentas que utilizam algum recurso multimídia (como áudio, vídeo, gráfico etc).
A Tabela 2.1 apresenta uma classificação dos serviços Internet, segundo os critérios descritos anteriormente.
Em os ambientes de ensino à distância, o estudo do aluno é autônomo, o que significa que ele o realizará em seu tempo disponível e irá avançar no conteúdo, à medida que se considerar capacitado.
O material do curso, geralmente, é disponibilizado por correspondência ou através de redes de computadores, onde os serviços da Internet têm sido largamente utilizados, como o World Wide Web.
A maioria dos cursos suporta comunicação entre professores e alunos, através de telefone e principalmente de e-mail, e conferências via computador.
Os primeiros conceitos de educação à distância, também conhecida como ensino à distância ou teleducação, não caracterizavam diretamente o significado do termo, mas sim realizavam uma diferenciação em relação a os meios de ensino tradicionais.
De esta maneira, a EAD era vista como a obtenção do conhecimento utilizando métodos que não os tradicionais de presença física oferecido por as instituições de ensino.
Esta definição não estava incorreta, porém não esclarecia o que era EAD e nem tampouco oferecia meios científicos para estabelecer o que poderia ser um programa de EAD.
Mais recentemente, surgiram estudos que procuram definir mais precisamente o que é EAD.
Apresenta uma definição para EAD que engloba as várias formas de utilização da EAD no mundo.
Keegan define quais são os cinco elementos principais no processo de ensino à distância:
Separação física entre professor e aluno, o que a distingue do ensino presencial;
Influência da organização educacional (planejamento, sistematização, plano, projeto, organização dirigida, etc), que a diferência da educação individual;
Utilização dos meios técnicos de comunicação, usualmente impressos, para unir o professor ao aluno e transmitir os conteúdos educativos;
Previsão de uma comunicação de dupla via, onde o estudante se beneficia de um diálogo e da possibilidade de iniciativas de dupla via;
Possibilidade de encontros ocasionais com propósitos didáticos e de socialização;
Participação de uma forma industrializada da educação, a qual, se aceita, contém o gérmen de uma distinção radical dos outros modos de desenvolvimento da função educacional.
Segundo, EAD é uma forma de educação em que existe a separação física entre aluno e professor, e em a qual esta lacuna física é preenchida por outros meios tais como:
Palavra escrita e impressa, telefone, conferência por computador e teleconferência.
Porém, EAD não inclui somente separação física no espaço, mas também separação no tempo, já que, com o crescimento das comunicações globais, atualmente a distância física pode envolver substituição significativa de tempo.
Nunes propõe, então, uma definição mais aberta:
&quot;EAD pode fornecer todas as oportunidades educacionais que são necessárias para qualquer pessoa, em qualquer lugar, em algum tempo».,
em 1987, levantou um estudo sobre educação superior à distância, baseado nas definições de Holmemberg, Kaye e Rumble.
O autor enumera algumas características que considera essenciais na EAD:
População estudantil relativamente dispersa, devido a razões de posição geográfica, condições de emprego, incapacidade física etc;
População estudantil predominantemente adulta, para que a educação seja realizada incentivando o aluno a utilizar a sua experiência individual;
Cursos auto-instrucionais, ou seja, que permitem o estudo independente e que fomentam o aluno a avançar no estudo do conteúdo proposto.
O curso deve ainda propiciar mecanismos ao aluno que permitam ao mesmo se especializar em tópicos que lhe sejam mais relevantes;
Cursos pré-produzidos, combinando vários recursos, tais como textos impressos, revistas, livros, rádio, televisão, computadores e comunicação.
Essa integração de vários meios de dispor de informação é conhecida como &quot;enfoque multimeio&quot;;
Oferecer o curso ao maior número possível de estudantes;
Disponibilizar comunicação em via dupla entre professor e aluno;
Estudo individualizado;
Forma mediadora de conversação guiada;
Tipo industrializado de ensino-aprendizagem, determinado por a produção massiva de material instrucional;
Crescente utilização das novas tecnologias de comunicação, tais como:
Computação, microeletrônica e telecomunicações;
Tendência a adotar estruturas curriculares flexíveis, de maneira a atender as aspirações dos alunos, sem prejudicar a qualidade do ensino;
Custos decrescentes por estudante, ou seja, os custos do ensino à distância vão diminuindo à medida que a população estudantil cresce.
Baseado nas definições dos autores citados acima, Sherry define a EAD como a separação do professor e do aluno no espaço e/ ou no tempo, controle determinístico da aprendizagem por o estudante ao invés de o professor distante, e comunicação não-contígua entre estudante e professor, mediados por a impressão ou por alguma outra forma de tecnologia.
Embora não exista uma definição única e consolidada para o termo ensino à distância, o que parece ser ponto comum em todas as definições acima é que a educação à distância é uma estratégia ou modalidade educacional onde existe a separação entre aluno e professor.
De essa maneira, o contato entre esses dois personagens é mediado, ou seja, acontece por meio de outros recursos que não a exposição oral de um docente.
Observamos, atualmente, um grande salto de qualidade na educação à distância, que se concretizou devido a o uso de ferramentas com grandes potenciais disponibilizadas por a Internet.
Estes cursos oferecidos através da Internet são genericamente conhecidos como ambientes telemáticos (At).
Estes ambientes são formados por o conjunto de todas as pessoas que estão por ele interligadas e que, através de ele, constróem um &quot;saber coletivo».
Em o ensino à distância, encontramos diversos termos que procuram definir as diferentes formas de interação e apresentação propostas para ambientes telemáticos:
Sala de Aula Virtual;
Universidade Virtual; Teleconferência.
A seguir, encontra- se uma breve descrição de cada um dos termos citados acima.
Encontramos na literatura conceitos variadas para os ambientes titulados Sala de Aula Virtual (SAV).
Define SAV como um ambiente virtual semelhante a uma sala de aula comum e que oferece, fazendo uso da tecnologia, todas as ferramentas disponibilizadas numa sala de aula convencional.
Segundo a autora, uma sala de aula virtual possui as seguintes características:
Fornece as ferramentas que o aluno precisa ou, pelo menos, indica onde encontrálas;
Cria um ambiente para conduzir aprendizado;
Permite que educadores e alunos troquem idéias e informações;
Permite que os alunos livremente experimentem, testem seu conhecimento, pratiquem tarefas e apliquem o que tem sido discutido e lido;
Fornece mecanismos para avaliação.
Uma definição muito semelhante à fornecida por Porter é encontrada em.
Segundo os autores, uma sala de aula virtual deve apresentar as mesmas características e ferramentas que uma sala de aula tradicional, porém num contexto virtual.
Isso significa que uma SAV deve ser uma forma de educação à distância que utiliza as tecnologias atualmente disponíveis, tais como:
World Wide Web, videoconferência, Internet etc..
O mesmo termo é empregado por num contexto de ambiente educacional cooperativo.
Em este ambiente, devem ser disponibilizadas ao aluno várias ferramentas que lhe permitem acesso a várias funcionalidades, tais como:
Em o conteúdo desta dissertação, quando for empregado o termo sala de aula virtual, refere- se a definição empregada por.
Uma universidade virtual (UV) é um ambiente educacional que se utiliza da telecomunicação e que pode ou não conter salas de aula.
De acordo com, uma UV possui as seguintes características:
Deve ser independente de localizações geográficas;
Devem haver competições entre escolas para que os estudantes possam escolher a escola que lhes ofereça uma abordagem mais fácil de entender;
Não deve ser controlado por o governo ou por qualquer organização nãoacadêmica;
Deve focalizar, principalmente, as necessidades do estudante;
Deve possuir crédito, para que possa fornecer ao aluno graduação e certificado;
Deve procurar mecanismos que permitam reduzir o custo individual da instrução.
Definem uma UV como um ambiente telemático semelhante aos cursos tradicionais, e que utiliza as mesmas estratégias pedagógicas, tais como:
Apresentam vasto material texto para leitura;
Propõem exercícios para serem respondidos por o aluno;
Em estes ambientes a ênfase é em particular ao trabalho individual, não havendo incentivo ao debate e comunicação entre alunos;
Os professores respondem diretamente ao aluno a dúvida questionada, através de e-mail;
Não há incentivo, ou muito pouco, ao estudo colaborativo.
Toda a troca de informação entre alunos e professores ocorre por e-mail, sem que haja troca de idéias e compartilhamentos.
A teleconferência (Tc) permite que várias pessoas se comuniquem ao mesmo tempo, independente da localização.
Dentro de o contexto de ambiente educacional, as teleconferências são utilizadas para permitir a comunicação e debate entre alunos de um curso à distância.
Para ter acesso a uma Tc o aluno necessita de hardware e software apropriados, tais como:
Câmera de vídeo, microfone, caixas de som e um software de teleconferência.
Estes programas permitem que os alunos possam debater um assunto como se estivessem numa sala de aula, já que através da teleconferência os alunos podem ouvir e ver uns aos outros.
Alguns software de Tc permitem, ainda, que os alunos possam visualizar os aplicativos que estão sendo utilizados por o aluno do outro da linha.
Com isso, os alunos podem cooperar entre si na realização de tarefas, seja sugerindo soluções, trocando idéias ou buscando melhores resultados.
O termo groupware se refere à combinação de um processo de grupo e ferramentas de software que caracterizam uma rede como um sistema de comunicação.
Segundo, o termo GROUPWARE é definido a partir de a seguinte união de conceitos:
&quot;processos e procedimentos intencionais de um grupo para realizar propostas específicas+ ferramentas de softWARE projetadas para suportar e facilitar o trabalho em grupo».
Muitas vezes, o termo Trabalho Cooperativo Suportado por Computador (CSCW) é empregado como sinônimo para groupware (Baecker, 1993).
CSCW é definido como a disciplina de pesquisa para o estudo das técnicas e metodologias de trabalho em grupo e das formas como a tecnologia pode auxiliar este trabalho.
Portanto, enquanto CSCW é a pesquisa na área do trabalho em grupo e como os computadores podem apoiar- lo, groupware é empregado para designar a tecnologia (hardware e software) gerada por a pesquisa em CSCW.
Desta forma, correio eletrônico, teleconferência, suporte à decisão em grupo e editores de texto colaborativos são exemplos de groupware, pois promovem a comunicação entre os membros de um grupo de trabalho e, portanto, contribuem para que o resultado final seja maior que a soma dos trabalhos de cada integrante do grupo.
Além disso, o groupware pode dispor de agentes inteligentes.
Em geral, agentes inteligentes são responsáveis por um conjunto específico de tarefas e a interface do usuário faz com que suas ações assemelhem- se àquelas feitas por os outros usuários.
Como exemplo específico foi desenvolvido um sistema de conversação on-line que inclui um agente chamado Liza.
Uma das ferramentas disponibilizadas no sistema exibe imagem e localização das sessões de todos os participantes do curso.
Quando Liza entra numa sessão é exibida a imagem de um andróide inteligente indicando ao grupo que Liza também está participando.
Quando Liza participa, um conjunto de regras que ela pode executar torna- se ativo.
Estas regras monitoram atividades da sessão e resultam em Liza sugerindo mudanças de conteúdo e forma.
Propõe uma arquitetura de agente para suportar tanto trabalho pessoal como em grupo, num escritório.
Esta arquitetura é conhecida como INA/ LI1.
Esses agentes estarão conectados por duas camadas de rede de agentes.
A primeira camada é a de suporte ao trabalho em grupo.
Esta camada provê um canal de comunicação entre agentes de grupo e agentes pessoais.
Os agentes de groupware estão relacionados ao trabalho de grupo, tais como gerenciamento de INA/ LI -- Intelligent Agent/Lite.
A segunda camada, chamada Camada de Suporte ao Trabalho Pessoal, existe dentro de o agente pessoal.
Esta camada fornece um canal de comunicação entre sub-agentes.
Estes sub-agentes fornecem individualmente uma função básica ao usuário e juntos eles trabalham como uma secretária do usuário.
O esquema da arquitetura INA/ LI pode ser melhor visualizado na Figura 2.2.
Uma implementação de agentes baseada na arquitetura INA/ LI foi realizada no ambiente Windows NT usando as linguagens C+, BASIC e Pascal.
O canal de comunicação local, que assegura a comunicação entre os sub-agentes, é implementado usando uma função DDE (Dynamic Data Exchange) do Windows.
Ele consiste de um programa e bibliotecas:
Um programa de comunicação local e três tipos (Visual C+, Visual Basic e Delphi) de bibliotecas para conectar os sub-agentes com um programa de comunicação local.
O sistema de comunicação global, onde ocorre interação par-a-par entre agentes globais, foi implementado usando CORBA.
Ele consiste de dois programas e uma biblioteca:
Um agente de comunicação global, um agente de diretório e uma biblioteca de comunicação global.
O agente de diretório gerência uma tabela de nomes de agentes.
Ele também gera um endereço de agente global com outra requisição de agente de acordo com regras nomeadas pré-definidas.
A biblioteca de comunicação global possibilita a um programa agir como um cliente ou servidor a qualquer hora.
Usando esta biblioteca, agentes globais podem trocar mensagens uns com outros.
Tanto o software de comunicação local como o global são fornecidos num ambiente de desenvolvimento de agentes.
Segundo para que um curso à distância seja bem estruturado é necessário fornecer um ambiente de ensino e aprendizagem.
Esse ambiente deve preencher tanto as necessidades do professor, auxiliando- o na criação do curso, como também tornar mais fácil a participação dos alunos neste curso, incentivando- os à cooperação.
Segundo a aprendizagem cooperativa é uma estratégia de ensino em a qual grupos pequenos, cada um com estudantes de níveis diferentes de habilidade, usam uma variedade de atividades de aprendizagem para melhorar a compreensão de um assunto.
Cada aluno do grupo é responsável não somente por aprender o que está sendo ensinado, mas também por ajudar o seu colega, criando uma atmosfera de realização.
Quando esta colaboração ocorre num ambiente de ensino à distância apoiado por a tecnologia Internet, a noção de groupware pode ser bem utilizada, o que faz surgir uma nova subdivisão na área de CSCW:
A aprendizagem colaborativa suportada por computador (CSCL ­ Computer Supported Collaborative Learning).
Salienta que, para que um sistema de groupware seja utilizado na educação à distância, ele deve fornecer algumas ferramentas que permitam a participação dos alunos e colaboração entre os colegas do curso.
Estas ferramentas, classificadas como gerais e específicas, são apresentadas nos quadros abaixo.
Em a Tabela 2.3 são relatadas as ferramentas de groupware que são também necessárias num ambiente de ensino à distância colaborativo.
Interface do Usuário -- Uma interface do usuário gráfica e fácil de usar Tipos de Mídia -- Texto formatado -- Imagem -- Som -- Animação/ Vídeo -- Documentos formatados-HTML -- Attachments em qualquer formato de arquivo são também permitidos Procura e Busca -- Boas ferramentas para procura e busca por informação no banco de dados do curso baseada em palavras-chave, datas, autor, assunto, conteúdo, etc..
Além de as ferramentas de groupware já disponíveis, um ambiente de ensino à distância colaborativo, segundo, deve constar de outras ferramentas específicas para o ambiente de CSCL.
Estas ferramentas podem ser divididas em três grupos, de acordo com a função para a qual são projetadas:
Para auxiliar o professor;
Para auxiliar o aluno e para a sala de aula.
Em a Tabela 2.4 estão descritas as tarefas num ambiente CSCL, para as quais se fazem necessárias novas ferramentas, além de as já disponibilizadas por groupware.
Ferramentas para o professor Administração do curso.
Ferramentas para o Ferramentas para a aluno Participação em um ou sala de aula Participação em um curso.
Visão dos cursos futuros, Visão do status destes Visão das tarefas de um em andamento e estudantes nas atividades grupo.
Planejar e organizar um Seguir o curso de acordo Achar tarefas do grupo no curso com diferentes com o planejamento atividades, planejamento do curso.
Provê listas de tarefas onde Selecionar uma tarefa de Selecionar uma tarefa de cada estudante seleciona uma lista de tarefas, onde uma lista de tarefas, de tal uma tarefa diferente para cada estudante deverá maneira que cada um dos realizar e a submete ao selecionar uma tarefa grupos selecione uma curso.
Controlar os trabalhos que Ver tarefas dos outros os estudantes podem ver estudantes.
Visualizar quais estudantes Realizar tarefas Realizar tarefas de grupo. Quais
não, ver o status de submeter- las ao professor.
Ser lembrado quando o ao curso, e ver outras seu trabalho estiver em estatísticas do curso.
Responder individualmente Correspondência pessoal Discutir o tópico do curso às perguntas dos alunos entre alunos e professor.
Aplicar testes e exames.
Os estudantes andamento do curso.
Realizar avaliação do Discutir aspectos de curso.
Ajudar Discutir pontos de vista no exames.
Pedir avaliação do curso.
Participar dos testes e qualidade do curso.
Saber o seu status e saber Saber o seu status em relação quando eles tiverem alguma em que áreas precisa aos outros estudantes do dificuldade em entender o estudar mais.
Ferramentas de avaliação Uso off-line:
O estudante pode realizar de mensagens e páginas web e então ler- las e escrever sua contribuição sem estar conectado ao curso.
Papéis Possibilidade de definir diferentes papéis e associar diferentes regras a cada um destes papéis.
Por exemplo, papel de professor e aluno.
Autorização Um certo papel possui certos direitos numa determinada atividade.
Atividades Ajustar diferentes atividades para cada um dos grupos.
Exercícios O sistema mantém status de quais alunos realizaram as atividades solicitadas por o professor.
Limite de O sistema deve restringir um tempo limite para a realização de Tempo exercícios.
Notificação O tempo limite pode estar associado a lembretes, que irão notificar o aluno a aproximação do término do período estipulado para a realização do exercício.
O professor também deverá ser notificado de quais alunos não realizaram os exercícios no tempo proposto.
Acesso a Não permitir que um aluno acesse respostas de exercícios de outros contribuições alunos até que ele consiga realizar estes exercícios ou até terminar o tempo limite.
Loteria de Apresentar as questões de forma randômica, tornando mais difícil Questões aos alunos a cópia de respostas.
Resultado das O computador pode disponibilizar as respostas das questões simples Questões Realização Quando o professor solicitar, o ambiente deve restringir aos alunos Seqüencial das que realizem certos exercícios numa certa ordem.
Um componente crítico da EAD é o software usado para organizar o curso e disponibilizar comunicação entre os estudantes e o professor.
Atualmente se encontram disponíveis vários software para videoconferência.
Os programas de Groupware, tais como o Lotus Notes, provêem maior número de facilidades para o usuário que um sistema de e-mail ou uma lista de discussão.
Lotus Notes é uma forma de Groupware que permite que um usuário ou um grupo de eles possam acessar, compartilhar e trocar informações entre si a partir de múltiplas plataformas de computadores e localizações através de uma estrutura cliente-servidor.
Um outro exemplo de programa Groupware é o HyperNews, que combina World Wide Web com newsgroups, permitindo que os seus usuários possam trocar entre si artigos e mensagens a serem discutidas, como no caso, por um grupo de pessoas envolvidas num curso à distância.
Uma característica importante do CSCL é que ele proporciona o aprendizado colaborativo, o que significa que tanto alunos como professores são participantes ativos no processo de aprendizagem.
De esta maneira, o objetivo da educação não é apenas ensinar fatos, mas, principalmente, ensinar os alunos a pensar, a raciocinar, a resolver problemas singularmente ou em cooperação, bem como, a trocar idéias e informações com seus colegas sobre o tema do curso.
Quando os alunos cooperam entre si, trocando conhecimentos, eles se sentem mais engajados em seus estudos, obtendo, desta maneira, melhores resultados.
Desta forma, o conhecimento não é a informação disponibilizada por o professor, mas o conteúdo aprendido por o aluno através de sua própria experiência e através de discussões com outros colegas do grupo e com o professor.
Logo, o conceito de aprendizado colaborativo irá englobar, também, outros princípios importantes na educação à distância, tais como interatividade, aprendizado ativo e monitoração do aprendizado do aluno por o professor.
Pesquisas em Inteligência Artificial tem buscado desenvolver software para simular capacidades humanas chamadas inteligentes, tais como raciocínio, comunicação em linguagem natural e aprendizagem.
O surgimento das redes de computadores foi um grande passo para o desenvolvimento de organizações de computadores ou &quot;sociedades», desde que colaboração entre indivíduos requer o estabelecimento de comunicação usada de forma efetiva.
A Inteligência Artificial Distribuída (IAD) é um subcampo da inteligência artificial que tem investigado modelos de conhecimento, assim como, técnicas de comunicação e raciocínio, que agentes computacionais devem necessitar para participar em &quot;sociedades «compostas por computadores e pessoas.
Mais genericamente, IAD está envolvida com situações em as quais vários sistemas interagem em ordem para resolver um problema em comum:
Uma outro conceito para IAD é encontrado em.
Segundo o autor, a IAD é a solução colaborativa de problemas globais por um grupo distribuído de entidades.
De este modo, estas entidades, que podem estar física ou geograficamente dispersas, devem compartilhar a informação para que a sociedade execute um objetivo global.
Segundo, a IAD pode ser dividida em duas áreas maiores, de acordo com o modelo usado para projetar a sociedade de agentes:
Resolução Distribuída de Problemas e Sistemas Multiagentes. Em qualquer um dos casos, usamos a designação agente para as entidades que participam nas atividades de solução de problemas.
A grande diferença pode ser observada por a autonomia desses agentes.
Segundo, um agente é um entidade autônoma que funciona de um modo contínuo num ambiente formado por vários processos.
Como esses agentes são autônomos, não haverá intervenção humana contínua em seu processamento.
Além disso, esse agente deve possuir autodeterminação em relação a o meio ambiente em que vive, que é real e dinâmico.
Em as seções 3.1 e 3.2 veremos mais detalhadamente as abordagens Resolução Distribuída de Problemas e Sistemas Multiagentes.
Em a Resolução Distribuída de Problemas (Distributed Problem--Solving -- DPS), os agentes são designados para resolverem um problema em particular, dentro de uma concepção fechada de mundo.
Isto significa que os agentes são projetados para resolver um tipo específico de problema apenas e não podem ser utilizados em qualquer outro problema, mesmo que seja similar.
De esta maneira, o número de agentes será fixo, sendo que cada agente possui uma visão específica e incompleta do problema.
Então, para a resolução de um problema, os agentes devem cooperar entre si, compartilhando conhecimento sobre o problema e sobre o processo de obter uma solução.
O projeto de um sistema DPS é realizado por um projetista que, primeiramente, realizará uma análise do problema a ser resolvido para, então, identificar os agentes necessários para a solução desse problema.
De esta maneira, a tarefa de resolução será decomposta entre os vários agentes, buscando melhorar o processamento do sistema através da execução paralela.
Esquematicamente, esta abordagem pode ser representada segundo a Figura 3.1.
Os agentes em Sistemas Multiagentes (Multi-agent Systems -- Mas) são projetados para resolverem qualquer tipo de problema, e não um problema em específico, como acontece em DPS.
Isso ocorre, basicamente, porque nos sistemas multiagentes, esses agentes são entidades autônomas que têm conhecimento da sua própria existência e da existência de outros agentes e, portanto, colaboram uns com os outros para atingirem um objetivo comum dentro de um ambiente.
De esta maneira, na abordagem Mas, os agentes são primeiramente criados por o projetista para após se estudar em que ambientes essa sociedade de agentes pode ser utilizada.
O esquema de resolução de problemas na abordagem Mas pode ser observado na Figura 3.2.
Em um Mas, os agentes devem possuir algumas capacidades específicas para interagirem num mesmo ambiente.
Portanto, os agentes devem ter conhecimento da sua existência e da existência dos outros agentes.
Eles devem ser capazes de se comunicar possuindo, para tanto, uma linguagem específica.
Cada agente deverá possuir conhecimentos e habilidades para executar uma determinada tarefa e, portanto, devem cooperar para atingir um objetivo global.
E colocam algumas considerações importantes para a abordagem Mas:
Os agentes devem ser capazes de decompor as tarefas baseados no conhecimento que eles possuem de si próprios e dos outros agentes;
Como os agentes são autônomos, eles podem possuir metas próprias e decidir o que fazer, a qualquer momento;
Os agentes possuem capacidade para resolver seus problemas e os problemas que surgirem no ambiente;
Os agentes podem entrar e sair do ambiente a qualquer momento.
Portanto, em Mas os agentes devem ser capazes de modificar o conhecimento que possuem dos outros agentes do ambiente.
Os agentes devem ser capazes de reconhecer modificações no ambiente quando estas ocorrerem, alterando sua representação interna do ambiente.
Em relação a os aspectos acima mencionados, podemos observar que as arquiteturas DPS, embora mais fáceis de implementar, são mais rígidas.
Os Mas, por sua vez, apresentam maior flexibilidade, porém há um overhead devido a a comunicação inter-agentes durante o processo de cooperação.
Relaciona os principais problemas encontrados na abordagem Mas:
Descrição, decomposição e alocação de tarefas:
Como as tarefas mais complexas poderão ser descritas e decompostas em subtarefas mais específicas, e como essas subtarefas serão alocadas e em que ordem deverão ser executadas.
Protocolo de Comunicação: Que primitivas deveria um protocolo de comunicação utilizar num trabalho cooperativo.
Coerência, controle e coordenação:
Como garantir um comportamento global coerente entre num conjunto de agentes, tendo cada um suas próprias habilidades e objetivos, e como deveria ser projetado o controle de tal sistema.
Conflitos e incertezas:
Como podem ser resolvidos os conflitos que surgem, já que nenhum agente possui toda a informação do seu ambiente, e como dados incompletos podem ser distribuídos de forma garantir resultados coerentes.
Linguagem de programação e ambiente:
Sob o ponto de vista computacional, quais as linguagens de programação que poderiam ser utilizadas em tais sistemas.
Em a literatura de IAD encontram- se diversas acepções para o termo agentes.
Colocam que num Mas existem basicamente dois tipos diferentes de agentes:
Agentes artificiais (módulos de software) e agentes humanos (usuários).
Os conceitos abaixo se referem ao agente do tipo artificial.
Define um agente como uma entidade virtual ou real, que está apta a perceber e representar parcialmente seu ambiente.
Um agente também possui a capacidade de se comunicar com outros agentes e pode possuir um comportamento autônomo, que é uma conseqüência de suas observações, de seu conhecimento e de suas interações com outros agentes.
Segundo, os agentes devem possuir alguns comportamentos que estão baseados em dois critérios:
A localização da tarefa a ser executada por o agente:
Local ou global;
A capacidade do agente de executar sozinho a tarefa:
Apto ou não-apto.
Assim, de acordo com estes critérios, são definidos os seguintes comportamentos possíveis para agentes:
Segundo, um agente é uma entidade autônoma que deve possuir várias habilidades, tais como:
Percepção e interpretação de dados de entrada e mensagens;
Raciocínio sobre suas crenças;
Tomada de decisão (seleção de objetivos);
Planejamento (seleção ou construção de planos de ações, resolução de conflitos e alocação de recursos);
Habilidades de executar planos incluindo envio de mensagens.
Segundo, as diferentes capacidades dos agentes para resolução de problemas os permite classificar- los em duas categorias principais:
Esse agentes realizam uma ação de acordo com outra ação efetuada sobre eles.
Os agentes reativos se comportam segundo o modo estímulo-resposta, ou seja, não há uma memória sobre ações realizadas no passado e nem previsão de ações que poderão ser executadas no futuro.
Sua capacidade interna realiza apenas associações de entrada e saída, não havendo processamento.
Esses agentes reativos são baseados nos modelos de organização etológico/ biológico como, por exemplo, as colônias de formigas.
A idéia de utilizar esse contexto, é que uma formiga sozinha não é capaz de realizar tarefas muito inteligentes, mas uma colônia o é.
Assim, a inteligência se encontra no grupo de várias entidades simples.
Agentes são visualizados como sistemas intencionais, ou seja, possuem estados mentais de informação e manipulam o conhecimento.
Entre estados mentais estão as seguintes características:
Crenças, conhecimento, desejos, intenções, obrigações etc..
Esses estados mentais são representados internamente nos agentes.
Esses agentes também são ditos sociais porque, além de manipular o seu conhecimento, eles conhecem as crenças, objetivos e motivações dos elementos que os cercam.
Para formar um grupo social unindo um conjunto de agentes cognitivos, é necessário que algumas questões sejam tratadas.
São elas:
Organização: Diz respeito a como os agentes interagem entre si, e qual o tipo de organização que eles adotam.
Cooperação: Quando um agente não estiver capacitado para realizar sozinho uma tarefa pessoal, ele deve cooperar com outros agentes.
Esta cooperação deve ocorrer ainda quando outros agentes podem executar mais eficientemente a mesma tarefa.
Negociação: Como é realizada a negociação entre os agentes, dividindo a execução das tarefas, de maneira que seja mais organizada e fazendo uso das capacidades e conhecimentos dos agentes.
Comunicação: Como os agentes irão se comunicar e qual o protocolo de comunicação que será utilizado na interação entre esses agentes.
Atualmente, além de as classificações de agentes reativos e cognitivos, encontramos outra importante classificação de agentes:
Agentes de software (scripts).
Segundo um agente de software é uma entidade a qual funciona autônoma e continuamente num ambiente particular, sempre habitado por outros agentes e processos.
Embora esses conceitos sejam empregados por os pesquisadores da área, eles são bastantes abrangentes, não delimitando o escopo do termo agente de software.
Para que se tenha uma definição mais específica do que é um agente de software é interessante definir alguns atributos que julgamos necessários, os quais destacamos os seguintes:
Autonomia: Os agentes operam sem a intervenção humana e possuem algum tipo de controle sobre suas ações e seu estado interno;
Habilidade Social: Agentes interagem com outros agentes e humanos através de algum tipo de linguagem de comunicação;
Reatividade: Agentes percebem o seu ambiente e respondem a mudanças que ocorrem neste;
Proatividade: Agentes não simplesmente agem em resposta ao ambiente, mas também exibem comportamento orientado a objetivo tomando iniciativa;
Continuidade Temporal: Agentes são processos rodando continuamente e não somente scripts que mapeiam uma determinada entrada numa saída e finalizam a execução;
Orientado a Objetivos:
Um agente é capaz de realizar tarefas complexas.
Ele sabe como dividir esta tarefa em várias subtarefas e qual a ordem de execução para obter- se a melhor performance.
Embora essa seja ainda uma área experimental, já encontra- se alguns exemplos de aplicações usando agentes:
Gerenciamento de redes e sistemas;
Filtragem e tratamento de e-mails,;
Busca por informações na web;
Marcar reuniões num grupo colaborativo;
Em o comércio eletrônico auxiliando um usuário na busca de produtos ou gerenciando vendas;
Como agentes do usuário ou interface agent, onde o agente irá monitorar as ações do usuário, desenvolver modelos das habilidades do usuário e automaticamente auxiliar o usuário quando surgir problemas.
Quando for usado o termo agente nesta dissertação está referindo- se a classificação agentes de software.
O agente irá possuir conhecimento sobre o mundo e sobre o problema que ele tem de resolver.
Este conhecimento pode ser adquirido através da comunicação com outros agentes ou através da percepção de mudanças no ambiente.
O agente também possuirá objetivos que devem ser executados por ele.
Estes objetivos podem estar contidos nos algoritmos ou ser dinamicamente adquiridos através de:
Comunicação com outros agentes;
Observação de mudanças no ambiente;
Raciocínio sobre comportamento dos outros agentes.
Quando é estabelecido um objetivo, o agente terá de planejar como melhor executar- lo.
Para tanto, ele usará a sua capacidade de raciocínio.
O agente pode pensar em várias possíveis soluções, ou possibilidades, para que este objetivo seja alcançado.
De esta maneira, ele deve realizar a escolha da melhor solução usando a sua capacidade de decisão.
Quanto a o tipo de agentes:
Sociedades homogêneas:
Os agentes são todos do mesmo tipo, ou seja, possuem arquiteturas idênticas;
Sociedades heterogêneas:
Existem agentes de diferentes tipos na sociedade.
Quanto a a migração de agentes:
Sociedades fechadas:
Há um número fixo e único de agentes presentes na sociedade;
Sociedades abertas:
O número de agentes nesta sociedade pode variar, pois podem entrar novos agentes ou sair agentes da sociedade.
Quanto a a presença de regras de comportamento:
Sociedades baseadas em leis:
Existem regras que determinam o comportamento dos agentes;
Sociedades sem lei:
Quando não há regras para reger os agentes da sociedade.
Para que uma sociedade de agentes coopere a fim de atingir um determinado objetivo, é necessário que seja bem definida uma arquitetura que possibilite a interação entre esses agentes.
Em estas interações irá ocorrer troca de conhecimento, objetivos, planos ou escolhas através da comunicação, que pode ser direta ou indireta.
Comunicação Direta: Os agentes se conhecem e, por isso, trocam informações diretamente entre si.
Comunicação Indireta: Os agentes não se conhecem e, desta maneira, a comunicação irá ocorrer através de uma estrutura de dados compartilhada.
Quando os agentes não se conhecem é necessário que haja uma estrutura de dados compartilhada para que os agentes interajam entre si.
Em este tipo de sociedade, uma boa abordagem a ser utilizada é a arquitetura de quadro-negro (blackboard).
Blackboard é uma estrutura única e compartilhada entre vários agentes, onde as informações serão escritas e lidas durante o desenvolvimento das tarefas.
Como não há comunicação direta entre os agentes, eles devem consultar a estrutura de tempos em tempos para verificar se existe alguma informação destinada a eles.
A estrutura de quadro-negro pode armazenar primitivas simbólicas (hipóteses), fatos e regras.
O esquema da estrutura de quadro-negro pode ser visualizado na Figura 3.5.
As estruturas de quadro-negro são anteriores aos sistemas multiagentes.
Um dos primeiros sistemas a utilizar essa abordagem foi o HEARSAY II, um sistema para interpretação da fala.
Em o HEARSAY II existe um sistema de controle que supervisiona a escrita e leitura no blackboard.
Estas informações serão colocadas na estrutura por um conjunto de processos, que no sistema HEARSAY II eram conhecidos como knowledge sources.
Embora essa abordagem seja simples de implementar e eficiente, um dos problemas que ocorrem na estrutura de quadro-negro é a sincronização e resolução de conflitos entre os agentes, devido a a centralização da informação e do controle.
Em as sociedades onde os agentes se conhecem a comunicação pode ser direta, ou seja, os agentes trocam mensagem entre si diretamente, para atingirem um objetivo global.
De esta maneira, cada agente possuirá uma representação dos outros agentes, tais como capacidade, objetivo, conhecimento e crenças.
Segundo, existem basicamente três tipos de interações entre os agentes.
Em este caso, o tipo de informação que será compartilhada, conhecimento, possibilidades ou escolha, irá determinar o tipo de interação.
Quando há uma interação forte entre os agentes, eles compartilham conhecimentos, possibilidades e escolhas.
Em este tipo de comunicação ocorrem protocolos de comunicação sofisticados para os agentes, tais como informar, requisitar ou convencer.
Quando os agentes compartilham apenas conhecimento e possibilidades, a interação entre os agentes é média.
Este tipo de interação ocorre quando os agentes desejam apenas saber o que os outros agentes pretendem fazer.
De esta maneira, os agentes irão conhecer os planos para execução de tarefas dos outros agentes, até que um plano comum seja encontrado.
A interação pode ainda ser fraca, quando os agentes trocam conhecimento apenas.
Esta interação ocorre através de trocas de mensagens que serão ocasionadas por a percepção de alterações no ambiente.
A teoria de atos de fala propõe uma categorização de primitivas de comunicação como, por exemplo, inform, ask-to-do, answer, propose, etc..
Essas primitivas são associadas às suas conseqüências.
Os atos de fala podem ser classificados segundo 3 aspectos:
Ato locucionário:
Emissão de palavras e sentenças com algum significado;
Ato ilocucionário:
Corresponde à intenção da emissão:
Request, order, apologize, assert;
Ato perlocucionário:
Corresponde ao resultado desejado da emissão:
Convince, insult, frighten.
Outro conceito bastante importante a ser considerado num ambiente multiagente é a negociação.
Os objetivos principais da negociação são:
Modificar os planos locais de agentes, no caso de interações negativas;
Identificar situações onde potenciais interações são possíveis;
Com isso, os agentes irão se comunicar para atingir um objetivo comum.
Mais especificamente, a negociação é usada para alocação de tarefa e recurso, para reconhecimento de conflitos, a resolução de disparidades de objetivos, a determinação da estrutura organizacional e, então, para coerência da sociedade.
Existem vários protocolos de negociação na literatura de IAD.
Um dos protocolos mais estudados atualmente é a rede de contrato, baseado no processo de contrato em organizações humanas (ver seção 3.2.3.5).
A cooperação irá ocorrer entre dois ou mais agentes, quando eles necessitarem realizar uma mesma tarefa a qual não são capazes de fazer individualmente.
De esta maneira, os agentes precisam compartilhar seu conhecimento, já que possuem apenas o conhecimento parcial a respeito de todo o problema.
Propõe quatro objetivos genéricos para cooperação num grupo de agentes:
Aumentar a rapidez de conclusão da tarefa através do paralelismo;
Aumentar conjunto ou escopo de tarefas concluídas por o compartilhamento de recursos;
Aumentar a probabilidade de conclusão de tarefas por o empreendimento de tarefas duplicadas, possivelmente com diferentes métodos de realização daquelas tarefas;
Diminuir a interferência entre tarefas evitando interações prejudiciais.
Examina a cooperação entre especialistas com conhecimento distribuído, no contexto de suporte baseado em conhecimento, para colaboração entre diferentes departamentos de engenharia em cumprir tarefas de projeto.
Em a realidade, Bond examina o problema do raciocínio colaborativo em o qual sistemas inteligentes cooperativamente desenvolvem um projeto.
Quando a comunicação ocorre diretamente entre agentes autônomos através de trocas de mensagens, pode ocorrer, simplesmente, a troca de dados, ou então a troca de conhecimento.
Em esse último caso, são usados protocolos de interação para a troca de conhecimento entre os agentes autônomos.
Esses protocolos podem ser vistos como um framework único que organize estas interações entre os agentes, possibilitando identificar, dentro de a mensagem, informações necessárias ao controle da interação e comunicação.
Atualmente, um dos protocolos mais conhecidos é a rede de contrato.
Esse protocolo é usado para realizar o processo de negociação entre agentes.
Em as redes de contrato, um agente especial, chamado gerente, envia mensagens para todos os agentes da sociedade.
Essas mensagens são solicitações de proposta que o gerente envia para os outros agentes, para a realização de uma tarefa.
Os agentes que possuam capacidade de realizar a tarefa submetem suas propostas para o gerente, que as avaliará segundo algum critério pré-definido.
O agente contratante irá comunicar aos agentes a proposta selecionada, determinando, deste modo, quais são os nodos escolhidos, chamados agentes contratantes, que ficarão encarregados de executar a tarefa.
Além desses, existem vários outros protocolos que podem ser usados para os mais variados tipos de comportamentos desejados.
Alguns desses protocolos serão apresentados a seguir:
Protocolos de Introdução:
Protocolo usado quando um agente deseja entrar numa sociedade.
Ele deve apresentar seu conhecimento e suas capacidades e aguardar por uma resposta da sociedade para obter um papel.
Protocolo de Duplicação: Para detectar redundância.
Protocolo de Competição: Para determinar quais agentes são melhores para determinado papel.
Protocolo de Incoerência: Para detectar inconsistências entre o conhecimento do agente e o papel que ele pode preencher.
Protocolos de Informação: Permite que os agentes modifiquem seu conhecimento, quando este entrar em conflito com o novo agente que entrou na sociedade.
Existem linguagens que são destinadas exclusivamente à comunicação entre agentes, as quais definem padrões para a troca de mensagens.
O exemplo mais conhecido atualmente é resultado de um projeto do Arpa americano, denominado &quot;knowledge sharing initiative».
Este projeto é composto de duas partes:
Uma linguagem para manipulação e consulta do conhecimento (KQML);
Um formato para intercâmbio do conhecimento (KIF).
KQML é uma linguagem de alto nível usada por sistemas baseados em conhecimento para compartilhar conhecimento e informação em tempo de execução.
KQML é uma linguagem externa que foca principalmente o formato das mensagens Em KQML, apenas protocolos de mensagens são definidos, sendo que pode ser usada uma outra linguagem para expressar o conteúdo da mensagem.
As mensagens KQML são chamadas performativas e estão baseadas na Teoria de Atos de Fala.
Cada mensagem é enviada com o objetivo de gerar uma determinada ação (Finin et al.,
KQML é uma linguagem dividida em três camadas:
A camada do conteúdo, a camada da mensagem e a camada da comunicação.
O conteúdo refere- se ao atual conteúdo da mensagem, a qual toda implementação KQML ignora, exceto para determinar as delimitações deste conteúdo.
Ontologia é a especificação de um vocabulário representacional para discursos de domínio compartilhado, tais como definições de classes, relações, funções e outros objetos.
Mecanismos de comunicação:
Sender, recipient, etc..
Communication Lógica de comunicação:
Atos de fala, qualificações, etc..
A sintaxe de KQML consta de uma lista balanceada de parênteses.
O elemento inicial da lista é a performativa, os elementos seguintes são os argumentos da performativa descritos como pares palavra-chave/ valor.
Com exemplo, podemos usar uma mensagem KQML do agente Joe, a qual pergunta o preço de uma peça do estoque IBM.
Esta mensagem pode ser descrita da seguinte maneira:
Em esta mensagem, a performativa KQML é ask-one, o conteúdo é Price, a ontologia é nyse-- ticks, o receptor da mensagem é um servidor chamado stock-- server e a consulta é escrita numa linguagem chamada LPROLOG.
O valor do conteúdo é a camada de conteúdo, os valores das palavras reply-with, sender, receiver formam a camada de comunicação e o nome da performativa juntamente com Language e Ontology formam a camada da mensagem.
O servidor stock-- server, provavelmente fornecerá como resposta a joe a mensagem:
Além de essas, há um conjunto predefinido de performativas reservadas de o qual o agente irá escolher algumas para seu uso.
A comunidade pode ainda adicionar novas performativas, desde que todos concordem na interpretação e no protocolo associado a cada.
Existem basicamente 24 performativas reservadas as quais estão divididas em sete categorias básicas.
Estas performativas são exibidas na Tabela 3.7.
O Java Agent Template (JAT) versão 0.3 (Frost, 1998), desenvolvido por Robert Frost na Universidade de Stanford, fornece um conjunto de pacotes escrito na linguagem Java que permite a construção de agentes de software os quais se comunicam par-a-par com uma comunidade de outros agentes distribuídos na Internet.
O modelo foi todo construído na linguagem Java, que é portável, porém os agentes projetados no JAT não são migratórios e, portanto, possuem uma existência fixa numa determinada host.
Esses agentes podem ser executados como applets Java e como aplicações stand- alone, sendo que ambas as configurações suportam agentes gráficos (possuem uma interface para comunicação com o usuário) ou não gráficos.
A coordenação na sociedade é realizada por um agente servidor de nomes (ANS) 3 dedicado à manutenção dinâmica, denominação única dos agentes e endereçamento.
O ANS deve estar continuamente rodando durante toda a vida do grupo de agentes e irá manter um registro dos nomes e endereços internet de todos os agentes.
Os agentes possuem uma interface de comunicação socket para troca de mensagens assíncronas KQML.
As mensagens KQML devem conter, no mínimo, os seguintes campos:
Performativa, sender, receiver, language, ontology e content, O ANS é denominado agente nesta dissertação pois assim ele é tratado por o autor.
Porém, sua funcionalidade como agente é discutível, visto que ele possui pouca autonomia e iniciativa para ser denominado agente.
AgentInterpreter que entende apenas mensagens também descritas na linguagem KQML.
O AgentInterpreter possui 5 tipos de mensagens, onde cada mensagem representa o campo content de uma mensagem KQML de mais alto nível:
Esta mensagem é usada para informar um agente sobre um recurso de um certo tipo, nome e valor.
O campo type pode referir- se a um dos 6 tipos de unicamente para cada type fornecido, podendo assumir os valores:
Para address, value é «host:
Porta&quot;; Para class, interpreter e language, o value assume o versão local do arquivo já existe, ele não é substituído.
Se o value do recurso é&quot;?»,
então o emissor não sabe o valor ou a localização do recurso.
Esta mensagem é usada para solicitar o valor de um recurso.
Essa mensagem é enviada para um agente quando ele deseja invalidar um dado recurso.
Quando um agente entra na sociedade, ele fornece ao ANS o seu nome e endereço.
Se já existe na sociedade um agente com o respectivo nome, então o ANS devolve esta mensagem contendo um novo nome único para aquele agente.
JAT pode ser usado como plataforma para construção de agentes para aplicações de diferentes domínios.
Os agentes são criados através da especialização das classes Java fornecidas por o ambiente.
O framework JAT é formado basicamente por 3 pacotes:
Agent: Representa o agente, o elemento primário funcional da arquitetura.
Um agente simboliza, basicamente, uma caixa preta que se comunica assincronamente através de mensagens KQML.
O conhecimento e a funcionalidade de um agente são representados por os objetos Recursos (Resource).
Context: Fornece um ambiente de execução para um agente, assim como, uma interface de comunicação com outros agentes e uma GUI, onde são exibidas ao usuário informações referentes ao estado do agente, os recursos que ele possui e as mensagens enviadas e recebidas.
Resources: Pacote de classes responsável por o gerenciamento e armazenamento de todos os recursos do agente, que podem incluir classes Java (por exemplo, novas linguagens e interpretadores, serviços remotos, etc), arquivos de dados e informações embutidas em mensagens KQML.
O advento da Internet propiciou à Educação à Distância um grande salto de qualidade, disponibilizando tecnologias e recursos de multimídia e comunicação que tornaram os cursos à distância muito mais atraentes e interativos.
Dispondo, então, de ferramentas específicas, os educadores observaram a possibilidade de introduzir um novo paradigma dentro de a EAD:
A cooperação, visto o seu grande potencial cognitivo, proporcionando uma melhor produtividade em relação a os grupos não cooperativos.
Para a criação de ferramentas que proporcionem suporte à colaboração, técnicas de Inteligência Artificial, como agentes de software e Sistemas Tutores Inteligentes (ITS), têm sido cada vez mais utilizadas.
Observou- se que os sistemas colaborativos podem ser divididos em dois grupos:
De Aprendizagem propõe novas estratégias de ensino para sistemas tutores inteligentes que irão cooperar com o aluno durante o processo de aprendizagem.
Estendendo os modelos existentes, tais como aprendizagem por explanação, onde o aluno aprende dando explicações a uma companhia e da aprendizagem com companhia, onde o aluno aprende trocando idéias com um aluno artificial que possui conhecimento similar ao seu, é proposta uma nova estratégia onde o aluno aprende na companhia conjunta do professor e de um agente troublemaker.
Enquanto o professor propõe exercícios para o aluno, o agente troblemaker irá interagir com o aluno fornecendo soluções corretas ou erradas.
De esta maneira, o aluno irá aprender raciocinando sobre a resposta dada e diferenciando as respostas corretas das incorretas.
Uma outra estratégia é a do agente co-professor.
Em esse caso, o professor e o agente co-professor irão interagir discutindo a solução fornecida por o aluno para um determinado exercício.
O aluno irá aprender assistindo à discussão entre os dois professores.
Propõe um Ambiente Multiagente de EnsinoAprendizagem (Ame-A) interativo, para ensino genérico e adaptável às características psico-pedagógicas do aprendiz voltado à educação à distância.
Ame-A é baseado na abordagem de sistemas multiagentes, onde os agentes com diferentes capacidades estão distribuídos em dois processos:
Ensino e aprendizagem.
Para incentivar os alunos nos seus estudos alguns trabalhos têm sido desenvolvidos utilizando agentes sintéticos.
Os agentes sintéticos são agentes autônomos e estão baseados na idéia de simulação de comportamento humano em máquinas.
Para tanto, estes agentes se utilizam de recursos multimídia para oferecer ao usuário um personagem animado que lhe responda à ações realizadas.
Estas características humanas, tais como, expressões faciais e entendimento de emoções humanas, associadas a uma boa interface de comunicação com o usuário, irão tornar os agentes mais atrativos ao alunos, já que eles se comunicam de maneira pouco usada nos sistemas computacionais anteriores, e porque sua comunicação possui uma natureza mais social usando conversação, fala, etc.
Um exemplo de agente sintético é Adele (Agent for Distance Education ­ Light Edition), um agente pedagógico com expressões humanas que foi projetado para trabalhar com estudantes através de resolução de problemas associados à disponibilização de material para estudo.
No caso de uma aplicação para diagnóstico clínico, são apresentados aos estudantes materiais sobre um caso específico e, então, são fornecidos vários casos aos quais os estudantes devem trabalhar.
Adele executa funções como destacar aspectos interessantes do caso, monitorar e fornecer feedback ao aluno de como ele pode trabalhar num caso, dar sugestões para ações ou realizar um exame onde é verificado se o aluno realmente aprendeu os princípios associados ao caso.
A arquitetura do sistema Adele consiste de três componentes principais:
Interface gráfica de simulação (GUI), máquina de raciocínio e um agente animado persona.
A GUI pode ser implementada usando qualquer linguagem de autoria e irá se comunicar com a máquina de raciocínio através de uma API.
O agente persona é um applet que pode ser usado separadamente ou incorporado numa aplicação maior.
A máquina de raciocínio é responsável por as tomadas de decisão e monitoramento.
Ela lê do servidor um plano de tarefa, estado inicial e modelo do estudante, quando o sistema é copiado para a máquina cliente.
Todas as ações captadas no sistema, tais como estados mentais de cada passo, resultados dos testes e resultados dos diagnósticos, são enviadas para o servidor, onde os resultados irão ajudar a determinar o nível do estudante, como também auxiliar o agente a lidar com futuros estudantes.
O sistema integrado está disponível para download e é mais eficiente quando roda no lado cliente.
Em a Figura 4.1 podemos observar Adele explicando a um aluno a importância de apalpar o abdômen do paciente.
Baseado nas estratégias de ensino para ITS, é proposto um Sistema Tutor Inteligente chamado RACSY.
RACSY é um sistema que tem o propósito de ensinar aos seus alunos regras de jogos de raquetes, o que inclui tênis, frescobol e tênis de mesa.
RACSY é baseado numa nova estratégia de ensino chamada Double Test Learning Strategy que envolve três agentes:
Dois agentes pedagógicos artificiais (o tutor e o co-aluno) e uma agente humano (o aprendiz).
O agente co-aluno recebe o mesmo treinamento que o aprendiz e ambos possuem o mesmo nível de conhecimento.
Quando o treinamento estiver completo, o tutor irá testar o co-aluno.
Em esta fase, o aprendiz humano irá apenas assistir à seção de perguntas/ respostas entre o tutor e o co-aluno, e possuirá acesso a uma agenda onde ele poderá realizar anotações, tais como perguntas realizadas por o tutor, respostas dadas por o co-aluno, etc..
Toda vez que o co-aluno resolver um problema, o tutor avaliará sua resposta.
Após terminar o Post-Test1, se iniciará o Post-Test2, que será realizado por o aluno humano, sendo que esse não terá mais acesso a agenda.
Como o aluno irá realizar o teste após o agente co-aluno, ele poderá aprender dos erros cometidos por o agente co-aluno (que possui mesmo nível de conhecimento que o seu) a fim de aprender através desses erros e não repetir- los.
Colaboração Entre Alunos propõe um Sistema de Tutoriamento Inteligente Cooperativo chamado SHIECC, que funciona numa rede de computadores.
Além de apresentar as funções de tutoriamento, o SHIECC permite interações entre os integrantes de uma seção de aprendizagem cooperativa:
O tutor artificial, um grupo de três alunos e o professor, através de um componente de interação e controle.
Em o SHIECC o grupo cooperativo é formado sempre por três alunos, podendo haver numa turma vários grupos cooperativos assistidos por o sistema.
A arquitetura multiagente do SHIECC é formada por dois agentes artificiais (agente tutor e agente pedagógico) e dois tipos de agentes humanos (o professor e os aprendiz).
O agente tutor tem o papel de apresentar o conhecimento para os estudantes e é também responsável por controlar as interações do grupo de alunos com o sistema.
O agente pedagógico define as estratégias pedagógicas a serem aplicadas.
Em o SHIECC os alunos irão realizar trabalhos cooperativos de acordo com a estratégia de aprendizagem cooperativa determinada por o agente pedagógico e o agente de tutoria para aquele determinado grupo.
O sistema disponibiliza uma interface diferenciada ao professor que lhe permite supervisionar os diversos grupos cooperativos, bem como interagir com os seus alunos.
Um outro projeto que busca incentivar a cooperação entre alunos é o site de Aprendizagem Cooperativa à Distância ­ ACD.
O site busca, além de apresentar ferramentas voltadas à cooperação, fornecer suporte ao professor e estudantes.
Para tanto, o site foi dividido em três grandes espaços de cooperação:
Sala de Estudos, Sala de Aula Virtual e a Oficina de Aprendizagem.
A Sala de Estudos é composta por uma Bancada de Estudo, com links externos para realização das tarefas escolares, um Mural de Dicas para orientar os alunos a participar das listas de discussão e chat, e um Bloco de Notas que funciona como uma agenda virtual.
Em a Sala de Aula Virtual, por sua vez, são oferecidos cursos e tutoriais onde os alunos devem participar cooperativamente com os demais colegas e professor.
Para criação dos cursos é usado o ambiente AulaNet e a interação e cooperação são proporcionadas por as ferramentas Internet, tais como correio eletrônico, grupos de discussão e chat.
A Oficina de Aprendizagem é dividida em Oficina de Texto, Oficina de Solução Cooperativa e Espaço de Cooperação/Comunicação.
Em a Oficina deTexto são realizadas produções cooperativas de textos.
A Oficina de Solução Cooperativa de Problemas está apoiada no chat, na lista de discussão e no sistema WebSaber.
Em o Espaço de Cooperação/Comunicação existe a oportunidade de comunicação e cooperação livre entre estudantes e professores através das ferramentas de chat e das listas e grupos de discussão.
Em um ambiente de aula tradicional, devido a o feedback presencial dos alunos, os professores se utilizam de métodos informais de avaliação do aprendizado de seus alunos, tais como observação do aluno, realização de perguntas e incentivo à participação.
Tendo em vista que os ambientes de ensino à distância apresentam apenas métodos formais de avaliação como provas e testes, propõe um modelo baseado em agentes para suporte a avaliação informal no AulaNet ­ um ambiente de instrução baseada na Web.
Para suprir a ausência do contato direto entre alunos e professores nesses ambientes, é utilizada a tecnologia de agentes para monitorar o processo de interação dos alunos com o ambiente AulaNet, o que permitirá captar o processo de aquisição de conhecimento do aluno, permitindo um complemento aos processos de avaliação formais existentes no AulaNet.
Para tanto, é observado como o aluno chega aos resultados apresentados:
Quais os caminhos percorridos com relação a o material didático;
Quais as fontes consultadas e com que freqüência;
Se o aluno utiliza fontes suplementares fornecidas por o professor;
Se o aluno tem iniciativa de pesquisar fontes suplementares por conta própria;
Qual a sua contribuição em atividades conjuntas;
Se o aluno entra em contato com o professor e instrutores somente em datas próximas a entrega de trabalhos ou se mantém contato regular; Qual
a assiduidade em tarefas em grupo, se os alunos demonstram preferir determinados tipos de mídias;
E, finalmente, se o ritmo do conjunto dos alunos no consumo de material didático é homogêneo.
Para observação de todos esses aspectos, é proposto um modelo formado por três agentes distintos:
Agente Assistente de Tarefa de Monitoração, Agente Assistente de Tarefa de Avaliação de Alunos e Agente Assistente de Tarefa de Design.
A arquitetura desse sistema pode ser melhor visualizada na Figura 4.2.
O Agente Assistente de Tarefa de Monitoração é responsável por monitorar as interações dos alunos com o ambiente, gravando as informações obtidas num arquivo de log.
Esse agente possui dois componentes:
Um no cliente, responsável por gerar um histórico de navegação do aluno, e um no servidor, para verificar a participação dos alunos na lista de discussão.
O Agente Assistente de Tarefa de Avaliação de Alunos irá realizar consultas no arquivo de log da interação, no modelo de alunos e na base de conhecimentos responsável por a interpretação do log, a fim de exibir ao professor os resultados provenientes dos processos de avaliação formal e informal do AulaNet.
O Agente Assistente de Tarefa de Avaliação de Design é um consultor que irá indicar ao professor possíveis distorções no design instrucional, oferecendo mecanismos para realização das correções verificadas necessárias para atingir a qualidade desejada.
Steve, sendo que cada grupo (um agente Steve e um aluno) irá possuir um papel e, portanto, terá um conjunto de funções a executar que estão associadas àquele papel.
Além disso, os agentes ainda podem participar como tutores, monitorando os alunos na realização de sua tarefas.
Quando um agente Steve tem de esperar que outro membro do grupo realize uma ação, ele vira a sua cabeça em direção a o outro.
De esta maneira, os membros do grupo sabem quando é a sua vez de executar uma determinada ação, o que também lhes dá uma forte sensação de participação em grupo.
Em a Figura 4.3 podemos observar dois agentes Steve interagindo numa simulação para treinamento em grupo.
Pode- se observar que a maioria dos ambientes de ensino à distância ditos colaborativos têm a sua atenção voltada a oferecer aos alunos ferramentas que proporcionam a comunicação e a colaboração em grupo.
Porém, essa troca de conhecimentos entre os alunos irá gerar um grande número de interações que precisam ser monitoradas por o professor, pois lhe fornecerão informações importantes para a avaliação de seus alunos e de seu curso.
O modelo de agentes proposto por, por sua vez, propõe algumas formas de avaliação informal dos alunos, onde, basicamente, ocorre a monitoração das interações dos alunos com o ambiente como, por exemplo, material pesquisado, mídias usadas, caminho utilizado para acesso ao conteúdo, etc..
Em este ambiente, as monitorações entre os alunos e dos alunos com o professor são individuais e buscam informar ao professor a participação dos alunos na lista de discussão verificando o número de mensagens trocadas.
Em os sistemas pesquisados não encontramos nenhuma forma de monitoração das interações que proporcionasse uma análise mais qualitativa do conteúdo das mensagens, voltada a ressaltar aspectos de relacionamentos de colaboração, tais como, associações de grupos de alunos, assuntos que interessam aos alunos, etc..
Em este sentido, viemos nesta dissertação, propor um sistema multiagente de monitores da colaboração que vem contribuir justamente com esta lacuna observada no ensino colaborativo à distância.
Atualmente, existem num ambiente telemático de ensino diversos mecanismos que permitem comunicação entre os integrantes de um curso à distância, tais como:
Listas de discussão, newsgroups, chats e e-mail.
É tarefa do professor analisar todas as discussões que se encontram em andamento e verificar se não fogem ao escopo do assunto visto em aula, ou seja, o professor deve garantir que os alunos discutam apenas os temas vistos em aula ou assuntos relacionados.
Além disso, o professor deve observar a participação dos alunos, a fim de incentivar todos os integrantes do curso a participarem das interações em andamento, pois o aluno que participa ativamente se sente mais engajado ao estudo e, portanto, obtém melhores resultados.
As informações contidas nas interações são de suma importância ao professor, pois lhe permitem avaliar os seus alunos e o curso, verificando se o aprendizado vem ocorrendo no nível esperado.
Quando as turmas são mais numerosas, é difícil para o professor realizar sozinho todo esse trabalho.
Assim, propomos inserir neste ambiente de ensino um sistema multiagente capaz de observar as interações que estão ocorrendo num ambiente telemático de ensino, extrair informações a partir de estas interações, realizar algumas análises e transmitir os resultados ao professor.
O presente trabalho tem como objetivo definir a arquitetura de um sistema multiagente que realizará a monitoração das ferramentas de comunicação num ambiente telemático de ensino, bem como, incentivar os alunos a participar das reuniões virtuais.
Este agente irá analisar todas as discussões que se encontram em andamento nestas ferramentas, que incluem listas de discussão e e-mail, chat e newsgroup, segundo três tipos de associações que podem ocorrer entre os integrantes do grupo:
Aluno-aluno, aluno-assunto, aluno-assunto.
Foram realizadas as seguintes atividades em relação a o objetivo proposto:
Monitorar a interatividade entre os alunos num ambiente telemático de ensino.
Esta abordagem compreende um sistema multiagente formado por quatros agentes, onde três agentes estariam encarregados de monitorar uma determinada ferramenta de colaboração e um quarto agente seria responsável por disponibilizar os dados analisados ao professor.
Para a coleta de dados e análise havia a necessidade de autonomia, já que essas tarefas deveriam ser realizadas periodicamente e já estarem prontamente disponíveis ao professor quando ele acessasse o sistema.
Além disso, a coleta de dados e análise seriam realizadas por ferramentas diferentes, localizadas em máquinas diferentes.
Com isso, tornou- se interessante que essas atividades fossem realizadas paralelamente, disponibilizando os resultados de maneira ainda mais rápida.
Tendo em vista que autonomia e processamento distribuído são características principais de um Sistema Multiagente, optou- se, então, por dividir as tarefas entre agentes que realizam as atividades isoladamente (cada um numa única ferramenta de comunicação) e se comunicam com o agente do professor, o qual deverá exibir ao professor os resultados destas tarefas.
Além de estas, o sistema ainda possui outras características que o identificam como um Sistema Multiagente, que são:
Autonomia: Os agentes operam sem a intervenção direta de um ser humano e possuem algum tipo de controle sobre suas ações e estados internos.
Algumas das funcionalidades realizadas por os agentes que os tornam autônomos são:
As coletas de dados e análises são realizadas por os agentes coletores sem ser necessária a solicitação do professor;
A o ocorrer a entrada do professor no sistema é apresentada a análise realizada a partir de as novas mensagens trocadas por os alunos desde a última análise feita;
Agente do Professor exibe ao professor quadro comparativo das duas análises mais recentes.
Habilidade social:
Os agentes coletores interagem com o agente do professor através da linguagem KQML.
Cooperação: Os agentes coletores colaboram com o agente do professor fornecendo as análises realizadas a ele, que as exibirá ao professor.
Continuidade Temporal: Os agentes coletores estão permanentemente ativos para periodicamente lerem as novas mensagens que chegaram.
O sistema multiagente proposto é formado por quatro agentes distribuídos na Internet.
Três agentes, que denominamos agentes coletores, são responsáveis por a coleta e análise dos dados extraídos das mensagens disponibilizadas por os mecanismos de comunicação Internet, que são Lista de discussão, Newsgroup e Chat.
O quarto agente é o agente do professor que, quando acionado por o professor, irá exibir as análises feitas por os outros agentes.
Além desses, há um quinto agente servidor de nomes, necessário devido a o framework adotado para a implementação do sistema, o Java Agent Template versão 0.3.
Este agente contém o nome e endereço de todos os agentes pertencentes à sociedade e a ele cabe a tarefa de fornecer o endereço de um agente desconhecido por os outros agentes da sociedade.
Em o sistema multiagente proposto há, para cada um dos mecanismos de comunicação Internet (Lista de discussão, chat e newsgroup), um único agente que irá buscar periodicamente as informações naquele único sistema.
Por exemplo, há um agente encarregado da lista de discussão.
Esse agente é acionado por o sistema de tempos em tempos e buscará todas as novas mensagens de e-mail que chegarem à lista.
De a mesma maneira, há um agente responsável por o newsgroup, como também um agente responsável por o arquivo de log do chat.
Os agentes coletores acessam periodicamente a lista de discussão, o arquivo de news e o arquivo de log do chat, a fim de verificar as novas mensagens enviadas por os alunos.
Enquanto estiver lendo as novas mensagens, os agentes coletores extraem alguns dados que serão utilizados para posterior análise.
Essas informações colhidas são armazenadas num arquivo de log.
Cada linha (tupla) deste arquivo identifica uma mensagem da lista de discussão ou uma sentença de chat e conterá os seguintes campos:
Onde: Id:
Número identificador proveniente da mensagem de e-mail e newsgroup.
No caso de o chat será gerado um número inteiro para identificar cada sentença formulada por um usuário na conversação.
From: Aluno emissor da mensagem de e-mail e newsgroup, ou emissor da sentença no chat.
Reply: Em o newsgroup, quando uma news é enviada como resposta ou como argumento a uma mensagem existente, é criada uma thread4.
O agente coletor de newsgroup irá verificar que todas as news pertencentes a uma thread se referem a primeira mensagem enviada, preenchendo este campo com o valor identificador A informação contida num newsgroup é organizada através de threads (assunto).
Uma thread se inicia quando alguém posta um artigo original ou uma informação nova.
Essa thread vai se desenvolvendo a medida que outras pessoas respondam ao artigo original, ou acrescentem outras informações ampliando a discussão.
A formação de uma thread é totalmente espontânea e seu desenvolvimento depende do interesse dos outros participantes por o artigo enviado e por a discussão em andamento.
Assunto: O assunto das mensagens da lista de discussão pode ser buscado no subject da própria mensagem.
Os assuntos também são identificados por um simples algoritmo de busca, que varre o conteúdo da própria mensagem a procura de palavras-chave, onde são extraídos os substantivos e verbos, sendo relevante o número de vezes que a palavra aparece no texto.
Em o neswgroup o assunto da mensagem é identificado por o nome da news e também por procura de palavraschave dentro de a news.
Para tanto, a fim de verificarmos a categoria sintática das palavras, é usado o Dicionário Léxico-Morfológico do Lexis que contém categorizações, acessível a todos os agentes.
A identificação dos assuntos é realizada da seguinte maneira:
Identificam palavras (substantivos e verbos) com valor semântico no corpo da mensagem;
Selecionar palavras com maior número de ocorrências;
Verificar a ocorrência de sinônimos, excluindo casos de redundância;
Uso do Thesaurus, para verificar palavras que sejam sub-assuntos de outras.
Sub-assunto: À medida que os alunos estão discutindo um determinado assunto, comentários cada vez mais específicos são enviados, o que poderá caracterizar um novo sub-assunto.
Os sub-assuntos serão buscados no conteúdo das mensagens da lista de discussão e newsgroup e, no caso de o chat, dentro de a sentença formulada por o aluno.
Os sub-assuntos relacionados a um determinado assunto são identificados com o uso do Thesaurus que é provido por o sistema.
O uso deste dicionário possibilita aos agentes identificar palavras diferentes que se referem a um mesmo assunto e tópicos pertencentes a um assunto.
De esta maneira, haverá para cada assunto uma lista de sub-assuntos correspondente.
Data: Data em que foi enviada a mensagem de e-mail, newsgroup ou da reunião de chat.
Hora: Hora em que foi enviada a mensagem de e-mail ou newsgroup, ou horário da reunião de chat.
Mecanismo de Comunicação:
Este campo contém o mecanismo Internet de comunicação de o qual o agente é responsável por coletar os dados.
As opções possíveis são:
Lista de discussão, newsgroup e chat.
Cada agente possui o seu banco de dados local (arquivo de log), o qual armazena os dados colhidos, como explicado acima.
Quando solicitado por o agente do professor, ele irá realizar uma análise a partir de os dados coletados mais recentemente, armazenados no banco de dados.
O resultado desta análise é retornado ao agente do professor que o disponibiliza ao professor quando ele acessar o sistema.
Caso seja interesse do professor, ele pode solicitar outras análises além de aquelas já disponíveis por o sistema.
A coleta de dados explicada anteriormente realiza uma pré-análise das informações contidas nas mensagens, buscando identificar dados relevantes.
A partir desses dados, os agentes realizam análises estatísticas e identificam associações a fim de verificar informações adicionais que auxiliem o professor a orientar e avaliar a sua turma de alunos.
Essas análises são realizadas a partir de os dados colhidos das novas mensagens que chegaram após a última análise realizada, e serão exibidas toda vez que o professor acessar o sistema.
Caso seja do interesse do professor, ele pode solicitar uma análise que englobe um período intermediário.
Como as análises são realizadas por os agentes coletores, há uma análise para cada ferramenta de comunicação.
De esta maneira, quando o professor entrar no sistema, ele irá receber uma análise proveniente das informações obtidas na lista de discussão, outra do newsgroup e uma terceira do arquivo de log do chat.
Existem basicamente três tipos de associações que podem ser identificadas por o agente nas interações de grupo de alunos durante a fase de análise:
Além de as associações acima, também são exibidas algumas análises estatísticas a partir de os dados extraídos das mensagens, que incluem número de mensagens trocadas, percentual de participação, etc..
Estas informações estatísticas irão auxiliar o professor a avaliar o aspecto de participação dos alunos nas interações, verificando se a colaboração está ocorrendo de fato.
De esta maneira, as análises exibidas ao professor estão divididas em dois grupos:
Análise com enfoque na colaboração em grupo;
Análise individual da participação dos alunos;
Esta análise busca identificar as associações provenientes das interações entre alunos (aluno-aluno e aluno-assunto), mostrando quais alunos mais interagem entre si, quais assuntos que mais interessam a cada grupo de alunos, juntamente com informações estatísticas que buscam identificar o percentual de participação de cada grupo e de cada aluno no grupo.
Basicamente, estas informações são exibidas ao professor na forma de uma tabela que conterá os dados descritos abaixo.
Como as análises são realizadas por agentes diferentes, haverá uma tabela para cada uma das ferramentas Internet existentes.
A associação aluno-assunto busca identificar os grupos de alunos que se formam ao ser aberta a discussão de um determinado assunto.
Para tanto, as mensagens que referem- se a um mesmo assunto são destacadas, criando então um novo grupo.
Em a tabela abaixo, cada tupla se refere a um único grupo que trata de um único assunto, mas que, por sua vez, é formado por vários alunos que enviaram mensagens relativas aquele assunto.
O conteúdo de cada campo da tabela é melhor explicado abaixo:
Ferramenta: X Período:
Dd /mm/aa a dd /mm/aa Nro.
Total de mensagens trocadas:
Y Id do Grupo Alunos Assuntos Sub--assuntos Nro.
Individual de mensagens Nro.
Total de mensagens Onde:
Ferramenta: Identifica a ferramenta de a qual as mensagens foram buscadas.
Pode ser Lista de Discussão, Chat ou Newsgroup.
Período: Período em que as mensagens foram trocadas.
Data Inicial se refere à data da mensagem mais antiga e a data final é a data da mensagem mais atual.
Nro. Total de Mensagens:
Número total de mensagens trocadas por todos os alunos naquele período.
Id do Grupo:
Número decimal crescente que irá identificar um grupo de alunos.
Alunos: Os nomes de todos os alunos que formam um determinado grupo.
Cada aluno pode pertencer há vários grupos de alunos formados.
Assuntos: A associação é identificada por o assunto o qual os alunos estão discutindo.
O campo assunto contém o assunto comum a todos os alunos.
Em a préanálise, os agentes coletores armazenam todos os assuntos e sub-assuntos de uma mensagem.
A o realizar as associações para a análise, o agente busca o assunto mais específico (provavelmente um sub-assunto) que seja comum a um maior número de alunos.
Sub-assuntos: Caso uma mensagem seja específica, discutindo um novo tópico pertencente ao assunto tratado, este tópico é detalhado no campo sub-assuntos.
Nro. Individual de Mensagens:
O número de mensagens que o aluno trocou sobre aquele determinado assunto.
Nro. Total e Mensagens:
O número total de mensagens trocadas por todos os alunos pertencentes aquele grupo.
Por exemplo, numa turma de biologia, os alunos tratam de assuntos variados relativos ao Reino Animal.
Entre esses assuntos estão as classificações (mamíferos, répteis, aves, anfíbios, etc).
Em este caso, a tabela gerada teria o seguinte aspecto:
Ferramenta: Mail Período:
20/3/98 a 25/3/98 Nro.
Total de mensagens trocadas:
Id do Grupo Alunos Assuntos Sub--assuntos Nro.
Individual de mensagens Nro.
Porém, se mais de um aluno discutir um destes sub-tópicos, a associação será gerada a partir de o tópico mais específico.
Vamos supor que mais de um aluno resolva discutir o tema &quot;Baleia».
A análise é então exibida da seguinte forma:
Ferramenta: Mail Período:
20/3/98 a 25/3/98 Nro.
Total de mensagens trocadas:
12 Id do Grupo Alunos Assuntos Adriano Baleia Maria Baleia Ricardo Baleia José Mamífero Eduardo Mamífero Maria Mamífero Luciana Mamífero Sub-assuntos Tigre Leão Nro.
Nro. Total de Individual mensagens de do grupo mensagens A associação aluno-aluno pode ser mais abrangente, englobando todos os alunos que mais interagem entre si, não se restringindo àqueles que estão discutindo um mesmo assunto.
A identificação da associação aluno-aluno é realizada por o campo reply da mensagem, e não mais por os assuntos discutidos por os alunos.
De esta maneira, quando um aluno envia uma mensagem como resposta a uma outra mensagem enviada é criado um novo grupo na associação aluno-aluno.
Farão parte deste mesmo grupo, todos os alunos que enviarem uma mensagem, em reply, a estas mensagens.
Essa associação será exibida apenas para o serviço de newsgroup através da identificação de threads.
No caso de a ferramenta de chat esta análise não será exibida, pois nesta ferramenta não existe a opção reply.
O mesmo acontece com a lista de discussão, já que uma mensagem é enviada como reply a todas as mensagens da lista, não sendo possível identificar especificamente relacionamento entre alunos.
Ferramenta: X Período:
Dd /mm/aa a dd /mm/aa Nro.
Total de mensagens trocadas:
Y Id do Grupo Alunos Nro.
Individual de mensagens Nro.
Total de mensagens Onde:
Id do Grupo:
Número decimal crescente que irá identificar um grupo de alunos.
Alunos: Os nomes de todos os alunos que formam um determinado grupo.
Cada aluno pode pertencer a vários grupos de alunos.
Nro. Individual de Mensagens:
O número de mensagens que o aluno trocou naquele determinado grupo.
Nro. Total e Mensagens:
O número total de mensagens trocadas por todos os alunos pertencentes àquele grupo.
Para que o professor tenha uma avaliação mais sucinta da participação e interesse específico de cada aluno, é exibida uma outra tabela que contém informações referentes a cada aluno pertencente a turma.
Estas informações irão permitir ao professor acompanhar especificamente a participação individual dos alunos, bem como seus temas de interesse, enviando, se necessário, mensagens de estímulo ao aluno incentivando- o a interagir com todo o grupo de alunos.
Esta análise também será exibida em forma de uma tabela que conterá os campos exibidos abaixo:
Ferramenta: X Período:
Dd /mm/aa a dd /mm/aa Nro.
Total de mensagens trocadas:
Y Alunos Assuntos Sub--assuntos Nro.
Mensagens Percentual de participação(%) Onde:
Alunos: Nome do aluno.
Assuntos: Lista de assuntos discutidas por o aluno.
Sub-assuntos: Para cada assunto discutido por o aluno, estão associado todos os tópicos daquele assunto os quais foram comentados por o aluno.
Nro. Mensagens:
Número de mensagens que o aluno enviou sobre cada assunto, bem como o número de mensagens que o aluno enviou ao total durante o período determinado.
Percentual de participação do aluno:
O percentual de participação do aluno para cada assunto comentado entre os alunos.
Por exemplo, se houveram 20 mensagens enviadas sobre o assunto mamífero, este campo irá denotar quantas dessas mensagens foram enviadas por o aluno citado.
Também será exibido ao final, o percentual total de participação do aluno no período determinado.
Por exemplo, para a mesma turma de biologia descrita acima, a seguinte tabela poderia ser gerada a partir de as mensagens trocadas por e-mail por os alunos:
Ferramenta: Mail Período:
20/3/98 a 25/3/98 Nro.
Total de mensagens trocadas:
20 Alunos Assuntos Sub--assuntos Nro.
Mensagens Percentual de participação(%) Adriano Mamíferos Baleia, Tubarão Répteis Maria Répteis Ricardo Répteis José Mamífero Anfíbio Eduardo Tigre Répteis Luciana Mamífero Crocodilo, Lagarto Mamífero Leão O agente do professor é um intermediador entre os agentes coletores e o próprio professor.
A este agente cabe a tarefa de exibir as análises realizadas por os agentes coletores ao professor.
Para tanto, o agente do professor mantém o status de todas as análises já realizadas por os agentes, bem como a informação de quais análises já foram visualizadas por o professor.
Estes dados são armazenados num arquivo de log onde cada linha (tupla) indica uma análise realizada e que conterá os campos descritos na tabela abaixo:
Nome do Arquivo Data Inicial Data Final Primeira Mensagem Última Mensage Data de Exibição Mecanismo de Comunicação Onde:
Nome do Arquivo:
Nome do arquivo que contém a análise exibida.
Todas as análises estarão armazenadas em arquivos na máquina local do agente do professor.
Data Inicial: Data da mensagem mais antiga que foi analisada.
Data Final: Data da mais recente mensagem analisada.
Primeira Mensagem: Número identificador da mensagem da lista de discussão, newsgroup ou da sentença de chat mais antiga.
Última Mensagem: Número identificador da mensagem da lista de discussão, newsgroup ou da sentença de chat mais recente.
Data de Exibição: Data em que esta análise foi exibida ao professor.
Embora, os agentes coletores realizem a coleta de dados periodicamente, a análise das informações é realizada, apenas, quando solicitada por o agente do professor.
Quando o professor entrar no sistema, o agente do professor irá enviar uma mensagem a cada um dos agentes coletores solicitando análise recente a partir de as novas mensagens que chegaram.
Os agentes coletores irão, então, enviar ao professor uma mensagem KQML notificando o nome e endereço do arquivo que contém a análise solicitada.
Este pedido pode ser de uma análise default a partir de as novas mensagens que chegaram ao sistema desde a última análise realizada ou referente a um período de tempo em que as datas inicial e final são determinadas por o próprio professor.
A fim de validar o sistema multiagente proposto foi desenvolvido um protótipo.
Para a implementação do sistema Multiagente, foi adotado o framework Java Agent Template versão 0.3.
Como o sistema é implementado em Java, que é independente de plataforma, os agentes podem estar distribuídos em diferentes máquinas que se comunicam através da Internet, sem necessariamente rodar o mesmo Sistema Operacional.
O JAT fornece um conjunto de classes que permite a criação de agentes genéricos, a qual se comunicam através da linguagem KQML e possuem uma base de conhecimentos a qual armazenam arquivos, classes, linguagens, interpretadores e endereços dos agentes da sociedade.
Para a criação dos agentes do sistema, as classes fornecidas por JAT foram especializadas, fazendo com que os agentes fossem aptos a executar as tarefas específicas às quais se propõem.
Além disso, este ambiente possui um agente servidor de nomes o qual armazena o nome e endereço de todos os agentes pertencentes à sociedade.
De este modo, não há uma preocupação na comunicação em seu nível mais baixo, usando sockets e endereços Internet, já que toda a interface de comunicação já é fornecida por o JAT.
Como os agentes se comunicam através da linguagem KQML, de mais alto nível, os agentes apenas precisam saber o nome do agente ao qual a mensagem se destina.
Os agentes coletores têm conhecimento apenas da existência do agente do professor e apenas se comunicam com este agente.
O agente do professor, por sua vez, terá conhecimento da existência de todos os agentes, a qual se comunicará para fazer requisição das análises necessárias.
Além disso, foi necessária a criação de um novo interpretador, para que os agentes possam entender duas novas requisições que possam aparecer no conteúdo das mensagens.
Essas duas requisições dizem respeito ao envio e recebimento de análises entre o agente do professor e os agentes coletores.
São elas:
Pedido de requisição de análise (do agente do professor para os agentes coletores);
E de fornecimento do nome e endereço do arquivo que contém a análise (dos agentes coletores para o agente do professor).
Este interpretador quando necessário, é identificado no campo:
Ontology das mensagens KQML.
Os agentes coletores estão localizados no diretório local do professor, onde são armazenadas as mensagens de e-mail, newsgroup e chat.
O agente do professor, porém, será instalado na máquina escolhida por o professor.
Em nossos estudos, descobrimos que os arquivos de log das reuniões de chat, não são armazenados num formato único, dependendo este da ferramenta a qual é utilizada por o professor.
De esta maneira, é necessária a adoção de uma ferramenta única de chat.
Optou- se por o Cu-See-Me, o qual já vem sendo utilizado por o Campus Global na PUCRS5.
Além disso, uma outra dificuldade que encontramos é que os chats privados não estão disponíveis ao professor, restringindo dessa maneira, que o trabalho de análise do agente de chat, se limite aos chats públicos.
A fim de evitar redundâncias na identificação dos assuntos das mensagens, os agentes coletores fazem uso de um thesaurus, implementado justamente para o sistema.
De esta maneira, após a identificação das palavras que são possíveis assuntos das mensagens, o agente coletor irá verificar a ocorrência de sinônimos.
Caso existam palavras diferentes que se referem a um mesmo assunto, será armazenada apenas a ocorrência principal destas palavras.
O thesaurus também identifica relações de hierarquia entre palavras, o que torna possível relacionar sub-assuntos pertencentes a um determinado assunto.
Como o sistema pode ser utilizado por turmas que tratam de diferentes matérias, os sinônimos, como também as relações de hierarquia deverão ser fornecidas por o próprio professor no momento da instalação do sistema.
De esta maneira, o professor poderá inserir palavras científicas e que sejam específicas ao determinado tópico estudado por a sua turma.
Os protocolos abaixo descrevem as principais requisições de trocas de mensagens que ocorrem entre os agentes.
Os agentes armazenam em sua base de conhecimentos recursos, que podem ser classes Java (como linguagens, interpretadores, etc), arquivos de dados e informações embutidas em mensagens KQML.
Quando um agente 1 envia a um agente 2 uma mensagem contendo um recurso desconhecido, o agente 2 irá identificar que não possui esse recurso e irá enviar ao agente 1 uma mensagem solicitando o endereço do recurso de nome fornecido.
O agente 1 irá então procurar em sua base de conhecimento o endereço daquele recurso, enviando- o ao agente 2.
O esquema do protocolo de notificação de recurso desconhecido pode ser visualizado na Figura 6.3.
Um agente pode querer enviar uma mensagem para um outro agente de o qual ele não possui o endereço Internet.
Em este caso, ele irá enviar primeiramente uma mensagem ao ANS solicitando o endereço do agente de nome fornecido.
O ANS, então, retornará uma mensagem contendo o endereço do agente solicitado.
Após isso, o agente irá armazenar o nome e endereço deste agente na sua base de conhecimento e enviará a mensagem para o respectivo agente.
Quando o agente solicitar enviar uma outra mensagem para o mesmo agente, ele não precisará mais enviar uma requisição de recurso para o ANS, já que, a partir de então, o endereço do agente estará armazenado em sua base de conhecimento.
O esquema do protocolo de notificação de endereço dos agentes por o ANS pode ser visualizado na Figura 6.4.
Quando um agente resolver sair da sociedade, os outros agentes devem ser notificados.
Para tanto, o agente que está abandonando a sociedade irá enviar uma mensagem ao ANS notificando a sua saída.
O ANS irá retirar o endereço do agente de sua base de conhecimento e irá enviar uma mensagem para cada agente da sociedade avisando a saída deste agente.
Todos os agentes retirarão o endereço do agente da sua base de conhecimento, o que o tornará desconhecido à sociedade.
O protocolo de finalização pode ser visualizado na Figura 6.5.
Quando o professor entrar no sistema, será questionado se deseja observar a análise das últimas interações (análise default) ou se deseja obter a análise de um período fornecido por ele.
Caso seja um pedido de análise default, o agente do professor irá enviar a todos os agentes coletores o Id da última mensagem analisada, para que apenas as mensagens que chegaram após esta sejam analisadas.
Se o professor solicitou a análise de um período intermediário, será enviado a data inicial e final deste período.
Os agentes coletores irão, então, selecionar no seu banco de dados, os dados, já pré-analisados, que fazem parte deste período e realizar a análise solicitada.
A análise será armazenada num arquivo local aos agentes coletores, que irão enviar ao agente do professor o nome e endereço do arquivo que contém a respectiva análise.
O agente do professor irá armazenar em sua base dados referentes as análises realizadas e as exibirá ao professor.
Para a execução deste protocolo foi necessário a criação de uma nova classe Java para interpretar as mensagens de solicitação e envio de análises.
Este interpretador foi chamado de AnalysisInterpreter, e é identificado por os agentes no campo:
Ontology das mensagens KQML.
O esquema do protocolo de requisição de análise por o agente do professor pode ser visualizado na Figura 6.6.
Como proposto, o protótipo implementado realiza apenas as análises offline, ou seja, monitora as mensagens da lista de discussão, do newsgroup e do arquivo de log do chat.
A análise on-line, onde o agente se conecta na conferência de chat e analisa as interações mostrando os resultados ao professor, não foi implementada, embora a arquitetura do sistema proposto possa ser bem utilizada para esse caso.
Essa análise é bastante interessante ao professor, pois mostra os resultados prontamente ao professor, no momento em que a conferência está acontecendo.
Porém, devido a limitações de tempo no desenvolvimento da dissertação, a análise on-line é descrita como possível trabalho futuro.
Para a implementação do sistema multiagente foi utilizado o framework Java Agent Template versão 0.3.
JAT fornece um conjunto de classes Java dividido em três pacotes que devem ser especializadas para a criação dos agentes.
Este framework foi adotado pois pretendia- se desenvolver o sistema na linguagem Java que é independente de plataforma, o que possibilita o sistema ser rodado em qualquer sistema operacional.
Além disso, como seriam necessários que os agentes rodassem em máquinas diferentes, já que as listas de discussão, newsgroup e chat poderiam não estar localizados no mesmo servidor, é interessante utilizar algum tipo de linguagem que permitisse a comunicação via Internet entre os agentes.
Foram encontradas algumas dificuldades na criação dos agentes, pois o JAT disponibiliza pouca documentação e exemplos que fornecessem informações a respeito de como os agentes deveriam ser criados.
Porém, uma vantagem do JAT é que ele fornece uma interface para comunicação KQML entre os agentes, não sendo necessário pensar na comunicação em seu nível mais baixo, usando sockets e endereços Internet.
Para tanto, este ambiente possui um agente servidor de nomes o qual armazena o nome e endereço de todos os agentes pertencentes a sociedade, o que facilita a comunicação já que os agentes precisam saber apenas o nome do agente a qual a mensagem se destina.
Além disso, JAT também fornece um pacote que disponibiliza aos agentes armazenar seu conhecimento através de recursos, tais como, arquivos, endereços dos outros agentes, classes e interpretadores.
A fim de validarmos o sistema proposto, pretende-se utilizar- lo numa turma virtual de ensino à distância do Campus Global da Pontifícia Universidade Católica do Rio Grande do Sul6.
Para tanto, serão utilizadas as interações provenientes da lista de discussão e newsgroup e os arquivos de log de chat, que foram trocadas entre os alunos da disciplina de CBP:
2000 durante o semestre de 98/2.
A motivação para o desenvolvimento da arquitetura dos agentes monitores da colaboração surgiu de algumas idéias trocadas com educadores da área de ensino colaborativo à distância.
Quando perguntados sobre possíveis ferramentas que poderiam auxiliar tanto o professor como os alunos no aspecto de colaboração, observou- se que a maior lacuna se encontrava na falta de ferramentas que auxiliassem o professor a monitorar as interações entre alunos.
Segundo os educadores, estes ambientes geram um número muito grande de interações, o que torna difícil ao professor acompanhar e lhe resultando pouco tempo para realizar outros trabalhos importantes na sua aula.
Tendo em vista estes aspectos, decidiu- se por implementar um sistema multiagente de monitores da colaboração que proporcionasse ao professor subsídios que lhe auxiliassem na avaliação dos seus alunos e do seu curso.
Com isso, os professores teriam maior tempo livre para a realização de outras atividades no seu curso.
Durante o desenvolvimento do protótipo, observamos que em alguns aspectos o sistema poderia ser melhorado, fornecendo, além de as funcionalidades propostas, outras ferramentas que facilitariam o trabalho do professor e tornariam o sistema mais robusto.
Essas funcionalidades são descritas abaixo:
A inserção de novos relacionamentos de assunto e sub-assunto por o professor:
Juntamente com o sistema foi implementado um thesaurus, que identifica sinônimos de palavras, reduzindo assim o caso de redundâncias na identificação de assuntos.
Além disso, o thesaurus também devolve relações de hierarquia que possibilitam aos agentes identificar palavras que são sub-assuntos de outras.
Estas informações, sinônimos e relações de hierarquia, são fornecidos por o professor, numa ferramenta a parte, no momento da instalação do sistema.
Como o professor pode identificar novas relações e sinônimos durante o acompanhamento das interações dos alunos, seria interessante fornecer no agente do professor, um mecanismo que permitisse ao professor a inserção de novos relacionamentos e sinônimos.
De esta maneira, o professor poderia fazer as mudanças no conteúdo do thesaurus, no momento em que identificar a necessidade, sem haver a necessiade de sair do sistema para isso.
Uso de técnicas de análise de discurso para identificação de assuntos:
A identificação de possíveis assuntos no conteúdo das mensagens da lista de discussão, de newsgroup e do chat, é realizada por a procura de sinônimos e verbos, que apresentam uma maior freqüência no texto.
Embora essas palavras possuam um maior valor semântico, não há certeza de que exprimam o conteúdo do texto.
Para realizar uma análise mais robusta das mensagens, poderia ser utilizada alguma técnica de análise de discurso para identificação mais precisa das palavras que expressam os possíveis assuntos da mensagem analisada.
Aperfeiçoamento da interface do Agente do Professor:
O agente do professor é responsável por a apresentação das análises realizadas por os agentes coletores.
Para tanto, foi desenvolvida uma interface simples, onde os resultados das análises são exibidas através de tabelas.
Para proporcionar melhor visualização dos resultados ao professor, a interface pode ser aperfeiçoada inserindo mecanismos de hipertexto ao professor que lhe permitiriam caminhar entre as informações disponíveis.
De esta maneira, o professor poderia, após observar as análises de um grupo de alunos, selecionar um aluno, de o qual poderia visualizar as informações individuais.
Implementação on-line:
Observou- se que as informações nas interações poderiam ser buscadas de duas maneiras:
Uma off-line, onde são analisadas as mensagens da lista de discussão, newsgroup e do arquivo de log do chat, e a on-line, onde o agente está conectado numa conferência virtual (reunião de chat) e, durante a seção, o agente coleta dados e incentiva os alunos a participarem da discussão exibindo prontamente as informações coletadas.
Como o professor receberá os dados no momento em que a conferência está ocorrendo, ele poderá verificar se as discussões não estão fugindo ao tópico previsto, quais alunos não estão participando e etc..
Além disso, o agente irá verificar quais alunos não estão participando da reunião e incentivar- los a interagir com os colegas.
Devido a limite de tempo para desenvolvimento do protótipo, a parte on-line do sistema não foi implementada, o que pode ser realizado como trabalho futuro.
Para tanto, a arquitetura proposta pode ser bem utilizada, devendo ser tomados alguns cuidados relativos à implementação, tais como, qual software para conferência será utilizado, como o agente deve- se conectar à conferência, etc.
