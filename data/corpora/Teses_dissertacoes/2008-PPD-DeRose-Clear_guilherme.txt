A tecnologia de virtualização permite que várias máquinas virtuais possam ser criadas sobre uma mesma estrutura de hardware.
Com o crescimento da utilização desta tecnologia, a demanda por métodos mais eficientes de administração desse tipo de recurso também cresce.
Atualmente as ferramentas disponíveis para gerenciamento de sistemas não possuem suporte adequado para gerenciar sistemas virtuais eficientemente, pois não consideram fatores pertinentes aos recursos virtualizados, tais como processador, memória, disco e rede.
O desenvolvimento de uma MIB genérica proporciona uma ferramenta eficaz para o gerenciamento de máquinas virtuais, que agrega de entre outras vantagens uma maior flexibilidade à atividade de gerência, bem como a capacidade de interoperar o gerenciamento de diferentes sistemas virtuais.
Este trabalho apresenta uma MIB genérica utilizada para o gerenciamento de máquinas virtuais e monitores de máquinas virtuais.
Esta MIB virtual (vMIB) foi criada com base nos padrões definidos por a SMI (Structure Management Information) e no modelo de referência da MIB-II, a vMIB foi validada utilizando o protocolo SNMP (Simple Network Management Protocol).
Palavras-chave: Virtualização, Gerência, Máquinas Virtuais.
O conceito de virtualização não é novo e tem princípios na década de 60 com o VM/ 370 da IBM que já utilizava tal técnica.
Atualmente ela é empregada em diversas áreas da computação, as quais vão desde serviços de suporte que utilizam vários sistemas até a área de alto desempenho.
Isto ocorre porque a virtualização melhora a escalabilidade do sistema de maneira geral.
Essa tendência tem fomentado o interesse de grandes empresas no desenvolvimento de tecnologias específicas para implementação de sistemas virtuais, de entre as quais podemos citar os esforços da Intel para desenvolver e lançar no mercado uma família de processadores adequados a virtualização.
A virtualização permite que um único computador (host) hospede um ou mais ambientes, proporcionando vantagens como melhor utilização dos recursos, consolidação dos servidores, segurança (através do isolamento entre diferentes VM's), tolerância a falhas e balanceamento de carga.
Uma das técnicas utilizadas para implementar virtualização é através da paravirtualização, onde a virtualização da plataforma de hardware é implementada através da inserção de um módulo de programa ao Kernel do sistema operacional que roda sobre o virtualizador.
Com o acelerado desenvolvimento de sistemas computacionais, a demanda por melhores métodos para administrar- los também aumenta significamente.
A utilização e o amadurecimento da tecnologia de virtualização conseqüentemente também são afetados por tal tendência, visto que as peculiaridades pertinentes ao sistema virtualizado também devem ser consideradas quando gerenciamos tal tipo de ambiente.
Para tanto, a utilização de protocolos e ferramentas de gerência de recursos torna- se um dispositivo importante para um melhor aproveitamento das máquinas virtuais.
Quando trabalhamos com máquinas virtuais, devemos considerar fatores pertinentes a cada máquina virtual e ao sistema real em o qual a máquina está alocada como, por exemplo, o total de memória disponível e a quantidade de memória utilizada por cada máquina virtual.
Tais fatores devem ser considerados também no momento em que é realizado controle e gerência do sistema, para tanto é necessária a utilização de recursos que tenham a capacidade de reconhecer dentro de o escopo da monitoração o que se refere a recurso virtual e o que se refere a recurso real do sistema.
Uma base de informações serve como referência na definição dos recursos que são gerenciados, ou seja, uma base de informações utiliza- se desses objetos como referência aos componentes do sistema gerenciado, facilitando o acesso a informações e provendo desempenho e flexibilidade à tarefa de administrar sistemas computacionais, para tanto sua arquitetura de maneira geral deve ser bem elaborada de forma que os objetos que a compõem possam estar organizados de modo padronizado e simples.
Atualmente a utilização de sistemas virtuais está novamente em crescimento devido a a ampla quantidade de aplicações em tecnologia.
Porém, de modo a otimizar a utilização da tecnologia e prover um gerenciamento dinâmico e eficaz desses recursos necessita- se de ferramentas as quais realizem o gerenciamento dos recursos que compõem os sistemas virtuais, para tanto se faz necessária a criação de dispositivos que realizem tal tarefa.
A utilização de protocolos de gerência de recursos e suas bases de informações definem atualmente padrões de gerenciamento dos mais variados tipos de recursos computacionais, porém ainda não encontramos opções de uma solução portável e dinâmica para gerenciamento dos diversos tipos de sistemas que implementam virtualização.
O intuito desse trabalho é a elaboração de um modelo de base de informações que visa a trabalhar com máquinas virtuais, para tanto o estudo de tais bases de informações agregado ao conhecimento prévio sobre virtualização e máquinas virtuais torna- se necessário.
Devemos entender sistemas computacionais como conjuntos de níveis de abstração, em os quais notadamente o hardware é o nível mais baixo e o núcleo do sistema é a camada responsável por o gerenciamento do sistema.
Uma máquina virtual simula uma réplica do hardware da máquina real e os processos têm a ilusão de que possuem dispositivos físicos disponíveis somente para ele.
Analisando de outra maneira, seria como se fosse instalado um sistema operacional e sobre ele se teria suporte para operar qualquer outro sistema operacional, podendo ser desde qualquer distribuição Linux até a família Windows.
O conceito de máquinas virtuais não é novo.
Ele foi originalmente desenvolvido para ser utilizado no VM/ 370 da IBM no final da década de 60.
Pode- se definir uma máquina virtual (VM) como uma máquina abstrata, que permite que a máquina real seja particionada de tal modo que diversos sistemas operacionais sejam executados ao mesmo tempo.
A máquina virtual funciona através de um monitor que executa a função de gerenciador dos ambientes virtuais que estão em execução.
Esse monitor de máquinas virtuais cria várias máquinas virtuais que trabalham sem que nenhuma interfira na outra e também não tenham influência no sistema base em o qual à máquina esta alocada.
Portanto, cada máquina virtual opera com um sistema operacional independente, com acesso a dispositivos e ferramentas inerentes a um sistema normal.
Atualmente de entre os sistemas que trabalham com máquinas virtuais podemos destacar os sistemas Xen, VMware, OpenVZ e o User- Mode Linux (UML).
O Xen é um paravirtualizador livre desenvolvido originalmente para a arquitetura Ia-32, que atualmente suporta também x 86/64, Itanium e PowerPC.
Por se tratar de um paravirtualizador, os sistemas operacionais executando nas VMs devem ser adaptados para serem compatíveis com o VMM.
No entanto, recentes versões do Xen suportam, por exemplo, o Windows XP sem modificações se for utilizado, sob o virtualizador, um processador com suporte a virtualização, como por exemplo, os processadores &quot;Pacifica «da AMD ou os processadores Intel com tecnologia &quot;VT».
O Xen VMM coordena a execução de uma ou mais VMs.
As máquinas virtuais no Xen (também conhecidas como domínios) podem ser de dois tipos.
O primeiro contém máquinas virtuais que executam aplicações de usuários e são conhecidos como DomU ­ de unprivileged.
Essas máquinas não têm acesso direto ao hardware real da máquina.
O segundo é responsável por a gerência das demais VMs e por o acesso ao hardware da máquina.
Apenas um Dom0 executa num host.
Também é possível, através do Dom0, monitorar o consumo de recursos de cada uma das VMs.
Diferentemente do Xen, o VMware é um software que cria máquinas virtuais as quais simulam um computador completo, onde é permitindo instalar qualquer sistema operacional.
Utilizando o VMware é possível executar várias máquinas virtuais simultaneamente e executar lado a lado várias versões do Linux ou do Windows.
O VMware utiliza- se do conceito de emulação para colocar em funcionamento suas máquinas virtuais.
O emulador é um software que transcreve instruções de um processador alvo para o processador em o qual ele está rodando, ele também deve realizar a simulação dos circuitos integrados do hardware num software.
O VMware organiza as máquinas virtuais hospedadas no formato de arquivos que ficam hospedados no sistema VMware.
Cada máquina virtual poderá possuir configurações distintas para seu sistema instalado, como disponibilidade de memória, quantidade de processadores virtuais, entre outras.
Uma terceira alternativa para implementar a virtualização é o sistema OpenVZ, semelhantemente ao Xen o OpenVZ implementa máquinas virtuais utilizando o conceito de paravirtualização utilizando Linux, o OpenVZ trabalha criando ambientes virtuais isolados que funcionam como máquinas convencionais, porém sobre a mesma estrutura de hardware.
Um protocolo de gerência de recursos tem o objetivo de monitorar e controlar sistemas computacionais.
Com o acelerado desenvolvimento de sistemas computacionais, a demanda por melhores métodos para administrar- los também aumenta significamente.
A utilização e o amadurecimento da tecnologia de virtualização conseqüentemente também são diretamente afetados por tal tendência, visto que as peculiaridades pertinentes ao sistema virtualizado também devem ser consideradas quando gerenciamos tal ambiente.
Visando a um melhor aproveitamento dos recursos reais, a utilização de protocolos de gerência torna- se uma ferramenta importante.
Atualmente de entre os protocolos de gerência existentes podemos destacar dois protocolos, o Simple Network Management Protocol (SNMP) e o Web--Based Enterprise Manageament (WBEM).
Porém, cabe ressaltar que mesmo tratando- se de protocolos largamente utilizados os mesmos não possuem bases de informações adequadas para trabalhar com máquinas virtuais independentemente do sistema que implementa a virtualização.
O SNMP (Simple Network Management Protocol) é um protocolo originariamente desenvolvido para gerência de redes de computadores.
Porém, por sua flexibilidade pode ser utilizado para outros tipos de aplicações de gerência.
A estrutura do protocolo é baseada em agentes e gerentes, os agentes estão espalhados numa rede baseada na pilha de protocolos TCP/ IP e os dados são obtidos através de requisições de um gerente a um ou mais agentes utilizando os serviços do protocolo UDP (User Datagram Protocol) para enviar e receber suas mensagens através da rede.
As variáveis que podem ser requisitadas fazem parte de uma MIB (Manageament Information Base).
A MIB consiste no conjunto dos objetos gerenciados, que visa a armazenar todas as informações pertinentes ao sistema gerenciado.
Diferentemente do SNMP, o WBEM (Web--Based Enterprise Management) é na realidade mais do que um simples protocolo.
Ele é uma arquitetura de gerenciamento elaborada por a DTMF (Distributed Management Task Force).
Visando a representar a informação, o padrão WBEM utiliza o CIM (Common Information Model).
A tarefa de transporte no padrão WBEM é realizada através do CIM-XML Encoding com o intuito de codificar os dados CIM em dados XML.
Posteriormente, os dados são de fato transportados utilizando o protocolo Http (HyperText Transfer Protocol),,.
Uma base de informações é um modelo abstrato de referência para o gerenciamento de objetos reais tais como memória, CPU, dispositivos de rede, etc..
Para melhor explicar seu funcionamento utilizaremos como exemplo a arquitetura da MIBII, onde os objetos estão disponibilizados na base conforme a Figura 1.
Nota- se que o caminho para construção de cada objeto segue um padrão hierárquico e um objeto é referenciado através de uma seqüência de números separados por pontos que indicam o caminho seguido para construção do mesmo.
Tal caminho servirá como referência indicando a localização física do recurso gerenciado.
Como por exemplo, podemos referenciar o objeto 1.3.6.1.2.1.11, que conforme o padrão de nomenclatura da MIB-II mostra abstratamente a descrição do objeto que referência o protocolo SNMP no sistema gerenciado.
Pode- se destacar também que tal tipo de metodologia para construção de objetos provê recursos para se gerenciar ambientes heterogêneos, visto que o modelo hierárquico é flexível podendo abranger diversos sistemas, dispositivos, protocolos, etc, o que acrescenta interoperabilidade entre os sistemas gerenciados.
Tornando- se assim uma ferramenta eficiente, independentemente de plataforma.
A utilização deste tipo de tecnologia de gerenciamento é largamente difundida e utilizada para gerência de redes, porém por possuir uma arquitetura flexível pode ser empregada para o gerenciamento de qualquer recurso computacional.
Sistemas Virtuais são sistemas que possibilitam a utilização de dois ou mais sistemas operacionais sobre uma mesma estrutura de hardware.
Atualmente destacam- se em dois grupos dispostos de acordo com a forma de implementação, virtualização e paravirtualização.
A virtualização é o processo de executar vários sistemas operacionais num único equipamento.
Uma máquina virtual é um ambiente operacional completo que se comporta como se fosse um computador independente.
Com a virtualização, por exemplo, um servidor pode manter vários sistemas operacionais em uso em máquinas virtuais distintas.
Isso acarreta em custo derivado do alto consumo de processamento, devido a o fato de possuir uma estrutura de hardware única utilizada por o virtualizador.
Cada requisição de hardware feita por o sistema hospedeiro é entregue ao virtualizador, que se encarrega de fazer a transação com o hardware real.
Entre os mais conhecidos encontram- se o Qemu e VMware.
Em esses softwares emuladores de hardware, o sistema operacional é instalado num arquivo, ou inicializado a partir de um arquivo.
Outra técnica utilizada para implementar a virtualização é a paravirtualização, em a qual o software trabalha mais próximo de o hardware real, pois um sistema operacional usando um kernel alterado gerência sistemas paravirtualizados, operando sobre kernels alocado sobre as máquinas virtuais criadas.
Com isso, ganha- se em desempenho, pois não há uma emulação completa desde a BIOS (Basic Input/ Output System), possibilitando a execução de muitos sistemas operacionais simultaneamente.
Atualmente utilizando- se a paravirtualização destacam- se os sistemas Xen e OpenVZ.
Em as seções seguintes, abordaremos especificamente os fundamentos dos sistemas Xen, VMware e OpenVZ, devido estes serem importantes no desenvolvimento desse trabalho.
O Xen é um paravirtualizador, Virtual Machine Monitor (VMM) ou Hypervisor, desenvolvido por a Universidade de Cambridge inicialmente para a arquitetura x86.
O Xen tem a capacidade de gerenciar várias Virtual Machines alocadas sobre uma mesma estrutura física.
E possui como principais características:·
Migração de máquinas virtuais entre hosts;·
Atualmente possui suporte para x 86/32 e x 86/64;·
Bom suporte de hardware;·
Suporte para tecnologia VT-x (Intel Virtualization Technology).
O Xen gerência e organiza as requisições feitas por as máquinas virtuais, validando- as, limitando- se apenas a repassar as instruções, sem interpretar- las como faria um emulador, por exemplo.
Particularmente no Xen, o sistema que vai ser executado dentro de a máquina virtual, necessita ser modificado, assim como o sistema que funcionará no hospedeiro, ou seja, torna- se necessária também uma versão específica do sistema operacional para que se possa alterar- lo, instalando um patch no kernel antes de executar- lo.
O Xen prevê também o cumprimento de algumas premissas que foram analisadas para o seu desenvolvimento, destas podemos destacar o suporte a aplicações binárias sem a necessidade de compilação, a utilização do conceito de paravirtualização com o objetivo de ganho de desempenho, o isolamento dos recursos e a tentativa de manter o desempenho das máquinas virtuais hospedadas semelhante ao das máquinas reais.
O gerenciamento do sistema é realizado por o chamado dom0 ou hypervisor, que funciona como um supervisor das outras máquinas virtuais (domU) em execução, tal supervisor trabalha também realizando a interface entre os dispositivos de hardware e os sistemas operacionais instalados no host.
Em um host podemos ter apenas um dom0.
Analisando a Figura 2, nota- se na base da estrutura o nível de hardware interagindo com o Xen (Sistema Operacional alterado), dentro de o dom0 destaca- se o Xenstore, área destinada a armazenar os arquivos pertinentes ao Xen e o Xend, responsável por o gerenciamento das máquinas virtuais, a direita observa- se as máquinas virtuais criadas.
Em a concepção do Xen foi necessário também analisar alguns fatores complexos como gerenciamento de memória, de CPU, dispositivos de entrada e saída e da rede de comunicação.
Os detalhes da interface são:·
Gerenciamento de Memória:
A virtualização da memória representa uma grande dificuldade para o conceito de paravirtualização aplicado a uma arquitetura, pois os mecanismos requerem que o hypervisor efetue a alocação das áreas de memória a serem utilizadas por cada um dos sistemas hospedados, para tanto o sistema Xen realiza as atualizações das tabelas de memória, deixando o acesso somente para leitura, visando a melhoria de desempenho.
O sistema operacional hospedado visualiza a sua porção de memória contínua mesmo que na pratica isto não aconteça.
A cada domínio criado é alocado um tamanho de memória dentro de um limite máximo estipulado para cada domínio (conceito de baloon), se for necessário o sistema operacional hospedado pode requisitar um aumento de capacidade (aumento de baloon).
Caso seja necessária a utilização de swap, cada sistema operacional hospedado realiza o seu gerenciamento sobre a proteção do hypervisor.·
Gerenciamento de CPU:
A arquitetura x86 implementa camadas de privilégio genericamente descritas em camadas, enumeradas de 0 a 3, sendo que a camada 0 é a mais privilegiada e a 3 a menos.
O Xen utilizando- se do hypervisor desloca a execução do sistema operacional hospedado para a camada 1, mantendo- se na camada 0 sob seu comando, com a finalidade de manter o controle das instruções privilegiadas, gerenciando assim a alocação, cabe ressaltar também que normalmente as aplicações de usuário rodam na camada 3, ou seja, a menos privilegiada.·
Dispositivos de Entrada e Saída: O Xen implementa um conjunto de abstrações simples para os dispositivos, permitindo projetar uma interface que seja eficiente e satisfatória quanto a a proteção e ao isolamento.
O acesso ao disco, por exemplo, é realizado através de uma destas abstrações chamadas de VBD (Virtual Block Devices) em o qual existe uma para cada dispositivo físico, sendo controlada por o hypervisor.·
Dispositivos de rede:
Em a abstração de rede existe o VFR (Virtual Firewall Router) que coordena as chamadas VIF (Virtual Network Interface), que seriam as placas de rede de cada sistema operacional hospedado.
Observando o Xen podemos concluir que é um sistema virtual que provê funcionalidade, performance e portabilidade no compartilhamento de sistemas operacionais comuns a um mesmo hardware.
O VMware é um software que cria máquinas virtuais que simulam um PC completo, em o qual é permitido instalar praticamente qualquer sistema operacional.
Utilizando o VMware é possível executar várias máquinas virtuais simultaneamente e rodar lado a lado várias versões do Linux ou do Windows, por exemplo.
Contrariamente ao Xen, o VMware utiliza- se do conceito de emulação para colocar em funcionamento suas máquinas virtuais.
O VMware organiza as máquinas virtuais hospedadas no formato de arquivos que ficam hospedados no sistema VMware.
Cada máquina virtual poderá possuir configurações distintas para seu sistema instalado, como disponibilidade de memória, quantidade de processadores virtuais, entre outras.
Sendo que essas configurações podem variar de máquina virtual para máquina virtual, ou seja, podemos ter um sistema Windows que possui 2 processadores virtuais e 512 Mb e ao mesmo tempo uma distribuição Linux que possui 1 processador virtual e 256 Mb, por exemplo.
Analisando o VMware observa- se que no nível de funcionamento ele trata cada máquina virtual como um arquivo, com isto, pode- se até mesmo levar cópias de máquinas virtuais de um micro para outro, um fator que merece destaque também é a possibilidade de comunicação entre as máquinas virtuais como se estivessem numa rede tradicional.
Pode- se notar na Figura 3 o funcionamento do VMware, onde observamos a aplicação do conceito de emulação para criar sistemas operacionais virtuais.
O OpenVZ é uma solução para paravirtualização utilizando Linux, que trabalha criando ambientes virtuais isolados que funcionam como máquinas convencionais, porém sobre a mesma estrutura de hardware.
O OpenVZ cria máquinas virtuais, tornando- as sistemas independentes.
Esses ambientes virtuais são conhecidos como VE (Virtual Environment) ou VPS (Virtual Private Server).
Em o OpenVZ cada VE é tratada independentemente das outras podendo, portanto, possuir hostname, acessos de root, endereços de rede e demais funcionalidades e características de um sistema não virtualizado.
Analisando do ponto de vista das aplicações cada VE é um sistema independente.
Esta independência é fornecida por a camada de virtualização do Kernel do host.
Podemos notar também que somente uma parte dos recursos de processamento do host é utilizada por a camada de virtualização do OpenVZ.
Outras características da camada de virtualização do OpenVZ e que podemos destacar são:·
Um usuário pode escolher qualquer configuração de arquivos e instalar qualquer programa adicional;·
Uma VE é isolada das demais;·
Processos que pertencem a uma VE são escalonados para execução em qualquer uma das CPUs disponíveis.
Conseqüentemente VEs não são limitadas somente a uma CPU e podem utilizar toda a capacidade de processamento disponível no momento.
Com relação com a virtualização da rede no OpenVZ podemos destacar:·
Cada VE tem seu próprio endereço IP;
Porém endereços múltiplos de IP por VE são permitidos;·
O tráfego de rede é isolado das outras VEs;·
As manipulações da tabela de roteamento e as características avançadas do roteamento são suportadas para cada VE individualmente.
Analisando essas informações a respeito de o OpenVZ podemos concluir que é um sistema virtual que trabalha com o conceito de paravirtualização e prima principalmente por o desempenho.
Um protocolo de gerenciamento deve prover monitoramento e controle de recursos.
Atualmente o processo de gerência de recursos computacionais é divido em 5 grandes áreas conforme o padrão de gerenciamento de recursos OSI (Open Systems Interconnection).
Cada uma destas áreas procura contemplar requisitos diferentes de gerenciamento e são definidos conforme o gerenciamento de falhas, gerenciamento de contabilidade, gerenciamento de configuração, gerenciamento de desempenho e gerenciamento de segurança.
Atualmente podemos citar dois protocolos de gerência que norteados por essas cinco áreas funcionais destacam- se no gerenciamento de recursos computacionais.
O Simple Network Management Protocol (SNMP) e o Web Based Enterprise Management (WBEM).
O protocolo SNMP foi originalmente desenvolvido para o gerenciamento de redes de computadores, e possui a capacidade de gerenciamento de servidores, roteadores, pontes e demais componentes de uma rede de computadores, onde a tarefa de gerência é realizada, na maioria das vezes, de forma centralizada em alguma estação da rede.
Em se tratando do gerenciamento de rede o protocolo de gerência é uma ferramenta importante para auditoria e gerenciamento dos recursos.
O protocolo SNMP é utilizado principalmente para configurar dispositivos remotos, monitorar o desempenho da rede, detectar os acessos inadequados ou falhas, da rede, realizar auditoria sobre o uso da rede, por exemplo.
Entretanto, devido a sua flexibilidade também pode ser utilizado para outros tipos de aplicações de gerência.
Ressaltamos também que devido a sua estrutura distribuída e flexível o protocolo SNMP pode ser utilizado para gerência dos mais variados tipos de recursos, incluindo recursos disponíveis em sistemas virtuais, por exemplo.
A estrutura do protocolo SNMP é distribuída e baseada na utilização de gerentes, agentes e numa base de informações que no caso de o SNMP é chamada de Management Information Base (MIB).
O funcionamento descrito na Figura 4 apresenta dois dispositivos de uma rede.
O primeiro representa um Sistema Gerente que se utiliza de uma MIB como referência e comunica- se com um agente através do protocolo SNMP.
O segundo mostra a estrutura de um Sistema Gerenciado, onde podemos observar a utilização da MIB como referência para o agente que acessa informações pertinentes aos recursos dispostos por o sistema, as informações coletadas por o agente são repassadas ao gerente utilizando o protocolo SNMP.
O protocolo SNMP destaca- se por a simplicidade de funcionamento, o que se caracteriza por o reduzido número de operações disponíveis, sendo que todas as operações suportadas por o SNMP são relacionadas aos objetos de gerência definidos na estrutura da MIB e restringe- se a operações de leitura e escrita.
As principais operações disponíveis são as seguintes:·
Get: Operação utilizada para a leitura do valor de um objeto, tarefa que caracteriza monitoração;·
Set: Operação utilizada para a escrita de um valor num objeto, tarefa que caracteriza controle;·
Get-Next: Operação utilizada para a leitura do valor do próximo objeto;·
Trap: Operação utilizada por o agente para comunicar eventos especiais, tais como problemas de funcionamento do protocolo, por exemplo.
Como observamos o protocolo SNMP implementa gerência de recursos utilizando um número limitado de operações, o que simplifica o processo de gerência, porém acarreta limitações ao protocolo.
É importante ressaltar também que o termo gerência de recursos está relacionado à simbiose entre as operações de monitoração e controle de objetos, sendo portanto, aplicada em ambientes gerenciados onde a MIB proporciona operações de leitura e escrita.
Então, uma MIB que proporciona somente operações de leitura caracteriza somente a funcionalidade de monitoração.
Em o princípio, o gerenciamento de recursos estava diretamente ligado ao gerenciamento de redes, pois as redes de computadores foram o foco inicial da área de gerenciamento de recursos computacionais, pois o fato das redes tornarem- se cada vez maiores, possuírem grande heterogeneidade de recursos, tornarem- se distribuídas, com maior número de protocolos, etc..
Devido a esse cenário o protocolo SNMP destaca- se principalmente por ser pioneiro no gerenciamento de redes, e devido a sua facilidade de implantação, utilização, flexibilidade e com naturalidade assumiu o papel de protocolo de gerenciamento dos variados tipos de recursos computacionais.
Uma base de informações é um modelo abstrato de referência para o gerenciamento de objetos reais dentro de um sistema computacional, tais como:
Processador, memória, disco e rede.
Atualmente os modelos de protocolos que implementam gerência de rede utilizam bases de informações, de entre eles podemos citar os padrões SNMP que utiliza como base de informações a MIB (Management Information Base) e WBEM que utiliza a CIM (Common Information Model) explicados anteriormente, portanto uma base de informações bem definida é de suma importância para o gerenciamento adequado de sistemas computacionais.
Com esse trabalho foi concebido utilizando o padrão SNMP será dada ênfase neste capítulo ao conceito de bases de informação baseadas no modelo MIB.
A criação de uma base de informações segue regras baseadas nos padrões e normas definidas na SMI (Structure Management Information).
A estrutura de informações SMI é um grupo de documentos que define:·
Identificação de objetos e de grupos de objetos;·
Sintaxe;· Tipos de dados reservados a classificar ou quantificar objetos;·
Codificação da informação que será transmitida.
Tais informações descritas são implementadas no desenvolvimento de uma MIB, sendo que atualmente um padrão de MIB que serve como referência para o desenvolvimento das demais é a MIB-II.
A MIB-II é o aperfeiçoamento natural de sua versão anterior a MIBI.
A seção seguinte descreve a MIB-II como referência para o desenvolvimento da vMIB (Virtual MIB), que é uma MIB criada para gerenciamento de recursos em máquinas virtuais, foco desse trabalho, bem como iremos descrever algumas MIBs desenvolvidas para o Xen e para o VMware a seguir.
O padrão SMI define um objeto a partir de uma seqüência hierárquica de valores, como por exemplo, 1.3.6.1.2.1 que representa a MIB-II.
Em a Figura 5 podemos observar a MIB-II descrita no formato de árvore, o que facilita a visualização.
Como forma de padronizar objetos, a SMI também realizou a classificação dos tipos de objetos que compõem a MIB.
Para tanto, quando se cria uma MIB os seguintes campos devem ser preenchidos:
Object Identifier e Object Type, onde o primeiro vai identificar o ramo da árvore ao qual o objeto pertence e o segundo vai definir as características do objeto, sendo composto por mais quatro campos de preenchimento obrigatório.
Os campos que definem as características de cada objeto são:
Syntax (Sintaxe), Access (Acesso), Status e Description (Descrição), onde cada um de eles pode assumir os seguintes valores:·
Syntax: Define o tipo do objeto que pode ser, por exemplo:
­ Integer:
Um valor inteiro;·
Access: Define o tipo de acesso ao objeto que pode ser, por exemplo:
­ Read-Only (RO):
Permissão de somente leitura;·
Status: Define o status do objeto que pode ser, por exemplo:
­ Current:
Estado atual do objeto.·
Description: Este campo é reservado para que se descreva o objeto gerenciado.
A seqüência deste capítulo descreve em 3 seções respectivamente a MIB-II, uma MIB para o sistema Xen e uma MIB para o sistema VMware.
A MIB-II é atualmente um padrão de referência para o desenvolvimento de MIBs.
As MIBs desenvolvidas para gerenciamento de máquinas virtuais Xen e VMware apresentam o atual estado da arte para o gerenciamento de máquinas virtuais.
Como falamos anteriormente, a MIB-II é uma evolução da MIB-I e acrescenta novos objetos e grupos de objetos a gerência utilizando o padrão SNMP.
Hierarquicamente podemos observar sua disposição como objeto na Figura 5, sendo que de modo a exemplificar a sua concepção descreveremos os objetos que compõem a sub-árvore de objetos da MIB-II.
Esta estrutura básica da MIB-II pode ser vista na Figura 6.
Em a Figura 6, podemos observar os objetos que compõem a MIB-II sendo que podemos decrever- los da seguinte forma,,,:·
System: Informações sobre o sistema.·
Interface: Informações sobre cada inteface das subredes do sistema.·
At (Address Translation):
Este ramo está em desuso, porém realiza o mapeamento da tabela de endereçamento internet para subrede e vice-versa.·
ICMP (Internet Control Message Protocol):
Informações relacionadas com o protocolo· TCP (Transmission Control Protocol):
Informações relacionadas com o protocolo TCP.·
UDP (User Datagram Protocol):
Informações relacionadas com o protocolo UDP.·
EGP (External Gateway Protocol):
Informações relacionadas com o protocolo EGP.·
Dot3: Informações dos esquemas de transmissão e acesso de protocolos sobre cada interface do sistema.·
SNMP: Informações sobre o protocolo SNMP.
Em as seções abaixo, descreveremos as estruturas e funcionalidades de cada uma das camadas que compõem a MIB-II.
O grupo interfaces provê informações gerais sobre as interfaces físicas do objeto gerenciado, sendo que para melhor explicarmos tal grupo descreveremos sua estrutura no formato de árvore e apresentaremos as funcionalidades de seus principais objetos.
Os principais objetos do grupo interfaces podem ser observados na Figura 8.
A estrutura do grupo interfaces apresenta em seu primeiro nível dois itens:
Número (IfNumber), vai informar o número de interfaces de rede que o sistema possui sem se importar com o seu estado atual, e uma tabela (IfTable) recebendo informações de cada uma das intefaces de rede que o sistema possui.
Portanto, utilizando a tabela do grupo interfaces para cada interface de rede adicionada uma estrutura hierárquica é criada para monitorar- la, tornando- se mais um objeto a ser gerenciado automaticamente.
Observando a Figura 8, podemos notar que de modo a resumir os objetos da tabela, o primeiro objeto da tabela) não é apresentado na figura, porém destina- se como, qualquer índice da tabela, a definir o valor único e de referência para os valores seguintes da mesma.
Em a Figura 8, podemos observar que os objetos de identificação 11 a 15 e 16 a 21 foram resumidos em inbound Traffic e outbond Traffic, tal ação também visa a reduzir a quantidade de objetos apresentados na Figura 8, visto que o intuito dessa seção é esclarecer como foi concebida a MIB-II e não explicar detalhadamente a mesma.
Os objetos do 11 ao 15 representam na ordem IfUnUcastPkts, IfInNUcastPkts, IfInDiscards, IfInErrorse IfInUnknownProtos que representam informações de objetos os quais estão calculando valores relacionados com o tráfego de entrada de dados de cada interface.
Os objetos relacionados de 16 a 21 representam na ordem IfOutOctets, IfOutUcastPkts, IfOutNUcastPkts, ifOutDiscards, IfOutErrors e IfOutQLen que representam informações de objetos calculando valores relacionados com o tráfego de saída de dados de cada interface.
Os demais objetos componentes do grupo interfaces podem ser analisados mais sucintamente na Tabela 2.
O grupo At (Address Translation) consiste de uma simples tabela, onde cada uma de suas e não ser utilizado como referência no decorrer de o trabalho, o mesmo não será abordado.
O grupo IP (Internet Protocol) contém informações sobre a implementação e operação do protocolo IP, desde a utilização do protocolo em sistemas finais (hosts) até o seu impacto em sistemas intermediários (routers).
O grupo IP contém alguns contadores básicos de tráfego de entrada e saída de dados do protocolo IP.
O IP é um dos grupos mais complexos da estrutura da MIB-II, principalmente por ser um grupo que contém vários objetos, de entre os quais podemos destacar a utilização de quatro tabelas IpAddrTable, IpRouteTable, IpNetToMediaTable e IpForward.
Sendo que a tabela IpAddrTable contém informações sobre o endereçamento IP do sistema, a tabela IpRouteTable contém informações sobre o roteamento, o objeto IpNetToMediaTable é uma tabela utilizada para realizar o mapeamento de endereços IP com endereços MAC e o objeto IpForward é uma tabela nova proposta para substituir a IpRouteTable e possui a mesma funcionalidade da anterior, porém possui mais objetos, sendo portanto mais completa.
O grupo IP possui ainda diversos objetos com as mais diferentes funcionalidades, sendo que os principais estão descritos na Figura 9 e podem ser melhor analisados na Tabela 3.
O grupo ICMP (Internet Control Message Protocol) contém informações sobre a implementação e operação do protocolo ICMP.
Basicamente o grupo consiste unicamente de counters de vários tipos de mensagens ICMP enviadas e recebidas, como podemos observar na figura 10.
Grupo ICMP.
O grupo TCP (Transmission Control Protocol) contém informações sobre a implementação e operação do protocolo TCP.
Os objetos que compõem o grupo estão descritos na Figura 11 e podemos analisar melhor as suas funcionalidades na Tabela 4.
O grupo UDP (User Datagram Protocol) contém informações sobre a implementação e operação do protocolo UDP.
Os objetos que compõem o grupo estão descritos na Figura 12 e podemos analisar melhor as suas funcionalidades na Tabela 5.
Um objeto que pode ser destacado na estrutura do grupo UDP é o udpTable, tal tabela contém informações sobre os pontos finais do datagrama UPD, tais como uma aplicação local que recebe o conteúdo dos datagramas.
O grupo EGP (External Gateway Protocol) contém informações sobre a implementação e operação do protocolo EGP.
Incluindo informações sobre as mensagens EGP enviadas e recebidas.
Para melhor explicarmos o grupo, destacamos os principais objetos na Figura 13 e podemos analisar sucintamente suas funcionalidades na Tabela 6.
Os protocolos Dot3 e SNMP, terminam por compor o 1o nível da estrutura da MIB-II, porém por não serem significantes dentro de o contexto do trabalho, não serão apresentados.
O Grupo Host Resources MIB pertence a MIB-II e está definido conforme a estrutura hierárquica 1.3.6.1.2.1.25.
Este grupo define informações a respeito de sistemas que funcionam como hospedeiros de máquinas virtuais.
Os objetos que compõem o grupo estão descritos na Figura 14 e podemos analisar melhor as suas funcionalidades na Tabela 7.
Grupo Host Resources MIB.
Os primeiros três objetos que compõem o grupo host definem informações sobre os recursos disponíveis, e os demais apresentam informações sobre características do software.
Por serem mais importantes no desenvolvimento do trabalho, os três primeiros objetos serão descritos a seguir.
O grupo hrSystem é composto por objetos que definem informações a respeito de o sistema que hospeda máquinas virtuais.
Os objetos que compõem o grupo estão descritos na Figura 15 e podemos analisar melhor as suas funcionalidades na Tabela 8.
Tabela 8 ­ Tabela de descrição dos objetos do grupo hrSystem.
Objeto hrSystemUptime hrSystemDate hrSystemInitialLoadDevice hrSystemInitialLoadParameters hrSystemNumUsers hrSystemProcesses Integer Gauge Gauge Integer Acesso Descrição Tempo contado (reinicialização).
Data e Tempo.
Configuração inicial.
Parâmetros da Conf inicial.
Número de sessões de usuário.
Processos Carregados. Número de processos suportados.
O grupo hrDevice é composto por objetos que definem informações a respeito de dispositivos compondo os recursos do sistema que hospeda máquinas virtuais.
Os objetos que compõem o grupo são basicamente tabelas as quais descrevem informações pertinentes a cada um dos recursos disponíveis e estão descritos na Figura 17.
Esta seção visa a apresentar uma MIB para o gerenciamento de máquinas virtuais Xen de modo a apresentar o estado atual da tecnologia de gerenciamento de sistemas virtuais.
Uma MIB criada para gerenciar máquinas virtuais Xen foi desenvolvida por um grupo de pesquisa da Universidade de Braunschweig, Alemanha.
Essa MIB descreve máquinas virtuais Xen e os dispositivos físicos aos quais o sistema Xen está alocado, habilitando assim o monitoramento dos hosts e das máquinas virtuais.
A definição dessa MIB é simples e provê monitoração efetiva de objetos.
Cabe ressaltar, porém, que utilizamos o termo monitoração para nos referimos à Xen MIB, pois a mesma possui apenas objetos read-only, permitindo apenas a opção de leitura dos objetos.
Logo, podemos afirmar que a mesma não oferece opção de escrita (read-- write), não sendo portanto cabível ao termo gerenciamento.
A Figura 18 descreve o 1o nível da estrutura da Xen MIB, sendo que o mesmo é composto por 3 objetos, sendo que o primeiro (xenObjects) define os recursos que são monitorados por a MIB e os demais definem propriedades da MIB.
Explicaremos sucintamente o primeiro grupo dando ênfase para os objetos que compõe a estrutura.
A Figura 19 mostra a estrutura do 1o nível de objetos que compõe o grupo xenObjects, onde podemos analisar a divisão dos recursos monitorados em quatros grandes grupos xenHost, xenDomainTable, xenVcpuTable e xenNetworkTable dispostos de acordo como a funcionalidade de cada objeto.
A Tabela 10 descreve os objetos.
O grupo xenHost é composto por objetos os quais definem as características gerais do host hospedando as máquinas virtuais.
Especificamente através de ele podemos obter informações a respeito de a versão do Xen que suporta as máquinas virtuais e sobre a quantidade de CPUs virtuais que compõem o sistema, por exemplo.
O grupo xenHost pode ser analisado no formato de árvore através da Figura 20, e a descrição dos objetos que compõe este grupo pode ser observada na Tabela 11.
Tabela 12 ­ Tabela de descrição dos objetos do grupo xenDomainTable.
Objeto xenDomainEntry xenDomainName xenDomainState xenDomainMemKBytes xenDomainMaxMemKBytes Sintaxe xenDomainEntry xenDomainState Unsigned32 Acesso Descrição Entrada da tabela.
Nome do domínio xen.
Estado do domínio xen.
Memória ocupada.
Memória disponível.
O grupo xenNetworkTable é uma tabela composta por objetos que definem as características da rede de comunicação das máquinas virtuais.
Através de ele podemos obter informações gerais a respeito de as interfaces de rede, tais como quantidade de kbytes e pacotes recebidos ou enviados, por exemplo.
O grupo xenNetworkTable pode ser analisado no formato de árvore através da Figura 23, e a descrição dos objetos que compõe este grupo pode ser observada na Tabela Esta MIB desenvolvida para o sistema virtual Xen proporciona monitoração em objetos que compõem o sistema Xen, sendo que de modo geral é dividida em grupos definindo informações gerais sobre o sistema e informações mais específicas sobre os domínios, CPUs e dispositivos de rede.
Esta seção apresenta um modelo de MIB para o gerenciamento de máquinas virtuais VMware com o intuito de analisarmos uma base de informações desenvolvida para tal sistema virtual.
A VMWARE-ROOT-MIB foi desenvolvida com a finalidade de monitorar máquinas virtuais hospedadas sobre o sistema VMware ESX.
Essa MIB descreve de maneira hierárquica e bem definida os objetos reais e virtuais.
A definição da MIB é simples e provê monitoração efetiva dos objetos, porém podemos notar que semelhantemente a descrição da Xen MIB a VMWARE-ROOT-MIB realiza apenas a monitoração dos objetos que a compõem, visto que a mesma possui apenas objetos read-only, permitindo apenas a opção de leitura dos objetos.
Portanto podemos afirmar que a VMWAREROOT-MIB não oferece opção de escrita (read-- write), não sendo portanto possível implementar o gerenciamento através de ela.
A Figura 24 descreve o objeto VMware--Resources da estrutura da VMWARE-ROOT-MIB.
O VMware--Resources é o um objeto composto por os recursos do sistema divididos em quatro grupos vmwResources 1, vmwResources 2, vmwResources 3 e vmwResources 4.
Explicaremos a seguir cada um destes grupos descrevendo seus objetos.
O grupo vmwResources 1 descreve os objetos relacionados ao recurso CPU do VMwareESX.
Através de ele pode- se obter informações sobre a quantidade de CPUs físicas e virtuais, por exemplo.
A Figura 25 apresenta o grupo vmwResources 1 no formato de árvore a descrição dos objetos que compõe este grupo pode ser observada na Tabela 15.
O grupo vmwResources 2 descreve os objetos relacionados com os recursos de memória do VMware-ESX.
Através de ele pode- se obter informações sobre a quantidade de memória utilizada e disponível, por exemplo.
A Figura 26 apresenta o grupo vmwResources 2, no formato de árvore, a descrição dos objetos que compõe este grupo pode ser observada na Tabela 16.
Tabela 16 ­ Tabela de descrição dos objetos do grupo vmwResources 2.
Object vmwMemory memSize memCOS memAvail memTable memEntry memVMID memShares memConfigured memUtil Syntax Access Description Item único do grupo vmwResources 2.
Integer Memória física da máquina.
Integer Memória física usada por o console.
Integer Memória física disponível.
A MIB VMWARE-ROOT-MIB proporciona monitoração em objetos que compõem o sistema VMware ESX, sendo que de modo geral é dividida em grupos que definem informações gerais e específicas sobre objetos físico e virtuais que definem os recursos de processamento, memória, disco e rede.
Em este capítulo, analisamos os protocolos de gerenciamento e bases de informações que podem ser utilizadas como ferramentas para o gerenciamento de sistemas virtuais, atualmente podemos observar a tendência de pesquisas relacionadas ao gerenciamento de sistemas virtuais, seja no desenvolvimento de ferramentas, na adoção de técnicas ou na utilização de tecnologias já estabelecidas como no caso de o protocolo SNMP e suas bases de informações como a Host Resources, a Xen MIB e a VMware MIB tratadas acima.&amp;&amp;&amp;
O que podemos concluir observando essas tecnologias e tendências é que talvez o mais importante seja a definição de regras e padrões para o gerenciamento de sistemas virtuais.
Em este cenário a utilização adequada de protocolos e bases de informações pode ser de grande valia no processo de desenvolvimento de técnicas e padrões de gerenciamento para sistemas virtuais.
Como observamos nos capítulos sobre a Xen MIB e a VMware MIB, atualmente estão a disposição MIBs para o gerenciamento de máquinas virtuais distintas, ou seja, se possui uma MIB para gerência de máquinas virtuais especificamente deste ou daquele sistema virtual.
Quando trabalhamos com máquinas virtuais, visamos aos mais variados tipos de aplicações, sendo que dependendo do tipo de aplicação este ou aquele sistema virtual que é mais adequado para tal, não é necessariamente o mais indicado para um outro tipo de aplicação.
Em este cenário, uma MIB genérica para o gerenciamento de máquinas virtuais é uma ferramenta importante, pois torna padronizada e flexível para a tarefa de gerência deste tipo de ambiente que se caracteriza por ser distribuído e heterogêneo.
Como obsevamos anteriormente, atualmente existem MIBs que trabalham com sistemas virtuais.
Porém, uma grande deficiência é notada em ambas:
A incapacidade de controlar objetos utilizando o protocolo SNMP.
Essa incapacidade é decorrente do desenvolvimento das mesmas, visto que nenhuma possui objetos que possam ser alterados (read-- write) o que caracteriza apenas atividades de monitoração.
A Virtual MIB (vMIB) foi concebida com o intuito de prover gerenciamento de máquinas virtuais independentemente do sistema virtual utilizado e também possui a finalidade de viabilizar a interoperabilidade no gerenciamento entre sistemas virtuais diferentes.
A vMIB foi criada segundo os padrões da SMI, baseada na MIB-II e nos modelos desenvolvidos para o Xen e para o VMware ESX.
A vMIB possui como principais funcionalidades a interoperabilidade no gerenciamento de sistemas virtuais diferentes e a capacidade de gerenciar objetos físicos e virtuais.
A vMIB possui algumas características importantes que a diferência das MIBs desenvolvidas para os sistemas virtuais Xen e VMware, de entre elas destaca- se a capacidade de prover a seus agentes operações de leitura e escrita, caracterizando as atividades de monitoração e controle, proporcionando, portanto, a atividade de gerência de recursos.
Outra funcionalidade inovadora da vMIB é a sua capacidade de interoperar a atividade de gerência entre diversos sistemas virtuais, ou seja, através do mesmo protocolo e base de informações podemos obter informações de sistemas virtuais diferentes, como por exemplo o Xen, o VMware e o OpenVZ, ou até mesmo gerenciar um grupo de máquinas virtuais com diversos sistemas virtuais diferentes em funcionamento simultâneo num ambiente como um cluster ou uma grade, por exemplo.
Tal característica agrega flexibilidade à tarefa de gerenciamento dos sistemas virtuais, dos hosts e das máquinas virtuais.
Cabe ressaltar que para o funcionamento desse tipo de estrutura faz- se necessário o desenvolvimento de agentes distintos para cada tipo de sistema virtual.
A Figura 29 apresenta o funcionamento do protocolo SNMP para gerência de máquinas virtuais utilizando a vMIB com agentes Xen e VMware comunicando- se com uma estação gerente.
Podemos observar, na Figura, os agentes utilizando a vMIB como referência ao acesso e obtenção de informações pertinentes aos recursos de cada sistema virtual, e a centralização da tarefa de gerência através da comunicação dos agentes com o sistema gerente utilizando o protocolo SNMP.
A utilização de uma MIB genérica também acarreta em dificuldades no gerenciamento dos sistemas virtuais específicos aos quais ela se propõe a gerenciar, visto que recursos peculiares a este ou aquele sistema não são considerados, pois a vMIB visa, principalmente, a atender a demanda de recursos que se encontram em qualquer tipo de sistema virtual.
Outro fator que termina contribuindo para esse tipo de deficiência é o fato de que existem atualmente diversos sistemas virtuais, versões e técnicas de implementar a virtualização, assim cada sistema virtual pode implementar a virtualização utilizando uma técnica diferente, sendo que um mesmo sistema pode alterar essa técnica de uma versão para outra visando a adaptar- se aos diversos tipos de aplicações que se utilizam de sistemas virtuais.
Podemos nesse contexto citar o VWware, que talvez venha a ser o sistema virtual que possui o maior número de versões.
O VMware possui, em sua maioria, versões que implementam a virtualização através da técnica de emulação, porém encontramos versões do mesmo que implementam a virtualização através de paravirtualização, podemos vislumbrar, que:
Se uma MIB específica para o sistema VMware fosse elaborada a mesma também encontraria problemas, pois a técnica utilizada para implementar a virtualização tem impacto direto na quantidade e tipo de recurso gerenciado.
Uma MIB genérica torna- se importante, pois padroniza a gerência de recursos em sistemas virtuais, e possibilita a seus usuários atividades de monitoração e controle sobre os principais recursos que compõe um sistema virtual através de uma mesma base de informações, mesmo que como podemos notar a generalização no desenvolvimento desse tipo de MIB faz com que alguns recursos não sejam considerados num ou outro sistema virtual.
A vMIB segue alguns padrões adotados nas MIBs que trabalham com os sistemas Xen e VMware-ESX.
Esses padrões poderão ser melhor visualizados posteriormente quando observarmos a estrutura de disposição e a funcionalidade dos objetos que compõem a vMIB.
Podemos notar também objetos com funcionalidades descritas nas outras MIBs, bem como novos objetos e em alguns casos mudanças na disposição de objetos.
A Figura 30 mostra a disposição da vMIB dentro de a estrutura hierárquica da definição SMI, permitindo que a mesma seja representada por a seqüência 1.3.6.1.3.1.
A vMIB contrariamente às MIBs para Xen e VMware ESX apresentadas, possui dois grupos distintos:
PhysicalResources e virtualResources.
A VMWARE-ROOT-MIB, por exemplo, possui distinção entre objetos reais e virtuais implementada através de tabelas dispostas nos grupos, onde os objetos que estão fora de a tabela são físicos e os que compõem a mesma virtuais.
Tal afirmativa pode ser analisada na Figura 26 e na Tabela 16, por exemplo.
A vMIB procura distinguir os objetos em físicos e virtuais visando, principalmente, a não replicar objetos com mesma funcionalidade, como por exemplo objetos que descrevem a identificação da máquina virtual.
Esse tipo de objeto também está presente na MIB para VMware ESX, tal afirmativa pode ser observada nos quatro grupos que compõe a estrutura da VMWAREROOT-MIB, sendo que os objetos são CpuVmID, memVmID, hbaVmId e netVmId.
Como falamos anteriormente, a vMIB é distribuída inicialmente em dois grupos, physicalResources e virtualResources.
Para melhor observarmos, os grupos estão descritos conforme o último nível da Figura 30 e formam respectivamente as estruturas 1.3.6.1.3.1.1 e 1.3.6.1.3.1.2.
Todos os objetos na vMIB serão hierarquicamente descendentes desses dois grupos e possuem esta estrutura de identificação primária.
A estrutura physicalResources procura descrever os recursos físicos que compõem a estrutura que suporta as máquinas virtuais.
A árvore hierárquica com os objetos principais deste grupo é apresentada na Figura 31, onde podemos observar os objetos descritos em quatro grupos processor, memory, disk e network.
Tais objetos dividem a estrutura conforme os recursos de processamento, memória, disco e rede, respectivamente.
O grupo processor é composto por objetos que definem as características gerais da CPU do sistema que hospeda as máquinas virtuais.
Especificamente através de ele podemos obter informações a respeito de a quantidade e tipo de CPUs, por exemplo.
O grupo processor pode ser analisado no formato de árvore através da Figura 32 e a descrição dos objetos que compõem este grupo pode ser observada na Tabela 19.
O grupo memory é composto por objetos que definem as características do recurso de memória do sistema que hospeda as máquinas virtuais.
Especificamente através de ele podemos obter informações a respeito de a quantidade de memória disponível, por exemplo.
O grupo memory pode ser analisado no formato de árvore através da Figura 33, e a descrição dos objetos que compõe este grupo pode ser observada na Tabela 20.
O grupo network é composto por objetos que definem as características dos recursos de rede do sistema que hospeda as máquinas virtuais.
Especificamente através de ele podemos obter informações a respeito de a quantidade de kbytes que são enviados e recebidos, por exemplo.
O grupo network pode ser analisado no formato de árvore através da Figura 35, e a descrição dos objetos que compõe esse grupo pode ser observada na Tabela 22.
A estrutura virtualResources procura descrever os recursos virtuais disponíveis nas máquinas virtuais.
A árvore hierárquica com os objetos principais deste grupo é apresentada na Figura 36, onde podemos observar os objetos descritos em dois grupos virtualMachine, virtualMachineMonitor;
O primeiro apresenta informações sobre as máquinas virtuais e o segundo descreve informações gerais sobre o sistema que implementa a virtualização.
Para melhor explicarmos descreveremos os objetos que compõem estes grupos a seguir.
O objeto virtualVmIdVm forma um grupo composto por os objetos que fornecem informações provenientes dos recursos virtuais disponíveis nas máquinas virtuais.
A árvore hierárquica composta por os objetos que fazem parte do grupo virtualResources e seguem o ramo virtual Machine é apresentada na Figura 37, onde podemos analisar também os recursos descritos em quatro grupos virtualProcessor, virtualMemory, virtualDisk e virtualNetwork, tais objetos dividem a estrutura conforme os recursos de processamento virtual, memória virtual, disco virtual e rede virtual respectivamente.
Tabela 23 ­ Tabela de descrição dos objetos do grupo virtual Processor.
Objeto virtualProcessorNumber virtualProcessorTable virtualProcessorEntry virtualProcessorId Sintaxe Integer Sequence virtualProcessorEntry Acesso Descrição Processadores virtuais.
O grupo virtualDisk é composto por objetos que disponibilizam informações a respeito de o recurso de disco alocado nas memória virtuais.
Especificamente através de ele podemos obter informações a respeito de a quantidade de disco disponível em cada máquina virtual gerenciada, por exemplo.
O grupo virtualDisk pode ser analisado no formato de árvore, através da Figura 40, e a descrição dos objetos que compõe esse grupo pode ser observada na Tabela 25.
O grupo virtualMachineMonitor é composto por objetos que definem as características gerais do sistema virtual que está gerenciando as máquinas virtuais.
Especificamente através de ele podemos obter informações a respeito de a versão do sistema virtual, por exemplo.
O grupo virtualMachineMonitor pode ser analisado no formato de árvore, através da Figura 42, e a descrição dos objetos que compõe esse grupo pode ser observada na Tabela 27.
Tabela 27 ­ Tabela de descrição dos objetos do grupo virtual Machine Monitor.
Object Syntax Access Description Sistema Virtual.
Ressaltamos também que os objetos genéricos da vMIB podem ser encontrados em praticamente todos os sistemas virtuais, e devido a este fator proporciona padronização, flexibilidade e principalmente a capacidade de gerenciar, num ambiente heterogêneo, sistemas virtuais diferentes.
Porém a generalização termina por restringir a quantidade de objetos na vMIB, fator este que termina influenciando também na quantidade de objetos que podem ser controlados utilizando a vMIB.
Outro fator que contribui para a definição destes poucos objetos de controle é o fato do ambiente virtual ser um ambiente limitado e, portanto, possui em sua maioria, uma quantidade reduzida de recursos.
A vMIB torna- se portanto uma ferramenta importante quando utilizada para gerência de máquinas virtuais, porém necessita ser utilizada num ambiente que proporcione os mais variados testes possíveis, com o intuito de validar sua eficaz utilização.
Com o intuito de validar a base de informações desenvolvida foram criados dois agentes, o primeiro foi desenvolvido para operar sobre a plataforma Xen e o segundo foi desenvolvido para trabalhar com o sistema OpenVZ.
Visando a padronizar o desenvolvimento de ambos foram utilizadas ferramentas de gerência desenvolvidas para cada um dos sistemas virtuais, no caso de o Xen utilizou- se a ferramenta XM, e no caso de o OpenVZ utilizou- se a ferramenta VZCTL, ambas de distribuição livre.
Essas ferramentas atualmente são as mais utilizadas para gerência destes sistemas virtuais e possuem a capacidade de monitorar e controlar os recursos dos mesmos.
Os agentes foram desenvolvidos utilizando a linguagem Shell Script reproduzindo comandos disponíveis para gerência disponíveis em cada ferramenta.
O Xen possui uma ferramenta de gerência chamada XM (Xen Management) que realiza operações em seu ambiente, como por exemplo a alteração de quantidade de memória alocada e utilizadas nas máquinas virtuais, a capacidade listar os domínios e seus respectivos recursos disponíveis, alterar a quantidade de CPUs virtuais, criar e destruir interfaces de rede, seja ele dom0 ou domU.
A estrutura básica de um comando XM é descrita abaixo:
