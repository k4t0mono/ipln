Diversos esforços podem ser identificados no sentido de definir, estabilizar e difundir abordagens de gerência de projetos que garantam maior aderência às especificações e necessidades dos usuários, estando alinhados à estratégia de negócios da organização.
Existem vários modelos de gerência de projetos.
Diferentes tipos de problemas e desafios possuem características próprias que requerem diferentes tipos de abordagens.
O maior desafio está em selecionar, adaptar e integrar essas abordagens, de acordo com as características presentes num determinado ambiente.
O objetivo deste estudo é propor um modelo de gerência de projetos que incorpore o Unified Process (UP) e a UML (Unified Modeling Language), tendo por base as disciplinas do PMI (Project Management Institute), num ambiente fisicamente distribuído.
A pesquisa caracteriza- se como um estudo qualitativo, adequado quando se tem por objetivo o desenvolvimento de novos métodos e modelos.
O principal método de pesquisa é o estudo de caso, conforme proposto por Yin.
Os resultados apontam para um modelo que incorpora o ciclo de vida do tipo espiral, o processo de desenvolvimento de sistemas orientados a objetos (utilizando a linguagem de especificação UML e o UP conforme proposto por a RUP -- Rational Unified Process) e à incorporação da abordagem processual proposta por o PMI.
O modelo proposto possui seis fases, sendo que cada uma possui um conjunto de atividades associadas.
Esta linha de pesquisa, extremamente importante, demonstra que o mundo empresarial e as práticas de negócio, na área de gerência de projeto de software e desenvolvimento de software, estão andando muito à frente das teorias e modelos conceituais existentes na área.
Este estudo apresenta resultados que contribuem para atender às demandas existentes no mercado atualmente.
Palavras Chave: Gerência de Projetos, Desenvolvimento de Software, Ambiente Fisicamente Distribuído, Estudo de caso Em a literatura da área de engenharia de software, já foram discutidos diversos problemas relacionados ao desenvolvimento de software, os quais são resultantes da omissão ou do mau uso de metodologias e técnicas.
No entanto, boa parte dos fracassos, no que diz respeito aos projetos de software, deve- se principalmente a problemas de administração ou gerenciamento do processo de desenvolvimento de software.
Conforme diz Rutkowski, os consumidores estão demandando rapidez no mercado, porque o tempo de um projeto afeta as operações nos negócios.
Eles exigem execução sem falhas para concretizar oportunidades de negócios.
Uma gerência de projeto eficiente é a forma de fazer isso acontecer.
Rutkowski destaca também que o gerente de projetos necessita de algumas habilidades para obter sucesso em suas atividades, entre elas destacam- se:
Liderança, comunicação, resolução de conflitos, negociação, construção da equipe, habilidade de escutar e um bom gerenciamento de relacionamento.
Gerenciamento de projetos não é uma tarefa simples.
Atualmente, devido a a existência de projetos cada vez mais complexos e com mais pessoas envolvidas, a gerência tem uma participação vital para o sucesso do projeto.
Entretanto, apenas as habilidades pessoais da gerência não são suficientes para o seu sucesso.
É necessária a utilização de ferramentas que automatizem determinadas atividades e facilitem a comunicação entre os membros do time de projeto.
A aplicação da técnica de gerência de projetos na área da informática tem possibilitado alcançar resultados com graus de segurança e qualidade altamente satisfatórios, sobretudo por a objetividade e determinação com que os empreendimentos são realizados na dinâmica de projetos.
O gerenciamento de projetos de software é uma tarefa de fundamental importância no processo de desenvolvimento de um produto de software, sendo definido como a primeira camada deste processo[ JUR 99].
Ele não é visto como uma etapa clássica do processo de desenvolvimento uma vez que ele acompanha a todas as etapas, da concepção à obtenção do produto.
Os recentes avanços tecnológicos têm tornado possível o desenvolvimento significativo do apoio automatizado ao tratamento da informação nas organizações.
Em muitas de elas, esses avanços têm levado ao uso mais geral dos sistemas computacionais.
As organizações estão conscientes do potencial dos mesmos para o suporte automatizado de seus processos administrativos.
Com esses sistemas, é possível acessar informações de qualquer lugar da organização, o que possibilita atingir uma grande integração do trabalho.
Considera- se que, a um custo moderado, é possível construir uma plataforma que ofereça distribuição, recursos multimídia para interface humana e capacidade computacional significativamente superior à oferecida por equipamentos de grande porte e compatível com os tipos de informação presente nos ambientes de processamento de documentos.
Por outro lado, o bom funcionamento de uma empresa depende, essencialmente, das possibilidades de acesso à informação e do processo decisório baseado nas mesmas.
O trabalho administrativo é uma atividade em equipe, em a qual cada membro tem um conjunto próprio de atribuições, responsabilidades e autonomia para a sua realização.
Estas, contudo, nem sempre são independentes.
Geralmente, há uma interdependência na realização das atividades causada por a manipulação e transformação de elementos de informação compartilhados em instantes diferentes.
Há, em conseqüência, uma estreita cooperação no trabalho realizado.
A gerência de projeto de desenvolvimento de software deve ter em mente que sua atividade deve objetivar a qualidade, produtividade e a redução de riscos através do planejamento e execução do desenvolvimento do produto.
O desenvolvimento de software é caracterizado, através de vários estudos, como uma atividade técnica e dissociada da esfera organizacional.
Pode- se identificar diversos esforços no sentido de definir, estabilizar e difundir abordagens de gerência de projeto de software que garantam maior aderência às especificações e necessidades dos usuários e estejam alinhados com a estratégia de negócios da organização.
Existem diversas abordagens de gerência de projeto de software.
Tipos diversos de problemas e desafios possuem características diferenciadas que requerem tipos específicos de abordagens.
O maior desafio está em selecionar, adaptar e integrar essas abordagens, de acordo com as características presentes num determinado ambiente.
A área de desenvolvimento de software requer o uso de uma abordagem mais moderna associada à gerência de projetos, que responda a demanda de um ambiente distribuído.
De entre estas abordagens destaca- se hoje a orientação a objetos e, mais especificamente, a Linguagem de Especificação UML (Unified Modeling Language) e o UP (Unified Process).
A globalização da economia tem levado muitas organizações a distribuírem geograficamente seus recursos e investimentos, visando obter melhores resultados.
Ambiente fisicamente distribuído uma nova tendência de desenvolvimento gerenciamento de projetos de software, onde usuários e equipe de desenvolvimento estão em locais físicos diferentes, às vezes países, com culturas diferentes.
A área de desenvolvimento de software foi pioneira nesse processo de distribuição, em paises como Índia e Irlanda.
Maior produtividade, redução de custos, minimização dos riscos e melhoria na qualidade, são algumas características que grandes organizações buscam com a distribuição de seus processos de desenvolvimento de software fora de seus países O desenvolvimento de ambientes tecnológicos, modelos e ferramentas para atuar neste tipo de ambiente é um desafio cada vez mais importante, tanto para a teoria na área de engenharia de software como para as empresas que enfrentam as dificuldades criadas por este tipo de ambiente.&amp;&amp;&amp;
E é por isso que, nos últimos anos, diversos estudos e eventos têm dado uma grande importância para este assunto.
Em esse contexto, surge um novo problema no processo de gerência de projeto de software, que envolve, principalmente, a distância física entre os participantes do processo.
Desta forma, os já tradicionais problemas inerentes ao processo de gerência e desenvolvimento, fortemente centrados nas fases de especificação de requisitos e análise de sistemas, ganham contornos mais críticos.
A maneira de resolver estes problemas está centrada na adoção de linguagens de especificação e processos de desenvolvimento mais formais e definidos para o auxílio na gerência de projeto de software.
Modelos de verificação e certificação do nível de maturidade do processo de desenvolvimento de software têm- se tornado cada vez mais importantes e úteis para as organizações contratantes terem um mínimo de garantia sobre a qualidade do processo utilizado por a organização ou laboratório de desenvolvimento de sistemas parceiros.
A área de e-business estimula mais ainda a distribuição dos atores envolvidos no processo de gerência, uso, definição e desenvolvimento de sistemas.
Para organizar e assegurar a qualidade desta integração é importante existirem modelos com capacidade de descrição e ambientes de automação computacional para os mesmos, possibilitando o emprego destes tipos de descrição para o suporte computacional do fluxo de trabalho.
Uma das soluções para atender a esses requisitos é a definição de um modelo de gerência de projeto voltado para um ambiente fisicamente distribuído, que mantenha o gerenciamento do fluxo de informação na organização, independente da localização física dos participantes do processo de desenvolvimento de software (usuários, analistas, desenvolvedores, etc.).
A questão de pesquisa que norteia este estudo é:
Como gerenciar o processo de desenvolvimento de software num ambiente fisicamente distribuído?
O objetivo geral desta pesquisa é propor um modelo de gerência de projeto voltado para um ambiente fisicamente distribuído.
Para atender a este objetivo, será necessário atingir os seguintes objetivos específicos:
Esta dissertação apresenta, no capítulo 2, a metodologia de pesquisa a ser adotada.
Em o capítulo 3, são apresentados alguns conceitos e problemas relacionados com a gerência de projeto.
Pensamento sistêmico, ciclo de vida do projeto e distribuição física também são assuntos desse capítulo.
Em o capítulo 4, aborda- se três modelos de gerência de projeto, finalizando o capítulo com um comparativo entre os modelos estudados.
Em o capítulo 5, serão apresentados dois estudos de caso realizados no ambiente de pesquisa.
Em o capítulo 6, será descrito o modelo de gerência de projetos proposto, incorporando características das lições aprendidas através dos estudos de caso e da base teórica estudada.
Uma proposta de extensão dos processos de gestão do PMI (Project Management Institute) é descrita nesse capítulo.
As considerações finais com relação a o projeto serão relatadas no capítulo 7.
Por fim, o capítulo 8 apresenta as referências bibliográficas.
Este estudo se caracteriza por ser de natureza exploratória, sendo que a estratégia de pesquisa adotada foi estudo de caso.
Mesmo com a ampla revisão teórica desenvolvida, não se tem conhecimento de que o problema apresentado tenha sido abordado sob a mesma perspectiva.
Um estudo de caso é uma investigação empírica que investiga um fenômeno contemporâneo dentro de seu contexto da vida real, especialmente quando os limites entre o fenômeno e o contexto não estão claramente definidos.
Em este estudo, de natureza exploratória, pode- se justificar o uso de métodos qualitativos por o fato de ele envolver o estudo do processo de gerência de projeto no seu contexto real, com a descrição e a compreensão do estado da arte naquelas situações em que a prática se antecipa à teoria.
Com relação a a natureza do estudo, a pesquisa exploratória tem como principal finalidade desenvolver, esclarecer e modificar conceitos e idéias, com vistas a a formulação de novas teorias, modelos e hipóteses pesquisáveis em estudos posteriores.
Ainda segundo este autor, a pesquisa exploratória muitas vezes constitui- se na primeira etapa de uma investigação mais ampla.
O estudo de caso permite uma investigação para se preservar as características holísticas e significativas dos eventos da vida real.
É uma estratégia escolhida ao se examinar acontecimentos contemporâneos, quando não se pode manipular comportamentos relevantes.
Este é exatamente o caso desta pesquisa, cuja parte empírica foi desenvolvida num Centro de Desenvolvimento de Software na área de ebusiness localizado em Porto Alegre, Brasil, resultado de uma parceria entre a DELL Computers, através da Latin-América OnLine Division (Austin, Texas) e a Faculdade de Informática da PUCRS (Pontifícia Universidade Católica do Rio Grande do Sul, Brasil).
O método de estudo de caso foi desenvolvido num contexto de desenvolvimento de sistemas para o site de e-business da DELL Computers.
Foram analisadas especificamente as abordagens e os problemas relativos à gerência de projeto, juntamente com a comunicação entre a equipe de desenvolvedores e o gerente de projetos (em Porto Alegre, Brasil) e a equipe usuária e o gerente de programa (em Austin, TX, US).
Por tratar- se de uma pesquisa qualitativa, deve- se ter claro as limitações deste tipo de pesquisa, principalmente no que se refere ao número de organizações estudadas (somente uma), restringindo a generalização dos resultados obtidos.
Este capítulo está organizado em sete seções.
Em a seção 2.1, apresenta- se o desenho de pesquisa do trabalho.
Em a seção 2.2, é descrita a organização estudada em que o trabalho está inserido.
Em a seção 2.3, apresenta- se a unidade de análise;
Em a seção seleção dos participantes;
Em a seção 2.6, o método de coleta de dados e, por fim, na seção O desenho de pesquisa pode ser entendido como a seqüência lógica que liga os dados empíricos à questão de pesquisa inicial e aos resultados e conclusões.
Para Marconi e Lakatos, o desenho de pesquisa é uma forma esquemática que facilita a visualização de uma pesquisa, podendo ou não ser modificado.
O desenho auxilia o pesquisador a seguir uma ordem lógica no trabalho.
A base teórica aborda o principal assunto envolvido nesta dissertação que é a gerência de projetos.
Partindo deste ponto torna- se necessário o estudo de modelos de apoio à gerência de projetos onde três modelos são destacados neste contexto.
O modelo de gerência de projeto de software processual é estudado de acordo com a abordagem de Schwalbe.
O modelo de gerência de projeto orientado a objeto é segundo a visão de Cantor.
Outro modelo estudado é o da teoria-W, de Boehm.
Após o estudo teórico foi possível a elaboração de um modelo preliminar, composto de características presentes nos modelos estudados.
Mas, com o estudo dos modelos, não foi possível a identificação de características presentes em ambientes de desenvolvimento de software fisicamente distribuído.
Para isto, torna- se necessário a realização de estudos de caso.
Os estudos de caso descritos foram acompanhados, ao longo de o ano de 2001, no Centro de Desenvolvimento e Pesquisa em E-business Dell/ Pucrs (CDPE).
O primeiro foi o Call center de onde partiu a constatação da necessidade de se criar um modo de mensurar o tipo de problemas relatados por compradores de determinados tipos de produtos oferecidos por uma empresa.
Propôs- se, então, a criação de um aplicativo a ser utilizado por um call center, isto é, um centro de atendimento ao consumidor.
Este aplicativo permite o cadastramento de chamadas telefônicas, incluindo detalhes do usuário, do problema descrito e da proposta de solução apresentada por o atendente (neste caso, os funcionários responsáveis por o serviço estariam capacitados a solucionar as dificuldades técnicas relatadas).
Havendo este conhecimento do sistema a ser implementado, partiu- se para sua construção.
O segundo estudo de caso foi o
E-mail blitz.
Tendo em vista que a área de atuação da empresa é o comércio on-line de produtos de informática, existe a necessidade de divulgação, via Web, desses produtos junto aos seus assinantes (consumidores que já realizaram compras no site da companhia ou que manifestaram interesse em receber notícias sobre produtos ofertados).
Para realizar esta tarefa foi projetado um software (
E-mail blitz) em o qual será possível elaborar uma oferta (através da composição de produtos e mensagens), determinar um perfil de clientes e assinantes (a ser elaborado através de um conjunto de características dos mesmos) e, por fim, enviar uma oferta para um determinado perfil através do correio eletrônico da Internet.
Com a união da base teórica estudada (pesquisa conceitual) e os estudos de caso (pesquisa empírica), torna- se possível propor um modelo de gerência de projeto voltado para um ambiente fisicamente distribuído (com uma extensão dos processos de gestão já existentes em determinados modelos).
A pesquisa empírica foi desenvolvida no Centro de Pesquisa e Desenvolvimento de Software na área de e-business localizado em Porto Alegre, Brasil, resultado de uma parceria entre a DELL Computers, através da Latin-América OnLine Divison, Austin, Texas e a Faculdade de Informática da PUCRS (Pontifícia Universidade Católica do Rio Grande do Sul, Brasil).
O Centro de Pesquisa foi criado no segundo semestre de 2000, tendo sido gerado a partir de a utilização de recursos da Lei de Informática brasileira, que incentiva as empresas instaladas no país a investirem parte do seu faturamento em instituições de pesquisa e desenvolvimento, propiciando a isenção de impostos sobre produtos industrializados (IPI).
O CDPE tem por objetivo realizar pesquisa científica e desenvolvimento tecnológico na área de comércio eletrônico, aproveitando a experiência dos profissionais da DELL e a excelência dos pesquisadores da PUCRS em áreas em que podem resolver problemas e satisfazer necessidades hoje existentes em sistemas desta área.
Desta forma, busca- se fomentar a pesquisa científica e promover o desenvolvimento tecnológico a partir de os resultados científicos, gerando protótipos avançados, integrando os resultados e gerando novos sistemas de comércio eletrônico, especificamente para o site de e-business da DELL Computers.
Este estudo insere- se num projeto de pesquisa que envolve duas grandes universidades brasileiras (PUCRS e UNISINOS), empresas de desenvolvimento de software e o capítulo brasileiro do PMI (Project Management Institute), através da regional do Rio Grande do Sul.
O laboratório do Centro de Pesquisa possui uma área de aproximadamente 210m2, onde existem 50 servidores, 35 postos de trabalhos, 1 notebook, além de os espaços específicos para biblioteca, salas de reunião, almoxarifado de software, secretaria, entre outros.
A equipe de trabalho está composta por 48 pessoas assim distribuídas:
3 professores (sendo dois pesquisadores com nível de doutorado, nas áreas de Sistemas de Informação e Inteligência Artificial);
9 bolsistas de mestrado;
3 funcionários da DELL Computers (Austin, TX, Estados Unidos), sendo um diretor, um administrador de sistemas e um Project Manager;
1 funcionária e 1 bolsista de apoio administrativo;
Ciência da Computação, Administração de Empresas e Análise de Sistemas).
O processo de trabalho no Centro de Pesquisa está definido da seguinte forma:
As equipes de Austin e Porto Alegre desenvolvem em conjunto o processo de planejamento.
A equipe de Austin identifica com os usuários as necessidades e submete ao grupo de Porto Alegre as demandas por novos desenvolvimentos de sistemas.
A equipe em Porto Alegre faz uma análise inicial e designa um Gerente de Projeto.
Após, é montada a equipe de projeto e inicia- se o processo de especificação de requisitos.
A equipe de projeto consiste no conjunto de pessoas que deverão trabalhar de forma cooperativa, de modo que o resultado do trabalho seja o produto especificado por o usuário.
Paralelamente ao processo de desenvolvimento de software, o Centro de Pesquisa desenvolve projetos de pesquisa científica nas áreas de Engenharia de Software, Gerência de Projeto e Sistemas Multiagentes.
A estrutura é composta por os responsáveis técnicos e coordenadores, localizados em Austin (Estados Unidos) e Porto Alegre (Brasil), por o gerente de projeto, arquiteto de software, desenvolvedor, projetista de banco de dados, analista da qualidade e administrador do sistema.
Antes de realizar a seleção da organização é importante determinar a unidade de análise do estudo de caso.
A unidade de análise desta pesquisa é o processo de gerência de projeto de software.
Pretende-se analisar o processo de gerência envolvido nos dois casos selecionados.
A escolha da organização foi por conveniência, isso porque o Centro de Pesquisa possui várias características relevantes para o estudo em questão.
Entre elas pode- se destacar:
É um ambiente de desenvolvimento de software para e-business;
Os participantes do processo de desenvolvimento de software estão fisicamente distribuídos;
Um outro ponto importante a ser destacado com relação a a escolha da organização, é o fato de que apesar de fazer parte do Centro de Pesquisa, não se tem participação específica na área de gestão do processo de software ou da gerência dos projetos em si.
Isso vem a ser um fator relevante pois propicia independência para analisar o processo com maior distanciamento.
A seleção dos participantes ocorreu de acordo com a função dos elementos chave nos projetos.
Para cada projeto de desenvolvimento de software (Call center e
E-mail blitz), foram feitas entrevistas com:
O gerente de projeto;
Um integrante da equipe de desenvolvimento;
Um analista da qualidade;
E o coordenador técnico do Centro de Pesquisa.
Estes critérios adotados na seleção dos participantes são importantes para dar maior homogeneidade na coleta e análise de dados.
A utilização de multimétodos na coleta de dados é típico de estudos de caso[ BEN De os artefatos utilizados na coleta dos dados, podemos destacar os seguintes:
Entrevistas com os integrantes do projeto específico a ser analisado.
Observação direta, no que diz respeito às ações dos participantes no ambiente.
O objetivo é obter um rico conjunto de dados que envolva a especificação do assunto pesquisado, assim como a captura da complexidade contextual.
A partir de a coleta de dados, foi desenvolvida uma análise crítica dos mesmos, utilizando- se para isto diversos métodos.
A análise de dados culminou num quadro síntese, onde foram apresentadas as conclusões da análise crítica desenvolvida, na forma de lições aprendidas dos dois casos empíricos estudados.
Essas lições serviram como uma das bases (a outra foi o estudo teórico) para o desenvolvimento do modelo proposto como resultado deste processo de pesquisa.
As lições aprendidas serão descritas no capítulo 5 (seção 5.5) A seguir apresenta- se, na forma de uma tabela, o protocolo de análise utilizado.
A tabela 1 apresenta, para cada dimensão estudada, o que se deseja obter de informação nas entrevistas (coluna 2), qual a base teórica que sustentam a investigação (coluna 3) e, finalmente, a questão derivada desses elementos (coluna 4).
Após a realização das entrevistas, este quadro de referência foi utilizado como protocolo básico de análise dos dados coletados, de modo a sistematizar cientificamente (com base na teoria indicada) as lições aprendidas no estudo de caso.
A partir de o protocolo de análise, as questões foram formuladas e organizadas na identificadas na tabela 1 e questões abertas para o entrevistado acrescentar o que julgasse conveniente.
O questionário foi verificado inicialmente por dois pesquisadores da área que fizeram a validade de face.
Após esta etapa e pequenos ajustes, foi aplicado um pré-teste em três profissionais da organização em estudo (não participantes do projeto de desenvolvimento de software selecionado).
Após o pré-teste, foram feitas alterações em duas das sete perguntas formuladas.
Com a conclusão destas etapas de verificação, foi aplicado o questionário através de entrevistas individuais.
Gerenciar software de uma maneira disciplinada, utilizando- se princípios de engenharia, de forma a obter software economicamente viável, seguro e de forma eficiente, não é uma tarefa fácil.
Exige do profissional de gerência de projeto de software não somente o conhecimento de aspectos técnicos (linguagens de programação, métodos de análise, etc.), mas também de aspectos gerenciais.
O domínio de técnicas, métodos e ferramentas gerenciais que conduzem o projeto de sistemas de software ao resultado esperado são uma exigência para a evolução profissional.
O profissional responsável por essa atividade é o gerente de projeto.
Esta questão foi evidenciada por Deming, na abordagem da qualidade total com o ciclo PDCA (Planejar, Fazer, Verificar e Agir) e, mais recentemente, por o modelo CMM ­ Capacity Maturity Model para Software que foi desenvolvido por o Sei ­ Software Engineering Institute, onde foi constatado que o principal problema a afligir as organizações de software é gerencial.
A gerência de projetos é uma das áreas mais importantes e menos compreendidas da administração.
Problemas relacionados a atrasos e custos, acima de o planejado, não podem ser considerados exceções em projetos.
Estes são comuns em projetos de desenvolvimento de software, conforme constatados em diversos autores O termo gerência de projetos é algumas vezes usado para descrever uma abordagem organizacional para gerenciamento dos processos operacionais contínuos.
Esta abordagem, mais conhecida como gerência por projetos, trata muitos aspectos dos serviços continuados como projetos, objetivando aplicar também a eles os conceitos de gerência de projetos.
A aplicação da técnica de gerência de projetos na área da informática tem possibilitado alcançar resultados com graus de segurança e qualidade altamente satisfatórios, sobretudo por a objetividade e determinação com que os empreendimentos são realizados na dinâmica de projetos.
Para que um projeto de software seja bem sucedido, é necessário que alguns parâmetros sejam bem analisados, como por exemplo, escopo (tudo o que deve ser produzido neste projeto), prazos (ordem cronológica dos resultados/ produtos deste projeto), custo (valor para a produção deste projeto), qualidade (tanto do processo de condução quanto dos produtos gerados por o projeto), diferentes necessidades e expectativas dos stakeholders1 e separar o que é necessidade (requisito) de expectativa (requisito não identificado).&amp;&amp;&amp;
Este capítulo está organizado em cinco seções.
Em a seção 3.1, apresenta- se alguns conceitos relevantes na área de gerência de projeto;
Em a seção 3.2, os problemas e desafios da gerência de projeto de software;
Em a seção 3.3, uma visão sistêmica da gerência de projeto de software;
Em a seção 3.4, as fases e o ciclo de vida do projeto e, por fim, na seção 3.5 um novo cenário existente na área de gerência de projeto, que é a distribuição física.
A seguir, alguns conceitos relevantes que compõem a área de gerência de projeto e que servirão de apoio para o entendimento do estudo.
Projeto pode ser entendido de formas diferentes, depende da cultura e dos objetivos da comunidade em que está inserido.
Muitas organizações desenvolvem conceitos próprios para orientar suas atividades.
Essa prática é recomendada para ficar bem caracterizado, dentro de a organização, o que é projeto.
Estes são esforços temporários levados a efeito para produzir um produto ou serviço único.
Executar projetos de informática é bastante diferente da maioria dos outros tipos de projetos (construção, montagem, pesquisa, etc) por a complexidade do empreendimento, por a constante dificuldade de visualizar claramente o produto que está sendo desenvolvido e por as dificuldades de comunicação entre executor e usuário ou cliente.
Para complicar, o ambiente de informática sempre foi arredio a influências externas de técnicas administrativas e, assim, foi criando seu próprio mundo.
Em parte, isso se explica por o fato de que os primeiros profissionais a fazer carreira foram os programadores que tinham um forte embasamento técnico, mas, geralmente, eram fracos administrativamente.
Outro aspecto que deve ser observado é a dificuldade de comunicação entre o departamento de informática e o restante da empresa.
Por esses e outros motivos, inúmeros casos de fracasso vêm sendo acumulados na história desta indústria.
Em esta década, diversos fatos novos estão colaborando para modificar este cenário.
Um de eles foi a criação do modelo CMM, que procura medir o nível de maturidade de uma empresa no uso de técnicas e ferramentas de gerência de projetos.
Pesquisas Stakeholders: Schwalbe define stakeholders como pessoas envolvidas e que afetam as atividades do projeto.
Os projetos na área de software também podem ser vistos sob outra perspectiva, identificando as restrições de tempo, de custo e de escopo associadas (triple constraint), representada na figura 2.
O tempo está relacionado com a duração (horas, dias, meses) prevista para a realização de um determinado projeto.
Para este, custo significa todos os recursos requeridos para realizar- lo, incluindo pessoas e equipamentos, os materiais utilizados e outros eventos que requerem dinheiro ou alguma atenção num projeto.
Para o entendimento do escopo são considerados dois aspectos:
Escopo de produto e escopo de projeto.
O escopo de produto descreve a qualidade, as características e as funções do produto, já o escopo de projeto descreve o trabalho que é necessário para a entrega do produto ou serviço.
Ele é usualmente medido através de tarefas e fases.
Os projetos são desenvolvidos em todos os níveis da organização, envolvendo uma única pessoa ou muitas de elas.
Podem durar poucas semanas ou anos.
Os projetos podem abranger uma unidade isolada da organização ou atravessar fronteiras organizacionais, como ocorre com consórcios e parcerias.
Um projeto visa alcançar o objetivo proposto e encerrar- se.
Devido a a natureza incerta dos projetos e à competição por os recursos, é raro um projeto acabar com o escopo exato, tempo certo e custo adequado conforme especificado nos planos.
Assim, gerenciar estes três elementos envolve trocas entre escopo, tempo e custo de modo a realizar um projeto de sucesso.
Aliados a estes elementos, ainda existem outros que também têm papéis significativos num projeto, como a qualidade e o time envolvido,.
Os projetos são compostos de processos.
Constituídos numa série de ações que geram um resultado.
Os processos dos projetos são realizados por pessoas e normalmente se enquadram numa das duas categorias:·
Processos da gerência de projetos se relacionam com a descrição e a organização do trabalho do projeto.
Os processos de gerência de projetos são aplicáveis à maioria dos projetos.·
Processos orientados ao produto se relacionam com a especificação e a criação do produto do projeto.
Os processos orientados ao produto são definidos por o ciclo de vida do projeto e variam de acordo com a área de aplicação.
Gerentes, sejam de qualquer área, constantemente enfrentam problemas para os quais existe premente necessidade de informações, para poder delinear e entender corretamente o problema, gerar soluções alternativas, avaliar recursos e os impactos decorrentes de tais alternativas, gerando um plano realista e factível para a solução escolhida.
Ohlendorf define gerência de projeto como uma abordagem metodológica para se alcançar resultados num determinado projeto dentro de um tempo específico e com recursos definidos.
Segundo, gerência de projeto é a aplicação de conhecimentos, habilidades, ferramentas e técnicas no sentido de concluir atividades que atendam ou excedam às necessidades e expectativas dos stakeholders deste projeto.
Meredith considera que a gerência de projeto surgiu como um processo de gerenciamento para lidar com a complexidade do trabalho em grupo baseado em conhecimento e por as demandas de novos métodos de gerenciamento.
As três forças básicas que vêm impulsionando a aplicação de gerência de projetos são:
O crescimento exponencial do conhecimento humano;
A demanda crescente por produtos e serviços mais complexos e padronizados;
E a evolução da competição global por a produção de produtos e serviços.
Schwalbe considera a gerência de projeto de software como um conjunto de conhecimentos, de técnicas e de ferramentas que, usadas em conjunto, auxiliam na execução e no controle do desenvolvimento de produtos de software.
A gerência de desenvolvimento de software deve ter em mente que sua atividade deve objetivar a qualidade, produtividade e a redução de riscos através do planejamento e execução do desenvolvimento do produto.
Segundo Pressman, o gerenciamento de projetos de software representa a primeira camada de um processo de engenharia de software e compreende etapas como:
Medição, estimativa, análise de erros, programação de atividades, monitoração e controle, tendo como objetivos fornecer:
Um framework para gerenciar um projeto de software;
Um guia prático para planejamento, treinamento, execução e monitoramento de projetos e um framework para gerência de riscos.
Segundo Adbel-Hamid, medir tempo e orçamento são um grande complicador na Gerência de Projetos e a falta de estimativa é a causa de muitas organizações falharem nesse gerenciamento.
Modelos têm sido desenvolvidos, mas ainda não se mostraram adequados e o que se nota é uma preocupação em avaliar somente as medidas diretas, ou seja, tamanho do produto (ex:
Linhas de código, funções), o que dificulta a avaliação do estágio de planejamento de um projeto de software, no que se refere a medidas indiretas.
A o iniciar o planejamento de um projeto de software, este deve ter seus objetivos e escopo estabelecidos.
As soluções alternativas devem ser consideradas e as restrições técnicas e gerenciais, identificadas.
Essas informações são necessárias para se poder definir estimativas de custo, divisão de tarefas e alocação de tempo.
Segundo Cantor, para que um projeto de software seja considerado bom, deve suportar os seguintes itens:
A gerência de projetos de software é uma tarefa de fundamental importância no processo de desenvolvimento de um produto, sendo definido como uma primeira camada deste processo.
O gerenciamento de projeto não é visto como uma etapa clássica do processo de desenvolvimento uma vez que ele acompanha a todas as etapas, da concepção à obtenção do produto.
A seguinte heurística descreve brevemente a visão tradicional de gerência de projeto de software:
Planeje o vôo e voe segundo o plano (em inglês, &quot;plan the flight and fly the plan&quot;).
Esta heurística está fortemente relacionada às premissas das técnicas atualmente aplicadas no gerenciamento de projetos de software.
Ela assume que o gerente de projeto pode definir uma estratégia detalhada para conduzir a equipe de desenvolvimento das especificações iniciais de um produto até a sua implantação no ambiente operacional, considerando determinadas restrições de cronograma, recursos e qualidade.
A realização desta tarefa requer um conhecimento completo do esforço de desenvolvimento a ser realizado, o que pode não ser possível em projetos inovadores e complexos.
Eventos inesperados, como a incapacidade dos desenvolvedores resolverem determinados problemas, reduzido envolvimento dos usuários com o projeto e erros surgidos em produtos &quot;concluídos», provocam turbulências no vôo planejado por o gerente de projetos.
Em diversas situações, o sistema que se deseja construir não pode ser precisamente definido no início do projeto, sendo seus requisitos descobertos ao longo de o processo de desenvolvimento.
Em esses casos, a criação de uma nova estratégia detalhada nas primeiras etapas do projeto se torna ainda mais difícil.
Projetos de desenvolvimento de software que no passado consumiam anos de desenvolvimento com grandes equipes hoje sofrem pressões, cada vez maiores, de redução de prazo e custo, sem a redução da qualidade e do escopo (pelo contrário, cada vez aumentam estas exigências).
Infelizmente, evolução dos processos de desenvolvimento ­ em especial os de gerência ­ não acompanharam a evolução das exigências dos usuários.
Algumas perguntas, presentes há pelo menos duas décadas, continuam sem resposta ou com respostas insatisfatórias:
Por que demora tanto tempo para que os projetos sejam concluídos?
Por que os custos são tão elevados?
Por que todos os erros não são descobertos e sanados antes da entrega para o usuário?
Por que existe a dificuldade em medir o progresso de um projeto de software enquanto este está sendo desenvolvido?
Alguns dos fatores presentes na maior parte dos projetos de desenvolvimento de software que não tiveram sucesso são levantados em:
&quot;achologia «ou &quot;chutologia «uma vez que a cultura de estimativas, baseadas em modelos matemáticos e registros históricos, é adotada por poucas empresas; --
eles pensam que isto é o negócio dos profissionais de Ti e não de eles;
Ambiente típico de desenvolvimento de projetos -- falta de instrumentos, excesso de pressão por parte de os usuários (&quot;prazos para ontem&quot;), falta de instrumentos de motivação para o pessoal envolvido no projeto e outros fatores relacionados.
Alguns autores procuraram identificar possíveis razões para estes problemas relativos à gerência de projeto de software.
Em, são discutidas algumas destas possíveis razões:
&quot;gerentes de nível médio e superior sem nenhum background em software recebem a responsabilidade por o seu desenvolvimento».
Há um antigo axioma da administração que afirma que um bom gerente pode gerir qualquer projeto.
Quando isso ocorre, os problemas associados à crise do software são exacerbados.
Projetos de software freqüentemente falham, porque os gerentes não sabem qual o verdadeiro status do projeto.
Desenvolver software, no entanto, envolve conceitos que são de difícil mensuração, daí a importância em se saber gerenciar os recursos envolvidos nesse desenvolvimento.
Gerência de Projetos é o principal fator crítico de sucesso de um software.
A aplicação da Gerência de Projetos no processo de desenvolvimento de software tem possibilitado alcançar resultados com graus de segurança e qualidade satisfatórios, por a objetividade com que os empreendimentos são realizados na dinâmica de projetos.
A Gerência de Projetos de desenvolvimento de software é uma atividade que deve visar à qualidade, à produtividade e à redução de riscos, através do planejamento e execução do desenvolvimento do produto.
Confiar somente na experiência dos gerentes e na equipe de desenvolvimento é uma política que tem se mostrado ineficiente, dado o número de projetos de software encerrados sem sucesso.
Tendo em vista a complexidade do processo de desenvolvimento, são necessários mecanismos de apoio à decisão para guiar os gerentes no planejamento e controle de projetos de software.
Software O pensamento sistêmico ­ system thinking ­ é uma filosofia que procura elucidar o comportamento de um sistema através de sua estrutura.
Este analisa as relações entre os componentes de um sistema, descrevendo o comportamento do mesmo a partir de estas relações.
Em sistemas com dinâmica complexa, esta análise se beneficia da utilização de modelos formais, uma vez que o comportamento dos sistemas não pode ser previsto de forma eficiente apenas por modelos mentais.
Forrester ressalta o alto grau de evolução alcançado nos campos de engenharia e de tecnologia nas últimas décadas, em contraponto com a reduzida evolução dos campos de economia e de administração no mesmo período.
Forrester associa essa diferença de evolução a uma resistência em aceitar que as organizações sociais, como famílias, corporações e governos, são sistemas, pertencendo a um mesmo grupo genérico, onde também se encontram refinarias e pilotos automáticos para aeronaves.
Essa resistência, junto com a complexidade crescente dos sistemas sociais, faz com que estes repitam sucessivamente os mesmos erros.
Como as leis de formação do sistema não são compreendidas, seus participantes tentam violar- las.
O processo resulta em frustração, à medida em que as leis se impõem, neutralizando o esforço aplicado contra elas.
Sistemas de dinâmica complexa se caracterizam por a existência de múltiplos componentes inter-relacionados, características variando de forma complexa ao longo de o tempo, ciclos de realimentação, relações não lineares e manipulação de informações qualitativas.
As próximas seções analisam a existência dessas propriedades na gerência de projeto de software.
A gerência de projeto de software é formada por diversos componentes interrelacionados.
Por exemplo, algumas tarefas de um projeto somente podem ser realizadas após a conclusão de outras tarefas (dependência entre tarefas).
Tarefas produzem artefatos, consumindo artefatos produzidos por outras tarefas (dependência entre tarefas e artefatos).
Tarefas que são realizadas por desenvolvedores (dependência entre tarefas e desenvolvedores) que utilizam ferramentas (dependência entre tarefas e ferramentas) e consomem recursos (dependência entre tarefas e recursos).
Outras dependências podem ser traçadas relacionando as tarefas e tecnologias aplicadas, o projeto e o domínio da aplicação, entre outros.
Outros relacionamentos podem ser identificadas em e, onde são apresentados modelos descritivos de processos de desenvolvimento de software.
A gerência de projeto de software envolve muitas informações que variam ao longo de o tempo, como o tamanho da equipe, o volume do código produzido (equipe de desenvolvimento), o número de tarefas pendentes, o número de requisitos testados, entre outros.
Outra característica dinâmica muito importante e presente na gerência de projeto de software é a de um sistema, projetado e desenvolvido, que reage de maneira distinta a curto e longo prazo.
A &quot;Lei de Brooks «é um exemplo claro deste efeito.
A curto prazo o ingresso de novos integrantes numa equipe de desenvolvimento atrasa o projeto, devido a o tempo que os desenvolvedores experientes deverão dedicar ao treinamento dos novatos.
Entretanto, após o treinamento, os desenvolvedores novatos contribuirão de forma positiva para a produtividade da equipe.
Assim, a &quot;Lei de Brooks «vale localmente, mas não globalmente num sistema.
A gerência de projeto de software contém diversos ciclos de realimentação.
Por exemplo, se um projeto está atrasado em relação a o seu planejamento, a gerência pode incentivar a equipe a trabalhar horas extras.
Entretanto, embora o esforço da equipe reduza momentaneamente o atraso do projeto, a qualidade dos artefatos produzidos durante estas horas geralmente é inferior aos artefatos produzidos durante a jornada normal de trabalho.
A redução da qualidade se reflete num maior número de erros, que exigirão maior esforço para detecção e correção.
O atraso provocado por a detecção e correção dos erros derivados do trabalho de baixa qualidade pode ser maior que o atraso que originalmente provocou a decisão por o incentivo ao trabalho em horas extras.
Assim, ao longo de a gerência do projeto, uma decisão pode ter efeito sobre ela mesma, o que representa o ciclo de realimentação.
A gerência de projeto de software possui diversas relações não-lineares.
O efeito de uma decisão geralmente não pode ser mapeado por uma relação proporcional à ação original.
Considerando- se o exemplo da seção 3.3.3, não se pode assumir que o tempo ganho com o incentivo das horas extras é linear ao esforço necessário para a correção dos erros gerados por o trabalho de qualidade inferior.
A gerência de projeto de software envolve diversos aspectos qualitativos, devido a sua estreita relação com as ciências humanas.
Essa relação se deve à influência que os gerentes de projeto exercem sobre o comportamento do processo e a qualidade dos produtos.
Desta forma, a gerência de projeto não deve ser vista como uma tarefa de pura engenharia, onde o componente social possa ser negligenciado.
O relacionamento entre os integrantes da equipe do projeto, e a motivação da equipe em relação a o mesmo e às características específicas da cultura da organização de desenvolvimento são fatores sociais que influenciam diretamente no sucesso ou insucesso de um projeto de software.
Os projetos possuem caráter único, e a eles está associado um certo grau de incerteza.
Desta forma, para o desenvolvimento dos projetos, usualmente eles são divididos em fases, visando a um melhor controle e a uma adequada ligação entre cada projeto e seus processos.
O conjunto de fases de um projeto é conhecido como ciclo de vida do projeto, onde cada fase do projeto é marcada por a conclusão de um ou mais produtos da fase.
Por exemplo, quando uma organização identifica uma oportunidade dentro de sua linha de atuação, normalmente ela solicita um estudo de viabilidade para decidir se deve criar um projeto.
O ciclo de vida do projeto determina se o estudo de viabilidade constituirá a sua primeira fase ou se deve ser tratado como um projeto à parte.
Esse ciclo de vida do projeto serve para definir o início e o fim do mesmo.
A definição do ciclo de vida do projeto também determina os procedimentos de transição para o ambiente de operação que serão incluídos ao final do projeto, distinguindo- os dos que não serão.
Os ciclos de vida dos projetos geralmente definem que trabalho técnico deve ser realizado em cada fase e quem deve estar envolvido em elas.
A maioria das descrições do ciclo de vida do projeto apresenta algumas características em comum:
Em o início do projeto, a probabilidade de terminar- lo com sucesso é baixa e, portanto, o risco e a incerteza são altos.
Normalmente a probabilidade de sucesso vai aumentando à medida que o projeto caminha em direção a o seu término.
A capacidade das partes envolvidas de influenciar as características finais do produto do projeto e o seu custo final é alta no início e vai se reduzindo com o andamento do projeto.
Isso acontece, principalmente, porque o custo de mudanças e correção de erros geralmente aumenta à medida que o projeto se desenvolve.
Para Schwalbe, o ciclo de vida da gerência de projeto consiste basicamente em processos de inicialização, planejamento, execução, controle do projeto e encerramento deste.
A inicialização considera os processos necessários para garantir que o projeto será executado.
Tarefas freqüentemente envolvidas no processo de inicialização do projeto incluem uma análise de um stakeholder, a preparação de um estudo de possibilidades e um documento de requisitos iniciais.
Os processos de planejamento visam planejar e manter um esquema de trabalho viável para se atingir os objetivos do projeto, envolvendo principalmente a determinação do escopo, a programação de atividades, a orçamentação e os planos do projeto.
A execução consiste em coordenar as pessoas e recursos para executar o plano e envolve principalmente garantia de qualidade, distribuição de informações e seleção de fornecedores.
Os processos de controle visam assegurar que os objetivos do projeto estão sendo atingidos, através da monitoração e avaliação do seu progresso, controlando as mudanças, custos, qualidade e riscos.
Por fim, o encerramento formaliza a aceitação do projeto ou fase, encerrando- o de forma organizada.
A figura 4 mostra os grupos de processos de gerência de projeto e como eles se relacionam, em termos de nível de atividade e intervalo de tempo (I, iniciação;
P, planejamento;
Ex, execução;
C, controle;
E, encerramento).
Para Meredith, o ciclo de vida da gerência de projeto é composto por os processos de inicialização, implementação e encerramento do projeto.
A inicialização envolve basicamente a seleção, a escolha do gerente do projeto, a organização, o planejamento e a resolução de conflitos.
A implementação envolve a orçamentação, a programação de prazos, a alocação de recursos e o controle do projeto.
O encerramento inclui a auditoria do projeto e o seu encerramento de forma organizada.
A figura 5 ilustra a visão de sobre os processos.
Processos de Inicialização Seleção; Escolha do gerente;
Organização; Planejamento;
Resolução de conflitos Processos de Implementação Orçamentação;
Prazos; Recursos;
Controle. Processos de Encerramento Auditoria;
Da mesma maneira que um projeto tem um ciclo de vida, assim acontece com um produto.
Ciclos de vida de desenvolvimento de software são frameworks que descrevem as fases envolvidas no desenvolvimento e manutenção de sistemas.
O ciclo de vida de um software é a definição dos passos que transformam uma idéia em produto acabado.
Os modelos de ciclo de vida são o centro do processo de gerenciamento do software.
Esses modelos possibilitam ao gerente controlar o processo de desenvolvimento de software e permitem ao desenvolvedor obter a base para produzir de modo eficiente um software que satisfaça os requisitos estabelecidos.
Os ciclos de vida especificam algumas atividades que devem ser executadas, assim como a sua ordem.
Sua função básica é diminuir os problemas encontrados no processo como um todo.
Deve salientar- se que, mesmo numa área de aplicação semelhante, tem- se variações significativas no ciclo de vida de projeto.
Como exemplo, pode- se citar o ciclo de vida de desenvolvimento de software de um determinado projeto que pode ter uma única fase de design, enquanto outro pode apresentar duas fases, uma de especificação funcional e outra para design detalhado.
Modelos de ciclo de vida diferentes possuem componentes de ciclo de vida diferentes, e não há um modelo de ciclo de vida correto.
Como gerente de projeto, é importante compreender os conceitos base e razões por trás de vários modelos, porque alguns se adeqüam mais a desenvolvimento orientado a objeto do que outros.
Por fim, é feita a ligação de conceitos dos modelos, além de a criação de um que atenda suas necessidades.
É fundamental escolher o modelo certo.
O modelo de ciclo de vida escolhido se torna a ferramenta de gerência;
Ele é a visão comum de como o trabalho será feito.
O ciclo de vida fornece meios para estabelecer pontos de controle, planejar e controlar processo, planejar e controlar orçamento, estimar status e gerenciar risco.
Em a análise do ambiente empresarial atual, destaca- se transformações ocorridas em função de os avanços tecnológicos uma série de na informática e telecomunicações, bem como grandes mudanças no cenário político-econômico mundial Em um ambiente comercial relativamente estável, as pessoas tendem a tornarem- se naturalmente mais proficientes, com o passar do tempo.
De forma implícita, o conhecimento é absorvido e socializado dentro de a companhia.
Em um ambiente deste, é seguro afirmar que há capacidade e conhecimento suficientes na empresa, ou que o aprendizado incremental acontece na velocidade certa para se lidar com as contingências.
O tempo, a lógica e a experiência resolvem a maioria dos problemas.
Atualmente, as mudanças ocorrem em rápida velocidade, exigindo da organização um esforço muito maior para se manter competitiva.
Seus processos e produtos precisam estar em constante e acelerada evolução para poder acompanhar as demandas do mercado.
A intensidade de conhecimento sobre os produtos também é resultado de uma tendência a customização de massa, que vem introduzindo cada vez mais necessidades particulares de clientes, no que antes costumava ser um produto (fechado) padrão.
O que poderia ser apenas um negócio de &quot;commodities», acaba vendo sua margem de lucros crescer exponencialmente por causa desse componente de conhecimento incorporado O enxugamento do quadro de funcionários das empresas gera uma maior concentração do conhecimento depositado num número menor de funcionários.
A mobilidade da mão-de-obra é um fato da vida moderna e a erosão da base do conhecimento da empresa ocorre a cada reposição.
Usando a gestão do conhecimento, para representar o que as pessoas sabem, torna- o acessível à empresa, transformando o conhecimento individual em ativo transferível.
Com relação a o desenvolvimento de software, hoje, gerenciar grandes projetos tem se tornado uma tarefa cada vez mais complexa.
Não apenas por causa de o crescimento dos projetos, mas também porque as equipes de projeto vêm se distribuindo no tempo e no espaço, inseridas no conceito de globalização que a sociedade têm vivenciado nos últimos anos.
Isto configura, então, o desenvolvimento distribuído de software, em o qual algumas pessoas envolvidas nesse processo estão fisicamente distantes.
As empresas buscam vantagens competitivas em termos de custos, qualidade ou flexibilidade na área de desenvolvimento de sistemas, além de ganhos de produtividade e diluição de riscos.
Em esse caso, ao optar por instanciar um ambiente de desenvolvimento distante fisicamente da sua sede, uma organização começa a encarar diversos desafios de adaptação, diferenças culturais, planejamento do trabalho, treinamento da nova equipe, entre outros.
A globalização retira as barreiras que definem um mercado, trazendo para um mesmo patamar competidores locais e globais.
As empresas passam a unificar suas atuações em diferentes regiões e a desenvolver ações coordenadas.
Negócios que antes eram organizados segundo linhas geográficas, estão se reorientando em matrizes complexas de acordo com os mercados, produtos e processos.
Dentro de as organizações, as pessoas dispersas geograficamente combinam esforços em &quot;equipes virtuais».
Qualquer estrutura organizacional que extrapola as bases geográficas aumenta sua necessidade de gestão do fluxo de informações.
Onde antes bastavam redes locais e casuais, hoje redes inter-regionais e internacionais são estabelecidas.
A chave está em reconhecer mecanismos existentes voltados à partilha-deconhecimento, mesmo que informalmente, e que precisam ser substituídos e adaptados para um mundo novo, muito mais interligado.
Em outras palavras, se uma cafeteria era fonte de troca de conhecimento útil numa empresa tradicional, o que seria a cafeteria virtual?
Em uma firma tradicional o contato de pessoa para pessoa era essencial para estabelecer confiança.
Como isto pode ser gerenciado em organizações distribuídas e dispersas globalmente?
O verdadeiro desafio é usar a tecnologia, da maneira mais criativa possível, para gerar a mais ampla e ágil &quot;mídia para comunicação».
Em suma, conhecimento e informação tornam- se o meio em que ocorrem os problemas e negócios.
Assim, gerir conhecimento representa uma excelente oportunidade para alcançar economias substanciais, melhoras significativas na performance humana e vantagem competitiva.
Com globalização da economia, muitas organizações estão distribuindo geograficamente seus recursos e investimentos visando obter melhores resultados.
Em relação a o desenvolvimento de software, ambiente fisicamente distribuído é uma nova tendência de desenvolvimento de software, onde usuários e equipe de desenvolvimento estão em locais físicos diferentes, às vezes países, com culturas diferentes.
Maior produtividade, redução de custos, minimização dos riscos e melhoria na qualidade, são algumas características que grandes organizações buscam com a distribuição de seus processos de desenvolvimento de software fora de seus países.
Em este contexto, surge um novo problema na gerência de projeto de software, que envolve, principalmente, a distância física entre os participantes do processo.
De essa forma, os já tradicionais problemas inerentes ao processo de desenvolvimento, fortemente centrados nas fases de especificação de requisitos e análise de sistemas, ganham contornos mais críticos.
A forma de resolver esses problemas está centrada na adoção de linguagens de especificação e processos de gerência mais formais e definidos.
Modelos de verificação certificação do nível de maturidade do processo de desenvolvimento de software têm- se tornado cada vez mais importantes e úteis para as organizações contratantes terem um mínimo de garantia sobre a qualidade do processo utilizado por a organização ou laboratório de desenvolvimento de sistemas parceiros.
Com a distribuição dos atores envolvidos no processo de uso, definição e desenvolvimento de sistemas, é necessário organizar e assegurar a qualidade desta integração.
Para isto, é importante existirem modelos com capacidade de descrição e ambientes de automação computacional para os mesmos, possibilitando o emprego desses tipos de descrição para o suporte computacional do fluxo de trabalho.
Uma das soluções para atender a esses requisitos é a definição de um modelo de gerência de projeto voltado para um ambiente fisicamente distribuído, que mantenha gerenciamento do fluxo de informação na organização, independente da localização física dos participantes do processo de desenvolvimento de software (usuários, analistas, desenvolvedores, etc.).
A o longo deste trabalho, foram encontrados diversos critérios que podem caracterizar a distribuição física.
Os critérios encontrados são apresentados a seguir:
A distância física dos participantes do processo é um critério utilizado para definir o quão distantes estão os atores envolvidos e suas respectivas áreas de negócio.
Existem várias situações de distância física entre os participantes do projeto.
Eles podem estar distantes numa mesma sala ou prédio, em municípios, estados, continentes mundialmente.
Com relação equipe de desenvolvimento, duas situações devem ser consideradas.
A primeira indica que a equipe de desenvolvimento pode ser distribuída de forma a trabalhar distante fisicamente.
Essa distribuição pode ter cada integrante da equipe distante fisicamente, ou podem existir subequipes de desenvolvimento que estão distribuídas.
A segunda situação indica que a equipe de desenvolvimento localiza- se no mesmo espaço físico, ou seja, trabalhará sempre fisicamente junta.
As diferenças culturais num ambiente distribuído surgem das diferenças culturais entre os membros das equipes e entre os locais fisicamente distantes.
Por isso, diferenças culturais são aspectos importantes para o desenvolvimento distribuído, pois diversos problemas podem ser causados por elas.
Até a última década, a maior parte dos projetos de software eram desenvolvidos em grupos geograficamente reunidos, trabalhando como uma equipe altamente coesa.
No entanto, há uma tendência crescente por utilizar equipes geograficamente dispersas para desenvolver software.
Em parte, é responsável por esta tendência, o desejo de aproveitar ao máximo as habilidades do pessoal disponível para o projeto, não importando sua localização.
Essa alteração importante na organização, principalmente da equipe desenvolvimento do projeto, exige alterações no processo de software.
Grundy et al.
Apontam alguns problemas criados ou exacerbados por essas alterações.
É interessante notar que, muito embora se fale dos problemas, existe pouca discussão das vantagens que processo de gerenciamento desenvolvimento distribuído oferece.
A principal, e óbvia, é a possibilidade de reunir numa equipe um conjunto de desenvolvedores geograficamente dispersos.
Os problemas apontados por Grundy são:
A atribuição das tarefas do desenvolvimento aos membros da equipe;
Esses problemas são tratados em diversos outros trabalhos da área[ Fie 96, HER 99HER 99], em particular, é um estudo de caso que faz uma análise bastante completa das dificuldades do desenvolvimento distribuído, e será discutido na próxima seção.
Herbsleb et.
Al realizaram um estudo de um projeto de desenvolvimento de software, distribuído entre dois centros da Lucent, na Alemanha e Inglaterra, para o desenvolvimento de um software para comutação telefônica.
Em este estudo, é feita uma discussão interessante das questões práticas enfrentadas por as equipes.
Uma das questões que o artigo discute é a divisão em módulos de um sistema.
Os autores defendem que esta reflete diretamente numa divisão do trabalho entre os grupos dispersos, o que torna a responsabilidade dos módulos e suas interfaces muito importantes e, freqüentemente, uma fonte de problemas.
Outra questão é que o plano e o modelo de processo não representam adequadamente os aspectos informais que sustentam o desenvolvimento centralizado:
O estudo aponta dificuldades enfrentadas no projeto;
Entre elas estão as seguintes:
A integração entre os módulos foi problemática.
Os motivos principais foram um plano de integração falho (não contemplava disparidade das entregas efetivas dos módulos) e pouca experiência com a plataforma de hardware terceirizada.
Manter a consistência entre os repositórios de versão se mostrou difícil;
E quando se escolheu consolidar o processo num repositório único, a dificuldade de julgar alterações se mostrou grande;
Não havia conhecimento suficiente do código desenvolvido por o outro grupo.
A comunicação e contato entre os grupos era restrita, especialmente durante a fase inicial do projeto, onde existia pouca intimidade entre os desenvolvedores, e grandes diferenças culturais para superar.
É apontado como um problema especialmente sério o custo alto para iniciar a comunicação, que envolvia descobrir quem seria o responsável por um módulo, encontrar- lo, e efetivamente iniciar a comunicação.
Os autores concluem com as seguintes observações:
A distribuição física trabalha contra os mecanismos informais de comunicação.
A divisão modular do sistema tem importância fundamental para a divisão do trabalho, e deve ser feita com atenção na estabilidade e compreensão das interfaces.
É fundamental estabelecer mecanismos para comunicar a situação atual do desenvolvimento e localizar os responsáveis por cada parte do processo.
Investir na transposição das barreiras de comunicação iniciais é de extrema importância;
Um plano de viagens é importante para vencer a timidez e desconfiança iniciais;
Ferramentas adequadas para comunicação são essenciais ao processo de gerência e desenvolvimento.
Para os problemas apontados por Grundy, Herbsleb et al.,
existe discussão em alguns trabalhos, sendo que as soluções são apresentadas em dois níveis:
Primeiro, na elaboração de um processo que seja bem adaptado às necessidades de desenvolvimento em ambiente distribuído;
Segundo, no desenvolvimento de ferramentas específicas para apoiar projetos distribuídos.
Uma possibilidade de apoio ao processo é o uso de sistemas de workflow e automação de processo;
No entanto, a maior parte dos trabalhos estudados aponta que sistemas de workflow não se adaptam bem ao desenvolvimento de software.
Grundy et al.
Descrevem o problema da seguinte forma:
&quot;Sistemas de Workflow e planejamento de projeto provêm recursos mais acessíveis para modelar processos de trabalho, mas em geral não dispõem da flexibilidade para especificar mecanismos de coordenação de trabalho e integração de ferramentas.»
Cook descreve um mecanismo baseado em eventos para capturar informação de um projeto de software distribuído em, e nesse trabalho ele levanta uma característica importante:
Se todo diálogo é registrável, é possível acumular dados e posteriormente analisar- los para compreender melhor o processo.
Esta parece ser uma vantagem importante que projetos distribuídos têm:
O fato de toda comunicação ser registrável e estruturável, já que é transmitida por canais passíveis de armazenamento e medição.
A possibilidade de se utilizar este registro para levantar um histórico de alterações nos diferentes produtos de um projeto é bastante interessante.
Várias ferramentas e ambientes têm sido desenvolvidos ao longo de os últimos quatro anos para ajudar no controle e coordenação das equipes de desenvolvimento que estão inseridas neste tipo de ambiente.
Muitas dessas ferramentas estão focadas no suporte aos procedimentos de comunicação formal, tais como elaboração de documentos, processos automatizados e outros canais de comunicação não interativos.
Um estudo de caso feito por concluiu que o desenvolvimento de software necessita de um suporte extensivo para a comunicação informal e interativa.
Possivelmente, porque seja tão importante um conjunto de ferramentas apropriadas para o tipo de tarefa, existe uma preocupação tão grande com o assunto de software de suporte ao desenvolvimento distribuído.
Fielding et al.
Apontam o surgimento da Internet como uma solução importante para o problema da Engenharia de Software em projetos descentralizados ou distribuídos, e sugerem um conjunto de alterações à tecnologia Web para permitir bom suporte à engenharia de software:
Parte desses requisitos tem sido desenvolvida por o W3C, nos últimos anos, como parte do desenvolvimento de novos padrões para a Web.
Em particular, a tecnologia WebDAV, que existe para permitir autoria e controle de versões para documentos Web, já está desenvolvida e é utilizada em alguns produtos para Web[ WHI Existem diversos projetos para desenvolver ferramentas colaborativas para Engenharia de Software através da Web, a exemplo dos citados em.
No entanto, parece faltar ainda um conjunto de ferramentas que seja pouco restritivo, multiplataforma, e que suporte os recursos mínimos necessários à colaboração de fato para o desenvolvimento de software distribuído.
Vários aspectos diferenciam a gerência de projeto de software num ambiente centralizado de um ambiente distribuído.
A caracterização de um ambiente distribuído ocorre quando pelo menos um dos atores envolvidos (equipe de desenvolvimento, clientes, usuários) estiver fisicamente distante dos demais.
A gerência de projeto de software, num ambiente distribuído, deve abordar, de forma diferenciada, algumas características consideradas fatores de sucesso nesse tipo de ambiente.
Entre estas, podemos destacar: --
Comunicação: Em um ambiente centralizado o processo de comunicação entre as equipes torna- se mais controlável, isso devido a a proximidade dos integrantes das equipes que compõem o projeto.
A comunicação, na gerência de projeto de software num ambiente distribuído, é uma característica fundamental para o bom andamento e execução de um projeto.
A falta de comunicação num ambiente distribuído faz com que as equipes fisicamente distantes não saibam de informações relevantes sobre o projeto, sobre a equipe de projeto, entre outros.
Em um ambiente distribuído é necessário existir um fluxo de informações contínuo e eficaz entre os integrantes das equipes. --
Gerenciamento da equipe:
Equipes são compostas por pessoas que têm suas próprias idéias em como solucionar determinados problemas.
Mas, muitas vezes, isto é prejudicial, causando problemas que poderiam ser melhor gerenciados num ambiente de trabalho em grupo.
A gerência de projeto de software num ambiente centralizado pode ter equipes compostas por membros que seguem um padrão de qualidade, trabalham juntos e podem aprender uns com os outros, todos integrantes podem saber o que cada um está desenvolvendo e podem facilmente trocar informações.
Devido a a distância física entre os participantes, a gerência de projeto de software, num ambiente distribuído, requer um processo de gerência e comunicação padrão para que essas características sejam alcançadas. --
Credibilidade: A gerência de projeto de software precisa lidar com a credibilidade existente entre os participantes do projeto.
Ter credibilidade é ter confiança, segurança e firmeza no trabalho da equipe como um todo, independente de quem for destinado a realizar o mesmo.
Em um ambiente distribuído essa característica torna- se ainda mais relevante, pois é de vital importância a credibilidade existente entre os participantes distantes fisicamente, para o bom fluxo de informações entre as equipes distribuídas. --
Conflitos: Em qualquer ambiente de gerência ou desenvolvimento de software está propício a ocorrer conflitos.
Em um ambiente centralizado estes ocorrem devido a o não entendimento por parte de a equipe de suas funções, da falta de comunicação, de uma estimativa irreal, entre outros fatores.
Em um ambiente distribuído os conflitos apresentam mais complexidade na sua resolução.
Além de os motivos acima citados, as diferenças culturais e a distribuição física das equipes que compõem o projeto. --
Cooperação: A gerência de projeto de software num ambiente distribuído exige um grau maior de cooperação entre os participantes do projeto que num ambiente centralizado.
Isso devido a a distância física entre as equipes num ambiente distribuído.
É necessário gerenciar o trabalho em equipe para se chegar a um objetivo comum. --
Processos definidos:
A gerência de projeto de software, num ambiente distribuído, requer regras e processos bem definidos, o que auxilia na coordenação e entendimento das atividades por parte de as equipes.
Deve existir um suporte para a definição de processos das atividades gerenciadas. --
Diferenças culturais:
Em a maioria dos casos esta característica não está presente em ambientes centralizados, mas é comum em ambientes distribuídos.
As equipes fisicamente distantes podem ser compostas por pessoas de locais (cidade, estado, país, continente) diferentes.
A gerência de projeto de software neste ambiente deve medir o nível de diferenças culturais existentes entre as equipes fisicamente distantes, pois, às vezes, determinadas ações podem ser mal interpretadas por o simples fato de fazer parte da cultura de uma equipe, e não da outra.
Em, o autor procura definir situações onde exista o desenvolvimento distribuído de software, chegando à conclusão de que a caracterização deste ambiente ocorre sempre quando pelo menos um dos atores envolvidos (equipe de desenvolvimento, clientes, usuários) estiver fisicamente distante dos demais.
A o considerar esta definição, propõe alguns critérios que definem o nível de distribuição física entre os atores.
O primeiro critério é a distância física interatores que, considerando os três atores existentes (equipe de desenvolvimento, clientes e usuários), seria a distância física existente entre estes.
O segundo critério é a distância física intraatores, que define a distância física existente dentro de cada equipe de atores (por exemplo, dentro de a equipe de desenvolvimento, ou do conjunto de usuários).
Um ambiente distribuído diferencia- se de um ambiente centralizado por o fato de que uma das equipes do projeto está distante fisicamente dos demais.
A atuação, num ambiente distribuído, pode se tornar crítica, quando o nível de distribuição física entre os atores é maior e as diferenças culturais são explícitas.
Independentemente disto, existe uma forte tendência hoje das empresas distribuírem seus processos de gerência de projeto e de desenvolvimento de software ao redor de o mundo, aproveitando incentivos fiscais e buscando vantagens competitivas em termos de custo, flexibilidade, qualidade e produtividade.
É difícil encontrar na literatura um material que permita obter critérios e classificações genéricas para ambientes distribuídos.
Em esse sentido, muita pesquisa vem sendo feita e muitos autores têm estudado este assunto,,, mas o que se pode concluir é que o desenvolvimento distribuído de software é um processo bastante dinâmicos que pode ter inúmeras configurações e diversos cenários possíveis, dentro de uma mesma empresa ou apenas dentro de uma mesma área de uma empresa, dependendo do tamanho desta empresa e dos seus objetivos com este tipo de configuração.
Mas trabalhar com desenvolvimento distribuído de software é um grande desafio do atual ambiente de negócios, e ter mecanismos capazes de gerir e suportar este tipo de configuração é uma linha de pesquisa que está crescendo cada vez mais.
A atuação num ambiente fisicamente distribuído requer, principalmente, a integração entre participantes e processos que compõem o desenvolvimento de software.
Para organizar e assegurar a qualidade dessa integração é importante existirem modelos com capacidade de descrição e ambientes de automação computacional para os mesmos, possibilitando o emprego desses tipos de descrição para o suporte computacional do fluxo de trabalho.
Existem diversos modelos de gerência de projetos, em os quais foram analisados os de,, e.
O modelo de gerência de projetos orientado a objetos e o modelo de gerência de projetos processual são alguns dos mais atuais.
O modelo de gerência de projetos orientado a objetos faz uso da UML e do UP nas fases do projeto, para que cada participante possa manter o processo de desenvolvimento e uma comunicação padrão no decorrer de o mesmo.
Em o modelo de gerência de projetos processual é destacada a forma com que os processos são divididos, facilitando a comunicação entre as fases do projeto.
Outro modelo que podemos destacar é o modelo de, que aborda a teoria-W, teoria de gerenciamento que estabelece que a condição necessária e suficiente para o sucesso de um projeto é que todos os interessados sejam ganhadores.
Este capítulo está organizado em quatro seções.
Em a seção 4.1, apresenta- se o modelo de gerência de projetos processual, incorporando abordagens do PMI e de Schwalbe;
Em a seção 4.2, o modelo de gerência de projetos orientado a objetos, segundo a abordagem de Cantor;
Em a seção 4.3, a visão de modelo de gerência de projetos de Boehm e por fim, na seção 4.4 apresentamos uma análise crítica e comparativa dos modelos de gerência de projetos abordados.
O modelo de gerência de projeto processual é descrito segundo a abordagem de Schwalbe, que incorpora os conceitos de gerência de projeto do PMI num modelo de gerência de projeto de software.
Conforme o modelo, os gerentes devem ter conhecimentos em nove áreas de conhecimento gerencial:
1. Gestão de Integração do Projeto;
2. Gestão do Escopo;
3. Gestão de Prazos;
4. Gestão de Custos;
A distribuição dessas áreas no desenho não foi ao acaso.
Elas foram distribuídas em dois grupos distintos representados por os quadrados.
Em o quadrado que dá base ou sustentação ao projeto estão:
Custo, Escopo, Tempo e Qualidade.
Em o outro temos as gerências complementares, embora também importantes e necessárias:
Recursos Humanos, Riscos, Comunicação e Aquisição.
A última área, Integração, foi colocada numa posição central, porque tem a função de integrar todas as demais gerências.
O objetivo dessas áreas é destacar os principais focos de atenção que deve ter um gerente de projetos.
Dependendo do projeto, da empresa e da cultura da organização, algumas podem merecer mais atenção do gerente de projetos.
Porém, é importante que todas sejam planejadas e acompanhadas com cuidado.
Em projetos pequenos geralmente o gerente do projeto é quem faz a gerência de todas essas áreas.
Em grandes projetos, é comum que para cada uma dessas gerências ou pelo menos para as principais sejam destacados gerentes exclusivos.
Essas áreas não estão dispostas numa seqüência lógica para o desenvolvimento e nem são desenvolvidas uma após outra.
Elas ocorrem de forma simultânea durante a maior parte de um projeto.
Esse agrupamento tem apenas uma função didática.
O que têm uma seqüência lógica para serem desenvolvidos são os processos característicos de cada uma das gerências.
A Gerência da Integração do Projeto inclui os processos requeridos para assegurar que os diversos elementos do projeto estão adequadamente coordenados.
Ela envolve fazer compensações entre objetivos e alternativas eventualmente concorrentes, a fim de atingir ou superar as necessidades e expectativas.
Desenvolvimento do plano do projeto, execução do plano do projeto e controle geral de mudanças são peças fundamentais na integração do mesmo.
A figura 7 ilustra a importância da integração para se chegar com sucesso ao final do projeto.
O desenvolvimento do plano do projeto utiliza as saídas dos outros processos para criar um documento consistente e coerente que possa ser usado para guiar tanto a execução quanto o seu controle.
O plano do projeto é usado para guiar sua execução, documentar suas premissas, documentar as decisões de planejamento do projeto de acordo com as alternativas escolhidas, definir as revisões chaves de gerenciamento com relação a o conteúdo, âmbito e prazos e prover um &quot;baseline «para medida de progresso e controle do projeto.
A execução é o processo básico de realização do plano do projeto ­ pois é em ele que a grande maioria do orçamento deste será gasta.
Em esse processo, o gerente e a equipe de gerência do projeto devem coordenar e direcionar as diversas interfaces técnicas e organizacionais do projeto.
O controle geral de mudanças se preocupa com: (
a) influenciar os fatores que criam as mudanças para assegurar que elas sejam benéficas; (
b) determinar que uma mudança ocorreu;
E (c) gerenciar as mudanças no momento em que ocorrem.
A Gerência do Escopo do Projeto inclui os processos requeridos para assegurar que o projeto inclua todo o trabalho necessário, e tão somente este, para complementar de forma bem sucedida o projeto.
A preocupação fundamental consiste em definir e controlar o que está ou não incluído no projeto.
A iniciação, planejamento do escopo, detalhamento, verificação e controle de mudanças fazem parte de gerência do escopo do projeto.
A iniciação é o processo de reconhecimento formal de que um novo projeto existe ou que um projeto existente deve continuar em sua próxima fase.
A iniciação formal liga o projeto com o trabalho em execução na organização.
Os projetos são, tipicamente, autorizados como resultado de uma ou mais das seguintes situações: --
uma demanda de mercado; --
uma necessidade do negócio; --
um pedido (uma exigência) de cliente;
um avanço tecnológico e; --
uma exigência legal.
O planejamento do escopo é o processo de desenvolvimento de uma declaração escrita do mesmo como base para decisões futuras do projeto incluindo, em particular, os critérios usados para determinar se o projeto ou fase foi completado com sucesso.
A declaração do escopo forma as bases para um acordo entre a equipe do projeto e o cliente deste através da identificação de seus objetivos bem como de seus principais subprodutos.
O detalhamento do escopo significa a subdivisão dos principais subprodutos do projeto em componentes menores e mais manejáveis para se ter condição de:
A verificação do escopo é o processo de formalização do aceite do escopo do projeto por as partes envolvidas (patrocinador, cliente, usuário, etc).
Isto exige uma revisão dos produtos e resultados do trabalho para garantir que tudo foi completado correta e satisfatoriamente.
Se o projeto terminar mais cedo, o processo de verificação do escopo deve estabelecer e documentar o nível e extensão da complexidade.
O controle de mudanças do escopo consiste em: (
a) influenciar os fatores que criam mudanças no escopo para garantir que estas sejam benéficas; (
b) determinar que uma mudança no escopo ocorreu;
E (c) gerenciar as mudanças reais, na eventualidade de sua ocorrência.
O controle das mudanças de escopo deve ser completamente integrado aos outros processos de controle.
Alguns produtos serão gerados nessa etapa, entre eles destacamos:
Project charter ou plano sumário;
Designação do gerente do projeto;
Restrições do projeto;
A declaração do escopo;
Plano de gerência do escopo;
A estrutura analítica do projeto (EAP) ou Work Breakdown Structure (WBS).
A Gerência do Tempo do Projeto inclui os processos necessários para assegurar que ele será implementado no prazo previsto.
Definição das atividades, sequenciamento das atividades, estimativa e duração, desenvolvimento e controle do cronograma fazem parte de gerência do tempo do projeto.
Em alguns projetos, especialmente os menores, o sequenciamento das atividades, estimativa da duração das atividades desenvolvimento do cronograma estão tão unidos que podem ser vistos como um único processo.
A definição das atividades envolve identificar e documentar as atividades específicas que devem ser realizadas com a finalidade de produzir os diversos níveis de subprodutos identificados na EAP.
O sequenciamento das atividades envolve identificar e documentar as relações de dependência entre as atividades.
As atividades devem ser seqüenciadas corretamente com a finalidade de suportar o desenvolvimento de um cronograma realístico e alcançável.
A figura 8 é um exemplo de sequenciamento de atividades.
A estimativa da duração da atividade envolve a avaliação da quantidade de períodos de trabalho que provavelmente serão necessários para implementar cada atividade.
Uma pessoa ou grupo da equipe do projeto que estiver mais familiarizada com a natureza de uma atividade específica deve fazer ou, no mínimo, aprovar a estimativa.
Desenvolver o cronograma significa determinar as datas de início e fim para as atividades do projeto.
Se as datas de início e fim não forem reais, é improvável que o projeto termine como planejado.
O processo de desenvolvimento do cronograma deve, freqüentemente, ser repetido (junto aos processos que fornecem entradas, especialmente as estimativas das durações e de custos) antes da determinação do cronograma do projeto.
O controle do cronograma consiste em: (
a) influenciar os fatores que criam mudanças em ele, para garantir que estas sejam benéficas; (
b) determinar que o cronograma foi alterado;
E (c) gerenciar as mudanças reais, quando e como elas ocorrem.
O controle do cronograma deve estar fortemente integrado aos outros processos de controle.
A gerência do custo do projeto consiste, fundamentalmente, nos custos dos recursos necessários à implementação de suas atividades.
Entretanto, a gerência do custo do projeto deve, também, considerar os efeitos das decisões do projeto no custo de utilização do produto do mesmo.
Por exemplo, limitar o número de revisões do projeto pode reduzir os custos do projeto à custa de um aumento no custo de operação do cliente.
Essa visão mais ampla da gerência do custo do projeto é, freqüentemente, chamada de custo do ciclo de vida (life-- cycle costing).
A gerência do custo do projeto deve considerar as necessidades de informações das partes envolvidas do projeto ­ diferentes interessados podem avaliar os custos do projeto de maneiras diferentes e em diferentes tempos.
O planejamento dos recursos, estimativas dos custos, orçamentação dos custos e controle dos custos fazem parte de gerência do custo do projeto.
O planejamento dos recursos envolve determinar quais recursos físicos (pessoas, equipamentos e materiais) e quanto de cada deve ser usado para a realização das atividades do projeto.
Deve estar firmemente sincronizado com a estimativa dos custos.
Esta envolve desenvolvimento dos custos dos recursos necessários implementação das atividades do projeto.
Quando o projeto é realizado sob um contrato, devem ser tomados cuidados para distinguir custos estimados de preço.
A orçamentação dos custos envolve alocar as estimativas dos custos globais aos itens individuais de trabalho, com a finalidade de estabelecer um baseline de custo para medir o desempenho do projeto.
O controle dos custos está associado a: (
a) influenciar os fatores que criam as mudanças na meta de custo de forma a garantir que estas sejam benéficas; (
b) determinar que a meta de custo foi alterada;
E (c) gerenciar as mudanças reais quando e da forma que elas surgirem.
O controle dos custos inclui monitorar o desempenho destes para detectar as variações do plano;
Assegurar que todas as mudanças adequadas estão registradas corretamente no baseline de custo;
Impedir que mudanças incorretas, não apropriadas ou não autorizadas sejam incluídas no baseline de custo e informar adequadamente às partes envolvidas das mudanças autorizadas.
Inclui também, descobrir o &quot;porquê «das variações, tanto positivas quanto negativas.
Deve estar fortemente integrado com os outros processos de controle.
A Gerência da Qualidade do Projeto inclui os processos requeridos para garantir que o projeto irá satisfazer às necessidades para as quais ele foi empreendido.
Isto inclui todas as atividades da função de gerência geral que determinam as políticas de qualidade, objetivos e responsabilidades e para a implementação destes, por meio de planejamento, controle, garantia e melhoria da qualidade, dentro de o sistema de qualidade.
Qualidade é a totalidade de características de uma entidade que a torna capaz de satisfazer necessidades declaradas ou implícitas.
Um aspecto crítico da gerência da qualidade, no contexto do projeto, é traduzir as necessidades implícitas em declaradas, através da gerência do escopo do projeto.
O planejamento, garantia e controle de qualidade fazem parte da gerência da qualidade do projeto.
O planejamento da qualidade envolve identificar quais padrões de qualidade são relevantes para o projeto e determinar como satisfazer- los.
Ele é um dos processos-chave facilitadores durante o planejamento do projeto e deve ser executado regular e paralelamente aos outros processos do planejamento do projeto.
A garantia da qualidade consiste em todas as atividades planejadas e sistemáticas que são implementadas dentro de o sistema de qualidade, buscando assegurar que o projeto irá satisfazer aos padrões relevantes de qualidade.
Ela deve ser realizada durante todo o projeto.
Pode ser fornecida à equipe de gerência do projeto e à gerência da organização executora (garantia da qualidade interna), ou pode ser fornecida ao cliente e outros não ativamente envolvidos no trabalho do projeto (garantia da qualidade externa).
O controle da qualidade envolve monitorar os resultados específicos do projeto para determinar se eles estão de acordo com os padrões de qualidade relevantes e identificar as formas para eliminar causas de resultados insatisfatórios.
Deve ser realizado durante todo o projeto.
A Gerência dos Recursos Humanos do Projeto inclui os processos requeridos para possibilitar o uso mais efetivo das pessoas envolvidas em ele.
Isto inclui todos os interessados do projeto ­ patrocinadores, clientes, contribuintes individuais e outros.
Planejamento organizacional, montagem da equipe e desenvolvimento da equipe fazem parte de gerência dos recursos humanos do projeto.
O planejamento organizacional envolve identificar, documentar e designar as funções, responsabilidades e relacionamentos de reporte dentro de o projeto.
A figura 9 é um exemplo de gráfico organizacional para um grande projeto de tecnologia de informação.
Nota- se que o pessoal de projeto inclui um gerente de projeto interino, gerentes de subprojetos e equipes.
Gerente de projeto interino supre a ausência do gerente de projeto oficial e o auxilia conforme necessário, similar ao papel de um vicepresidente.
Gerentes de subprojetos são responsáveis por gerenciar os subprojetos em que um grande projeto provavelmente será dividido.
Esta estrutura é típica para grandes projetos.
Com muitas pessoas trabalhando num projeto, definir e alocar as tarefas do projeto é essencial.
Projetos de Ti menores, geralmente não possuem tais gerentes (interino e de subprojetos), tendo apenas os líderes de equipes se reportando a eles.
Fonte: A montagem da equipe envolve conseguir que os recursos humanos necessários (indivíduos ou grupos) sejam alocados ao projeto.
O desenvolvimento da equipe envolve tanto o aumento da capacidade das partes envolvidas para contribuir individualmente, quanto o aumento da capacidade da equipe para funcionar como um time.
O crescimento individual (gerencial e técnico) é a fundação necessária para desenvolver a equipe.
O funcionamento como equipe é crítico no que se refere à capacidade do projeto alcançar seus objetivos.
A Gerência das Comunicações do Projeto inclui os processos requeridos para garantir a geração apropriada e oportuna, a coleta, a distribuição, o armazenamento e o controle básico das informações do projeto.
Todos os envolvidos devem estar preparados para enviar e receber comunicações na &quot;linguagem «do projeto e devem entender como as comunicações, em as quais eles estão individualmente envolvidos, afetam o projeto como um todo.
Planejamento das comunicações, distribuição das informações, relato de desempenho e encerramento administrativo fazem parte de gerência das comunicações do projeto.
Identificar das as necessidades de informação dos interessados e determinar uma forma para atender a essas necessidades, é fator importante para o sucesso do projeto.
A distribuição das informações envolve disponibilizar as necessárias para os interessados do projeto de forma conveniente.
Isto inclui implementar um plano de gerência de comunicações bem como responder aos registros não esperados de informações.
O relato de desempenho envolve coletar e disseminar informações de desempenho para fornecer aos interessados informações sobre como os recursos estão sendo utilizados para alcançar os objetivos do projeto.
Os relatórios de desempenho geralmente devem fornecer informações do escopo, cronograma, custo e qualidade.
Muitos projetos também exigem informações de risco e aquisições.
Os relatórios podem ser preparados de forma abrangente ou baseados em exceções.
Todo projeto ou fase requer encerramento, depois de alcançar seus objetivos.
O encerramento administrativo consiste em verificar e documentar os resultados do projeto para formalizar a aceitação do produto do projeto por os patrocinadores, clientes, etc..
As atividades do encerramento administrativo não devem ser retardadas até a conclusão do projeto.
Cada fase do projeto deve ser apropriadamente encerrada para assegurar que as informações úteis e importantes não sejam perdidas.
A Gerência de Risco do Projeto inclui os processos envolvidos na identificação, análise e resposta aos riscos do projeto.
Isto inclui a maximização dos resultados de eventos positivos e minimização das conseqüências de eventos negativos.
Identificação e quantificação dos riscos, desenvolvimentos das respostas aos riscos e controle destas fazem parte de gerência dos riscos do projeto.
Identificação dos riscos consiste em determinar quais os riscos são mais prováveis de afetar o projeto e documentar as características de cada um.
A identificação dos riscos não é um evento pontual;
Ela deve ser realizado de forma regular ao longo de o projeto, abrangendo tanto os riscos internos quanto os externos.
Os riscos internos são coisas que a equipe do projeto pode controlar ou influenciar, tais como designação de pessoas e estimativas de custos.
Os riscos externos estão além de o controle ou influência da equipe, tais como mudanças no mercado ou ação governamental.
A tabela 2 ilustra os potenciais riscos para cada área de conhecimento.
Pobre atitude em relação a a qualidade, programa de garantia de qualidade inadequado Pobre gerência de conflito, pobre organização do projeto e definição de responsabilidades, ausência de liderança Descuido no planejamento ou na comunicação, falta de consulta com stakeholders chaves Risco ignorado, definição imprópria de risco, pobre gerência de seguro Cláusula contratual, relações adversárias A quantificação dos riscos envolve a avaliação destes e suas interações na previsão do espectro de prováveis resultados do projeto.&amp;&amp;&amp;
Seu principal foco é na determinação dos eventos de risco que justificam uma resposta.
O desenvolvimento de respostas aos riscos envolve definir os passos necessários para o aproveitamento das oportunidades e respostas às ameaças.
As respostas às ameaças geralmente se enquadram numa das três categorias:
Evitar ­ eliminar uma ameaça específica, normalmente eliminando sua causa.
A equipe do projeto nunca pode eliminar todo o risco, mas alguns eventos de risco podem, freqüentemente, ser eliminados.
Mitigar ­ reduzir o valor monetário esperado de um evento de risco, através da redução da probabilidade de ocorrência, reduzindo o valor do evento de risco, ou ambos.
Aceitar ­ aceitar as conseqüências.
A aceitação pode ser ativa ou passiva.
O controle das respostas aos riscos envolve a execução do plano de gerência de riscos a fim de responder aos eventos de risco no decorrer de o projeto.
Quando as mudanças ocorrem, o ciclo básico de identificação, quantificação e resposta se repetem.
A Gerência de Aquisições do Projeto inclui os processos necessários à obtenção de bens e serviços externos à organização executora.
Para simplificação, os bens e serviços, um ou vários, serão geralmente referidos como um &quot;produto».
Planejamento preparação das aquisições, obtenção de propostas, seleção dos fornecedores, administração e encerramento do contrato fazem parte de gerência das aquisições do projeto.
O planejamento das aquisições é o processo que identifica quais necessidades do projeto podem ser melhor atendidas através da contratação de produtos ou serviços fora de a organização do projeto.
Envolve considerações sobre quando, como, o quê, quanto, e onde contratar.
A preparação das aquisições é a preparação dos documentos necessários para suportar o processo de licitação.
A obtenção de propostas refere- se à obtenção de informação (coletas de preços e propostas) dos fornecedores potenciais quanto a o atendimento das necessidades do projeto.
A maioria do esforço real desse processo é despendido por os fornecedores potenciais, sem custo para o projeto.
A seleção de fornecedores envolve a recepção de coletas de preços ou propostas e a aplicação dos critérios de avaliação para selecionar um fornecedor.
A administração dos contratos é o processo de assegurar que o desempenho do fornecedor está adequado aos requerimentos contratuais.
Em grandes projetos, com diversos fornecedores de produtos e serviços, um aspecto chave da administração dos contratos é gerenciar as interfaces entre os diversos fornecedores.
A natureza da relação contratual obriga que equipe do projeto, ao administrar perfeitamente ciente das implicações legais das ações tomadas.
O encerramento do contrato é similar ao encerramento administrativo na medida em que ele envolve tanto a verificação do produto quanto o fechamento administrativo.
Os termos e condições contratuais podem determinar procedimentos específicos para encerramento do contrato.
O término precoce de um contrato é um caso especial de encerramento do contrato.
Em a próxima seção é descrito o modelo de gerência de projeto orientado a objetos.
Segundo Pressman, uma metodologia orientada a objeto sem um processo ou sem uma Gerência de Projetos é como uma máquina sem óleo.
Embora a metodologia possa desenvolver- se bem inicialmente, sem um processo de integração com a organização a efetividade da metodologia diminuirá rapidamente.
Usar uma notação orientada a objeto pode ser muito útil, se a notação for verdadeiramente orientada a objeto, e não somente uma modelagem disfarçada de modelagem orientada a objeto.
A aplicação de uma metodologia orientada a objeto necessita ser acompanhada de outros processos que contemplem pessoas, negócios, organização.
Cantor desenvolvimento de em seu modelo, software, que são:
&quot;inimigos «do inadequados, comunicação inadequada com o cliente e falta de comunicação entre os times do projeto.
Para tratar esses &quot;inimigos», o autor utiliza o conceito de orientação a objetos e considera alguns princípios que servem como guia para a aplicação do modelo.
Estes princípios referem- se a um plano de requisitos que possa ser alterado ao longo de o ciclo de vida, assim como entendimento e a gerência da dinâmica dos times, a exposição clara do que o time necessita fazer e a comunicação entre os atores do projeto.
Os objetos são componentes que realizam uma tarefa determinada.
Possuem algumas características que podem ser utilizadas para um projeto, tais como:
Descrições dinâmicas e estáticas dos requisitos, encapsulação, herança, agregação e pacotes.
A incorporação dessas características num projeto pode melhorar sua produtividade e qualidade por ter três razões principais:
Objetos fornecem a flexibilidade e controle necessários para tratar com requerimentos envolvidos na Gerência de Projetos, em que as descrições estáticas e dinâmicas de requerimentos fornecem uma descrição não ambígua do sistema, fazendo com que desenvolvedores e clientes possam entender- se.
A encapsulação e a definição estática e dinâmica de projeto auxiliam na avaliação do impacto de qualquer mudança no desenvolvimento do projeto.
Objetos facilitam a colaboração, onde a encapsulação e o uso de pacotes permitem a indivíduos e times trabalharem paralelamente em seus componentes facilitando a interação entre os times.
Objetos ajudam a gerenciar a complexidade, em a qual funções e atividades bem especificadas podem ser facilmente compreendidas, pois os objetos encapsulam suas funções, tornando o código mais compreensível.
Um dos principais problemas (&quot;inimigos&quot;) ressaltados por Cantor diz respeito à comunicação.
Para gerenciar equipes de desenvolvimento de software é preciso estar ciente de como as pessoas se comunicam, pois muitos projetos falham porque um modelo de comunicação inapropriado foi traçado por o gerente.
Existem três modelos de comunicação que um gerente de projetos pode utilizar:
Comunicação funcional, comunicação não-estruturada e time de produto.
A comunicação funcional ocorre quando cada uma das funções é assumida por uma equipe, conforme demonstrado na figura 10.
Em esse modelo de comunicação existe pouca interação entre os clientes, times e gerentes.
A falta de comunicação resulta em produtos não construídos como foram projetados, nenhuma responsabilidade compartilhada.
Sistema Integrado Sistema Entregue desenvolvimento fica propenso a uma comunicação disfuncional.
O modelo de comunicação não estruturada por sua vez, possui muita interação entre os atores envolvidos, já que parte do princípio que todos devem falar com todos.
Em esse modelo não existe uma estrutura definida, conforme demonstra a figura 11.
Com times pequenos, esse tipo de comunicação pode ser benéfico, porém em times que envolvem um maior número de atores, ocorrem problemas que dizem respeito à baixa produtividade, tornando- se difícil mensurar e conhecer prazos.
Em a comunicação time de produto consiste em ter times próprios para vários processos onde cada time é responsável por uma atividade principal no processo de desenvolvimento, tendo um líder como responsável principal, conforme a figura 12.
O modelo preocupa- se em entender como as pessoas trabalham juntas para poderem ser facilitados os processos.
O gerente de projeto deve estabelecer uma estrutura para uma comunicação precisa entre a equipe, e então insistir em seu uso.
A implementação de uma linguagem de modelagem de objeto padrão é um componente dessa estrutura.
A Unified Modeling Language (UML) é uma linguagem de modelagem visual de propósito geral que é utilizada para especificar, visualizar, construir e documentar artefatos de um software.
A UML captura decisões e conhecimentos e os utiliza para compreender, desenhar, configurar, manter e controlar informações sobre o software que está sendo desenvolvido.
A UML não é atrelada a nenhum método de desenvolvimento, ciclos de vida de sistema ou domínios específicos e, portanto, pretende suportar a maioria dos processos de desenvolvimento de software orientados a objeto existentes, Cantor considera a UML uma síntese de linguagens orientadas a objetos.
A linguagem inclui um conjunto de diagramas consistentes que podem ser usados para descrever e comunicar os requisitos do sistema de um software, projeto e código.
Pode ser usada para fornecer visões do sistema do projeto e exigências de diferentes níveis de abstração, além de que seus artefatos fornecem uma visão comum que serve de base para o projeto colaborativo.
A UML engloba uma coleção de artefatos que são usados para capturar os requerimentos e projetos de um sistema de software.
Os artefatos da UML que auxiliam na visualização e na execução das atividades são:
Diagramas de Casos de Uso, pois documentam os requerimentos dinâmicos do sistema.
Diagramas de Pacotes:
Fornecem uma visão das classes do projeto do sistema.
Diagramas de Seqüência:
Mostram como as classes realizam os casos de uso.
Diagramas de Componentes:
Mostram como as classes se relacionam ao código atual.
O processo unificado de desenvolvimento de software é o conjunto de atividades necessárias para transformar requisitos do usuário num sistema de software.
Ele é baseado em componentes, significando que o sistema deve ser construído a partir de componentes de software interconectados via interfaces muito bem definidas.
O processo unificado utiliza a UML no preparo de todos os artefatos do sistema Devido a o fato de que o cliente sempre quer mais, melhor e mais rápido, tem- se a necessidade de software cada vez mais complexo.
Não é suficiente apenas a presença de desenvolvedores altamente treinados, precisa- se de um guia organizacional -- um processo conforme salientado por Pressman.
É necessário um processo que integre as várias facetas do desenvolvimento.
Uma das soluções apresentada para esses problemas é a UP (Unified Process).
UP é um framework genérico de um processo de desenvolvimento, baseado em componentes e que utiliza toda a definição da UML.
UP é dirigido por os use cases, centrado na arquitetura, interativo e incremental.
Através de UP pode- se visualizar um ciclo de vida do projeto orientado a objeto.
Um projeto é dividido em quatro fases, em que cada uma é subdividida em iterações.
A primeira fase é a inicial, em a qual é feita a definição do escopo do projeto e é realizado o desenvolvimento dos casos de negócio.
A segunda fase é a de elaboração, que envolve a elaboração do plano do projeto, da especificação de atributos e a sedimentação (baseline) da arquitetura.
A terceira é a fase de construção, em a qual é realizada a construção do produto.
A quarta e última fase é a de transição, onde é feita a transição do produto para o usuário).
O processo unificado consiste da repetição de uma série de ciclos durante a vida de um sistema, como mostrado na figura 13.
Cada ciclo é concluído com uma versão do produto pronta para distribuição.
Essa versão é um conjunto relativamente completo e consistente de artefatos, possivelmente incluindo manuais e um módulo executável do sistema, que podem ser distribuídos para usuários internos ou externos.
Cada ciclo consiste em quatro fases:
Início, elaboração, construção e transição.
Cada fase é também subdividida em iterações.
Cada fase pode comportar várias iterações e cada iteração, por sua vez, está organizada em workflows que descrevem o que deve ser feito em termos de atividades, responsáveis e os artefatos que devem ser gerados, além de o fluxo das atividades.
O UP fornece modelos (templates) para cada artefato e guias (guidelines) para a execução de suas atividades.
As iterações também são finalizadas com milestones, que devem controlar se foram cumpridos os objetivos específicos da iteração, como a modelagem de um grupo de casos de uso, por exemplo.
O modelo em estudo é composto por quatro fases.
A figura 16 mostra o relacionamento e a composição de cada fase.
Em a fase inicial, a equipe não está totalmente completa.
As duas preocupações principais do gerente na formação da equipe concentram- se em:
Tarefas apropriadas e bem definidas e comprometimento do time do projeto.
É necessário dar atenção às necessidades e expectativas do cliente, sabendo diferenciar o que ele precisa daquilo que deseja.
A saída da fase inicial para a fase de elaboração se dá quando todos os artefatos de desenvolvimento atingiram suas fases de critérios de saída e as tarefas do processo estão prontas.
Em a fase elaboração, a equipe está completamente formada e é possível rever as medidas de previsão, tempo e esforço.
A equipe irá traduzir os requerimentos num esboço de software.
Os artefatos de desenvolvimento dessa fase são:
Diagramas de pacotes e diagramas de casos de uso.
Com o término desta fase, a equipe terá um esboço inicial consistente e completo.
Durante as primeiras duas fases, o esforço da equipe consistiu no entendimento do problema e na procura de solução.
Em a fase de construção, a equipe constrói a solução.
A o entrar nessa fase, tem- se um projeto completo, incluindo a especificação de todos os métodos e uma visão dinâmica do projeto ligadas aos casos de uso.
As tarefas de desenvolvimento da fase de construção consistem na construção, teste e integração do código.
A fase da construção está completa quando o sistema está completo funcionalmente.
Todas as funcionalidades planejadas para a atual configuração estão integradas e testadas.
Existe apenas um objetivo na fase de transição que é a aceitação do sistema por o cliente em tempo e dentro de o orçamento.
Todos os esforços se resumem a um sim do cliente, e o trabalho do gerente é fazer isso acontecer.
A o final da fase de transição, o código adere ao seu padrão e projeto e código estão em sincronia.
Em a próxima seção é descrito o modelo da Teoria-W. O terceiro modelo de gerência de projeto que iremos descrever é a abordagem de Boehm.
Segundo o autor, a integração da tecnologia de software, relações humanas e econômicas não é tarefa fácil no âmbito específico de projeto de software.
O princípio fundamental desse modelo é chamado de abordagem da teoria-w, para gerência de projeto de software.
O primeiro problema de um Gerente de Projeto de software é que um projeto necessita atender simultaneamente uma diversidade de variáveis:
Os usuários, os clientes, o time de desenvolvimento, o próprio gerenciamento do processo.
E cada uma destas tem seus próprios objetivos a respeito de o projeto.
Estes acabam criando conflitos e tornam- se uma das principais dificuldades no gerenciamento dos projetos.
A teoria W defende que o primeiro dever do Gerente de Projeto de software é tornar todas as partes envolvidas no processo vencedoras.
O principio fundamental da teoria W se ajusta com os problemas da gerência de projeto de software, defendendo que gerentes de projeto de software serão bem sucedidos se, fizerem de todos os demais participantes (superiores, subordinados, clientes, usuários, equipe de suporte, entre outros) do processo vencedores.
Esse princípio é particularmente relevante no campo de software, o qual é uma área de grande concentração de pessoas.
Além disso, os produtos são em sua maioria serviços e auxílio decisório, sendo que aqueles que o fazem não estão familiarizados com as preocupações do usuário e gerência.
A teoria concentra- se em criar situações de &quot;ganha-ganha «(em inglês win-win), que geralmente podem ser criadas observando- se os interesses e expectativas das pessoas envolvidas.
Como por exemplo, criando políticas de participação nos lucros para um subcontratante de software.
Esta política gera motivação para que este desenvolva produtos de qualidade e mais rentáveis.
Segundo, projetos de software podem ser situações perda-perda (em inglês lose-lose).
Definir cronogramas irreais;
Situações &quot;ganha-ganha «existem, e podem ser criadas prestando atenção aos interesses e expectativas das pessoas.
Criando políticas de participação nos lucros para um sub contratante de software, dá motivação para desenvolver produtos de alta qualidade, de grande venda, além de aumentar o tamanho da fatia de lucro para os contratantes e o desenvolvedor de produto de mais alto nível.
Usar tecnologias de software melhores, tais como programação estruturada, técnicas de detecção de erros, ou encobrir informações irá também criar ganhos para todas as partes.
A abordagem da teoria-W para gerência de projeto de software é composta por um conjunto de pré-condições de &quot;ganha-ganha «e algumas condições futuras para estruturar o processo de software e o produto de software resultante.
A tabela 3 mostra os passos da teoria-W &quot;ganha-ganha».
Um dos passos mais importantes para a criação de situação &quot;ganha-ganha «é entender como as pessoas querem ganhar.
É preciso ter certeza de que foi identificado as pessoas chaves no projeto.
Freqüentemente, projetos de software falham, porque as partes-chave (representante dos usuários, pessoal da aquisição de hardware, contratantes) não foram incluídos no plano &quot;ganha-ganha».
A aproximação com o cliente é outro passo importante onde, por exemplo, o pessoal da parte técnica agirá mais como da área de marketing do que apenas ficar esperando o fornecimento de especificações para codificar.
Outro passo importante para a criação de situações &quot;ganha-ganha «é estabelecer expectativas razoáveis.
O fato de clientes e usuários terem pouca percepção do que é fácil ou difícil conquistar com computadores e software, leva a um conjunto de expectativas irreais.
O importante nessa fase é reunir- los para resolver discordâncias sobre expectativas;
Ter pessoas visualizando as duas partes e voltadas para objetivos, critérios de solução mutuamente relevantes;
De acordo com os subpassos da teoria-W, identifica- se dois princípios chaves complementares da teoria:
Planejar o vôo e voe o plano;
Identificar e gerenciar seus riscos.
Segundo, planejar o vôo é de grande importância, pois estabelecer um plano de processo realista é crucial para o sucesso do projeto.
Existem vários tipos de planos envolvidos com o objetivo de tornar todos ganhadores:
Planos operacionais, planos de treinamento e instalação, planos de suporte a ciclos de vida, e planos de desenvolvimento.
Cada um destes pode ter vários outros planos complementares:
Planos de gerência de configuração, planos de garantia de qualidade, planos de teste, planos de conversão, etc..
Freqüentemente, cada subplano de software é organizado em torno de um esboço totalmente diferente, tornando os vários planos mais difíceis de serem desenvolvidos, assimilados e consultados.
Cada plano da teoria-W é organizado em torno de um esboço comum, refletindo um pequeno número de interrogativas universais (por que, o quê, quando, quem, onde, como e quanto):
1) objetivos (Por que a atividade está sendo perseguida?);
2) produtos e marcos (O que está sendo produzido e quando?);
3) responsabilidades (Quem é responsável por cada resultado?
Onde estão situados organizacionalmente?);
4) abordagem (Como cada resultado está sendo alcançado?);
5) recursos (Quanto de cada recurso escasso será necessário para alcançar os resultados?).
A tabela 4 apresenta o esboço para um dos planos chave de gerência de software o plano de desenvolvimento de software.
Ela mostra que as subseções do plano são particulares às questões de desenvolvimento de software (requisitos, projeto de produto, programação, gerência de configuração, garantia de qualidade, etc.), mas que as seções principais do plano seguem o esboço comum da teoria-W. Desenvolver um plano que satisfaça as condições de vitória de todos não é suficiente para tornar todos vencedores.
É preciso também usar o plano para gerenciar o projeto (voar o plano).
Isto envolve fazer um esforço particular para monitorar o progresso do projeto com relação a o plano e saber quando aplicar alguma correção.
Um outro princípio levantado por o autor é a gerência de risco.
Assegurar que os planos sejam realistas é responsabilidade da gerência de risco.
Esta foca a atenção do gerente de projeto naquelas partes em que provavelmente ocorrerão problemas e comprometerão as condições de vitória dos participantes.
As considerações da gerência de risco podem também ajudar o gerente de projeto a determinar a seqüência apropriada para realização das atividades do projeto.
Há duas classes principais de risco de projeto:
Riscos genéricos (são comuns a todos os projetos e cobertos por técnicas padrão de planejamento do desenvolvimento) e riscos específicos aos projetos (reflete um aspecto particular de um dado projeto e são identificados por planos de gerência de risco específicos de projeto).
A gestão de projeto necessita de processos maduros e, para isto, é necessário dominar o ciclo de vida de software, ter uma metodologia de gerência clara, pessoal bem treinado e capacitado para que o resultado seja adequado.
Em o modelo de gerência de projetos processual é destacada a forma com que os processos são divididos, com um enfoque administrativo, facilitando as comunicações entre as fases do projeto.
O modelo de gerência de projetos orientado a objetos possui um enfoque mais técnico, fazendo uso da UML e do UP nas fases do projeto, gerando uma base técnica mais consistente focado no processo de desenvolvimento do software em si.
O modelo da teoria-W destaca o papel dos participantes do projeto de desenvolvimento de software (visando tornar todos vencedores) e os seus princípios complementares (planejar o vôo e voar o plano, identificar e gerenciar seus riscos).
Os três modelos possuem características próprias, sendo algumas comuns.
Pode- se considerar que não são modelos concorrentes e sim complementares.
Tendo como referência o ambiente de trabalho proposto (fisicamente distribuído), buscou- se sintetizar as principais contribuições dos três modelos estudados e detalhar na base teórica deste estudo.
Em a tabela 5, é ilustrado um comparativo entre esses modelos estudados, contendo características importantes para um modelo de gerência de projeto de software, num ambiente fisicamente distribuído de desenvolvimento orientado a objeto (S $= sim, está presente;
N $= não está presente).
Os três modelos são divididos em fases.
Em o modelo processual, a gerência é baseada em nove áreas do conhecimento, descritas na seção 4.1, onde o objetivo é destacar o principal foco de atenção que deve ter o gerente de projeto.
Dependendo do projeto, da empresa e da cultura da organização, algumas podem merecer mais atenção do gerente de projetos.
Porém, é importante que todas sejam planejadas e acompanhadas com cuidado.
Essas áreas não estão dispostas numa seqüência lógica para o desenvolvimento e nem são desenvolvidas uma após outra.
Elas ocorrem de forma simultânea durante a maior parte de um projeto.
Esse agrupamento tem apenas uma função didática.
Os que têm uma seqüência lógica para serem desenvolvidos são os processos característicos de cada uma das gerências.
Em o modelo de gerência de projeto orientado a objetos, a divisão é baseada nas fases que compõem o processo unificado, conforme descrito na seção 4.2.
Durante as duas primeiras fases (Inicial e Elaboração), o foco da equipe deve estar no entendimento do problema e na busca de soluções, enquanto que nas fases seguintes (Construção e Transição) a equipe deve, respectivamente, construir a solução e procurar efetivar o projeto no prazo e no orçamento definido com o cliente.
Em o modelo de Boehm, existem duas fases fundamentais, a fase de planejamento e a fase de execução (planejar o vôo e voar o plano), conforme descrito na seção 4.3.
Boehm considera essas fases de grande importância para tornar todos os participantes do projeto vencedores.
As fases auxiliam no processo de entendimento, controle, identificação e gerência dos riscos, além de manter um nível elevado de envolvimento das pessoas.
Modelos para gerência de projeto de software devem objetivar a qualidade, produtividade redução de riscos através do planejamento execução do desenvolvimento do produto (característica 2).
Uma das mais importantes características neste sentido envolve a adoção de padrões e modelos referenciais em termos de qualidade e certificação.
De o ponto de vista técnico, a abordagem orientado a objetos adota padrões internacionalmente aceitos com relação a o desenvolvimento de software (UML, UP, etc).
De o ponto de vista gerencial, o modelo processual incorpora um modelo de referência que é um padrão internacional (PMI).
A teoria-W apenas incorpora um modelo próprio de gerência de projeto, garantindo a qualidade através da elaboração de um plano de processo real e da aplicação deste plano para controlar o projeto.
Em relação a o ciclo de vida do projeto (característica 3), uma das abordagens mais utilizadas é espiral, que é contemplada por os modelos processual e teoria-W. A utilização do modelo espiral torna- se uma característica importante nos modelos de Schwalbe devido a a forma com que os processos são tratados em cada fase do projeto.
O ciclo de vida espiral auxilia o controle sob as fases do projeto, focando principalmente etapas como:
Determinação dos objetivos:
Definição do produto, determinação dos objetivos de negócio, restrições.
É onde ocorre o comprometimento dos envolvidos e o estabelecimento de uma estratégia para alcançar os objetivos.
Estimação de alternativas:
Análise de riscos.
Identificação e solução aos riscos.
Desenvolvimento do produto:
Esboço detalhado, código, unidade de teste, integração.
Planejamento de próximas repetições:
Avaliação do cliente, planejamento do projeto, implementação e entrega ao cliente.
No caso de a teoria-W, em, o autor apresenta o modelo espiral &quot;ganhaganha «(Win-Win) que é a integração da Teoria-W com o modelo espiral de desenvolvimento.
Acrescenta atividades da Teoria-W no início de cada ciclo e explicitamente enfatiza o envolvimento colaborativo e contínuo das pessoas interessadas nas definições preliminares e ao longo de o projeto.
A teoria-W é usada para convergir em objetivos, restrições e alternativas para o nível seguinte do projeto.
Já o modelo de Cantor, tem- se a utilização do ciclo de vida incremental, onde o UP utiliza pequenos ciclos de projeto (mini-projetos) que correspondem à uma iteração e que resultam num incremento no software.
O modelo de gerência de projeto orientado a objetos é o único com aderência à orientação a objetos (característica 4), possibilitando um acompanhamento do projeto através do uso de artefatos utilizando a UML, visando facilitar a comunicação entre os participantes do projeto.
O modelo processual e a teoria-W não suportam o processo de desenvolvimento de software orientado a objeto, sob nenhum dos aspectos destacados no quadro de referência.
Schwalbe procura focar mais seu modelo na área de gerência de projeto de sistemas de informação baseado no modelo do PMI, incorporando as nove áreas do conhecimento em seu modelo.
Boehm procura trabalhar com conceitos de equipes, processos e produtos vencedores (ganha-ganha), buscando manter o envolvimento das pessoas num nível elevado.
O modelo orientado a objetos possui total aderência ao processo unificado (característica 5), sendo composto por as fases pertencentes ao UP.
Em o modelo processual apenas duas destas fases estão presentes, a fase inicial e a fase de construção.
As fases de elaboração e de transição não são tratadas como uma área de gerência específica, mas características dessas fases estão presentes em determinadas etapas do modelo.
A teoria-W não incorpora conceitos de processo unificado, devido a o fato de que o autor procura tornar os participantes do projeto vencedores através do trabalho em equipe e a realização do que se planejou no início do mesmo.
O processo de controle (característica 6) está presente nos três modelos estudados.
Em o modelo de gerência de projeto processual este processo é abordado na maioria das áreas, principalmente com relação a o controle de mudanças da integração e escopo do projeto.
Em o modelo de gerência de projeto orientado a objetos, este processo está presente na fase de construção, onde é realizado uma coordenação de atividades de controle.
Em a teoria-W o gerente de projeto deve elaborar um plano de projeto e este é utilizado no controle geral do projeto.
O processo de controle também está presente no momento em que os riscos são identificados.
O processo de planejamento (característica 7) está presente no modelo de gerência de projeto processual e na teoria-W, não estando presente no modelo de gerência do projeto orientado a objeto.
Schwalbe e Boehm situam o planejamento como característica de grande importância em seus modelos, fazendo com que o processo esteja presente desde o início do projeto para facilitar o entendimento do processo de gerência e evitar imprevistos durante o desenvolvimento do projeto.
Cantor, em seu modelo, não trata o processo de planejamento como uma característica relevante, procura manter uma seqüência de atividades para que o processo de gerência mantenha um padrão, iniciando o projeto já com a estruturação da equipe.
O processo de execução é descrito nos três modelos.
Os modelos destacam a importância do processo de execução na gerência de projetos.
Cantor[ CAN 98] em seu modelo, atribui algumas atividades de desenvolvimento para a execução do projeto, conforme descrito na seção 4.2.3.
Boehm destaca a importância de se &quot;voar o plano», ou seja, executar as atividades de acordo com o planejamento do projeto, conforme descrito na seção 4.3.
O processo de encerramento está presente no modelo de gerência de projeto processual e no modelo de gerência de projeto orientado a objeto, onde os autores descrevem os critérios necessários para se encerrar a fase presente e seguir com o projeto até o seu término.
Boehm não trata, em seu modelo, processos de encerramento ou algum critério de saída para determinada fase, realizando a passagem para outra fase no momento em que a equipe do projeto estiver ciente de ter resolvido os objetivos da fase anterior.
Como a gerência de projetos envolve trabalho com pessoas é necessária uma atenção especial ao processo de formação de equipes.
Essa característica está presente na abordagem orientada a objeto, mas não é descrita no modelo processual.
Cantor destaca, em seu modelo, que a maneira como a estrutura está organizada, como estão divididas as equipes, quem faz parte de cada equipe, são pontos que devem ser levados em consideração no processo de gerência e desenvolvimento de software, pois muitos problemas podem surgir da diferença entre as pessoas, da comunicação entre as equipes e, principalmente, quando os interesses pessoais se sobrepõem aos interesses do grupo.
A teoria-W não aborda esta questão de formação de equipes.
Uma vez que as pessoas sejam mal distribuídas numa equipe e não consigam trabalhar com produtividade, todo projeto poderá ser prejudicado.
Uma das principais características do modelo de gerência de projeto é o papel do gerente, que é a pessoa responsável por elaborar o plano de projeto, estruturar uma equipe, administrar e interagir com pessoas ao longo de o processo de desenvolvimento.
Os gerentes de projeto devem possuir diversas habilidades e os três modelos procuram generalizar- los num atributo genérico.
O modelo processual e a teoria-W enquadram seus gerentes no perfil gerencial, em os quais o seu papel está centrado nas atividades do processo de gerência de projeto de software.
Em a teoria-W, o gerente tem um papel de &quot;negociador «com um perfil de reunir soluções de projeto com condições de ganho para todas as partes.
Já no modelo orientado a objeto, o gerente de projeto possui um perfil mais técnico, fazendo uso dos artefatos da UML para seguir o projeto com um processo padrão de gerenciamento.
Para que todos ganhem num projeto é importante que um modelo de gerência de projeto suporte e se adapte às mudanças constantes de uma organização.
A capacidade de lidar com mudanças, sob um aspecto mais técnico, é bem suportada por o modelo orientado a objetos, pois a orientação a objetos possui propriedades, tais como herança, encapsulamento e modularidade, entre outros, que se tornam facilitadores no processo de mudança.
Já sob um aspecto mais gerencial, essa capacidade de lidar com mudanças também está presente no modelo processual e na teoria-W, devido a o perfil negociador do gerente de projeto que é capaz de reunir soluções de ganho para todas as partes, estabelecendo novos critérios a partir de as mudanças.
O estabelecimento de pré-condições de ganho e estruturação do processo de software, em os quais são determinados planos realistas do projeto, também são fatoreschave para auxiliar no processo de mudança.
Toda mudança traz com si algum risco para o projeto e a gerência de risco inclui processos envolvidos na sua identificação, análise e resposta aos riscos.
Os três modelos contemplam esta característica.
Em este contexto, é importante compreender que, mesmo a mais cuidadosa e completa análise, não pode identificar todos os riscos e probabilidades corretamente.
Assim o controle e as interações são sempre necessários.
Por fim, o que se pode destacar é que nenhum dos modelos estudados apresenta suporte para um ambiente de desenvolvimento de software distribuído, onde a equipe de desenvolvimento está distante dos seus usuários.
Às vezes essa distância não é somente física, mas também cultural.
Devido a essa lacuna existente nesses modelos, busca- se propor um modelo de gerência de projeto que dê suporte a um ambiente fisicamente distribuído e que utilize orientação a objetos como metodologia básica de desenvolvimento (UML e UP), no contexto do modelo de gerência proposto por o Para organizar e assegurar a qualidade da integração de um projeto de software é importante que existam modelos com capacidade de descrição e ambientes de automação computacional para os mesmos, possibilitando o emprego destes tipos de descrição para o suporte computacional do fluxo de trabalho.&amp;&amp;&amp;
O capítulo 5 descreve os estudos de caso realizados num ambiente distribuído de desenvolvimento de software.
Juntamente com a teoria estudada (os três modelos), os estudos de caso proporcionarão a identificação de várias características que auxiliarão no desenvolvimento do modelo proposto.
Os estudos de caso foram acompanhados ao longo de o ano de 2001 no Centro de Desenvolvimento e Pesquisa em E-business Dell/ Pucrs.
Tanto o Call center como o
E-mail blitz envolvem tecnologia de desenvolvimento Web, padrão Microsoft, e pessoal com diferentes níveis de experiência.
O processo de desenvolvimento foi distribuído fisicamente, sendo que a equipe de desenvolvimento e os usuários estavam distantes, física e culturalmente (Brasil e Estados Unidos).
O pouco tempo de convivência e de integração entre o pessoal da equipe de projeto, além de a ausência de padrões e metodologias estabilizadas para o processo de desenvolvimento de software também podem ser citados como características do cenário em que ocorreram estes estudos de caso.
Os dois estudos de caso apresentados a seguir relatam a experiência resultante deste processo.
Este capítulo está organizado em cinco seções.
Em a seção 5.1, apresenta- se as características dos respondentes do questionário;
Em a seção 5.2, o processo de aplicação do questionário;
Em a seção 5.3, o primeiro estudo de caso, o Call center, com o resultado da análise de dados para cada dimensão descrita no capítulo 2 (seção 2.7);
Em a seção 5.4, apresenta- se o segundo estudo de caso, o
E-mail blitz, com o resultado da análise de dados para cada dimensão descrita no capítulo 2 (seção 2.7) e, por fim, na seção 5.5 descreve- se as lições aprendidas com o processo de pesquisa.
Para cada estudo de caso foram selecionados quatro participantes para a realização das entrevistas, o gerente de projeto, dois integrantes da equipe de desenvolvimento e um integrante da equipe de garantia da qualidade.
O coordenador do Centro de Pesquisa participou das entrevistas para ambos os projetos, totalizando dez entrevistas para nove entrevistados.
O nível de formação dos respondentes é dividido na seguinte proporção:
64% possuem curso superior incompleto, sendo que 84% destes estão cursando entre o 8º e 9º semestre, e 16% entre o 5º e 6º semestre.
O restante dos entrevistados (36%) possuem curso superior completo.
De estes, totalizando 3 pessoas, 1 tem curso superior completo, 1 tem doutorado e um está cursando mestrado.
O nível de formação dos respondentes do estudo de caso 1 (Call center) é dividido na seguinte proporção:
60% possuem superior incompleto, sendo que todos estão entre o 8º e 9º semestre.
Os outros 40% possuem superior completo, sendo que um é doutor.
Com relação a o estudo de caso 2 (
E-mail blitz), 60% possuem curso superior incompleto, sendo que dois integrantes cursam o 8º semestre e um integrante cursa o 5º semestre.
Os outros 40% possuem superior completo, com um integrante cursando mestrado e o outro possui doutorado.
Todos os respondentes possuem graduação em Ciência da Computação.
Um participante (
E-mail blitz) cursa mestrado também na área da Ciência da Computação e o coordenador (respondente dos dois estudos de caso) possui doutorado na mesma área.
Com relação a a carga horária no Centro de Pesquisa dos respondentes, para ambos os projetos 89% possuem 40 horas semanais, a exceção é apenas o coordenador que possui 20 horas semanais.
A função dos respondentes no Centro de Pesquisa é dividida em integrantes da equipe de desenvolvimento (55,6%), da equipe de garantia da qualidade (33,4%) e da coordenação, composto por um integrante Com relação função dos respondentes no estudo de caso 1, 40% fazem parte da equipe de desenvolvimento, 40% da equipe de garantia da qualidade e 20% é representado por o coordenador.
Com relação a a função no estudo de caso 2, 60% fazem parte da equipe de desenvolvimento, 20% é representado por um integrante da equipe de garantia da qualidade e os outros 20% é representado por o coordenador.
A maioria dos respondentes, 66,7%, já possuíam experiências anteriores na área em que atuaram no projeto.
Os outros 33,3% não tiveram nenhuma experiência anterior relacionada a sua função no projeto.
De as experiências anteriores, destacam o desenvolvimento de sistemas gerais, com 66,7%, o desenvolvimento web, com 16,7% e desenvolvimento específico na Linguagem Delphi, com 16,6%.
O tempo médio da experiência anterior dos respondentes é de aproximadamente 3 anos.
Em o Call center, 60% dos participantes possuíam experiências anteriores nas áreas de desenvolvimento web (33,3%) e desenvolvimento de sistemas gerais (66,4%).
Os outros 40% não possuíam experiências nas áreas em que foram alocados.
O tempo médio de experiência no Call center é de aproximadamente blitz, dos participantes possuíam 3 anos e três meses.
Em o
E-mail experiências anteriores nas áreas de desenvolvimento em Linguagem Delphi (25%) e desenvolvimento de sistemas gerais (75%).
Os outros 20% não possuíam experiências nas áreas em que foram alocados.
O tempo médio de experiência no
E-mail blitz é de aproximadamente 3 anos e um mês.
A aplicação do questionário ocorreu através de entrevistas individuais e, em apenas dois casos, o participante respondeu de forma descritiva as perguntas.
Primeiramente foram realizadas as entrevistas com os participantes do projeto Call center, sem ter uma ordem seqüencial especificada.
As entrevistas ocorreram individualmente numa sala, de acordo com a disponibilidade de horário do entrevistado.
Após completar as entrevistas com os membros do Call center, partiu- se para as entrevistas com integrantes do
E-mail blitz.
O coordenador respondeu as perguntas dos dois questionários, por escrito.
O tempo da realização das entrevistas variou entre os projetos, resultando num tempo total de aproximadamente 9 horas.
No caso de o Call center, o tempo total de realização das entrevistas foi de aproximadamente 4 horas, sendo que cada entrevista teve uma média de 46 minutos.
Em o
E-mail blitz, 5 horas foi o tempo total de aplicação das entrevistas, resultando numa média de 1 hora para cada participante.
A seguir apresenta- se o resultado da análise de dados do estudo de caso 1, para cada dimensão descrita no capítulo 2 (metodologia de pesquisa).
Processo de Gerência de Projeto Utilizado O projeto Call center é pioneiro no processo de desenvolvimento no Centro de Pesquisa.
Destaca- se a inexperiência do pessoal em gerência de projeto, trabalho em equipe e a não utilização de um modelo de referência por parte de o gerente de projeto.
Segundo o gerente do projeto, foi adotado o seguinte método de gerência:
&quot;foi estabelecida uma data de entrega do produto e as tarefas foram distribuídas, de acordo com o grau de complexidade, ao longo de o período estimado».
O gerente do projeto buscava informações diariamente sobre o andamento das tarefas, verificando se os milestones estabelecidos estavam sendo alcançados dentro de o prazo estabelecido.
Procurou- se também, manter contato com o cliente durante quase todo o ciclo de desenvolvimento da aplicação.
O processo de gerência foi considerado &quot;imaturo, sendo que as fases de concepção e elaboração foram subestimadas, o que gerou um overhead de comunicação na fase de construção», segundo um integrante da equipe de desenvolvimento.
Outro integrante da equipe de desenvolvimento foi alocado durante o andamento do projeto, para auxiliar no desenvolvimento da aplicação.
Logo não teve nenhuma participação em reuniões, distribuição de tarefas ou elaboração do cronograma.
Suas tarefas não constavam no cronograma.
Com relação a a qualidade, nenhum processo foi adotado, apenas o responsável agiu como verificador das atividades definidas por o gerente de projeto.
Principais Problemas Encontrados no Processo de Gerência Vários problemas podem ser destacados no processo de gerência do projeto.
Devido a a inexperiência do gerente do projeto, ocorreram mudanças no escopo:
Não houve uma definição apropriada de requisitos;
Não foi adotado uma especificação formal e não ocorreu integração com o cliente.
O projeto foi entregue fora de o prazo.
Segundo um desenvolvedor, isto ocorreu devido a a especificação do projeto que foi mal definida e sofreu várias modificações ao longo de o seu desenvolvimento.
&quot;Como o cronograma não podia ser refeito, foi complicado tratar todas as novas requisições no tempo estipulado.
Por esse motivo o projeto atrasou», de acordo com o mesmo desenvolvedor.
Outro aspecto importante considerado como problema no processo de gerência do projeto é o não conhecimento das funções específicas de cada um dos membros da equipe de projeto.
O gerente de projeto destaca outros problemas relevantes:
&quot;A equipe não se conhecia, logo não tinha como saber o ritmo de trabalho de cada um dos envolvidos para poder estabelecer datas mais próximas da realidade&quot;;
Outro problema destacado por o gerente diz respeito à dificuldade de comunicação, tanto na distância física (o cliente encontrava- se nos EUA) quanto por o idioma -- &quot;toda comunicação, tanto via telefone quanto mensagens ­ e-mail e messenger ­ foi realizada em inglês».
Pontos Fortes da Gerência de Projeto Assim como problemas no processo de gerência de projeto foram apontados por os entrevistados, o projeto também teve pontos fortes.
Alguns destes foram comuns para os participantes, entre eles destacam- se a busca por o comprometimento de todos os membros da equipe, busca por o entrosamento da equipe e o poder de diálogo com o cliente (fazer- lo ver que os atrasos no cronograma eram decorrência das mudanças que ele próprio exigia).
Um dos desenvolvedores aponta como ponto forte o resultado final satisfatório.
Outro aspecto destacado é a resolução de problemas através de reuniões.
&quot;Foi um processo de aprendizagem, onde a falta de experiência levou o gerente a cometer alguns erros, porém isso foi importante para o andamento do grupo para os próximos projetos», segundo outro desenvolvedor.
Definição do Escopo Com relação a a definição do escopo, houve divergências nas respostas dos participantes do projeto.
Grande parte dos entrevistados constatou a falta de clareza na definição do escopo, apenas um integrante da equipe de desenvolvimento afirmou que o escopo foi claro, mas os requisitos não.
Segundo o gerente, no início do projeto um desenvolvedor recebeu instruções de como o projeto deveria ser.
&quot;Após, recebemos uma documentação bem pobre sobre o projeto.
Cabe ressaltar que, na época, não tínhamos nenhum processo definido para captura e gerenciamento de requisitos (nem poderíamos recusar nenhuma solicitação do cliente, pois não tínhamos conhecimento total sobre as normas que regiam a relação do Centro de Pesquisa com a Dell)», destacou o gerente.
O responsável por a qualidade informou que não houve um momento em que se definiu claramente o escopo.
Comunicação Interna e Externa do Projeto Tanto a comunicação interna quanto a comunicação externa do projeto foram centralizadas no gerente, para evitar desentendimentos e desconhecimento por parte de os participantes.
Internamente a comunicação ocorreu formalmente através de reuniões semanais, com todos os integrantes da equipe.
Eventualmente, de acordo com a necessidade, ocorriam conversas específicas entre membros da equipe de projeto, via e-mail.
A comunicação externa não envolveu a participação de todos os membros da equipe, apenas do gerente.
A comunicação ocorria por telefone, e-mail e messenger, aleatoriamente.
&quot;A comunicação através de e-mail gerava um delay, diminuindo o ritmo do projeto e quebrando sua continuidade», destaca um integrante da equipe de desenvolvimento.
Garantia da Qualidade do Processo/Produto Para assegurar a qualidade do processo/ produto, todos os integrantes da equipe tiveram participação nesta fase.
O produto passou por testes individuais de cada desenvolvedor e um teste final realizado por o integrante da equipe de qualidade.
O gerente continuava a fazer testes durante o desenvolvimento para acompanhamento.
&quot;A garantia da qualidade do produto ocorreu através da elaboração de um documento de casos de testes que cobria todas as funcionalidades do produto.
Em a fase de construção, foram realizados testes sobre funcionalidades específicas.
Em a fase de transição, fez- se um teste de integração e de instalação, em o qual se verificou a correção e clareza do documento de instalação», segundo a visão do integrante da equipe de qualidade.
A garantia da qualidade do processo se deu ao longo de o ciclo de desenvolvimento, através de verificações sobre a documentação gerada e cumprimento do cronograma.
Cenário e Análise de Risco Todos os participantes informaram que não foi realizado análise de risco ou uso da técnica de cenário no projeto.
Forma de Estimativa de Prazo/ Custo e Tempo de Duração do Projeto Não houve análise de custo, apenas de prazo.
As tarefas foram distribuídas (em relação a o tempo) por a sua complexidade e de acordo com as estimativas de cada um dos membros da equipe sobre a atividade que desenvolveria.
Não houve um processo de estimativa formal para o projeto.
&quot;A decisão foi tomada em conjunto, onde os membros estimavam os tempos e adicionava- se um percentual de risco a esse tempo estimado», destacou um integrante da equipe de desenvolvimento.
Com relação a as atividades de teste, elas foram estimadas de acordo com cada uma das funcionalidades que seriam testadas.
Como dito anteriormente, não houve nenhum processo formal (métricas ou qualquer método) no estabelecimento dos dados.
A duração do projeto foi de aproximadamente 3 meses.
Participação no Processo Decisório e Comprometimento com o Projeto Todos os participantes tiveram influência no processo decisório do projeto, com exceção do que diz respeito à especificações, que eram decisões tomadas por outro participante, o program manager (localizado nos Estados Unidos).
Tarefas como definição do cronograma (distribuição das tarefas, milestones) e negociação com o cliente para data de entrega, foram decisões específicas tomadas por o gerente do projeto.
O responsável por a garantia da qualidade destacou que &quot;a participação no processo decisório era apenas nas questões específicas que definiam as interações de garantia da qualidade (QA)».
A maioria dos participantes se sentiram comprometidos com o projeto, com exceção de um integrante da equipe de desenvolvimento, que entrou durante o seu andamento e não se sentiu muito comprometido.
O gerente do projeto enfatizou o alto nível de comprometimento, tendo em vista que foi o primeiro projeto ser desenvolvido no &quot;Centro de Pesquisa -- o que acarretou num nível de stress maior para o gerente de projeto, pois muitas vezes foi dito, por a coordenação do Centro, que este projeto definiria o modo como o laboratório seria visto de ali em diante».
Favorecimento do Ambiente para o Processo de Aprendizagem Todos os entrevistados afirmaram que o ambiente favoreceu plenamente no processo de desenvolvimento do projeto.
A o longo deste pôde- se aprender a trabalhar em equipes e dividir responsabilidades.
&quot;Aprendemos a sistemática da Dell e como ela conduz seus negócios (em termos de projetos de desenvolvimento de software)», destacou o gerente do projeto.
Este relatou também a importância de uma especificação bem clara e estruturada, o comprometimento do cliente e a necessidade de um controle das modificações de requisitos.
&quot;Citaria também, em nível de aprendizado, a importância da clareza da comunicação entre os envolvidos no projeto, em todos as áreas», encerrando sua entrevista.
Para o integrante da equipe da garantia da qualidade, a aprendizagem foi mais direcionada.
Relatou que o ambiente proporcionou tomar conhecimento dos processos de teste, dos procedimentos de SQA (Software Quality Assurance) e das linguagens de programação.
Outros fatores a serem destacados com relação a o ambiente são a disponibilidade de acesso aos software, excelentes computadores com acesso à Internet e o fato de ser um ambiente acadêmico.
Conflitos Não houve conflitos no decorrer de o processo de desenvolvimento do projeto, apenas um integrante da equipe de desenvolvimento destacou que ocorreram divergências de idéias com o cliente, resolvidas através de conversas.
Modelo de Desenvolvimento de Software Não foi adotado nenhum modelo formal de desenvolvimento de software.
&quot;Não tínhamos processo de desenvolvimento definido e nenhum dos integrantes do projeto tinha conhecimento e experiência sobre formalização de desenvolvimento».
Processo de Teste do Sistema O processo de teste ocorreu em duas fases do projeto, na fase de construção e na fase de transição.
Durante a fase de construção, foram realizados testes por funcionalidades (isoladas).
Em a fase de transição, realizaram- se testes sobre a aplicação, incluindo a verificação do processo de instalação.
Para um integrante da equipe de desenvolvimento, &quot;os testes foram realizados apenas no término do processo de desenvolvimento, passando para o responsável por a qualidade e sendo repassado para o desenvolvedor para reparos».
Aspectos mais Importantes neste Projeto Diferentes aspectos foram destacados em relação a a importância no projeto.
Um de eles é o conhecimento adquirido, sendo que existia uma falta de experiência na área de desenvolvimento web.
Mas o principal aspecto foi a percepção de quão importante é o estabelecimento de um processo bem definido de desenvolvimento de software.
O gerente destacou a importância da comunicação com o cliente, principalmente na definição do escopo do projeto.
Os participantes citaram também a importância que o projeto teve como incentivo para o grupo começar o desenvolvimento de um processo para que não resultasse nos mesmos erros cometidos nesse projeto.
O integrante da equipe de garantia da qualidade enfatizou o aprendizado sobre o papel do testador e de SQA, suas diferenças e modos de ação.
A seguir apresenta- se o resultado da análise de dados do estudo de caso 2, para cada dimensão descrito no capítulo 2 (metodologia de pesquisa).
Processo de Gerência de Projeto Utilizado Não foi adotado nenhum processo formal de gerência de projeto.
Em o início do projeto houve uma grande preocupação em que todos os envolvidos participassem das definições, por meio de reuniões periódicas.
O gerente do projeto apresentou algumas atividades, realizadas por ele, tais como a formação da equipe, elaboração de estimativa, o acompanhamento do projeto, incentivo e treinamento para a equipe.
Um integrante da equipe de desenvolvimento confirmou a inexistência de um processo de gerência de projeto.
&quot;Não houve um processo bem definido, sendo que as fases de concepção e elaboração não existiram.
Não houve documentos com a descrição do sistema», destacou o desenvolvedor.
Pessoas eram alocadas no projeto à medida em que as necessidades aumentavam.
&quot;Havia uma tentativa de gerência do tempo e atividades, mas dentro desse contexto não teve sucesso», relatou o responsável por a garantia da qualidade.
Principais Problemas Encontrados no Processo de Gerência Vários problemas podem ser destacados no processo de gerência do projeto.
Alguns dos principais problemas foram a falta de uma especificação adequada, um ponto de contato fixo com o cliente e uma definição das pessoas envolvidas no projeto.
O gerente de projeto destacou outros problemas, entre eles o fato dos membros da equipe não se conhecerem e a inconsistência dos requisitos do sistema.
Problemas ocorreram na própria equipe de projeto.
Segundo um integrante da equipe de desenvolvimento, &quot;a equipe era segmentada demais, superespecializada, o que dificultava tanto o trabalho em equipe quanto a discussão em grupo».
Pontos Fortes da Gerência de Projeto Um ponto forte no processo de gerência foi o gerente do projeto, que promoveu e incentivou a inovação e busca da qualidade, soube delegar tarefas, não sobrecarregando nem subutilizando ninguém.
Mas nem todos os integrantes identificaram pontos fortes no processo de gerência do projeto.
&quot;Torna- se difícil identificar pontos positivos na gerência, uma vez que esta não pode ser exercida nas situações mais adequadas, tendo todos os problemas já levantados», conforme o integrante da equipe de garantia da qualidade.
Definição do Escopo Os entrevistados constataram a ausência da definição de escopo do projeto.
A principal dificuldade foi não ter uma especificação do que deveria ser desenvolvido, ou mesmo mudanças nos requisitos não foram informadas a todos os envolvidos.
A visita ao Centro de Pesquisa de um dos contatos da DELL/ Austin foi decisiva para a definição da aplicação, a partir de a alteração por completo da visão que se tinha do que deveria ser implementado.
&quot;Não houve documentos especificando o projeto, não ficou claro seu escopo para todos os membros da equipe», destacou um integrante da equipe de desenvolvimento.
Comunicação Interna e Externa do Projeto Inicialmente, a comunicação interna ocorria através de reuniões freqüentes com a presença de todos os envolvidos e, posteriormente, isso não se verificou mais.
Ocorreram diversos desentendimentos entre as equipes de desenvolvimento, garantia da qualidade e banco de dados.
A ocorrência desses problemas foi devido a a falta de entendimento do papel de cada integrante no projeto.
Com relação a a comunicação externa, havia problemas de comunicação com o cliente no início do projeto, quando as barreiras de distância e linguagem ainda não haviam sido rompidas.
Não existia um ponto de contato único, sendo que o cliente contatava diferentes pessoas.
A comunicação externa foi prejudicada também por a falta de fluência no idioma, por parte de o gerente do projeto.
&quot;Mesmo com esses problemas e com a ausência de uma especificação prévia, a comunicação se tornou direta e clara à medida que o projeto avançava», destacou um integrante da equipe de desenvolvimento.
Garantia da Qualidade do Processo/Produto O processo de qualidade foi assegurado de duas formas.
Em a equipe de desenvolvimento, através de revisões no código desenvolvido em cada módulo.
Outra forma foi através do integrante da equipe de garantia da qualidade.
A qualidade do processo/ produto foi buscada através do acompanhamento do processo de desenvolvimento e realização de testes da aplicação.
A partir de o domínio/ conhecimento da aplicação buscou- se participar das definições, visando a melhor solução (incorporando os requisitos funcionais e não-funcionais).
Como não foi realizado uma especificação da aplicação procurou- se manter um maior contato com o gerente de projeto para que as dúvidas fossem esclarecidas por ele, ou que ele pudesse buscar as respostas junto ao cliente.
Realizou- se também etapas de teste da aplicação, buscando garantir que esta estava de acordo com os requisitos e que apresentava o funcionamento esperado.
Cenário e Análise de Risco Todos os participantes informaram que não foi realizado análise de risco ou uso da técnica de cenário no projeto.
Forma de Estimativa de Prazo/ Custo e Tempo de Duração do Projeto O projeto não teve uma estimativa de custo.
Com relação a prazo, o tempo do projeto foi definido a partir de a soma de tempo que cada envolvido acreditava ser suficiente para desenvolver as tarefas sob sua responsabilidade, valor este acrescido de uma porcentagem de segurança.
Em a prática, verificou- se que o tempo previsto foi insuficiente e que as tarefas demandaram mais tempo, superando previsto.
&quot;Como não tinha especificação, os prazos eram estipulados aleatoriamente, o que obviamente, atrasou o projeto», destacou um integrante da equipe de desenvolvimento.
O tempo médio de duração do projeto foi de aproximadamente seis meses.
Participação no Processo Decisório e Comprometimento com o Projeto Todos os participantes tiveram influência no processo decisório do projeto.
As sugestões e críticas com relação a o andamento do projeto ocorreram através de reuniões.
Inicialmente a participação foi total, por estarem todos os responsáveis em constante comunicação.
Entretanto, a partir de um determinado momento essa comunicação não se verificou mais e as decisões passaram a ser tomadas por poucos, e os demais participantes passaram a não ter conhecimento das decisões tomadas.
Todos os participantes do projeto sentiram- se comprometidos.
Favorecimento do Ambiente para o Processo de Aprendizagem Todos os entrevistados afirmaram que o ambiente favoreceu o processo de desenvolvimento do projeto.
A o longo deste pode- se aprender a trabalhar em equipes e dividir responsabilidades.
Um integrante da equipe de desenvolvimento destacou que se trabalhou com novas tecnologias e houve novos desafios.
&quot;Tanto o gerente quanto o cliente incentivaram o desenvolvimento de um software com altíssima qualidade, usando tecnologia de ponta», afirmou o desenvolvedor.
Durante o andamento do projeto, foram realizados treinamentos voltados para a área de atuação de alguns integrantes, o que motivou os participantes.
Conflitos Ocorreram inúmeros conflitos no decorrer deste projeto.
Estes problemas estão em parte relacionados ao fato das pessoas estarem trabalhando juntas pela primeira vez, não havendo uma dinâmica de trabalho em equipe.
Esses conflitos não foram adequadamente solucionados, entretanto a aprendizagem gerada foi útil para projetos subsequentes.
Conflitos resultantes da distribuição de papéis e comunicação estiveram presentes neste projeto.
Alguns destes conflitos foram solucionados por a ação dos coordenadores do projeto.
Modelo de Desenvolvimento de Software Não foi adotado nenhum modelo formal de desenvolvimento de software.
&quot;Não desenvolvemos projeto através de um processo formalmente definido.
Mas desenvolvemos os projetos através de paradigmas híbridos:
Web--based e Orientação a Objetos», destacou o gerente do projeto.
Processo de Teste do Sistema O processo de teste ocorreu em duas fases do projeto, na fase de construção e na fase de transição.
O teste durante a fase de construção se deu em dois níveis, por os próprios desenvolvedores e por o integrante da equipe de garantia da qualidade.
O teste durante a fase de transição ocorreu em três níveis, por os desenvolvedores, por o responsável por a qualidade e por o requisitante do projeto.
Em o momento em que o processo de teste passava por o integrante da equipe de garantia da qualidade, verificou- se a necessidade da elaboração de documentos que sustentassem essa atividade.
De essa forma, foi elaborada uma versão inicial do documento de relato de erros, mas não houve preocupação com a elaboração dos documentos Plano e Caso de Teste.
Com isso, os testes executados não foram previamente planejados (Plano de Teste) e nem definidos (Caso de Teste).
Os testes foram executados por critério do QA responsável na busca de abranger todas as funcionalidades da aplicação e caminhos distintos de acesso a estas funcionalidades.
Aspectos mais Importantes neste Projeto Diferentes aspectos foram destacados em relação a a importância no projeto.
O aspecto mais importante foi o aprendizado obtido com as situações enfrentadas.
Tratar os conflitos e problemas existentes, bem como aprender a conviver com diferentes pessoas, também foram aspectos importantes.
O desafio enfrentado por o uso de novas tecnologias e ferramentas também proporcionou um crescimento ao grupo.
Um integrante da equipe de desenvolvimento destacou também a importância de se ter a oportunidade de conhecer a forma de trabalho das outras pessoas do projeto.
Como resultado do processo de pesquisa desenvolvido, buscando resgatar um adequado grau de cientificidade, identificou- se um conjunto de lições aprendidas.
Essas lições serviram de insumo fundamental para as proposições e o próprio modelo proposto (capítulo 6).
A seguir, através da tabela 6, buscamos indicar as lições mais importantes, relacionando com o estudo de caso e a teoria que a embasaram.
Estudo de caso 1/ Estudo de caso 2/ Teoria Call center
E-mail blitz Estudo de caso 1/ Teoria Call center Estudo de caso 1/ Estudo de caso 2/ Teoria Call center
E-mail blitz Estudo de caso 1/ Estudo de caso 2/ Teoria Call center
E-mail blitz Estudo de caso 1/ Estudo de caso 2/ Teoria Call center
E-mail blitz Estudo de caso 1/ Estudo de caso 2/ Teoria Call center
E-mail blitz Estudo de caso 1/ Estudo de caso 2 Call center
E-mail blitz Teoria Estudo de caso 1/ Estudo de caso 2 Call center
E-mail blitz Estudo de caso 2
E-mail blitz Estudo de caso 1/ Estudo de caso 2 Call center
E-mail blitz Estudo de caso 1/ Estudo de caso 2 Call center
E-mail blitz Um processo formal para a gerência de projeto de software é uma característica que deve ser adotada e seguida por o gerente de projeto, principalmente quando essa gerência ocorre num ambiente fisicamente distribuído.&amp;&amp;&amp;
As equipes do projeto devem estar cientes do funcionamento deste processo, realizando as atividades necessárias para que não ocorra a perda de informações ou conflitos durante as fases do projeto.
Um grande obstáculo no processo de gerência de projeto de software é a coleta e a especificação de requisitos.
Segundo Pressman, na maioria das empresas onde não há um processo formal definido, não existe um tempo suficiente para fazer uma coleta profunda de requisitos sobre um determinado projeto ou sistema, o que faz com que o projeto seja desenvolvido num tempo maior que o planejado.
Outros autores, destacam a importância da adoção de um processo formal para a gerência de projeto de software.
A definição de um processo formal para a gerência de projeto de software num ambiente fisicamente distribuído evitaria uma série de problemas e imprevistos, tais como:
Um processo de gerência imaturo, gerando conflitos na comunicação entre equipes;
Projetos fora de o prazo;
Falta de especificação;
Segmentação das equipes.
Problemas estes relatados nos dois estudos de caso (Call Center, seção 5.3 e E-Mail Blitz, seção 5.4) Um dos problemas encontrados no processo de gerência de projeto de software é o relacionamento interpessoal e a resolução de conflitos entre os participantes do projeto (lição 2).
Conflitos são inevitáveis, principalmente no desenvolvimento de projetos onde os indivíduos envolvidos no processo possuem diferentes conhecimentos e trabalham numa tarefa complexa.
As principais causas de conflitos num time estão relacionadas com as diferenças de valores, atitudes, necessidades, expectativas, percepções, resultados e personalidades.
Em gerência de projetos, inúmeros projetos desenvolvem- se baseados em estimativas irreais, causando a frustração de técnicos, usuários e gerentes, provocando situações de conflitos e prejudicando o desenvolvimento de produtos de qualidade.
A questão conflitos vem sendo discutida com uma relevante preocupação no contexto de gerência de projetos,.
Esses problemas afloram ainda mais quando se trata de ambiente fisicamente distribuído.
Um aspecto importante relacionado à gerência de projeto é que o gerente deve ter conhecimento das funções específicas de cada um dos membros da equipe, isto para evitar que um integrante do projeto realize funções de outro, o que ocasionaria um conflito.
Devido a a distância física entre os integrantes do projeto, a resolução de conflitos se torna um processo crítico num ambiente fisicamente distribuído, conforme descrito num dos projetos acompanhados (Call Center, seção 5.3).
Em esse caso, para entendimento com o cliente, foi necessário a realização de reuniões através de telefonemas (conference call) e e-mails.
Outro aspecto que podemos destacar é a importância da comunicação para o bom gerenciamento do projeto (lição 3).
Schwalbe, em seu modelo, destaca que todos os envolvidos no projeto devem estar preparados para enviar e receber comunicações na &quot;linguagem «do projeto e entender como as comunicações, em que eles estão individualmente envolvidos, afetam o projeto como um todo.
Outros autores[ MER 00 OHL 01 PET 01 PMB 00] consideram a comunicação como um controle básico das informações do projeto.
A comunicação deve ser padronizada e reuniões realizadas através de recursos que permitam a aproximação da equipe, conforme relatado num dos projetos acompanhados (Call Center, seção 5.3).
Em um ambiente fisicamente distribuído recursos como messenger e e-mails devem ser usados para manter a comunicação com integrantes do projeto distantes fisicamente.
A comunicação, tanto interna quanto externa, deve ser centralizada no gerente do projeto, para evitar desentendimentos e desconhecimento por parte de os participantes.
Deve ocorrer regularmente através de reuniões com os integrantes do projeto, conforme relatado nos dois estudos de caso (seções 5.3 e 5.4).
O gerente deve se comunicar com todas as pessoas envolvidas no projeto (clientes, desenvolvedores, pessoal de apoio, entre outros), buscando atuar como agente conciliador entre os atores do projeto.
A importância do planejamento é outra lição relevante (lição 4), refinada da aplicação dos estudos de caso e da teoria estudada.
O planejamento pode ser considerado como ponto de partida de qualquer atividade relacionada à gerência de projeto.
Muitas vezes o planejamento é esquecido, o que aumenta consideravelmente as chances de ocorrer algum problema.
A ausência do planejamento no processo de gerência de projeto de software, num ambiente distribuído, é apontado como causa de vários problemas.
Em os dois projetos acompanhados (Call Center e E-Mail Blitz) notouse que não foi realizado nenhum tipo formal de planejamento, ocasionando em conflitos relacionados à distribuição de tarefas/ funções e entrega dos projetos além de o prazo estabelecido.
Outro ponto obtido através dos estudos de caso e da teoria foi que as diferenças culturais são relevantes quando se tem um cenário geograficamente distribuído (lição 5).
Cultura é, por definição, um fator multidimensional que pode afetar de diferentes maneiras a performance de projetos geograficamente distribuídos.
Esta é uma característica bastante comum em ambientes distribuídos, onde os participantes estão em locais de diferentes culturas.
As diferenças culturais num ambiente de desenvolvimento distribuído de software surgem das diferenças culturais entre os membros das equipes e entre os locais fisicamente distantes.
Por isso, diferenças culturais são aspectos importantes para o desenvolvimento distribuído de software, pois diversos problemas podem ser causados por estas diferenças.
As diferenças culturais são consideradas um fator crítico de sucesso no processo de desenvolvimento distribuído de software.
Um problema relacionado às diferenças culturais foi relatado nos dois estudos de caso (Call Center e E-Mail Blitz), onde o cliente localizava- se num país diferente do gerente de projeto e da equipe de desenvolvimento e o idioma não era o mesmo.
É importante manter a comunicação padrão nesses casos, preferencialmente tendo conhecimento do idioma do cliente.
Além de a utilização de um processo formal para a gerência de projeto, torna- se necessário que esse processo seja bem definido (lição 6).
Em os dois estudos de caso (Call Center e E-Mail Blitz) notou- se que o processo de gerência de projeto não estava definido, ocasionando vários problemas relacionados ao cumprimento de tarefas dentro de as estimativas e dificuldades do trabalho em equipe.
Vários autores, e consideram como fator de sucesso para o projeto a utilização de processos bem definidos, fazendo com que a gerência do projeto seja realizada de forma padronizada e capaz de minimizar riscos.
A definição do escopo no início do projeto é uma característica importante e deve estar presente como um atividade do processo de gerência de projeto de software (lição 7).
É necessário ter conhecimento do que vai ser desenvolvido logo no início do projeto.
Em os projetos acompanhados no Centro de Pesquisa (Call Center e E-Mail Blitz), notou- se a falta de definição do escopo, o que resultou numa gerência instável e incerta.
Os Gerentes de projetos apenas receberam instruções de como o projeto deveria ser, sem uma especificação do mesmo, dificultando assim a identificação do que deveria ser desenvolvido.
Assim como o escopo de projeto deve ser definido, a utilização de uma linguagem de especificação comum para as fases do projeto também é importante.
A linguagem de especificação UML é uma das alternativas para suprir a necessidade de entendimento do projeto ou sistema, tanto por parte de o cliente quanto por parte de os desenvolvedores e gerente de projeto.
Conforme descrito no capítulo 4, a UML inclui um conjunto de diagramas consistentes que podem ser usados para descrever os requerimentos de um sistema, projeto e código.
Cantor considera esta uma forma de manter uma documentação padrão de entendimento tanto de clientes e usuários quanto de desenvolvedores e gerente de projeto.
É Importante o uso contínuo da UML em todas as fases do projeto, para que não se perca o controle gerencial.
Em os estudos de caso relatados observou- se a falta de suporte para a questão gerencial, onde não se adotou nenhum modelo formal de gerência e desenvolvimento de software.
Considera- se esta uma característica importante e que deve estar presente em projetos de desenvolvimento de software, principalmente nos realizados em ambientes fisicamente distribuídos, pois os riscos são maiores e as diferenças culturais tornam o projeto difícil de gerenciar.
Com relação a a garantia de qualidade e testes, muitos não têm uma noção clara deste conceito.
E é isto que faz a qualidade e o teste de software serem considerados problemas no processo de gerência de projeto de software.
Muitas vezes a qualidade nos sistemas é insuficiente.
Isto ocorre, pois a prática de testes de software e a aplicação da qualidade é recente.
Um projeto gerenciado sem qualidade pode gerar resultados negativos, o que pode se tornar muito difícil no processo de manutenção do produto gerado.
Cabe ao gerente de projeto, juntamente com o desenvolvedor, a tarefa de saber avaliar o tempo de vida e o futuro do software que será construído, fazendo um produto realmente de qualidade, que esteja de acordo com os requisitos do sistema e com o processo de gerência previamente definido.
A garantia da qualidade deve fazer parte das fases que compõem o processo de gerência de projeto de software, sendo ela responsável por várias funções.
Entre estas, podemos destacar as identificadas no estudo de caso 1 (Call Center):
A realização de testes individuais de cada desenvolvedor;
A realização de um teste final por a equipe de garantia da qualidade;
A verificação da documentação;
E a verificação do cumprimento do cronograma.
Em um ambiente fisicamente distribuído a geração de conhecimento é intensa, proporcionando um aprendizado entre os participantes.
É de fundamental importância gerenciar essa aprendizagem, sendo compartilhada com todos os integrantes do projeto.
Em este ambiente também deve- se ter preocupação com a propriedade intelectual garantida a cada solução desenvolvida.
O objetivo dessas lições em conjunto com a teoria é prover as principais características que irão compor o modelo de gerência de projeto proposto, apresentado no próximo capítulo.
Após os estudos teóricos e empíricos buscou- se propor um modelo de gerência de projeto de software para um ambiente distribuído.
O modelo proposto contempla um processo de desenvolvimento de software baseado na RUP (Rational Unified Process) utilizando a linguagem de especificação UML (Unified Modeling Language).
Sobre esta base técnica, propõe- se incorporação do conjunto de disciplinas (áreas de conhecimento) do PMI (Project Management Institute).
A o buscar- se esta conciliação, identificou- se uma série de novas disciplinas necessárias para ambiente de desenvolvimento de software fisicamente distribuído.
Baseando- se na experiência vivenciada nos casos descritos e na teoria estudada, a seguir apresenta- se o modelo proposto em três diferentes dimensões:
A) Tendo por base o ciclo de vida de desenvolvimento de software, busca- se analisar criticamente o papel de cada disciplina do PMI.
Em esse processo de análise emerge um novo conjunto de disciplinas necessárias para atender as demandas próprias do ambiente de desenvolvimento de software fisicamente distribuído.
B) Tendo por base os processos do modelo de desenvolvimento de software, buscouse derivar a visão de processo do PMI para adaptar- lo ao ambiente em estudo.
C) Destaca- se as novas disciplinas identificadas e necessárias para a gerência de projeto de processo de desenvolvimento de software em ambiente fisicamente distribuído.
Este capítulo está organizado em cinco seções.
Em a seção 6.1, apresenta- se a atuação da gerência de projeto no ciclo de vida de desenvolvimento de software;
Em a seção 6.2, a visão dos processos do PMI no modelo de desenvolvimento de software;
Em a seção 6.3, as extensões das disciplinas do PMI, voltadas para a gerência num ambiente fisicamente distribuído;
Em a seção 6.4, procura- se analisar a distribuição física no modelo proposto e na seção 6.5 são descritas as considerações sobre o modelo.
Desenvolvimento As funções de gerência de projeto de software estão presentes durante todo o ciclo de vida de desenvolvimento de software.
O modelo de gerência de projeto proposto incorpora um processo de desenvolvimento de software com ciclo de vida espiral.
Para facilitar a apresentação do modelo de gerência de projeto proposto, a seguir apresenta- se o ciclo de vida espiral (do processo de desenvolvimento de software).
O Ciclo de vida do processo de desenvolvimento de software é dividido em quatro ciclos, conforme descritos a seguir:
Ciclo de prova de conceito -- captura os requerimentos de negócio, define objetivos para a prova de conceito, produz um desenho conceitual do sistema, projeta e constrói a prova de conceito, produz planos de teste de aceitação, conduz análises de risco e faz recomendações.
Primeiro ciclo de implementação -- produz os requerimentos do sistema, define objetivos para a primeira implementação, produz o desenho lógico do sistema, projeta e constrói a primeira implementação, produz planos de teste do sistema, avalia a primeira implementação e faz recomendações.
Segundo ciclo de implementação -- produz os requerimentos dos subsistemas, define objetivos para a segunda implementação, produz o desenho físico do sistema, constrói a segunda implementação, produz planos de teste do sistema, avalia a segunda implementação e faz recomendações.
Ciclo final -- completa os requerimentos, produz o desenho final do sistema, constrói a implementação final, conduz os testes de unidade, de subsistema, de sistema e de aceitação.
Com relação a a gerência de projeto, ao longo de o estudo analisou- se a possibilidade de adotar o ciclo de vida incremental (modelo do RUP), entretanto, os estudos de caso mostraram que para um ambiente fisicamente distribuído este ciclo de vida não se aplicaria adequadamente.
Em este ambiente existe um grande fluxo de informações com o cliente.
O cliente quer resultados e muitas vezes não saberá, ou não entenderá, que um protótipo pode estar longe do software ideal, que ele nem sequer imagina como é.
Este ciclo busca implementar funcionalidades essenciais o mais cedo possível, fazendo com que o desenvolvedor coloque um protótipo em funcionamento com mais pressa, levando- o a usar metodologias (linguagens ou técnicas de programação) impróprias.
Essa atitude poderá levar a soluções ineficientes.
Em contra partida, o ciclo de vida espiral possibilita endereçar questões relevantes ao desenvolvimento de software em ambiente fisicamente distribuído.
Em o ciclo de vida espiral ocorre uma interação entre cada fase, fazendo com que os passos sejam repetidos até que o produto final seja obtido.
Sob essa concepção, identifica- se o acúmulo de informações, o que possibilita a aplicação do conhecimento adquirido em ciclos anteriores nos ciclos futuros.
Além disso, o ciclo de vida espiral estabelece um diálogo intensivo entre os participantes do projeto, possibilitando a evolução do sistema através de vários ciclos ou refinamentos sucessivos.
Isto permite uma avaliação constante do sistema em desenvolvimento.
Estas características são de extrema relevância para o gerenciamento de um projeto num ambiente fisicamente distribuído, pois com a interação contínua entre as fases, os riscos do projeto acabam sendo minimizados.
O uso do modelo espiral torna a gerência um processo sistemático e incremental para reter, organizar, partilhar e atualizar o conhecimento para melhorar o desempenho individual e coletivo dos stakeholders.
Conforme relatado nos dois estudos de caso (seção 5.3 e 5.4), todos os participantes dos projetos consideraram que durante as fases, o ambiente em que estavam inseridos proporcionou um processo de aprendizagem relevante.
Trabalho em equipe, novas tecnologias, treinamentos e uma aprendizagem mais direcionada, foram alguns fatores que proporcionaram novos conhecimentos.
A lição aprendida 11 (tabela 6) destaca a importância da aprendizagem.
Em este contexto, identifica- se uma nova disciplina a ser incorporada ao modelo do PMI.
A disciplina em questão é a gerência da aprendizagem.
Em ambientes onde existe diversidade cultural e distância geográfica entre os participantes, tem- se o desafio de conduzir o processo de desenvolvimento como um processo de aprendizagem.
Deve ser objetivo do gerente transformar o conhecimento individual de cada participante num conhecimento coletivo, envolvendo todos os parceiros do projeto.
Isto somente ocorre se existir um ambiente de aprendizagem organizacional adequado.
Em cada ciclo de desenvolvimento do modelo de processo de desenvolvimento de software, os participantes geram conhecimentos.
É função do gerente organizar, distribuir e aplicar esses conhecimentos ao longo de as fases do projeto.
E, sistematicamente, disponibilizar estes conhecimentos para outros projetos.
Com a realização dos estudos de caso, pode- se observar que o processo de gerência carece de uma atividade de planejamento.
Em os projetos relatados, um dos principais problemas destacados por os participantes é a falta de planejamento antes de se iniciar o projeto (lição 4 da tabela 6), o que acarretou em estimativas inadequadas, mudanças no escopo, entre outros.
Em este contexto, somando os problemas acima citados com distância física e diferenças culturais entre os participantes do projeto, torna- se necessário a incorporação de outra nova disciplina de gerência de projeto ao modelo do PMI, que deve ser seguida em todas as fases do projeto.
Esta disciplina é a gerência de planejamento.
A elaboração de estratégias ou visão do futuro num ambiente distribuído é relevante para o sucesso do projeto.
O planejamento pode ser considerado como uma atividade de descoberta de informações que permitirão ao gerente de projeto estimativas razoáveis de recursos, custo e tempo.
A gerência de planejamento deve estar presente desde o início do projeto e manter- se regularmente ao longo de o projeto.
Devido a sua importância.
Em cada fase do ciclo de vida do processo de desenvolvimento de software será descrito a função da gerência de planejamento.
A seguir, identifica- se as disciplinas críticas que devem ser abordadas por o gerente de projeto em cada uma das fases do processo de desenvolvimento de software (figura A primeira fase é a de processos de determinação dos requisitos.
Para suprir a necessidade de gerenciamento num ambiente fisicamente distribuído, nesta fase devese focar a gerência em várias disciplinas do modelo do PMI.
As disciplinas que exigem uma maior preocupação por parte de o gerente de projeto estão descritas a seguir:
Gerência da comunicação:
Está é uma gerência de fundamental importância na fase de determinação dos requisitos, pois é nesta fase que é realizado a coleta das necessidades dos usuários.
Em um ambiente fisicamente distribuído deve- se manter um fluxo de comunicação muito intenso entre os participantes do projeto.
Conforme relatado nos estudos de caso, problemas referentes a falta de clareza na definição do escopo e um ponto de contato fixo com o cliente, são resultantes de um comunicação inadequada no início do projeto.
A lição aprendida 3 (tabela 6) destaca a importância da comunicação para o bom gerenciamento do projeto, onde reuniões com clientes e usuários são necessárias para o entendimento do projeto.
Gerência do escopo:
Em esta fase ocorre a formalização do projeto.
É relevante controlar o que está ou não incluso no projeto, assegurar que o mesmo possua somente o trabalho necessário para sua execução.
Em o estudo de caso 1 (seção documentação incompleta, o que ocasionou a incerteza dos objetivos do projeto.
A lição aprendida 7 (tabela 6) destaca a importância do escopo no início do projeto, gerando uma gerência mais estável e realista.
Gerência de recursos humanos:
As lições aprendidas 2 e 5 (tabela 6) destacam o relacionamento interpessoal e as diferenças culturais, onde nesta fase é necessário ter conhecimento de todas as pessoas envolvidas com o projeto, independente da localização.
Isto inclui todos os interessados do projeto (patrocinadores, clientes, usuários, etc.).
Conforme relatado no estudo de caso não se tinha conhecimento das equipes e, conseqüentemente, do ritmo de trabalho de cada envolvido.
Isto ocasionou na incerteza dos objetivos do projeto.
Gerência de integração:
Em o momento em que o projeto é formalizado por todos os envolvidos, deve- se assegurar que os elementos do projeto estão adequadamente coordenados.
Para essa coordenação elabora- se um documento consistente que possa ser usado para guiar tanto a execução quanto o controle do projeto.
A integração necessária nessa fase, pois participantes, independente da localização, devem estar cientes do entendimento do projeto.
Em os estudos de caso notou- se que não houve um plano de acompanhamento e controle dos projetos, ocorrendo situações em que determinadas tarefas estavam sendo desenvolvidas por pessoas não alocadas à elas.
Além de estas disciplinas do PMI, torna- se necessário a incorporação de mais uma disciplina, não presente no modelo do PMI, na fase processos de determinação de requisitos.
Esta disciplina é descrita a seguir:
Gerência do planejamento:
Em um ambiente fisicamente distribuído é importante a definição das estratégias que deverão conduzir o processo de gerenciamento com sucesso.
Em esta fase deve estar presente o planejamento estratégico, com a participação direta de todas as equipes envolvidas num ambiente distribuído.
Cabendo aos responsáveis do projeto o alinhamento estratégico entre as perspectivas e objetivos de cada organização envolvida no projeto com relação a os objetivos, estratégias e políticas a serem seguidas na organização executora do projeto.
A segunda fase é a de processos de projeto.
Em essa fase o foco da gerência deve estar centrada em algumas disciplinas do PMI.
As principais atividades que compõem essa fase são a definição organizacional e a especificação do sistema.
As disciplinas que exigem uma maior preocupação por parte de o gerente de projeto estão descritas a seguir:
Gerência de tempo:
Em esta fase o gerente de projeto deve definir o cronograma.
Ele deve estipular prazos, e criar mecanismos que possibilitem que o projeto seja implementado no prazo previsto.
Em um ambiente distribuído é importante a definição e acompanhamento das atividades que irão compor o projeto.
É função do gerente de projeto identificar, documentar e repassar para toda a equipe as atividades, elaborando para cada uma a estimativa de duração de sua realização.
Em os estudos de caso relatou- se que não existiu nenhum processo de estimativa formal, onde os prazos eram estipulados aleaoriamente.
Com isso, as tarefas demandaram muito mais tempo do que o previsto, ocasionando no atraso do projeto.
Isto caracteriza a importância de um processo formal e do planejamento Gerência dos riscos:
Em esta fase, a falta de consulta com os participantes, independente da localização, pode ocasionar em mal entendimento do funcionamento do projeto.
Outros riscos podem surgir nesta fase.
Entre os principais, pode- se citar um planejamento e definição de escopo inadequados, erros em estimar prazo, descuido na comunicação, risco ignorado.
O gerente de projeto deve realizar a quantificação dos riscos, avaliando- os.
É necessário minimizar esse risco através de contatos freqüentes com todos os participantes do projeto.
Devido a o fato da não realização da análise de risco, alguns destes problemas forma identificados nos dois estudos de caso.
Destaca- se a importância da comunicação (lição aprendida 3 da tabela 6) na gerência de risco.
Gerência da qualidade:
Em esta fase o gerente de projeto deve ter a preocupação em garantir que o projeto irá satisfazer as necessidades para as quais ele foi submetido.
A elaboração de um plano de qualidade, através da identificação de quais padrões de qualidade são relevantes para o projeto e determinar como satisfazer- los, deve ser desenvolvido nesta fase.
Como controle da qualidade, a realização de monitoração dos resultados específicos do projeto é importante num ambiente distribuído, pois assim é possível verificar se o padrão de qualidade está sendo seguido.
Em os dois estudos de caso a qualidade foi focada apenas na realização de testes, sem um plano de qualidade definido.
Incorpora- se a lição aprendida 10 (tabela 6), onde é necessário o planejamento dos processos de gerência da qualidade.
Gerência dos recursos humanos:
Conforme relatado nos estudos de caso, é preciso alocar funções específicas do projeto à determinadas pessoas.
O gerente de projeto deve possibilitar o uso mais efetivo das pessoas envolvidas com o projeto.
Isto inclui todos os participantes do projeto, independente da sua localização.
Esta gerência envolve planejamento organizacional, onde as funções responsabilidades do projeto devem ser identificadas e documentadas.
Gerência de custo:
Esta gerência deve ser considerada nesta fase, pois é necessário um consenso entre os patrocinadores e responsáveis por o projeto.
Deve ser realizada uma estimativa de custo dos recursos necessários (pessoas, equipamento e materiais) para a realização das atividades do projeto.
Conforme relatado nos dois estudos de caso, não houve análise de custo, ocasionando em incertezas durante o projeto.
Gerência da comunicação:
Esta gerência deve estar presente nesta fase pois é de fundamental importância, após a definição organizacional, o entendimento das funções que cada participante terá no projeto.
Em essa fase o gerente de projeto deve determinar as informações necessárias para os integrantes do projeto, deve identificar quem necessita de qual informação, quando necessitarão de ela e como será fornecida para eles.
Em um ambiente fisicamente distribuído um plano de comunicação deve ser elaborado para a distribuição das informações necessárias aos interessados do projeto.
Relatórios de situação (posição atual do projeto), relatórios de progresso (o que a equipe de projeto tem conseguido) e previsões (predizem a futura situação e progresso do projeto) são artefatos úteis para garantir o controle de informações.
Em o estudo de caso 1 notou- se que a comunicação através de e-mail gerava um &quot;delay», diminuindo o ritmo de projeto.
Considera- se o gerenciamento da comunicação (lição 3 da tabela 6) relevante para esta fase.
Além de estas disciplinas do modelo do PMI, torna- se necessário a incorporação de mais três disciplinas na fase de projeto, não presentes ao modelo do PMI, para atender a demanda de um ambiente onde participantes estão fisicamente distantes.
As disciplinas são:
Gerência de planejamento:
Considera- se o planejamento uma gerência essencial para todas as fases do projeto.
Em esta fase o gerente de projeto deve elaborar um planejamento tático-operacional, contendo os processos necessários para a execução dos objetivos do projeto.
Durante o decorrer desta fase, o planejamento deve estar centrado na coordenação geral dos trabalhos entre os diversos colaboradores, interfaces entre equipes e comunicação.
Gerência da propriedade intelectual:
Devido a o envolvimento de vários atores, diversidade de países, ambientes culturais diferenciados, é fundamental o gerente de projeto garantir e legalizar toda a questão de direitos autorais, e garantindo a propriedade intelectual a cada solução desenvolvida globalmente.
Em esta fase o gerente de projeto deve identificar todos os procedimentos e recursos necessários ao andamento do projeto, sem deixar de se preocupar com a questão de direitos autorais e transferência de tecnologia.
O processo envolve em levantamento da capacitação tecnológica com identificação de técnicas específicas a serem usadas no desenvolvimento do projeto.
Gerência de conflitos:
Conforme relatado nos estudos de caso, o relacionamento interpessoal e a resolução de conflitos são críticos no processo de gerência de projeto de software (lição aprendida 2 da tabela 6).
Devido as diferenças culturais e distância física entre atores do projeto, afloram diversos conflitos entre os participantes.
Cabe ao gerente de projeto identificar, documentar e controlar possíveis conflitos ocasionados no ambiente em estudo.
Uma das soluções é a padronização da comunicação entre os integrantes do projeto.
Uma gerência de conflitos inadequada pode ser considerada um fator de risco para o projeto.
A terceira fase é a de processos de produção.
Em esta fase ocorre a codificação, envolvendo na maioria das vezes a equipe de desenvolvimento.
As principais disciplinas do modelo do PMI que devem ser abordadas nesta fase estão descritas a seguir:
Gerência de tempo:
Gerência de custo:
O gerente de projeto deve controlar os recursos envolvidos nesta fase, estando firmemente sincronizado com a estimativa dos custos, realizada na fase anterior.
O controle da necessidade de alocação de novas pessoas ou novos equipamentos para o projeto deve ser realizado por o gerente de projeto.
Gerência da qualidade:
Em esta fase o gerente de projeto deve manter o padrão de qualidade no desenvolvimento das tarefas.
Para isso é necessário monitorar resultados ocorridos, determinando se eles estão de acordo com os padrões de qualidade relevantes e identificando as formas para eliminar causas de resultados insatisfatórios.
Testes de desenvolvimento devem ser realizados nesta fase, o que evitaria um acúmulo de testes na fase de avaliação.
Gerência de recursos humanos:
O gerente de projeto deve controlar as funções, responsabilidades e relacionamentos dentro de o projeto.
De acordo com a demanda de desenvolvimento, novas pessoas podem fazer parte da equipe de projeto.
Cabe ao gerente de projeto a alocação desses recursos de maneira que não altere as estimativas já previstas no cronograma.
Gerência da comunicação:
O fluxo de informações nesta fase é intenso entre os diversos participantes (clientes e desenvolvedores), o que exige toda uma coordenação e preocupação com mecanismos de gestão desse processo de comunicação.
A distribuição da informação entre equipes deve envolver todas as informações relevantes do projeto.
Tanto a comunicação com clientes quanto com equipes de desenvolvimento deve ser padronizada através da linguagem de especificação UML, documentando assim, todas as iterações e etapas realizadas até o momento.
A lição aprendida 8 (tabela 6) destaca a necessidade de adoção de uma linguagem de especificação comum.
Gerência de risco:
O risco nesta fase deve ser administrado por o gerente de projeto, pois problemas relacionados à qualidade (programa de garantia da qualidade inadequado), comunicação (falta de consulta com os stakeholders), recursos humanos (pobre organização do projeto e definição de responsabilidades) e tempo (disponibilidade de recursos) estão propícios a ocorrer nessa fase.
É papel do gerente de projeto evitar, mitigar e aceitar as conseqüências dos riscos.
Além de estas disciplinas derivadas do PMI, três outras disciplinas de gerência devem ser abordadas nessa fase para atender à demanda de um ambiente fisicamente distribuído.
As três disciplinas estão descritas a seguir:
Gerência do planejamento:
Como nas fases anteriores, nesta fase torna- se necessário o acompanhamento do planejamento tático-operacional do projeto.
A fase de projeto deve ter uma coordenação dos trabalhos que estão sendo desenvolvidos, assim como deve existir uma coordenação de contatos com clientes e equipes do projeto.
O gerente de projeto deve verificar se os objetivos de cada organização envolvida no projeto estão sendo alcançados por a organização executora do mesmo.
Gerência da aprendizagem:
Em esta fase ocorre muita troca de informações e aquisição de conhecimentos.
Em muitos dos casos esses conhecimentos são adquiridos individualmente.
Gerência de Conflitos: De a mesma forma que na fase 2, nesta fase diversos conflitos podem ocorrer devido, principalmente, ao não entendimento do que é para fazer, uso incorreto da tecnologia e características da aplicação próprias da cultura do desenvolvedor.
Cabe ao gerente de projeto identificar, documentar e controlar esses conflitos, padronizando a comunicação entre os integrantes do projeto e definindo claramente a função de cada participante.
A quarta fase é a de processos de avaliação.
Essa fase resume- se basicamente nos testes dos produtos gerados por a fase de produção.
A equipe de qualidade tem participação fundamental nesta fase.
De entre as disciplinas do PMI, o gerente de projeto deve ter uma preocupação maior nas seguintes disciplinas:
Gerência da qualidade:
A qualidade na realização da fase de avaliação é de fundamental importância para o sucesso do projeto, pois os testes impedirão o avanço de problemas (erros e falhas) para as fases seguintes.
Em essa fase testes específicos e teste geral do produto gerado na fase de produção devem ser realizados.
O gerente de projeto deve garantir a integração entre as equipes de desenvolvimento e qualidade, com o acompanhamento dos processos de teste e cumprimento das atividades por os participantes.
Gerência da comunicação:
Envolve basicamente a troca de informações entre a equipe de desenvolvimento e equipe de teste.
Um plano de comunicação dever ser elaborado para essa troca, evitando perda de controle sobre esta atividade.
A gerência da comunicação nesta fase é considerada como um dos maiores fatores de risco do projeto.
Gerência de risco:
Em esta fase a gerência de risco deve se preocupar com possíveis riscos ocasionados por o descuido no planejamento da comunicação e falta de consulta com elementos chaves do desenvolvimento do produto.
Além de as disciplinas do PMI, mais uma disciplina de gerência deve ser abordada nessa fase, conforme descrito a seguir:
Gerência de planejamento:
A elaboração de planos de teste é uma das atividades que devem ser realizadas nesta fase.
O gerente de projeto em conjunto com a equipe de teste deve elaborar e tornar consistente este plano, possibilitando a geração da documentação necessária para a comunicação entre as equipes.
A quinta fase é a de processos de transição.
Em esta fase é onde ocorrem as melhorias e ajustes finais do produto antes da liberação para o cliente.
As disciplinas do modelo do PMI de maior preocupação par parte do gerente de projeto são:
Gerência do escopo:
É importante assegurar que os processos necessários para a finalização do projeto estejam presentes nesta fase.
A falta do acompanhamento desses processo pode gerar desentendimentos entre as equipes internamente e entre as equipes do projeto e clientes.
Gerência de tempo:
O gerente de projeto deve verificar a situação do projeto em relação a os prazos estipulados.
O projeto deve estar dentro de o cronograma definido na fase de projeto.
Gerência da qualidade:
Em esta fase o gerente de projeto deve garantir que o projeto está satisfazendo as necessidades para as quais ele foi empreendido.
Essa atividade deve ser verificada para que não exista inconsistência entre a necessidade do cliente e o produto final.
Além de estas disciplinas, torna- se necessário a incorporação de mais uma disciplina para esta fase:
Gerência do planejamento:
O gerente de projeto, em conjunto com as equipes, deve identificar as melhorias e ajustes do produto necessárias para a finalização do mesmo.
Para isso o gerente de projeto deve traçar um plano que não altere a situação do projeto no cronograma.
As possíveis modificações do produto devem estar documentados para um eventual feedback ao cliente.
A sexta e última fase é a de processos de integração.
Em esta há uma preocupação maior com a confiabilidade e performance do produto desenvolvido.
A disciplina derivada do PMI que deve ser focada com maior preocupação por o gerente de projeto é a gerência da qualidade.
Em essa fase o gerente de projeto deve garantir a confiabilidade do produto, integridade dos dados, obtendo performance do projeto.
Com relação a o gerenciamento da comunicação no modelo proposto, pode- se destacar a possibilidade de utilização do Trabalho Cooperativo por Meio do Computador (Computer Supported Cooperative Work -- CSCW), que inclui uma grande variedade de aplicações que vão desde editores cooperativos até sistemas de engenharia concorrente e sistemas de teleconferência.
Estas aplicações favorecem a integração dos usuários e permitem um aumento do rendimento na execução das tarefas, em relação a o trabalho individual isolado.
Buscando adaptar a visão dos processos do PMI no estudo, na próxima seção é descrito a visão dos processos do modelo de desenvolvimento de software.
Conforme dito anteriormente, o modelo de processo de desenvolvimento de software é dividido em seis fases, sendo que cada uma tem sua função e condição de saída.
A figura 18 mostra uma visão geral da composição e transição das fases do modelo.
Mostra também, o marco de cada fase, para que se dê continuidade ao projeto.
Cada fase (determinação de requisitos, projeto, produção, avaliação, transição e liberação) terá um conjunto de atividades que serão descritas a seguir.
Além de a apresentação destas associadas a cada fase do modelo proposto, apresentamos também o conjunto de atividades básicas para o controle de execução do projeto de desenvolvimento de software num ambiente distribuído.
Busca- se, fundamentalmente, estabelecer uma relação entre os processos do modelo de gerência de projeto do PMI (conforme), apresentados na seção 3.4 (figura 4), e os processos do processo de desenvolvimento de software (figura 18).
O início do processo se dá nesta fase, em que é realizada a coleta das necessidades dos usuários, visando à formalização do processo e à diminuição dos riscos.
Uma equipe elabora um plano de desenvolvimento de software escrito e realiza a documentação de requerimentos para o planejamento do projeto.
É gerado por a equipe requisitante um documento que deve conter a visão geral do ponto de vista do usuário.
Para a padronização da comunicação e entendimento do escopo do projeto, por parte de o cliente e por parte de a equipe do projeto, torna- se necessário a utilização de diagramas de caso de uso em alto nível (nível usuário).
Estes diagramas servirão para ilustrar o porquê da necessidade do sistema, o que facilitaria o entendimento do projeto e a concordância com os cliente.
Cenários também podem ser utilizados, ilustrando situações onde o ator utilizou o sistema para conseguir atingir o objetivo de determinado caso de uso.
A adoção de diagramas de caso de uso e cenários nessa fase possibilitaria a aprovação e entendimento do que o produto deverá fazer.
Clientes e usuários, independente da localização, devem entender o modelo e usar- lo para comunicar suas necessidades de forma consistente e não redundante.
Em essa fase considera- se presente no projeto o processo de formalização e definição.
Essa característica contempla o processo de inicialização (PMI), garantindo que o projeto será executado.
Análise de stakeholder, preparação de um estudo de possibilidades e a documentação dos requisitos iniciais, são tarefas que devem ser realizadas nessa fase.
Isso tudo deve ser distribuído para os envolvidos no projeto até o momento (patrocinadores, clientes e usuários), obtendo a aprovação dos estudos conceituais, confirmando a viabilidade de elaboração do projeto.
Essa fase incorpora três características derivadas das lições aprendidas (tabela 6) através do estudo teórico e dos estudos de caso apresentados.
As características são: --
a importância de um processo formal; --
a importância do planejamento antes de se começar o desenvolvimento num ambiente fisicamente distribuído; --
a necessidade de um processo de software bem definido.
A seguir, as atividades que serão executadas nesta fase:
Plano de desenvolvimento de software escrito;
Em esta fase ocorre a instanciação e a definição organizacional do projeto.
A equipe requisitante, em conjunto com coordenadores do projeto, define o gerente de projeto, que por sua vez, forma o restante da equipe, com seus devidos recursos alocados.
A equipe deve estar ciente do entendimento do projeto e em conjunto com o gerente de projetos é elaborada a especificação preliminar do projeto.
Essa especificação deve definir a lógica do domínio da aplicação para o projeto e o seu escopo (características e restrições), ou seja, o propósito do projeto, detalhando assim o documento de interação de desenvolvimento.
Um plano de teste também deve ser realizado nesta fase.
Os diagramas de caso de uso também são utilizados nesta fase, só que de uma forma mais detalhada (nível desenvolvedor), para futuro desenvolvimento.
A seguir, outros artefatos da UML que devem ser desenvolvidos nesta fase:
Modelo conceitual:
É um dos artefatos mais importante criado durante a fase de projeto, pois ilustra os conceitos importantes do domínio do problema, suas associações e atributos.
Levantar um conjunto rico e expressivo de conceitos (objetos) nesta fase ajuda muito a conduzir a fase de produção.
Criar o modelo conceitual auxilia na elaboração do glossário, definindo os termos importantes do domínio do problema.
Isto é considerado muito importante para a comunicação entre os envolvidos do projeto, principalmente se eles estiverem em locais diferentes.
Diagramas de interação:
A sua utilização é importante, pois representam o conjunto de interações necessárias para efetivar algum comportamento do sistema.
Eles podem ser utilizados para capturar a semântica do fluxo de eventos de um caso de uso, auxiliando a identificar classes, responsabilidades e relacionamentos.
Diagramas de classe:
É um dos artefatos mais utilizados na modelagem de sistemas orientado a objetos.
Ele exibe um conjunto de classes, interfaces e relacionamentos necessários por a implementação de um comportamento.
Diagramas de estado:
Considera- se este como um complemento para a descrição das classes.
Ele mostra todos os estados possíveis em que objetos de uma certa classe podem se encontrar e mostra também quais são os eventos do sistema que provocam tais mudanças.
Diagramas de componentes:
É utilizado para representar a visão estática de implementação do sistema.
A utilização desses diagramas possibilita manter a padronização na comunicação o que torna fácil o entendimento por parte de os clientes e usuários.
O marco de saída desta fase é a aprovação do desenvolvimento (marco 2), dando continuidade ao projeto.
Em esta fase considera- se que está presente no projeto o processo de planejamento (PMI), visando planejar e manter um esquema de trabalho viável para se atingir os objetivos do projeto.
As principais características que compõem está fase é a definição do escopo, programação de atividades, a orçamentação e os planos do projeto.
Esta fase incorpora três características derivadas das lições aprendidas (tabela 6) através do estudo teórico e dos estudos de caso apresentados.
As características são: --
a importância da comunicação; --
a importância da definição do escopo no início do projeto; --
a necessidade de adotar uma linguagem de especificação comum.
A seguir, as atividades que serão executadas nesta fase:
Esta é a fase em que é realizada a codificação, envolvendo na maioria das vezes a equipe de desenvolvimento.
O objetivo dessa fase é desenvolver o produto de maneira interativa até que esteja pronto para a realização dos testes.
É desenvolvida uma produção preliminar, após é realizado a análise dessa produção.
Considera- se que nesta fase pode ocorrer a elaboração de alguns diagramas complementares e necessários para o desenvolvimento do projeto.
Casos de teste são realizados nesta fase.
Atividades de programação, documentação, revisão de código, teste de desenvolvimento e integração dos módulos são atividades específicas da equipe de desenvolvimento.
A aprovação da produção (marco 3) encerra esta fase.
Em esta fase considera- se que está presente no projeto o processo de execução (PMI), sendo função do gerente de projeto coordenar as pessoas e recursos para executar o plano do projeto.
Esta etapa deve ter um acompanhamento rigoroso da equipe de garantia da qualidade, verificando se os processos estão sendo executadas conforme suas definições.
A resolução de conflitos é um outro aspecto que deve ser abordado por o gerente de projeto, realizando reuniões sucessivas com todos os integrantes do projeto.
Esta fase incorpora quatro características derivadas das lições aprendidas (tabela 6) através do estudo teórico e dos estudos de caso apresentados.
As características são: --
a resolução de conflitos; --
a importância da comunicação num ambiente fisicamente distribuído; --
a necessidade de um processo de software bem definido; --
a necessidade de uma linguagem de especificação comum para as fases do projeto.
A seguir, as atividades que serão executadas nesta fase:
Produção preliminar;
Codificação: O atividades de programação, o documentação, o revisão de código, o teste de desenvolvimento, o integração dos módulos;
Em esta fase ocorre a maximização dos resultados positivos e a minimização das conseqüências de eventos negativos.
Os testes do produto são gerados e, dependendo dos resultados, o produto pode regressar à fases anteriores, até que seu objetivo seja cumprido.
A maior participação nesta fase é da equipe de qualidade, com a elaboração do plano de teste, realização de testes específicos e teste geral da aplicação.
Aqui utiliza- se diagramas de caso de uso para a especificação de casos de teste, o que auxiliaria na comunicação da equipe de teste com equipe de desenvolvimento.
A iteração entre o gerente de projeto e a equipe de qualidade ocorre com a finalidade da aprovação das principais modificações efetuadas (marco 4), objetivando a passagem para a fase de transição.
Em esta fase considera- se presente no projeto o processo de execução e de controle (PMI), assegurando que os objetivos do projeto estão sendo executados e atingidos, monitorando e avaliando o progresso do produto.
Esta fase incorpora duas características derivadas das lições aprendidas (tabela 6) através do estudo teórico e dos estudos de caso apresentados.
As características são:
A adoção de uma linguagem padrão para simplificar a comunicação e a necessidade de um planejamento dos processos de garantia da qualidade e testes.
A seguir, as atividades que serão executadas nesta fase:
Maximização dos resultados positivos;
Melhorias e ajustes finais fazem parte dessa fase.
Ocorre a certificação de que o produto está pronto para seu encerramento.
O gerente de projeto junto com a equipe requisitante deve finalizar o projeto dentro de o cronograma.
O projeto é passado ao cliente e, após a aceitação, é realizado o fechamento da versão final.
A instalação é feita por os administradores de sistema, passando para a fase de liberação.
Em esta fase considera- se relevante o uso de diagramas de deployment, pois servirá para mostrar a organização do hardware e a ligação do software aos dispositivos físicos.
Esse diagrama modela a visão estática da implantação de um sistema entre seus nós físicos e seus relacionamentos.
O processo de encerramento (PMI) está presente nessa fase, com a formalização da aceitação do produto por o cliente e encerrando- o de forma organizada.
A seguir, as atividades que serão executadas:
Melhorias e ajudas finais;
Esta fase inicia após a realização de testes e a aprovação das principais modificações efetuadas.
É uma ligação entre o software desenvolvido e os processos de negócio ao qual ele vai apoiar.
Para efetuar o processo de integração, é preciso obter confiabilidade no sistema, ter integridade nos dados, obter performance do projeto.
Satisfazendo essas condições, o projeto é liberado para operação e suporte à produção, seguido de uma análise crítica do projeto, tanto por a equipe requisitante quanto por a de desenvolvimento e usuários.
A seguir, as atividades que serão executadas nesta fase:
Obter confiabilidade no sistema;
Finalmente, visando propiciar uma síntese da relação entre os processos de desenvolvimento de software e de gerência de projeto, a figura 19 apresenta uma visualização desta relação.
De a aprendizagem resultante do estudo da teoria e das propostas conceituais analisadas, bem como das experiências práticas do desenvolvimento dos projetos citados nos estudos de caso (capítulo 5), propõe- se as extensões aos processos do PMI[ ZAN 02 a].
Destaca- se que a característica de ambiente fisicamente distribuído (com desenvolvimento de software offshore com relação a o cliente) exerce grande influência ao modelo proposto.
A seguir apresenta- se a proposta de extensão ao modelo proposto por o PMI[ PMB 00] no sentido de atender aos objetivos deste estudo:·
Gerência do planejamento:
A busca de mecanismos que permitam a articulação e a elaboração de estratégias ou visões de futuro no ambiente em estudo é de extrema importância para o sucesso no decorrer de os projetos.
Uma etapa de planejamento envolveria basicamente a definição das estratégias que deverão conduzir o processo de gerenciamento como um todo, ao longo de o tempo.
Os processos que compõem a gerência de planejamento podem ser divididos em planejamento estratégico, planejamento tático-operacional encerramento do planejamento.
O planejamento estratégico deve ter a participação direta de todas as equipes envolvidas num ambiente distribuído.
Cabe aos responsáveis do projeto o alinhamento estratégico entre as perspectivas e objetivos de cada organização envolvida no projeto com relação a os objetivos, estratégias e políticas a serem seguidas na organização executora do projeto.
O planejamento tático-operacional contém os processos necessários para a execução dos objetivos do projeto.
Envolve especificamente a gestão do projeto de gerência de projeto de software, centrado na coordenação geral dos trabalhos entre os diversos colaboradores, interfaces entre as equipes, comunicação, contatos com o cliente e a resolução de conflitos.
O encerramento do planejamento é o processo final dessa gerência, onde se tem conhecimento de todos os requisitos necessários para se dar início ao projeto.
Gerência da propriedade intelectual:
Em um ambiente onde temos diversos atores envolvidos, em diferentes países, com várias empresas parceiras atuando em ambientes culturais diferenciados, é fundamental a preocupação do gerente de projeto no sentido de garantir e legalizar toda questão de direitos autorais, e a propriedade intelectual garantida a cada componente e parte da solução que está sendo desenvolvida globalmente.
Os processos que compõem essa gerência são os processos de identificação e legalização.
É muito importante o gerente de projeto identificar todos os procedimentos e recursos necessários para o andamento do projeto, sem deixar de se preocupar com a questão de direitos autorais e transferência de tecnologia.
O processo envolve um levantamento da capacitação tecnológica com identificação de técnicas específicas a serem usadas no desenvolvimento do projeto.
Um outro processo a ser seguido por o gerente de projeto é, após o processo de identificação, a legalização de todos os recursos identificados, evitando assim, qualquer tipo de imprevistos relacionados às questões legais envolvidas no desenvolvimento do projeto.
Gerência de aprendizagem:
A aprendizagem organizacional é o processo em que a base de valor e o conhecimento da organização mudam, aumentando a habilidade em resolver problemas e a capacidade de ação da organização de acordo com a demanda do ambiente.
Ambientes que envolvem diversidade cultural e distância geográfica multiplicam o desafio de encontrar o ponto adequado da estrutura organizacional que represente a síntese entre a características reais e desejadas de cada parceiro envolvido.
O ambiente, segundo a experiência, só funciona quando se trata todo o processo em todas as suas dimensões, tanto culturais como técnicas e organizacionais, como um grande processo de aprendizagem onde cada um incorpora novos conhecimentos individualmente, porém devem existir mecanismos que transformem esse conhecimento individual numa aprendizagem coletiva, em nível coorporativo, em escala global, envolvendo todos os parceiros intra e interorganizacionais.
Gerência de conflitos:
A formulação estratégica é dinâmica, em constante movimento, em que regras e padrões são alterados conforme as necessidades das empresas e das pessoas que as compõem diante de as diversidades do ambiente.
Devido principalmente às diferenças culturais e à distância física entre os atores participantes do projeto, afloram diversos conflitos entre os participantes.
O gerente de projetos deve saber lidar com esses problemas e propor soluções para a resolução de conflitos, para que o processo como um todo tenha o desenvolvimento adequado.
A identificação e controle dos conflitos faze parte da gerência de conflitos.
A identificação dos conflitos consiste em determinar quais os conflitos são mais prováveis de ocorrer num ambiente onde equipes se encontram distantes fisicamente.
É relevante, por parte de o gerente de projeto, a documentação destas características identificadas.
O controle dos conflitos procura definir os passos necessários para o controle e a resolução de conflitos futuros.
A principal função está em saber como evitar- los, eliminando uma ameaça específica, normalmente eliminando a sua causa.
O gerente de projeto talvez não possa eliminar todo o conflito, mas alguns eventos de conflito podem, freqüentemente, ser eliminados.
Além de as inserções citadas acima, destacamos a necessidade de ajustar alguns processos ao ambiente em desenvolvimento em estudo.
Em a gerência do tempo é necessário assegurar que o projeto será implementado no prazo previsto.
Com as diferenças culturais e distâncias entre os atores é complexo o processo de administração do tempo, principalmente com relação a o cumprimento do cronograma.
Em a gerência da comunicação, o fluxo de comunicação é intenso entre os diversos parceiros, clientes e desenvolvedores, o que exige toda uma coordenação e preocupação com mecanismos de gestão desse processo de comunicação envolvendo clientes, usuários, gerente de projetos, gerente de programas, suporte técnico, help desk, etc..
A gerência da qualidade é uma tarefa que deve ser executada em todas as etapas do processo, e com a distribuição dos atores se exige um rigor maior para que se garanta as necessidades às quais o projeto foi submetido.
Em a gerência dos riscos, com a distribuição das equipes, usuários, gerente de projetos e outros, se torna mais complexo o processo de maximização dos resultados de eventos positivos e a minimização das conseqüências de eventos negativos, no sentido de dificultar na identificação dos riscos e na quantificação dos mesmos.
Em a gerência da integração, planejamento organizacional estrutura organizacional integrados em conjunto com os componentes do projeto, são considerados importantes fatores na competitividade e sucesso das organizações atualmente.
A forma com que o planejamento é conduzido basicamente determina como a estrutura organizacional evoluirá ao longo de o tempo.
O mesmo acontece com as demais áreas de gestão (escopo, custo, recursos e aquisições do projeto), que devido a a distribuição de equipes e diferenças culturais, deve ter o maior cuidado e uma estratégia bem definida por parte de os coordenadores, patrocinadores e gerentes de projetos.
O dilema fundamental, no ambiente em que se vive atualmente, é a necessidade de reconciliar forças para estabilidade e mudanças ­ focar esforços e ganhar eficiência operacional, de um lado, e adaptar e manter atualidade com a dinâmica do ambiente externo, por outro lado.
O modelo tem como característica a adoção de um processo de desenvolvimento padrão.
Pode ser adaptado para cada novo sistema de aplicação a ser desenvolvido, respeitando características específicas do projeto.
A informação gerada no processo de gerência e desenvolvimento pode ser oferecida num repositório disponível via web, onde os produtos de cada fase são fornecidos, segundo critérios de visibilidade estabelecidos entre clientes, usuários, desenvolvedores e gerentes de projetos.
Isto geraria uma base de conhecimento útil para uma gestão do processo de desenvolvimento de software como um todo na organização.
Vale ressaltar que o modelo utiliza técnicas e procedimentos orientados a objetos, abordagem processual proposta por o PMI e segue um ciclo de vida espiral permitindo a correção de desvios e alterações de requisitos de forma a não comprometer em demasia acordos previamente estabelecidos.
A linguagem da notação utilizada está baseada no padrão UML coerente com as tendências mais modernas do mercado.
Os clientes têm uma participação bem determinada nas diversas atividades do processo garantindo, uma maior visibilidade do andamento dos trabalhos e integração efetiva com a equipe técnica em ações críticas, tais como a especificação de requisitos da aplicação.
A validação do trabalho realizado é feita em checkpoints previamente estabelecidos num cronograma de atividades, permitindo reavaliações e ajustes com o objetivo de alcançar níveis satisfatórios de qualidade e produtividade.
Considerando que usuários finais e requisitante (patrocinador) de um projeto se encontram num país (Austin, EUA) e equipes de desenvolvimento, suporte, qualidade, gerência de projeto, coordenação, em outro país (Porto Alegre, Brasil), o processo do modelo proposto inicia após a manifestação da intenção de desenvolvimento de um novo produto por o requisitante (localizado em Austin).
Imediatamente, os coordenadores responsáveis por a gerência das equipes, no Brasil, verificam a viabilidade de seu desenvolvimento.
O momento seguinte envolverá uma interação entre os responsáveis por a entrada dos projetos (localizados em Porto Alegre) e o gerente de produto (localizado em Austin), para a coleta de informações, visando à preparação da documentação para desenvolvimento do produto.
Após esse processo, será enviado (através de e-mail) ao requisitante (localizado em Austin) uma documentação contendo uma visão geral do projeto, bem como os objetivos gerais e riscos envolvidos.
É de fundamental importância a padronização desta comunicação, nesse sentido, acredita- se ser adequado utilizar os diagramas de caso de uso definidos na UML.
Os casos de uso são uma visão gráfica que indicam especificamente as funções do sistema.
Entende- se que os casos de uso devem ser identificados claramente.
Para isto devem ser enviados os cenários envolvidos para cada caso, ou seja, o roteiro normal associado às situações de exceção ou alternativas previstas no caso de uso.
Para cada caso de uso espera- se uma descrição e um diagrama, que devem ser suficientemente específicos para que haja um consenso entre as necessidades do usuário e o que deve ser construído por a equipe desenvolvedora, sendo este um fator chave por a eliminação de riscos.
Após a definição do escopo e objetivos do projeto, é apresentada a idéia de desenvolvimento do produto a todas as equipes, através de uma reunião.
Em esta ocorre a definição organizacional (escolha do gerente de projeto, da equipe, alocação de recursos).
Toda a documentação existente até o momento é passada ao gerente de projeto, tornando- o responsável por toda a interação com o gerente de Austin no que diz respeito ao projeto.
A partir de a designação do gerente e a equipe ciente do entendimento do projeto, inicia- se a definição do cronograma, especificação preliminar, determinação de requisitos.
Em este momento é necessário convergência na visão das equipes de ambos países.
Fica evidente que aspectos de comunicação e as diferenças culturais existentes são significativas nesta e nas etapas subseqüentes, reforçando a percepção da importância de maior rigor no processo de comunicação entre as equipes.
Os produtos dessa fase são diagramas de casos de uso (nível desenvolvedor), modelo conceitual, diagramas de interação, de estado, classes e componentes.
Estes produtos são distribuídos (via e-mail) entre as equipes para atualização e conservação da comunicação existente no projeto.
Com o consenso entre as equipes e a aprovação de desenvolvimento, fecha- se a fase 1 (processos de determinação de requisitos) e a fase 2 (processos de projeto).
Concluídas as fases 1 e 2 e com a aprovação de desenvolvimento por parte de a equipe de Austin, inicia- se a fase de produção.
Durante o detalhamento desta fase os supervisores do projeto desempenham papel relevante no sentido de acompanhar e analisar criticamente os encaminhamentos realizados, tanto na esfera técnica, como na esfera organizacional, com especial atenção nos aspectos que envolvem a comunicação entre os participantes de países diferentes.
Este papel deve ser realizado através de reuniões e dinâmicas de grupo, envolvendo a totalidade ou parte da equipe do projeto.
Alguns refinamentos necessários podem ocorrer nessa fase.
Com a aprovação da produção, por o gerente de projeto (localizado em Porto Alegre), fecha- se a fase 3 (processos de produção).
Em a fase 4 (processos de avaliação) é quando os testes são realizados e o envolvimento é total entre equipe de qualidade e gerente de projeto (ambos localizados em Porto Alegre).
A equipe de qualidade elabora plano de teste, realiza todos os testes.
Os produtos gerados nessa fase são diagramas de casos de uso para a especificação de casos de teste, que são repassados (via e-mail) ao gerente de projeto.
Com a aprovação das principais modificações efetuadas, tem- se o final dessa fase.
As próximas duas fases (processos de transição e processos de integração) envolvem todas as equipes do projeto (Austin/ Porto Alegre).
São realizadas melhorias e ajustes finais por a equipe do projeto (localizada em Porto Alegre), a aceitação do usuário final (localizado em Austin) e, após a obtenção de confiabilidade, integridade dos dados e performance, o projeto é liberado para operação e suporte à produção, seguido de uma análise crítica do projeto, tanto por a equipe requisitante e usuários (Austin) quanto por a equipe de desenvolvimento (Porto Alegre).
O modelo proposto incorpora características refinadas das lições aprendidas e da teoria estudada.
Define um conjunto de procedimentos, visando padronizar e sistematizar a especificação de requisitos no processo de integração entre equipes de trabalho distantes fisicamente.
Processo formal de gerência de projeto de software está presente no modelo, onde para passar para outra fase é necessário cumprir todos os requisitos da fase atual.
De essa forma, o gerente tem o controle do início e final das atividades de cada fase, assim como o acompanhamento do projeto como um todo.
A adoção de um processo formal de gerência de projeto de software no modelo foi resultante das dificuldades encontradas no processo de gerência vivenciadas nos estudos de caso (capítulo 5) e na fundamentação teórica, e.
Uma outra lição aprendida, incorporada ao modelo, é importância da comunicação para o bom gerenciamento do projeto, lição 3 (tabela 6).
Conforme definido anteriormente, esse processo tem por base o PMI, incorporando a linguagem de especificação UML, num ciclo de vida baseado no modelo espiral.
É de fundamental importância à padronização da forma de comunicação com relação a a especificação dos requisitos entre as equipes distantes.
Em esse sentido, acredita- se ser adequado o uso da diagramação UML no decorrer de as fases.
Os diagramas de casos de uso são uma visão gráfica que indicam especificamente as funções do sistema e devem ser compartilhados entre as equipes, objetivando uma eliminação de riscos.
Os diagramas de classe, onde ocorre a visualização das entidades do sistema, também devem ser enviados, mas não precisa ter muitos detalhes, sendo desejável um detalhamento maior somente nos pontos críticos do sistema, se houverem.
Outros diagramas considerados importantes para a continuidade da comunicação entre equipes distantes são utilizados no decorrer de o desenvolvimento do projeto.
O planejamento antes do início do desenvolvimento, lição 4 (tabela 6), também está presente no modelo.
A fase 1 (processos de determinação de requisitos) e a fase 2 (processos de projeto) são antecessoras da fase de produção.
Em estas o planejamento está presente desde a coleta das necessidades dos usuários, elaboração do plano de desenvolvimento, até a definição organizacional e a aprovação de desenvolvimento.
Estas etapas são de fundamental importância para o bom andamento dos processos na gerência de projeto de software.
As diferenças culturais (lição 5, tabela 6), comuns em ambientes distribuídos, são tratadas de forma com que a comunicação entre participantes de outros locais seja padronizada, com o uso da diagramação da UML, conforme descrito anteriormente.
Em as fases em que existe a possibilidade de equipes trabalharem distantes fisicamente, o gerente de projeto busca identificar os envolvidos e buscar o entendimento entre eles, isto envolve principalmente a padronização do idioma, caso necessário.
A definição do escopo no modelo ocorre no início do projeto (lição 7, tabela 6), na fase de determinação de requisitos.
Isto deve ocorrer antes da fase de projeto (fase 2) e da fase de produção (fase 3).
Assim o gerente de projeto tem a possibilidade de saber o que vai ser desenvolvido e passar este conhecimento para toda a equipe do projeto.
A carência de suporte para a questão gerencial num ambiente fisicamente distribuído é suprida por a implantação do modelo de gerência proposto no estudo Outras lições aprendidas como a resolução de conflitos (lição 2, tabela 6), a adoção de uma linguagem de especificação comum para as fases e a necessidade de planejamento dos processos de garantia da qualidade e testes (Lição 10, tabela 6), também estão presentes no modelo.
É muito comum encontrarmos analistas e engenheiros de software sem o conhecimento necessário para compreender os requisitos gerais para gerenciar o projeto de software.
Em um ambiente onde existe a distribuição física dos participantes (usuários, analistas, desenvolvedores, etc.), os problemas no processo de gerência de projeto de software ganham contornos mais críticos.
Com isto fica mais difícil planejar, estimar o tamanho, modificar e produzir o software.
Em este trabalho, no capítulo 1, introduziu- se a área de gerência de projeto de software, demonstrando uma nova tendência das empresas de desenvolvimento de software.
Essa tendência é a atuação em ambientes de desenvolvimento de software fisicamente distribuídos, em o qual usuários e equipe de desenvolvimento estão em locais físicos diferentes, às vezes países, com outras culturas.
Entre os principais objetivos dessa distribuição, destacam- se maior produtividade, redução de custos, minimização dos riscos e melhoria da qualidade.
Com relação a o método de pesquisa, no capítulo 2, procurou- se descrever o principal método utilizado.
O estudo caracterizou- se por ser de natureza exploratória, sendo que a estratégia de pesquisa adotada foi o estudo de caso.
Desenvolveu- se uma extensa revisão bibliográfica, em que se procurou abordar, no capítulo 3, os principais conceitos envolvidos com a gerência de projeto de software e procurou- se também identificar características relacionadas à distribuição física.
Dando continuidade ao estudo exploratório, no capítulo 4, descreveu- se três modelos de gerência de projeto.
Em o modelo de gerência de projeto processual, Schwalbe incorpora os conceitos de gerência de projeto do PMI, onde destacase a forma com que os processos são divididos, facilitando a comunicação entre as fases do projeto.
O modelo de gerência de projeto orientado a objeto faz uso da UML e do UP nas fases do projeto, para que cada participante possa manter o processo de desenvolvimento e uma comunicação padrão no decorrer de o projeto.
Já o modelo de Boehm aborda a Teoria-W, em a qual são destacados procedimentos para que o gerente de projeto possa tornar todas as partes envolvidas no projeto vencedoras.
Os três modelos possuem características próprias e comuns entre eles e pode- se considerar que não são modelos concorrentes, mas complementares.
Em esse contexto, destacou- se que nenhum dos modelos abordados suporta o gerenciamento de software num ambiente fisicamente distribuído.
Em o capítulo 5, foram descritos os estudos de caso realizados sob dois projetos (Call Center e E-Mail Blitz) ocorridos em 2001 no Centro de Desenvolvimento e Pesquisa em Ebusiness DELL/ PUCRS, um ambiente com características de distribuição física entre os atores.
Com a realização dos estudos de caso verificou- se que os principais problemas estão relacionados às dificuldades de comunicação decorrentes da distância física e cultural entre os grupos de usuários e desenvolvedores.
Tornou- se necessário, então, a elaboração de um modelo de gerência de projeto para ambiente fisicamente distribuído que incorporasse características de outros modelos e se adaptasse à distribuição física dos participantes.
Em este contexto, no capítulo 6, o modelo proposto foi apresentado.
Procurando- se enquadrar as principais disciplinas do modelo do PMI no processo de desenvolvimento de software num ambiente fisicamente distribuído.
Devido a as dificuldades decorrentes da distância física e cultural entre os grupos de usuários e desenvolvimento, foi proposto um conjunto de extensões aos processos de gestão do PMI, para suprir as necessidades do ambiente de trabalho.
Identifica- se grande potencial de crescimento nesta linha de pesquisa, em que os pontos fortes envolvem uma parceria estável entre a academia e a indústria, criando condições de experimentação e aprendizagem únicas, decorrentes de uma sinergia positiva entre os parceiros.
Essa linha de estudo demonstra que o mundo empresarial e as práticas de negócio estão andando muito à frente das teorias e modelos conceituais existentes na área.
O modelo proposto foi resultado da necessidade de se encontrar respostas a um problema crítico que o ambiente de trabalho em que estamos inseridos nos apresenta.
Este problema está centrado nas dificuldades de comunicação decorrentes da distância física e cultural entre os grupos de usuários e de desenvolvedores.
Este trabalho contribui no sentido de apresentar situações ocorridas, resultando em propostas iniciais e sustentar- las tanto numa vivência prática do grupo de pesquisa do Centro de Pesquisa em E-business DELL/ PUCRS como numa consistente base teórica na área de gerência de projetos.
Considera- se este trabalho como uma contribuição relevante para a área de gerência de projetos, visto que busca agregar contribuições de estudos importantes da área, no sentido de propor um modelo customizado para responder a questão de pesquisa proposta.
A proposta de extensão dos processos de gestão do modelo do PMI é considerada uma contribuição para a área, pois as novas disciplinas possuem papel relevante no processo de gerência de projeto de software em ambiente fisicamente distribuído.
Durante o desenvolvimento deste trabalho, artigos foram submetidos, aprovados e defendidos em conferências internacionais.
A aceitação de um artigo internacional na conferência do PMI (3 er Congreso Iberoamericano de Gerência de Proyectos) ratificou do ponto de vista profissional o modelo proposto.
Por outro lado, a aceitação de um artigo no HICCS 2003 (Hawai' i International Conference On System Sciences) notificou do ponto de vista científico o modelo proposto.
Essas duas conferências são do mais elevado nível internacional no que diz respeito à Área de Gerência de Projeto.
Em o An_ B apresentase a relação de artigos aprovados e apresentados ao longo desse estudo.
Têm- se ainda dois artigos em fase final a serem submetidos no início do próximo ano.
Por tratar- se de uma pesquisa qualitativa, deve- se ter claro as limitações deste tipo de estudo, principalmente no que se refere ao número de organizações estudadas (somente uma), restringindo a generalização dos resultados obtidos.
Devido a a limitação de tempo e modificação na organização estudada, não foi possível aplicar o modelo proposto, visando sua validação, entretanto, remete- se esta atividade a trabalhos futuros.
De o ponto de vista científico, atingiu- se suficiente grau de confiabilidade nos resultados em virtude de o desenho de pesquisa desenvolvido e da objetividade e convergência dos estudos teóricos e empíricos (estudo de caso) como sustentadores do modelo proposto.
Novamente, a aceitação dos artigos com as propostas desse estudo, em conferências de alto grau de competitividade em termos de aceite, reforçam esta afirmação.
Tendo em vista a necessidade de aprofundar o estudo e a proposição das disciplinas ao modelo do PMI, restringiu- se a possibilidade de desenvolver a ferramenta de apoio inicialmente proposta.
Convém destacar que no Seminário de Andamento desta dissertação foi levantada a possibilidade de concentrar- se no modelo proposto e não especificar e implementar um protótipo de ferramenta de apoio ao modelo, remetendo isto a estudos futuros.
Como trabalho futuro pretende-se aplicar modelo em projetos de desenvolvimento de software em ambientes com características de distribuição física.
Gerando assim, uma consistência maior referente a as características do modelo e, se necessário, aperfeiçoando- o de acordo com os resultados obtidos, visando à validação do modelo.
Outra seqüência do estudo seria a especificação e implementação de uma ferramenta de gerência de projeto que servisse, ao gerente, como apoio ao uso do modelo.
