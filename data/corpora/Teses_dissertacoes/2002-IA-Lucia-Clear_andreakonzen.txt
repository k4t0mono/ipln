Os agentes de usuários, também chamados de agentes de interface ouassistentes pessoais, possuem o objetivo de simplificar as tarefas rotineiras realizadas por um usuário.
Este trabalho apresenta uma proposta para especificação dos agentes de usuário, a qualinclui a definição das propriedades que definem e influenciam na arquitetura dos agentes e decorrem do papelque o agente possui na sociedade multiagente.
A partir de aí, determina- se os requisitos que competem a cada uma das propriedades definidas.
Apresenta- se uma metodologia que esboça as etapas a serem seguidas para a realização da especificação dos requisitos associados às propriedades básicas dos agentes de usuário.
A notação utilizada para especificação formalé baseada em Z, com o intuito de tornar possívela migração de trabalhos com representação visualpara uma representação formal, tais como os trabalhos desenvolvidos no grupo de pesquisa MASP (Multi Agent System develoPment), os quais possuem enfoque em modelagem UML (UnifiedModeling Language) e representação através de estados mentais.
Para fins de avaliação buscou- se uma aplicação no domínio dos STI (Sistemas Tutores Inteligentes), envolvendo a idéia de um STI multiagente cooperativo na Web, onde o agente de interface possui um papelpreponderante no auxílio às interações entre o aluno e o ambiente.
Palavras-chave: Sistemas Multiagentes, Agentes de Usuário, Engenharia de Software, Especificação Z, Personalização, Autonomia, Aprendizagem.
Um tópico muito discutido nos últimos anos na pesquisa em Ia (Inteligência Artificial) tem sido a adoção da abordagem de SMAs (Sistemas Multiagentes) para diferentes aplicações.
Por o fato dos SMAs possuírem características (propriedades) que os diferem de sistemas tradicionais, muitos trabalhos têm apresentado propostas de formalizações, metodologias, conceitualizações, técnicas, métodos e protocolos para a aplicação desse tipo de abordagem na concepção de diferentes sistemas.
A investigação acerca de sistemas interativos que se adaptam ao usuário é outro aspecto importante a ser considerado quando se trabalha com SMAs.
No entanto, o processo de desenvolvimento em agentes de usuário, mais precisamente em especificação desses agentes, conforme estudos realizados ao longo de os trabalhos individuais realizados por e, mostraram que existem muitas questões ainda em aberto.
Com estes resultados disponíveis e os resultados existentes no projeto MASP (Multi Agent SystemdeveloPment), verificou- se a necessidade de especificar os requisitos das propriedades básicas dos agentes de usuário, através de uma linguagem de especificação formal.
Logo, foi necessário definir- se quais seriam as propriedades básicas desses agentes e selecionar um formalismo robusto que permitisse integrar, através de especificação formal, os resultados prévios do grupo (como resultado prévio podemos citar a modelagem BDI e utilização de AUML (Agent UnifiedModelingLanguage) na especificação de SMAs).
As três propriedades de um agente de usuário que foram definidas como básicas neste trabalho são:
A aprendizagem, a autonomia e a personalização.
Assim, salienta- se que estas propriedades possuem grande importância, pois representam as principais funcionalidades dos agentes de usuário num sistema, no contexto desse trabalho.
Acredita- se que os aspectos sociais e internos (arquitetura) dos agentes devem ser tratados separadamente, devido a o conjunto de diferenças envolvendo sua modelagem e projeto.
Considerando os aspectos dos agentes de usuário, Souza trata a questão somente no nívelda sociedade de agentes (aspectos sociais), podendo eventualmente ser estendido para os 1 MASP (Multi Agent SystemDevelopment):
Este projeto tem como finalidade envolver a especificação de linguagens de modelagem para sistemas multiagentes e um conjunto de atividades a serem desenvolvidas para a construção de um sistema baseado neste paradigma.
O conjunto de estudos realizados apontoupara a necessidade de especificar os requisitos das propriedades básicas dos agentes de usuário.
De essa forma, após levantamento de alguns formalismos, identificou- se um formalismo que mais se adequa ànecessidade de especificação dos agentes de usuário considerando o contexto do projeto MASP.
O foco principaldesse trabalho se concentra na tecnologia de agentes, mais precisamente na especificação de agentes de usuário, o qualestáinserido como sub-área de agentes de interface.
O grupo MASP, do PPGCC (Programa de Pós-graduação em Ciência da Computação) da PUCRS (Pontifícia Universidade Católica do Rio Grande do Sul), estádesenvolvendo pesquisas com o intuito de envolver a especificação de uma linguagem de modelagem para sistemas multiagentes e o conjunto de atividades a serem desenvolvidas para a construção de um sistema baseado neste paradigma.
Em esta pesquisa, busca- se unir trabalhos do grupo com outros enfoques em termos de modelagem, através de uma nova abordagem no que se refere aos agentes de usuário.
Este trabalho teve origem a partir de a investigação dos trabalhos de Goulart e Souza.
Analisando- se o trabalho de viu- se a possibilidade de aprimorar estudos sobre os agentes de usuário.
E, tendo como base o trabalho de, que trata da questão da modelagem de SMA, decidiu- se modelar/ especificar os agentes de usuário, tomando como ponto de referência a modelagem de agentes de usuário sobuma visão mais formal.
Para tal, foi necessário explorar mais detalhadamente os agentes de usuário, com enfoque maior em suas propriedades, baseando- se no fato de que cada vez mais existe a necessidade de aplicar a tecnologia desses agentes nos ambientes de aprendizagem associados a modelagem do aluno/ usuário.
O maior detalhamento das propriedades dos agentes de usuário possibilita a união de trabalhos do grupo de pesquisa MASPatravés de uma notação formaljáque existem trabalhos que utilizam AUMLe representação através de estados mentais (BDI ­ Belief, DesiredandIntention).
De essa forma, busca- se contribuir com pesquisa em desenvolvimento, no projeto MASP, através de uma representação diferenciada das usadas habitualmente para especificar agentes.
Em trabalhos preliminares de Goulart, Konzen e Souza constatou- se que o projeto e desenvolvimento em agentes de usuário, mais precisamente a questão da especificação de agentes de usuário, ainda é um tópico em aberto na área e, sem consenso por parte de os pesquisadores.
Ouseja, pode- se dizer que ainda persistem problemas nessa questão, tanto no nívelde aplicações educacionais, quanto para aplicações em outros domínios.
Utilizando como referência o trabalho de Souza, observou- se a necessidade de considerar aspectos sociais e internos dos agentes de usuário, no momento da definição dos requisitos associados às propriedades básicas.
Também, houve a necessidade, a partir de aí, de definir- se as propriedades que devem ser consideradas como básicas neste trabalho.
Como conseqüência disso, existe a necessidade de especificar esses agentes, de modo que seja de fácilcompreensão e que torne possívela migração e a utilização em outros trabalhos já existentes no nosso grupo de pesquisa MASP.
Como o grupo de pesquisa em SMAs do PPGCC da PUCRS possui uma linha investigativa envolvendo questões sobre a direção de uma metodologia que permita especificar e modelar SMAs e tendo como um de seus estudos de caso aplicações educacionais (STI multiagentes), este problema foi identificado como relevante dentro de o contexto do projeto e foi adotado para servir de base para este trabalho de mestrado.
Levando em consideração a caracterização e o escopo do problema acima descrito adotou- se como questão de pesquisa norteadora desse trabalho:
Quais propriedades básicas do agente de usuário devem ser consideradas quando de a definição de uma linguagempara especificação formalde agentes?
Associadas a esta questão, consideram- se as seguintes hipóteses:
Hipótese1: As propriedades básicas de um agente de usuário são a personalização, a autonomia e a aprendizagem.
Hipótese2: As propriedades de personalização, autonomia e aprendizagem englobam aspectos sociais e internos dos agentes.
Hipótese 3: Uma linguagem de especificação de agentes de usuário deve permitir a descrição das propriedades de personalização, autonomia e aprendizagem.
Originalmente, pretendia- se utilizar o trabalho de Souza e estender o seumodelo, para atender às questões envolvendo o agente de usuário.
Em vez de isso, optou- se por complementar o modelo visualcom uma notação não visual.
Pois, a partir de a especificação dos requisitos das propriedades em Zcomo a notação possui esquemas que são de fácilmapeamento para classes, pode- se estender o modelo.
Ouseja, a partir de uma especificação formaltraduz- se para um modelo mais visual.
Aproveita- se para salientar que o modelo de Souza é interessante e de grande importância para a pesquisa no grupo MASP, porém, a utilização de Z traria maior diversidade para os trabalhos associados ao projeto.
Identificar e aplicar um formalismo para especificar os requisitos de agentes de usuário, considerando as propriedades básicas definidas neste trabalho:
Aprendizagem, autonomia e personalização.
Desenvolver um estudo para identificar as propriedades básicas de um agente de usuário;
Estudar os aspectos internos dos agentes a fim de especificar formalmente para agentes de usuário;
Desenvolver um estudo para identificar um formalismo a fim de especificar agentes de usuário, que permita utilizar os resultados jáexistentes no grupo de pesquisa onde este trabalho estáinserido;
Definir os requisitos das propriedades básicas a fim de especificar- los através de uma notação;
Definir uma metodologia inicialpara a realização da especificação dos agentes de usuário;
Definir um formalismo para especificar os requisitos das propriedades básicas dos agentes de usuário;
Aplicar o formalismo proposto num estudo de caso na área de STI, tomando como ponto de partida, o trabalho proposto por Andrade, a fim de validar sua aplicabilidade;
Inserir o trabalho dentro de o contexto do projeto MASP, da PUCRS, no que se refere ao projeto e desenvolvimento de sistemas multiagentes.
Esta inserção serárealizada via estudo de caso.
Como contribuições deste trabalho, consideram- se:
A definição de um conjunto de propriedades básicas para agentes de usuário;
A definição de requisitos associados às propriedades básicas dos agentes de usuário;
A identificação de um formalismo que permita expressar os requisitos das propriedades básicas dos agentes de usuário incorporando resultados jáconsolidados na área de SMAs;
A extensão do modelo proposto por Luck;
Em o contexto do projeto MASP, a utilização de uma nova alternativa, ou seja, a utilização de especificação formalpara modelar agentes através do formalismo Z como opção ao trabalho de (BDI eXecutable BeliefDesire Intention), possibilita a extensão de modelos jáexistentes no contexto do projeto e a especificação de trabalhos com enfoque em estados mentais.
A Figura 2 expressa a ligação deste trabalho com os demais trabalhos existentes no projeto MASP, o qualtem como finalidade envolver a especificação de uma linguagem de modelagem para sistemas multiagentes e o conjunto de atividades a serem desenvolvidas para a construção de um sistema baseado neste paradigma.
Este projeto é constituído por um conjunto de trabalhos baseados em representação visual.
Ouseja, que apresentam a modelagem e especificação dos agentes com a utilização de AUML, como o trabalho proposto por e, por trabalhos baseados em estados mentais, como por exemplo o trabalho de.
De essa forma, a proposta de especificação formalrealizada, pode tornar possívela migração (para essa especificação) desses trabalhos e outros trabalhos do projeto MASPque seguem na mesma linha;
Assim, pode- se dizer que a especificação formalselecionada é de fáciladaptação devido a os seguintes motivos:
Considerando a representação visual (representação utilizando AUML, por exemplo) a notação Zpossui esquemas que são semelhantes aos diagramas em AUML, o que facilita o mapeamento desses para classes;
Os trabalhos do grupo utilizam uma arquitetura BDI a qualse baseia na descrição do processamento interno do agente utilizando um conjunto básico de estados mentais (crenças, desejos e intenções), juntamente com lógica multimodal.
Esses conceitos também são adaptáveis a especificação Z, onde, podem ser expressos conjuntos de crenças, desejos e intenções para especificar um agente, utilizando lógica de 1ª ordem.
Estes resultados podem ser utilizados futuramente para estender outros projetos que desenvolvem pesquisas envolvendo especificação de agentes.
Este trabalho estáestruturado em 5 capítulos.
O segundo capítulo apresenta o referencial teórico, onde são apresentados conceitos e considerações acerca de os sistemas multiagentes e agentes.
Os agentes de usuário e suas propriedades são detalhados sob o ponto de vista de Engenharia de Sistemas Multiagentes, são apresentadas algumas metodologias de projeto e, alguns formalismos para sistemas multiagentes.
Em o terceiro capítulo é apresentada a especificação dos agentes de usuário, através dos requisitos associados às suas propriedades e a aplicação do formalismo por meio de esquemas em Em o quarto capítulo mostra- se o estudo de caso realizado, onde se explica detalhadamente o trabalho utilizado e expõem- se os esquemas aplicados sobre este trabalho.
Em o quinto capítulo apresentam- se as considerações finais desse trabalho e, ao final, são listadas as referências bibliográficas utilizadas.
Como anexo a este volume, apresenta- se um detalhamento sobre as definições em Z, utilizadas nesse trabalho.
A Ia (Inteligência Artificial), desde sua criação, tem buscado compreender os mecanismos fundamentais que regem o comportamento inteligente.
Em os últimos anos, tem- se dedicado grandes esforços àIAD (Inteligência ArtificialDistribuída), um subcampo da Ia que trata de uma sociedade de resolvedores de problemas ouagentes que interagem entre si de forma a resolver um problema comum.
Esta sociedade é comumente denominada de Sistema Multiagente.
Ou seja, uma rede de solucionadores de problemas que trabalham coletivamente além de as capacidades individuais de cada um.
Em os SMAs investiga- se o comportamento de um conjunto de agentes autônomos, possivelmente, pré-existentes, que interagem objetivando a resolução de um problema que está além de a capacidade de um único indivíduo.
De essa forma, o comportamento globaldo sistema deriva da interação entre os agentes que fazem parte do sistema.
A partir de isso, estáenvolvida a busca por uma funcionalidade neste sistema que permita que estes agentes possam coordenar seus conhecimentos, objetivos, habilidades e planos individuais de uma forma conjunta, em favor de a execução de uma ação ouda resolução de algum problema.
A cooperação entre os agentes é necessária tanto para a ação quanto para a resolução de problemas em SMA.
As teorias de agentes são essencialmente especificações, de como se concebe um agente, quais as suas propriedades, como eles são representados formalmente, entre outros aspectos.
As linguagens de agentes são linguagens que trabalham questões relativas a programação de agentes, considerando quais são as primitivas corretas para o projeto, como por exemplo, executar de maneira eficiente os programas de agente.
Com a evolução dos sistemas e o crescimento da necessidade de se adaptar sistemas ao perfildo usuário, a fim de que ele possa otimizar seutrabalho e, além disso, com a evolução da pesquisa em SMAs, busca- se aprimorar sistemas utilizando a tecnologia de SMAs e, assim, surge a necessidade de empregar agentes de usuário, a fim de personalizar sistemas.
Para caracterizar um sistema como sendo adaptativo é necessário que um sistema tente modificar o seucomportamento para maximizar a produtividade da atualinteração do usuário com o sistema.
De essa forma, é necessário que seja baseada em informação reunida sobre o comportamento atualdo usuário.
De acordo com isso, Nogueira aborda em seu trabalho três questões interessantes:
Quais aspectos do comportamento do usuário são úteis para capturar?
Como um comportamento transmite informação sobre as atuais intenções e preferências do usuário?
Qualo uso que pode ser feito desta informação capturada?
Pode- se dizer que, o conceito de agentes de usuário ainda não estáconsolidado.
Em diferentes grupos de pesquisa, para se definir um agente, diferentes características podem se fazer necessárias, isto leva a uma grande variedade de definições e características.
De essa forma, para este trabalho, adotou- se que os agentes de usuário podem ser classificados em assistentes pessoais e agentes de interface, sendo que os agentes tratados neste são considerados como assistentes pessoais.
Assim, a seguir, são apresentadas definições dos agentes de usuário, dadas por algum autores:
Conforme, os agentes de interface são um desenvolvimento relativamente recente e usam uma abordagem baseada em agentes para a construção de sistemas.
O principal aspecto que distingue os agentes de interface de outros agentes é o fato de serem pró-ativos e possuírem de um certo graude autonomia, o qualpodem se manifestar de diversas formas.
Conforme Maes, agentes de usuários possuem o objetivo de simplificar as tarefas rotineiras realizadas por um usuário.
Esse tipo de agente observa e monitora as ações tomadas por o usuário na interface, aprende novos &quot;atalhos «e sugere melhores formas de desenvolver as tarefas.
O agente de interface age como um assistente pessoalautônomo o qualcoopera com o usuário na realização de determinadas tarefas.
Ele aprende e cria o perfildo usuário basicamente de quatro formas:
Observando e imitando o usuário;
Mediante recebimento de um feedbackpositivo ounegativo por parte de o usuário;
Recebendo instruções explícitas do usuário;
Com ajuda de outros agentes.
Os agentes de usuário necessitam conhecer o problema e/ ouo usuário.
Assim, estes devem apresentam algumas características fundamentais:
Podem obter o conhecimento acerca de o problema solicitando informações ao usuário oupercebendo variações no ambiente, através da comunicação com outros agentes;
Devem ser capazes de analisar um conjunto de possíveis soluções para atingir seus objetivos, dependendo de sua capacidade de raciocínio;
Devem possuir capacidade de tomar decisões para selecionar a melhor forma de solucionar o problema.
Middletor considera os agentes de usuário como instâncias de classe que os usuários criam e personalizam, atribuindo tarefas específicas devem ser capazes de receber mensagens de outros agentes, avaliar se é possívelounão atender- las e responder- las.
Esses agentes também podem iniciar uma comunicação enviando mensagens a fim de solicitar serviços para os usuários.
Os agentes de usuário podem apresentar modelos sobre perfis de usuários.
Estes perfis ajudam a compreender as diferenças individuais e a definir interfaces com usabilidade adequada para grupos de indivíduos com características semelhantes.
Devido a a complexidade de representação das características do ser humano, existem inúmeros perfis para refletir o conjunto de características diferentes dos usuários.
Um agente de usuário pode ser descrito como sendo um robô (softbot), que funciona como um assistente pessoalque poderárealizar tarefas solicitadas por o usuário.
O softbot pode realizar inferências sobre as informações obtidas e a partir de aí, traçar um plano a fim de melhor realizar suas tarefas.
Este softbot, também, deve ser capaz de tratar a ambigüidade, omissão e erros nos dados fornecidos por o usuário.
Um agente de software (agente de usuário) pode ser descrito como um processo de execução independente, escolhendo autonomamente as ações, quando um evento esperado ou inesperado surge, sem a necessidade de ações externas efetuadas por um usuário.
Estes agentes podem ter propósitos diversos, mas tipicamente possuem as capacidades necessárias para realizar as tarefas no ambiente.
Conforme Silva e Jennings, esta tecnologia tem vindo a revelar a sua utilidade em diversas áreas de aplicabilidade:
Aplicações de carácter lúdico, como os jogos interativos, por exemplo pode- se apresentar o RoboCup (competição internacionalde futebolentre robots controlados por agentes de software);
Área militar ou proteção civil, para simulação de situações de combate, desastres naturais ououtros;
Sistemas de suporte ao ensino, como exemplo, pode- se mostrar um agente que descreve um procedimento, responde a perguntas e guia o aluno na execução desse procedimento;
Aplicações de busca inteligente de informação na Internet, o qualtem sido um campo fértil, tanto em investigação, como em aplicações comerciais;
Outras, tais como:
Gestão de redes e de serviços, comércio eletrônico, gestão de informação pessoal.
A investigação a respeito de os sistemas interativos que se adaptam ao usuário é um aspecto importante a ser considerado quando se trabalha com agentes de usuário.
Pode- se dizer que nas áreas de Comércio Eletrônico e acesso a informações na Webesta investigação tem aumentado significativamente e obtido grande importância.
Segundo Jamerson, as tarefas relevantes nesse contexto são:
Personalização, criação de assistentes pessoais, aplicação de agentes de usuário àhipermídia adaptativa, interfaces adaptativas relacionadas com agentes, modelagem de estudante/ usuário com finalidade pedagógica (considerando aplicações educacionais).
Para definir- se as propriedades básicas dos agentes de usuário (aprendizagem, autonomia e personalização), toma- se como ponto de referência as definições dadas na literatura por autores que trabalham com esses agentes, focando as propriedades diretamente para os agentes de usuário, e por autores que trabalham com agentes em geral.
Assim, apresentam- se definições clássicas das propriedades.
Como propriedades dos agentes de usuário, para o escopo desse trabalho, apresentam- se três selecionadas, que se considera como básicas:
Aprendizagem, autonomia e personalização.
Estas propriedades são consideradas como básicas por os seguintes motivos:
A principal tarefa de um agente de usuário é personalizar o conteúdo ao usuário;
Não existindo a personalização, não é necessária a existência desse agente.
Para que esta personalização aconteça, é fundamentalque o agente de usuário aprenda as tarefas e, assim, adapte às solicitações do usuário, acontecendo a aprendizagem.
E a propriedade de autonomia, por consenso de vários autores, jáé definida como básica para qualquer agente e aqui reforçada no contexto da interação do agente com o usuário, pois os agentes devem ser, de certa forma, autônomos para realizar suas tarefas.
Considerando a colocação de Foner, todos os agentes de usuário devem possuir a propriedade de aprendizagem, pois primeiramente, acontece o aprendizado da tarefa para posteriormente, esta ser desenvolvida.
Contudo, alguns autores não salientam em seus trabalhos essa propriedade.
Conforme Wooldridge, sensores constituem a maneira com que o agente recolhe dados sobre o ambiente e os atuadores que utiliza são a forma do agente manipular o ambiente.
Assim, num ambiente de software, sensores e atuadores podem não ter significados físicos mas a idéia de que um programa pode ter a habilidade de sentir e manipular é aplicávele cada vez mais difundida.
Os efeitos de um sistema sobre seuambiente podem ser de vários graus, mas o aspecto importante da aprendizagem é o sistema poder sentir e entender as mudanças que ele estáfazendo e reagir de maneira diferenciada baseado no que ele observou.
Assim, para este trabalho definiu- se que, com a propriedade de aprendizagem o agente de usuário possui a capacidade de executar uma tarefa com maior eficiência do que em execuções anteriores, ouseja, a cada execução o agente de usuário armazena características importantes que vão surgindo e estas são aplicadas a cada realização de tarefas semelhantes às anteriores.
A aprendizagem também pode ser realizada da seguinte forma:
O agente de usuário observa o ambiente ouo usuário, conseqüentemente entende esse ambiente/ usuário, e a partir daíentra a propriedade de personalização (detecção e busca de mudanças).
Assim o agente modifica seus compromissos em relação a o ambiente/ usuário, melhorando assim a realização de suas tarefas frente a o usuário.
Para a propriedade de autonomia tem- se como ponto de partida iniciala definição clássica dada por Wooldridge dizendo que o agente opera sem a intervenção humana e possui algum tipo de controle sobre suas ações e seuestado interno.
Conforme Foner, os agentes detentores de alto grau de autonomia podem planejar suas ações independentemente daquelas de seus usuários.
De essa forma, apresentam como aspectos básicos ações periódicas, execução espontânea e iniciativa.
Considerando que o projeto estáfocado na modelagem/ especificação de agentes de usuário, salienta- se a definição de Eric Yu, o qualafirma que na autonomia o agente tem iniciativa e pode atuar independentemente, o que é definido como um comportamento não totalmente previsívelna modelagem, assim os agentes não são totalmente conhecíveis nem controláveis.
Primeiramente, coloca- se que os agentes podem possuir diferentes graus de autonomia.
Conforme o grau de autonomia que o usuário concede ao agente ele pode ou não fazer determinadas tarefas/ atividades, isso inclui ser ou não ser benevolente e atender ou não a solicitações de outros agentes.
Para contextualizar o graude autonomia de usuário nesse trabalho, partiu- se do seguinte pressuposto:
Todo agente autônomo é pró-ativo, ouseja, possui a capacidade de elaborar planos e, assim, pode- se considerar que esta é uma característica interna do agente.
O agente também precisa ser independente, assim este apresenta um aspecto social.
Em agentes de usuário considera- se como definição para a propriedade de autonomia escolher a ação que esse vai executar baseando- se principalmente, na experiência e conhecimento que jáadquiriuatravés de interações anteriores e também no conhecimento básico que possui (entendemos por conhecimento pré-definido no agente no momento da implementação).
Segundo Foner, na personalização o agente deve agir de forma diferente com usuários diferentes, sendo que o agente deve ser capaz de personalizar tarefas e auxiliar os usuários a desenvolver- las da melhor forma possível.
O enfoque de Foner baseia- se em:
Para que a personalização aconteça, primeiramente deve acontecer o aprendizado da tarefa e, posteriormente esta deve ser desenvolvida, como citado anteriormente na seção 2.2.2 na propriedade de aprendizagem.
Foner considera, também, como uma característica importante a capacidade dos agentes de usuário de ignorar pedidos de usuários que se tornam desagradáveis em algum momento da interação.
Salienta- se que a tarefa de selecionar pedidos &quot;desagradáveis «é complexa, pois o que pode ser muito importante para o usuário pode representar para o agente o oposto.
Conforme Winckler personalização é a tendência a atribuir características similares às humanas, tais como, emoções e sofisticadas capacidades de planejamento para animais e objetos.
A base dessas atribuições é freqüentemente chamada de intencionalidade, onde, fala- se dessas coisas (animais e objetos) como se elas pudessem formar intenções.
Analisando esse conceito pode- se dizer que se defende um conceito que contrapõe esse, o qual seráreferenciado a seguir.
Levando em consideração as definições desses autores, pode- se resumir a propriedade de personalização, para o contexto desse trabalho, como a habilidade que um agente de usuário tem de &quot;conhecer «o indivíduo (usuário), ouseja, manter informação sobre o usuário.
De essa forma, o agente deve concentrar- se em várias características como objetivos, hábitos, interesses, preferências e necessidades do usuário para que possa atender- lo e adequar o conteúdo/ site da melhor forma possível.
Em Engenharia de Software, a construção de software de alta qualidade de maneira produtiva é viabilizada por um conjunto de métodos, ferramentas e procedimentos.
O caminho para a evolução no desenvolvimento de software passa por uma combinação de métodos abrangentes para todas as fases de desenvolvimento do software, melhores ferramentas para automatizar estes métodos, blocos de construção mais poderosos para a implementação do software, melhores técnicas para a garantia da qualidade do software e uma filosofia de coordenação predominantemente, controle e administração.
Conforme Jennings inúmeros trabalhos apresentam conceitualizações, formalizações, protocolos, técnicas e métodos para aplicação da abordagem multiagentes para resolução de problemas na concepção de software.
Isso se deve ao fato dessa abordagem possuir algumas características que viabilizam a resolução de problemas adequando- se aos mais complexos.
Ouseja, uma forma considerada como não tradicional.
Um agente pode ser visto como um software dotado de um conjunto de propriedades (autonomia, reatividade, habilidade social, comunicação, etc.) que lhe permitam desempenhar o seu papele objetivos dentro de um sistema composto por outros agentes e/ ou processos.
Dependendo do papel/ objetivo dos agentes dentro de o ambiente onde estão inseridos, esses terão ounão certas propriedades.
Em a literatura encontram- se os agentes classificados segundo duas abordagens:
Reativos e racionais (cognitivos).
Cada abordagem possui um conjunto de pressupostos que orientam a especificação e funcionalidades associadas a cada agente.
Em a abordagem reativa salientam- se os trabalhos de, e.
Em a abordagem cognitiva destacam- se os trabalhos de, e.
O surgimento da tecnologia de agentes representa uma abordagem promissora para desenvolver aplicações complexas, pois propõe um importante avanço em matéria de abstração, permitindo uma compreensão, modelagem e desenvolvimento mais naturais em relação a outros paradigmas.
Entretanto, um ponto fundamentalpara o sucesso de um projeto utilizando a tecnologia de agentes é a seleção de uma metodologia apropriada.
Conforme Wooldridge, um sistema baseado em agentes pode ser considerado uma sociedade ouorganização artificial.
A idéia de comparar um sistema multiagente a uma sociedade é naturale possibilita chegar- se no próximo nívelda hierarquia de conceitos da metodologia, que são os papéis.
O pesquisador Müller afirma que a tecnologia de SMAs estámigrando da pesquisa de laboratório para os centros de engenharia de software.
Se esta tecnologia contribui para o aumento do potencialdos SMAs, esta teráum crescimento importante para o desenvolvimento e emprego de metodologias, acessibilidade para engenharia de software, especificação, projeto e especificação de sistemas multiagentes.
Segundo Wooldridge e Jennings, é necessário que uma metodologia capture aspectos como:
A flexibilidade do agente, o seucomportamento autônomo, as interações e a complexidade das estruturas organizacionais em as quais os agentes estão inseridos.
Segundo Sichman e Monard o processo de projeto dos SMAs possui três momentos relevantes:
A concepção, o projeto e a resolução do problema.
Conforme a Figura 5, depois que os agentes são concebidos é ativada a fase de projeto.
Em a fase de projeto, a concepção das interações, a concepção dos agentes e a concepção das organizações podem ocorrer em paralelo ou não, por o motivo da área de IAD não possuir uma definição preestabelecida de como essas acontecem.
De essa forma, essas fases dependem da visão do projetista do sistema.
Considera- se que algumas propriedades globais do sistema, que eram predefinidas por o projetista do sistema na fase de projeto de um SMA, agora são representadas de forma explícita e efetivamente utilizadas por os agentes no sistema.
Para o SMA resolver problemas coerentemente, os agentes devem:
Comunicar- se entre si;
Coordenar suas atividades;
Negociar; Detectar e resolver conflitos.
Os conflitos entre os agentes podem variar de simples contenção de recursos limitados a computações complexas onde os agentes discordam por causa de discrepâncias entre seus domínios de especialidade (expertise).
A seguir serão apresentados os principais aspectos para que um projeto de Sistemas Multiagentes seja elaborado.
Organização Organização é quando existe algum tipo de conexão entre os agentes e se a execução combinada de atividades entre esses possibilitar o alcance de melhores resultados, se esses resultados forem comparados a atuações não conjugadas.
Conforme, uma organização precisa ser gerenciada para tornar- se operacional.
Para tanto, são necessárias as seguintes ações:
Planejamento, eventuais reestruturações físicas e conceituais, tomada de decisão, ações de coordenação.
Além de isto, é fundamentalque uma organização possua conhecimento sobre o mundo externo, no que tange aos seus fatos e modelos conceituais.
Uma organização garante a sua sobrevivência a partir de sua capacidade de aprendizado e de ajuste às características do mundo externo.
Moulin diz que uma organização é entendida como um conjunto de agentes que possuem compromissos mútuos e globais, compartilham crenças comuns e passam a ter intenções conjuntas quando atuam juntos no sentido de atingir um mesmo objetivo.
Ressaltam os autores que um agente possui suas próprias crenças, intenções e compromissos, e que estas individualidades devem caminhar no sentido de permitir cooperação entre estes agentes, de modo a possibilitar a existência de uma organização de fato.
Cada agente de um grupo deve executar um papel;
A partir de uma definição clara deste papele de sua atribuição a um agente habilitado para sua execução, cria- se a possibilidade do grupo desenvolver suas atividades em conjunto, formando um time coerente, capaz de atingir os resultados desejados em acordo com seus objetivos.
Coordenação Jennings coloca que, o processo de coordenação dos agentes precisa garantir que:
O autor enfoca que existem três razões principais por as quais as ações de vários agentes necessitam ser coordenadas:
Existência de interdependência entre as ações dos agentes;
Necessidade de que o grupo de agentes respeite restrições globais do problema;
Necessidades de procedimentos que garantam a harmonia na execução de uma única ação de forma conjunta por mais de um agente.
Jennings e Wooldridge propõem que o processo de coordenação seja baseado nos conceitos de compromisso e convenções.
O desenvolvimento de modelos integrados de coordenação envolve a compreensão dos conceitos fundamentais que sustentam as interações entre os agentes.
Primeiramente, nesta análise determina- se a perspectiva a partir de onde a coordenação pode ser descrita, sendo que o processo de coordenação pode ser melhor estudado a partir de a análise da estrutura interna de um agente, como suas crenças, desejos, intenções, preferências, entre outros.
Em segundo lugar, é decidido o modelo a ser utilizado para descrever os agentes, onde o modelo de coordenação é fundamentado sobre a Hipótese da Centralização de Compromissos e Convenções, que afirma que todos os mecanismos de coordenação podem ser reduzidos a compromissos e suas convenções associadas.
Os compromissos correspondem a promessas assumidas com um determinado curso de ação e convenções, as quais fornecem recursos para o monitoramento dos compromissos em circunstâncias de mudança.
Segundo Bastos, quando os compromissos são assumidos em conjunto por os agentes, o problema estáno fato de que o estado geraldo compromisso fica distribuído entre os agentes participantes do mesmo.
Em este caso, deve- se assegurar que todos os agentes envolvidos comuniquem- se entre si para a manutenção do conhecimento por todos sobre o andamento de seucompromisso conjunto.
Ainda de acordo com, as convenções referem- se às políticas adotadas por os agentes para governarem a reconsideração dos seus compromissos.
Descrevem as circunstâncias sobre as quais um agente pode reconsiderar seus compromissos.
Tais convenções, ao serem elaboradas, devem levar em conta a necessidade de um balanceamento entre a constante reconsideração dos compromissos e a inflexibilidade nesta reconsideração.
Este equilíbrio é fundamental, tendo em vista que implica a performance do agente e a capacidade de resposta às mudanças ambientais.
Assim como as convenções individuais de um agente descrevem as circunstâncias sobre as quais o mesmo deve reconsiderar seus compromissos, faz- se necessário o estabelecimento de convenções sociais a serem compartilhadas por todos os agentes, especificando como um determinado agente deve comportar- se com relação a os membros da comunidade quando os seus compromissos são alterados.
O autor salienta que a definição das convenções para as situações que envolvem ações conjuntas, deve considerar que os agentes necessitam compartilhar tanto informações globais sobre o status do compromisso conjunto, como do compromisso individualde cada agente com o grupo em realizar sua parte.
Negociação Conforme Müller, a negociação é um mecanismo que permite aos agentes autônomos chegarem a um consenso em relação a um determinado problema.
De essa forma, durante o processo de negociação pode ser necessária a modificação dos planos locais dos agentes envolvidos, objetivando chegar a uma decisão em comum.
Mecanismos de negociação entre agentes são utilizados para reconhecimento e resolução de conflitos e para alocação de tarefas e recursos.
Bastos salienta que para existir a negociação é necessária a utilização de uma linguagem de comunicação apropriada e, que os agentes tenham a capacidade para tomar decisões.
Em a negociação o modelo de Redes de Contrato, proposto por Smithé bastante utilizado.
Em ela a distribuição de atividades do sistema é um processo interativo que ocorre através da negociação entre agentes autônomos.
As redes consistem de um conjunto de agentes (ou nodos) que negociam entre si, através da troca de mensagens.
Pode- se identificar três tipos de agentes:
Gerente: É o agente que identifica a atividade a ser satisfeita e designa um agente para executar- la;
Proponente: São os agentes que apresentam uma proposta para executar uma atividade;
Contratado: Refere- se ao agente-proponente, cuja proposta foi aceita por o gerente e que, conseqüentemente, passa a ser o responsávelpela execução da atividade.
Em este modelo um agente-gerente solicita algum tipo de serviço e difunde uma requisição de tarefa, para a qualos demais agentes enviam propostas com ofertas.
O gerente usa, então, uma função de avaliação para escolher a melhor entre as ofertas recebidas.
Cooperação Uma política de cooperação se faz necessária num sistema multiagente jáque é ela quem dita a maneira com que estes demonstram suas necessidades a outros agentes a fim de realizar uma determinada tarefa.
Conforme, o processo de cooperação pode acontecer de duas maneiras:
Task Sharinge Result Sharing. O primeiro tipo se inicia quando um agente tem uma tarefa para realizar e necessita da ajuda dos outros agentes na sociedade.
Jáno último, os agentes disponibilizam informações para a sociedade, acreditando que algum agente possa necessitar de ela em algum momento.
Um agente ao realizar uma determinada tarefa geralmente necessita da ajuda dos outros agentes que compõem o sistema, ouatua no auxílio de outros para satisfazer o objetivo geral.
De essa forma, os agentes precisam saber como encontrar alguém com quem cooperar visando a busca desse objetivo.
Planejamento Segundo Bastos, os pesquisadores, na visão clássica, tinham como premissa que as mudanças no ambiente da aplicação resultavam tão somente das ações dos agentes.
Hoje, considera- se a possibilidade da existência de eventos que fogem ao controle dos agentes envolvidos na aplicação, existindo então a necessidade de que os planos sejam monitorados e revisados dinamicamente, de modo a responder a estes eventos e suas conseqüências.
A pesquisa em planejamento para múltiplos agentes divide- se em duas abordagens básicas:
Planejamento multiagente centralizado e planejamento multiagente distribuído.
Em o planejamento multiagente centralizado o planejamento é realizado antes da execução das ações.
Um plano coletivo deve ser elaborado centralizadamente por um agente e posteriormente alocado aos agentes executores.
O agente elaborador do plano centralizado possui a função de receber os planos individuais de cada agente, reconhecer a interação entre os objetivos destes agentes através de seus planos e modificar estes planos de modo a remover os possíveis conflitos.
Em o planejamento multiagente distribuído, cada agente elabora os seus planos individuais e troca informações com outros agentes visando a identificação e resolução de conflitos eventuais, neste planejamento não existe um agente com uma visão globaldas atividades do grupo de agentes.
Eventos inesperados podem surgir a qualquer momento, estabelecendo as necessidades de intercalar planejamento e execução para cada agente, em resposta àdinâmica destas demandas.
O planejamento distribuído pode apresentar problemas como:
Um agente poderia formular um curso de ação que levasse em conta as ações a serem executadas ao mesmo tempo por outros agentes;
Um agente poderia descobrir o curso de ação a ser realizado por outros agentes;
Um agente poderia identificar de que forma os outros agentes poderiam antecipar suas próprias ações;
Um agente poderia influenciar outros agentes a mudarem os modelos de suas ações;
Um agente poderia comprometer- se com seus próprios modelos.
Conforme, o fato de que os planos de um agente podem mudar a qualquer momento é ressaltado, e essa mudança de planos de um agente pode ser justificada por os resultados de suas próprias ações, por os resultados das ações de outros agentes, por mudanças no ambiente, por mudanças no objetivo do agente oupor mudanças na percepção do agente quanto a o contexto multiagente em que estáinserido.
De essa forma, como consta no trabalho de Bastos ele propõe uma abordagem denominada PGP (Planejamento GlobalParcial), o qualfornece aos agentes a habilidade de construir planos locais, trocar informações sobre seus planos, construir planos globais parciais com base nas informações recebidas, revisar seus planos locais a partir de os planos globais parciais e escolher ações para a realização de seus planos locais.
Destaca- se a importância de que os planos locais devem envolver caminhos alternativos, tendo em vista, as incertezas originadas por a dependência com o resultado de ações prévias e com as mudanças ambientais.
O plano globalparcialcaptura as atividades concorrentes planejadas por cada um dos agentes para a realização do processo de coordenação.
Em PGP, a ênfase da coordenação é a de permitir o cumprimento das atividades de cada agente através da garantia da execução das atividades antecedentes relacionadas e de evitar atividades redundantes.
Comunicação einteração Conforme a interação entre agentes pode ocorrer através de comunicação ouem função da modificação do mundo no qualeles estejam atuando.
De acordo com Bond e Gasser o processo de interação propicia a um conjunto de agentes combinar seus esforços na busca de solução de problemas distribuídos.
Interações são inerentemente dependentes das ações de coordenação de pelo menos dois agentes.
De essa forma, salienta que é importante perceber que o processo de coordenação entre agentes não depende necessariamente de comunicação, uma vez que eles podem coordenar suas ações baseadas no conhecimento que possuem dos modelos dos outros.
Os aspectos fundamentais a serem considerados para a interação entre agentes são:
Entre quem a interação deve ocorrer;
Quando a interação deve ocorrer;
Qualdeve ser o conteúdo da interação oucomunicação;
Como a interação dever ser realizada, definindo os processos e recursos a serem utilizados;
Por que a interação é necessária;
Com base em que mecanismo seráestabelecida a compreensão mútua.
As interações através de procedimentos ocorrem quando uma mudança ambientaltem significado para o domínio de funções de um determinado agente.
Essa alteração de ambiente é percebida por o agente como uma mensagem, levando- o a executar uma ação no sentido de modificar o ambiente em resposta àmesma.
Interações através de convenções ocorrem em função de mudanças ambientais, que são independentes do domínio do problema e cujo significado é interpretar- lo através de convenções.
Normalmente o termo comunicação é associado a este segundo caso, tendo em vista que, no primeiro não existe a troca direta de mensagens entre agentes.
Existem duas principais estratégias de suporte àcomunicação num SMA, a Troca de Mensagens (Message Passing) diretamente entre os agentes, e a utilização de Quadro-Negro (Blackboard).
Essas estratégias são conhecidas como arquiteturas da sociedade de agentes.
Em os SMAs um grupo de agentes se reúne para resolver um problema específico.
De essa forma, como salienta Hübner, os agentes não precisam necessariamente ter sido desenvolvidos utilizando as mesmas ferramentas e modelos.
Entretanto, esse grupo de agentes deve concordar no uso de uma linguagem comum.
Além disso, como nas sociedades humanas, a comunicação é mais eficiente quando seus usuários seguem certas regras, chamadas de protocolos de comunicação.
Então, com o objetivo de viabilizar a comunicação entre os agentes e possibilitar a descrição das regras que gerenciam o seufluxo de informação foram propostas algumas linguagens de comunicação de agentes chamadas de KQML (Knowledge Query Manipulation Language) e ACL (Agent Comunnication Language), onde, essas linguagem possuem especificações como a FIPA-ACL (Foundation Intelligent PhysicalAgents ­ Agent Comunnication Language).
KQML (KnowledgeQueryManipulationLanguage) A KQMLé uma especificação de linguagem e protocolo de comunicação entre agentes, onde seuobjetivo é ser um meio comum de troca de informação e conhecimento entre agentes.
Hübner e Sichman apresentam que esta especificação (KQML) foi amplamente adotada por o fato de possuir algumas características importantes numa ACL:
Qualquer linguagem (como por exemplo, LISP, Prolog, português), pode ser usada para escrever o conteúdo das mensagens;
As informações que são necessárias para escrever o conteúdo das mensagens estão incluídas na própria comunicação;
Quando os agentes trocam mensagens KQML, o mecanismo de transporte é transparente, ouseja, como a mensagem sai do agente emissor e chega no receptor;
Formato das mensagens é simples, fácilde ler por pessoas e de ser analisada por um parser.
A especificação KQML enfoca um grande conjunto de mensagens pré-definidas (performativas), as quais definem as operações possíveis de serem executadas por os agentes.
Assim, aqueles que estão em conformidade com a KQMLpodem responder a estas mensagens de maneira adequada independentemente da estrutura do seuemissor.
As arquiteturas que utilizam KQML adicionam um agente facilitador àsociedade.
Este agente sabe quem são os agentes da sociedade e que requisições cada um é capaz de responder, dessa forma, o procedimento de apresentação entre os agentes é simplificado.
Conforme a linguagem KQML não soluciona ou sugere como deve estar estruturada a implementação dos agentes, sendo assim, ela se identifica como uma linguagem de propósito geral, onde independentemente do ambiente ouestrutura dos agentes, é possívelusar- la para prover a comunicação num sistema multiagentes.
FIPA ACL Conforme Hübner a especificação de ACLda FIPA estábaseada nos mesmos princípios que o KQMLe, tem a mesma sintaxe para as mensagens.
Esta especificação consiste de um conjunto de tipos de mensagens e a descrição formalde sua pragmática (o efeito das mensagens na mente do emissor e do receptor).
Em este aspecto, a FIPA ACLdifere do KQML, a semântica dos tipos de mensagens não é exatamente a mesma.
Além de a ACL, a FIPA também especifica uma notação para descrição de protocolos de comunicação, que é exemplificada com protocolos para requisição de serviços, rede de contratos e outros.
Salienta- se que a ACL possui a vantagem de garantir o padrão sobre o KQML, onde pessoas diferentes podem usar a mesma linguagem para implementar agentes diferentes que não conseguem se comunicar.
Com a evolução da tecnologia de agentes, tornou- se necessário o desenvolvimento de metodologias para o desenvolvimento de aplicações segundo o paradigma que visa a padronização das técnicas de construção de sistemas multiagentes.
Algumas metodologias já foram desenvolvidas, como a Gaia, Mas- CommonKADS, metodologia orientada a agentes para modelagem operacionale MaSE, as quais apresentam- se a seguir.
A metodologia Gaia foi desenvolvida para análise e projeto de sistemas baseados em agentes, por estes serem flexíveis, terem autonomia em resolver problemas, possuírem interação e por a estrutura organizacionaldo sistema.
Wooldridge e Jennings afirmam que a metodologia Gaia é apropriada para o desenvolvimento de sistemas como ADEPT (AdvancedDecision Environment for Process Tasks) e ARCHON (ARchiteture for Cooperative Heterogeneous On-line systems) pois, estes possuem grande escala em aplicações no mundo reale apresentam as seguintes características:
Os agentes fazem uso de um recurso computacional (como se cada agente possuísse os recursos de um processo UNIX);
O objetivo é obter um sistema que maximize algumas medidas de qualidade global, mas que seja sub-ótimo por o ponto de vista dos componentes do sistema.
Gaia não possui a finalidade de modelar sistemas que possuem conflitos;
Em os agentes heterogêneos, diferentes agentes podem ser implementados usando diferentes linguagens de programação, arquiteturas e técnicas;
A estrutura de organização do sistema é estática, com isso, o relacionamento entre agentes não muda em tempo de execução;
O sistema completo contém um pequeno número de diferentes tipos de agentes A metodologia Gaia permite que o analista passe da especificação de requisitos para o projeto, que é suficientemente detalhado, permitindo que seja implementado diretamente.
Em a metodologia Gaia, conforme Wooldridge, o analista migra de um conceito abstrato para um outro incrementalmente mais concreto.
Cada migração sucessiva inclui aspectos na implementação, e restringe o espaço de sistemas que podem ser implementados para satisfazer a especificação de requisitos original.
Os principais conceitos dessa metodologia podem ser divididos em duas categorias:
Abstratos e concretos.
Entidades abstratas são aquelas usadas durante a análise representando os conceitos do sistema, mas que não necessariamente tem alguma ligação com o sistema.
Entidades concretas, em contraste, são usadas dentro de o processo de projeto, e serão direcionadas, em contrapartida, em tempo de execução do sistema.
O objetivo do estágio de análise é desenvolver um entendimento do sistema e sua estrutura, chamada de organização de sistema, que é tida como uma coleção de papéis, que se relacionam com outros e que fazem parte de padrões sistemáticos e institucionalizados de interação com outros papéis.
Em a fase de projeto, o objetivo é transformar o modelo de análise em modelo de baixo nível de abstração com técnicas de projetos tradicionais (incluindo técnicas de OO Orientação a Objetos) que possam ser aplicadas de maneira a implementar o agente.
Em outras palavras, Gaia se preocupa em como a sociedade de agentes, coopera para atingir objetivos em nívelde sistema e o que é solicitado para cada agente.
Conforme Iglesias, Mas- CommonKADS é uma extensão da metodologia CommonKADS para a modelagem de sistemas multiagentes.
A aplicação dessa metodologia consiste do desenvolvimento de diferentes modelos, onde cada modelo consiste de entidades a serem modeladas e suas relações.
Essa metodologia define os seguintes modelos:
Modelo de agente:
Especifica as características dos agentes, como capacidade de raciocínio, habilidades, serviços, grupos e hierarquias de agentes em modelo de organização;
Modelo de atividade:
Descreve a tarefa que o agente pode executar, como objetivos, decomposições, ingredientes e métodos de resolução de problemas, entre outros;
Modelo de especialidade:
Descreve o conhecimento necessário para o agente alcançar seus objetivos, assim como a estrutura do relacionamento entre agentes;
Modelo de organização:
Descreve a organização na qualo SMA iráser introduzido e a organização socialda sociedade de agente;
Modelo de coordenação:
Descreve a conversação entre agentes, como interações, protocolos e capacidades requeridas;
Modelo de comunicação:
Detalha a interação do agente de software e humano e os fatores humanos para o desenvolvimento da interface dos usuários;
Modelo de projeto:
Coleta os modelos previstos e consiste de três sub-modelos, como projeto de rede para esboço de aspectos relevantes da infra-estrutura da rede do agente;
Conforme Kendallesta metodologia propõe a combinação de metodologias orientadas a objeto OOSE (Object OrientedSoftware Egeneering) e metodologias de modelagem operacionalIDEF (Integration DEfinition for Function modeling) e Cimosa (Computer Integrated ManufacturingOpen SystemArchiteture).
O método de IDEF é um padrão para a definição de requisitos em empresas de manufatura e outras organizações.
O IDEF compreende três modelagens de metodologias:
O modelo da função (IDEF), modelo de informação (IDEF), e o modelo dinâmico (IDEF).
Em a metodologia orientada a agentes os modelos identificados são:
Modelo funcional:
Descreve as funções (saídas, entradas, mecanismos e controle) usando diagramas IDEF que incluem a seleção de possíveis métodos que dependem da entrada e do controle.
Modelo caso de uso:
Descreve os atores envolvidos em cada função, usando a notação de caso de uso OOSE.
Modelo dinâmico:
Este modelo é entendido por a análise da interação dos objetos.
Os casos de uso são representados em diagramas de evento passo- a- passo.
Sistema orientado a agente:
É composto por identificação de agente (os atores dos casos de uso são identificados como agentes);
Protocolos de coordenação ouscripts (descritos no diagrama de estados);
Invocação de plano (diagramas de eventos passo- a- passo são ampliados para incluir condições para indicação quando um plano deve ser invocado);
A MaSE (Multiagent Systems Engineering) é uma metodologia para Engenharia de Sistemas Multiagentes proposta por Wood, a qualé independente de qualquer arquitetura multiagente, arquitetura de agente, linguagem de programação ousistema de troca de mensagem.
A metodologia MaSE, conforme é usada na modelagem de sistemas estáticos.
Ouseja, aqueles onde os agentes não podem ser criados, destruídos ou movidos durante a execução.
As principais atividades da fase de análise são:
Captura de objetos do sistema, refinamento dos papéis baseado- se nos objetos e desenvolvimento das interações entre os papéis.
Em a fase de projeto, em seguida, são definidas as classes de agentes e a arquitetura do sistema.
Pode- se ter uma visão geralda metodologia MaSE e seus modelos na Figura 6.
A seguir apresenta- se o detalhamento de cada fase da metodologia MaSE:
A primeira fase de MaSE é capturando osobjetivos, na qualrelaciona- se as especificações iniciais do sistema e as transformando num conjunto estruturado de objetivos através do diagrama de hierarquia de objetivos.
Esta fase possui duas partes:
Identificar e estruturar os objetivos.
Conforme Wood, a segunda fase da metodologia é aplicando UseCases, onde a conversação entre os agentes é a verdadeira espinha dorsalde um SMA, sendo que, eles capacitam a distribuição das operações que é a força da tecnologia de agentes.
Então, essa fase da metodologia MaSE trata da construção dessas conversações e cria Use Cases para facilitar o processo.
O terceiro passo da metodologia MaSE é refinando papéis, na qualos objetivos estruturados do Diagrama de Hierarquia de Objetivos são transformados numa forma mais útil para a especificação de papéis em SMA.
Papéis são usados para definir classes dos agentes e capturar os objetivos do sistema durante a fase de projeto.
Em seguida, apresenta- se a fase, criando classesdeagentes.
Em esta fase na qualas classes dos agentes são identificadas por os papéis, onde o resultado é um diagrama das Classes dos Agentes, no qualsão descritas as classes dos agentes e as conversações entre elas.
Durante esta fase, as classes de agentes consistem em dois componentes:
Papéis e conversações.
Em uma fase posterior, detalhes internos são adicionados.
Dando continuidade, a próxima fase é construindo conversações, onde uma conversação na metodologia MaSE define um protocolo de coordenação entre dois agentes.
Uma conversação consiste de dois Diagramas de Comunicação, uma para o iniciador (initiator) da mensagem e um para aquele que responde (responder).
Mostrando classesdeagentes, é a fase em que as classes internas dos agentes são criadas.
Conforme Wood, existem três métodos para montar os componentes para definir uma classe de agente.
O primeiro é resgatar uma das quatro arquiteturas pré-definidas (BDI, reativo, planning (planejamento) e baseado em conhecimento).
O segundo método consiste em resgatar os componentes pré-definidos montando- os numa arquitetura definida por o usuário.
O terceiro método consiste em definir os componentes e arquitetura sem nenhum componente preestabelecido.
A fase finalda metodologia MaSE é o projeto do sistema, o qualrecebe as classes dos agentes e as instâncias como agentes reais, usando o Diagrama de Disposição para mostrar os números, tipos e locações de agentes dentro de o sistema.
Esta fase é a mais simples da metodologia MaSE pois, grande parte do trabalho foi concluída nas etapas anteriores.
A maioria dos modelos e linguagens de agentes são entendidas como abstrações de comportamento computacional, eventualmente para serem transformadas em softwares (programas).
Tais modelos são necessários para especificação e construção de software.
Diferentes gêneros de modelos são necessários em diferentes estágios e aspectos na Engenharia de Software.
Como a tecnologia de agentes estáem crescente desenvolvimento, a atenção estávoltada para um conjunto de modelos complementares, notações e métodos para cobrir o ciclo de vida do software.
Em esse contexto foram estudados alguns formalismos que podem ser utilizados no processo de especificação de SMAs.
Também, a fim de definir um formalismo que melhor se adapte e possua mais vantagens para que seja aplicado no enfoque desse trabalho.
Estes formalismos são:
Proposta de Souza, Lógica Temporalde Ações (TLA), Modelos de Dependência de Ator (De a), Estados Mentais ­ BDI e, o Formalismo Z. Em o trabalho desenvolvido por Souza é proposto um conjunto de diagramas para o processo de elaboração das partes integrantes do modelo de análise para um SMA.
Conforme Souza para representar SMAs, utiliza- se uma linguagem extensão de UML (UnifiedModelingLanguage) propondo extensões de AUML.
Para permitir a aceitação da tecnologia AUML, os agentes são apresentados como uma extensão de objetos ativos, exibindo autonomia dinâmica e autonomia determinística.
Souza justificousua proposta de trabalho baseando- se no fato de que a UML, sendo uma linguagem desenvolvida para o paradigma OO, não atende a representação de sistemas OA (Orientado a Agentes), porque possuem características e propriedades diferenciadas.
A Tabela 1 apresenta a proposta de Souza, relacionando os Diagramas que compõe a modelagem (com os aspectos fundamentais) para projetar Sistemas Multiagentes.
Uma vez que, segundo Souza, a Orientação a Objetos não atende a representação de sistemas Orientados a Agentes.
A seguir são apresentados os Diagramas de Casos de Uso, da Sociedade e de Interação Seqüencialdesenvolvidos por Souza.
Conforme Souza, o conceito de casos de uso pode ser estendido para representar os cenários de um SMA de forma a ilustrar e facilitar a compreensão e composição do modelo de análise do sistema.
A forma como é representado o Diagrama de Casos de Uso para SMAs é a mesma usada por a UML, sendo que em SMAs são representados os fluxos presentes na sociedade e as interações entre os agentes, as quais caracterizam suas funcionalidades.
A diferença existente nos casos de uso em SMA, é a identificação de agentes (quando e quem interagem com os atores) ao invés de identificação de objetos em UML.
Em os casos de uso são representadas as propriedades de cooperação, conflito e negociação num SMA.
Os Diagramas de Casos de Uso possuem grande importância para visualizar, especificar, documentar e modelar o comportamento do sistema.
Como exemplo de Diagrama de Casos de Uso pode- se apresentar a Figura 7, onde é representado o cenário Criar agentes.
Souza salienta que o conceito de classe de objeto pode ser estendido para classe de agente envolvendo a descrição de um conjunto de agentes que compartilham atributos, serviços, papéis e responsabilidades.
Uma classe de agente é uma entidade que representa o comportamento do agente, as suas responsabilidades na sociedade e define sua arquitetura para criação de novas instâncias de agentes na sociedade, conforme Figura 8.
O Diagrama da Sociedade representa as propriedades de interação e comunicação, estrutura e organização de um SMA, porque descreve hierarquias de associação durante sua interação.
ClassedeAgente Uma classe deve representar os atributos, serviços e papéis que serão desempenhados por os agentes, as responsabilidades e a quantidade de instâncias de agentes para a classe.
Associações Em a representação do Diagrama da Sociedade, é necessário apresentar associações entre as classes de agentes.
Uma associação pode ter um nome, utilizado para descrever a natureza do relacionamento, onde este nome é usado quando existe mais de uma associação conectando o mesmo par de classes.
Em a associação encontra- se também a multiplicidade que a cardinalidade que um conjunto pode assumir.
Para os agentes é necessária a interação a fim de permitir que suas atividades sejam desenvolvidas e integradas no sentido de uma solução ser obtida com colaboração do grupo.
Ainda é necessário definir aspectos hierárquicos de autoridade, a fim de representar relações envolvendo comando entre os mesmos.
Interface A interface na modelagem de um SMA é uma reunião de assinaturas definidas para especificar um serviço de uma classe, onde se preocupa com o que o agente vai fazer.
Para cada papel, tem- se uma interface que especifica esses serviços que podem ser desempenhados por um agente através de assinaturas simplificadas para facilitar a representação.
A Interface preocupa- se com o queo agente vai fazer, pois como fazerdeve ser representado na arquitetura interna do agente (etapa do projeto de agente).
Modelo deFunções O Modelo de Funções relaciona as responsabilidades inerentes a cada papelque o agente pode assumir, associando a seus respectivos serviços complementando as informações contidas no Diagrama da Sociedade.
O conceito de Diagrama de Interação pode ser estendido para SMA, com o objetivo de representar os cenários envolvidos nos casos de uso identificados para o sistema.
Souza propõe o Diagrama de Interação Seqüencial, que é utilizado para fazer a modelagem dos aspectos dinâmicos do sistema.
Os Diagramas de Interação Seqüencialrepresentam a troca de mensagens entre os agentes, e justificam- se por permitir visualizar, especificar, construir e documentar a dinâmica da sociedade de agentes em seus vários casos de uso.
Para que os agentes nos SMA sejam representados, é preciso definir os aspectos hierárquicos de autoridade (tipo associação de comandos ouassociação de comunicação) e é preciso estabelecer um protocolo de comunicação entre os agentes.
Em a Figura 9, é apresentado um exemplo de Diagrama de Interação Seqüencialonde:
O agente AEF (Agente Entidade Funcional) localizado a esquerda, indica o cliente da mensagem representado por a letra c..
O agente AEF localizado a direita, representa o agente fornecedor da mensagem, mas sem possuir um nome de instância, pois neste caso não é uma instância e sim um conjunto com vários membros.
O agente AEF com o papelde coordenador inicia o processo fazendo uma solicitação a todos os membros da coalizão.
Logo após, recebe uma proposta do agente fornecedor, enviada da mesma barra de ativação, caracterizando seqüência no processo.
A resposta pode ser confirmando a solicitação ou não confirmando.
Apenas um AC (ato de comunicação) seráenviado, devido a presença da caixa de decisão com um x.
Em resposta a solicitação confirmada, um AC é enviado para uma nova barra de ativação informando contrato fechado, encerrando o processo.
E em resposta a solicitação não confirmada, um novo AC é enviado solicitando redefinição.
Finalizando envia- se a proposta, encerrando assim o processo.
Conforme, no processo de modelagem e refinamento dos diagramas é fundamentalque haja consistência entre os mesmos, de forma a compor de maneira integrada as três visões requeridas para criação de um sistema.
Em a proposta de Souza o caminho naturaldo processo de modelagem de um SMA, inicia- se a partir de os atores que disparam os processos que geram os Diagramas de Casos de Uso.
Os atores podem ser humanos, outros agentes, ouum sistema externo que inicializa o processo.
Os agentes envolvidos nos processos (casos de uso) pertencem a sociedade de agentes, compondo o Diagrama da Sociedade.
Para complementar esse diagrama, foi criado o Modelo de Funções que estabelece para cada um dos papéis de cada agente suas responsabilidades, restrições e serviços.
E finalmente para exibir as mensagens trocadas em cada um desses relacionamentos, assim como o nível hierárquico entre os agentes e o percurso dos AC, foi utilizado o Diagrama de Interação Seqüencial.
A Lógica Temporalde Ações TLA (TemporalLogic ofActions) é uma lógica linear de tempos que define um predicado sobre comportamentos, onde predicado é uma expressão seqüência infinita de estados, onde um estado modifica valores de uma oumais variáveis flexíveis, que são variáveis que podem assumir valores diferentes em estados diferentes.
Uma fórmula de TLA é definida como, verdadeira oufalsa num comportamento.
Esta pode ser exemplificada através da execução de um algoritmo como uma sucessão de passos, produzindo um estado novo alterando valores de uma oumais variáveis.
A lógica temporalpode ser descrita como significado semântico dessa sucessão de estados.
A semântica do sistema é o conjunto de comportamentos que este pode assumir.
Um par de estados, um representando o estado antigo e outro o novo, definem o que é chamado de passo A sintaxe e semântica de TLA são compostas de quatro conjuntos:
Em o primeiro conjunto existem fórmulas com significado independente do estado, chamadas de constantes, são variáveis fixas cujo valor tem estado independente do que acontece nas fórmulas temporais;
Em o segundo conjunto é descrita a argumentação sobre os estados, em particular, chamada de fórmula de estado que incluem funções de estado, predicados de estado (ações), variáveis fixas e flexíveis cujo valor tem estado independente do que pode acontecer nas fórmulas temporais;
Em o terceiro conjunto é descrita a argumentação dos pares de estados chamados de fórmulas de transição, estas incluem funções e predicados de transição;
Em o quarto conjunto é feita a argumentação sobre os comportamentos, que são sucessões infinitas de estados chamadas de fórmulas temporais, as quais são construídas com fórmulas de outros módulos que usam operadores temporais.
Lamport propôs uma linguagem formalpara escrever especificações em TLA chamada TLA+, onde as especificações em TLA+ são divididas em módulos.
Novos módulos podem ser adicionados àespecificação permitindo a utilização de módulos definidos.
Em a Figura 10 dados são enviados através de vale as linhas rdy e ack são usadas para sincronização.
Sender envia um dado e espera a confirmação de recebimento por o Receiver para enviar o dado seguinte.
Quando um dado é enviado, ele é transmitido através de vale o sinalem rdy é trocado, informando ao receiver que o Sender enviouum dado e espera confirmação de recebimento.
O Receiver então confirma o recebimento trocando o sinalem ack.
Em a Figura 11 é apresentado um exemplo de como escrever uma especificação em TLA+, o qualrepresenta uma estrutura genérica em TLA+.
Conforme, a parte de EXTENDS apresenta a declaração do módulo predefinido a ser incorporado àespecificação.
Todos os módulos predefinidos a serem utilizados por um módulo novo são declarados após a palavra reservada EXTENDS.
Como exemplo, o módulo Naturals é um módulo onde estão as definições dos números naturais.
Em a parte CONSTANT é apresentada a lista de constantes, que são variáveis com valor constante do módulo.
VARIABLE mostra a lista de variáveis do módulo.
Em a parte TypeInvariant são determinados os valores que podem ser assumidos por as variáveis declaradas.
O símbolo determina a conjunção das condições estabelecidas.
O mesmo ocorre para a disjunção de condições, onde cada linha é precedida do símbolo.
A parte Init define o predicado inicial, que são as condições iniciais do sistema que estásendo modelado.
Em a parte Next é representada a ação a ser executada no próximo estado, alterando o estado antigo.
Em Spec é descrita que os componentes válidos deste sistema são seqüência de estados, em os quais, inicialmente, o predicado Init é verdadeiro e o predicado Next é sempre verdadeiro.
A parte THEOREM define o teorema da especificação e, na parte de Ações são definidas as ações que a especificação vai executar.
O modelo de Dependência de Ator ­ De a (Dependecy Actor) consiste num conjunto de nodos e ligações.
Cada nodo representa um ator, e cada ligação entre dois atores indica que um ator depende do outro para alguma coisa, de maneira que o primeiro possa atingir algum objetivo.
Através da dependência entre atores, um ator fica apto a atingir objetivos para os quais ele não estaria apto sem a dependência ounão conseguiria atingir tão facilmente.
Também se o ator, do qualo outro depende falhar, os objetivos desse outro ator também falham.
A Figura 12 mostra um modelo de dependência de ator para uma simples organização de um projeto de engenharia de software, onde um cliente depende de um administrador de projeto para desenvolvimento de sistemas.
Este projeto depende de um projetista, um programador, e um testador para trabalhos técnicos.
Os membros da equipe técnica dependem de cada um dos outros para trabalhar em produtos intermediários, tais como projeto, código e resultados de testes.
O administrador é também dependente de seuchefe para que os projetos não sejam sobrepostos, os usuários também são dependentes, para a garantia da qualidade da manutenção do sistema.
O usuário depende do administrador de projeto para uma performance do sistema amigável.
O modelo de dependência de atores possui três principais tipos de dependência, baseadas em categorias ontológicas de declaração, atividade ou entidade:
Dependência de Objetivo, Dependência de Tarefa e Dependência de Recurso.
Em a Dependência deObjetivo um ator depende do outro para que uma condição se torne verdadeira.
Pois, somente um estado finalou conseqüência é especificado.
Em a Figura 12, o relacionamento da dependência de objetivo entre o administrador de projeto e sua equipe é para decidir como vai ser feito sua tarefa.
O administrador não se preocupa em como o sistema é desenvolvido.
Jána Dependência deTarefa um ator depende de outro para realizar uma atividade.
O objetivo dependente para ter a atividade executada não é dado.
A descrição da atividade especifica um curso particular da ação.
O programador depende, no verificador, testar um módulo via uma dependência de tarefa para especificar um plano de teste.
Se o administrador do projeto indicar os passos técnicos para cada membro da equipe alcançar a saída, então o administrador deverárelatar sua equipe por dependência de tarefa.
Em a Dependência deRecurso um ator depende de outro para acessar uma entidade física oulógica.
O dependente toma a disponibilidade do recurso para ser uma solução de problema não requisitada.
Em a Figura 12, a dependência de administrador geral, no pagamento do cliente, a dependência dos testadores na programação do código, e o projeto de dependência de administrador em sua equipe para notificação de tarefas completas, são modeladas como dependência de recurso.
Ainda existe um quarto tipo de dependência, a Dependência FlexíveldeObjetivo que é uma variação do primeiro.
É diferente da dependência de objetivo no sentido de que não existe um critério a priori no que se constitui atingir o objetivo.
O significado de um objetivo flexívelé especificado em termos de métodos que são escolhidos em curso para perseguir o objetivo.
O dependedor contribui para identificar as alternativas, mas as decisões são tomadas por o dependente.
Agentes dotados de estados mentais são aqueles que possuem a capacidade de selecionar seus objetivos, raciocinar sobre eles, selecionar oucriar planos, detectar conflitos entre planos, executar e revisar os planos, produzir decisões, entre outros.
A utilização de estados mentais para modelagem de agentes cognitivos é chamada de abordagem mentalista.
Em esta visão, o que faz qualquer componente de hardware ou software ser um agente é, precisamente, o fato de ele poder ser analisado e controlado em termos destes componentes mentais.
Como idéia principalpara utilização de estados mentais tem- se que o agente pode selecionar racionalmente seucurso de ação baseado nas representações desses estados mentais.
Crenças Conforme crenças são definidas como sendo uma visão informativa do estado do sistema, elas são necessárias para que o agente conheça o ambiente onde ele estáinserido.
Em o trabalho das crenças são constantemente atualizadas através do sensoramento do ambiente, representando ainda as atitudes do agente.
D' Inverno em seutrabalho diz que as crenças podem ser vistas como simples variáveis (como por exemplo na linguagem Pascal), mas agentes modelados na arquitetura BDI representam crenças de forma simbólica (como, por exemplo, fatos em PROLOG).
Para representar as crenças de um agente é proposto um operador modalB, sendo que, este apresenta dois argumentos, o primeiro mostra de quem é a crença (agente) e o segundo representa em que o primeiro acredita (uma fórmula).
Por exemplo, para dizer que João acredita que o pai de Zeus é Cronus, seria utilizado:
B (joão, pai_ de (zeus, cronus) De forma geral, tem- se:
B (A, F), onde:
A $= agente;
F $= é uma fórmula.
Móra diz que um desejo é um fato que representa um estado que é possívelde ser atingido, ouentão um estado a ser atingido quando certas condições venham a se estabelecer.
Conforme um desejo representa o estado motivacionaldo agente, de certa forma, representa um estado que este deve atingir.
Corrêa em seutrabalho, descreve desejos como:
Des $= identificação do desejo;
A $= identificação do agente;
P $= uma propriedade;
E $= um indicador de prioridade do desejo;
L $= localde ocorrência do desejo;
T $= instante de ocorrência do desejo;
V $= registra a ocorrência do agente.
Conforme quando o agente decide por uma linha de ação, entre tantas outras que ele poderia escolher, o agente passa a ter uma intenção de adotar essa linha de ação.
De acordo com Móra uma intenção é vista como um compromisso que o agente assume com um possívelfuturo específico, pois ao contrário de os desejos não se pode ter intenções conflitantes devido a o fato de que elas devem encontrar suporte nas crenças do agente.
Ouseja, o agente não pode intencionar aquilo que ele não acredita.
Chaib-Draa mostra que um agente &quot;A «possui a intenção de atingir &quot;P «se o agente tem um compromisso com &quot;P «e possui planos para atender- lo, formalizando apresenta- se:
Uma abordagem muito utilizada dentro de as arquiteturas baseadas em estados mentais (crença, desejo e intenção) é chamada de arquitetura BDI (Belief, Desire andIntention).
A abordagem BDI baseia- se na descrição do processamento interno de um agente utilizando um conjunto básico de estados mentais (crenças, desejos e intenções) e na definição de uma arquitetura de controle através da qualo agente seleciona racionalmente o curso de suas ações.
Os pesquisadores Anand Rao e MichaelGeorgeff, desenvolveram a lógica BDI com o propósito de fornecer um resumo da semântica idealpara agentes BDI, sobre o trabalho de pesquisadores tanto da Ciência da Computação Teórica como da Inteligência Artificial.
Estes demonstraram como um tipo particular de lógica multimodalpoderia ser usado para capturar os aspectos da teoria de Bratman.
A teoria de Bratman é uma teoria do raciocínio prático, ouseja, o processo de raciocínio que todos nós experimentamos em nossas vidas diárias.
Essa teoria concentra- se, em particular, na função que as intenções representam para raciocínio prático.
A arquitetura BDI clássica, apresentada na Figura 13, chamada de IRMA (Intelligent Resource-boundedMachine Architecture), proposta por possui como objetivo a viabilização do raciocínio do agente levando- se em consideração a sua limitação de recursos.
Esta arquitetura possui dois tipos de entidades:
Processos (representados por retângulos) e entidades de armazenamento (representadas por elipses).
Desta forma, as intenções dos agentes são estruturadas em planos de alto nível, sendo que os planos que o agente conhece são armazenados numa biblioteca de planos.
O Analisador de Oportunidades reage a mudanças no ambiente criando opções de ação baseada em eventos não previstos por o planejamento convencional, que é realizado por o Raciocinador Meios-Fim, o qualtem como entradas as Crenças do agente e os planos armazenados na Biblioteca de Planos.
O Raciocinador Meios-fime o Analisador de Oportunidades sugerem opções para o processo de filtragem, representado por o Filtro de Compatibilidade e por o Ignorador do Filtro.
O Filtro de Compatibilidade verifica se as opções geradas são consistentes com as intenções adotadas atualmente, e as opções sobreviventes são passadas para o processo de Deliberação, que pesa as novas opções entre si e as incorpora nos planos do agente.
O Ignorador do Filtro foi incorporado ao processo de filtragem devido a possibilidade do agente ter conhecimento limitado, que cria situações onde certas opções seriam interessantes apesar de a base de crenças indicar que háinconsistência nestas opções.
Um trabalho relevante, que aborda este tópico, é o projeto Tropos, o qualfoi criado na premissa de que, para construir software a fim de operar dentro de um ambiente dinâmico, é necessário analisar e modelar explicitamente esse ambiente em termos de atores, objetivos e dependências de outros atores.
Esta metodologia suporta quatro fases no desenvolvimento de software:
Requisitos iniciais, que visam entender o problema estudando uma configuração organizacional, tendo como saída um modelo organizacionalque inclui relevantes atores externos, seus respectivos objetivos e suas interdependências;
Requisitosposteriores, onde o sistema é descrito dentro de um ambiente operacionaljuntamente com suas funções e qualidades relevantes;
Projeto arquitetural, onde a arquitetura globaldo sistema é definida em termos de subsistemas interconectados através de dados, controle e outras dependências e;
Projeto detalhado, onde o comportamento de cada componente arquiteturalé definido em mais detalhes.
Em este projeto a análise prévia de requisitos é focada nas intençõesdas aplicações.
Essas intenções são modeladas como objetivos que, através de uma forma de análise orientada a objetivo, eventualmente levam aos requisitos funcionais e não funcionais do sistema a ser modelado.
Em i* (framework de modelagem), proposto por, o qual sustenta intencionalidade distribuída, aplicações são representadas como atores sociais, que dependem de outros para atingir objetivos e realizar suas tarefas.
Z é uma linguagem formalcujo objetivo é a especificação de sistemas.
Por ser uma linguagem formalela possui:
Um alfabeto, uma sintaxe e uma semântica precisa.
Woodcock considera a notação Z uma linguagem matemática com um mecanismo de estrutura poderoso.
Em combinação com linguagem natural, este mecanismo pode ser usado para produzir especificações formais.
Zé usada para descrever o comportamento corrente do sistema.
Uma especificação em Z consiste de um modelo matemático do estado do sistema e da definição de operações sobre o estado, descrevendo, também, certas operações correspondentes dessa estrutura.
Essas operações correspondem às interações do sistema com o meio externo.
Quando operações são aplicadas a componentes da estrutura lógica, o estado do sistema se altera, refletindo o efeito da interação no novo estado assumido por o sistema.
A notação Z pode ser usada também para descrever propriedades desejáveis, que os estados do sistema devem satisfazer.
Isso permite que certas propriedades de sistemas especificados na notação Z possam ser validadas de maneira simbólica, usando apenas o texto das especificações, sem necessidade de testes sobre algum código compilado.
Uma especificação em Z é formada de um número de esquemas (diagramas), os quais possuem uma parte declarativa e uma parte de predicados em lógica de 1 ordem.
Estes esquemas podem ser combinados e usados em outros esquemas.
Container content:
A Figura 14 representa um esquema em Z, onde Container é o nome do esquema, a seguir são apresentados as declarações das variáveis do esquema e, no último bloco é colocado o predicado do esquema, no caso, contents capacity.
Conforme Moura extraindo- se a parte formalde uma especificação em Z, tem- se um conjunto mínimo de estruturas e operadores bem definidos que caracterizam completamente o espaço de estados do software especificado.
Além disso, a parte formalda especificação provê também transformações nesse espaço de estados, as quais refletem as necessidades funcionais do software.
Uma vez isolada, a parte formal, outrechos de ela, pode ser submetida a ferramentas computadorizadas que suportem, pelo menos, a verificação de propriedades do sistema especificado.
A formulação de um modelo em Z inicia como uma visão informale intuitiva do cenário finalem que se vai inserir o modelo finalque se estáconstruindo.
Adquirir esta visão intuitiva faz parte do processo criativo em cujo âmbito se desenvolve toda a construção de uma especificação formal.
A linguagem de especificação Z em particular foi adotada por D'Inverno como meio de construção de um frameworkformalde agente, o qualtem sido capaz de considerar vários aspectos distintos de agentes e SMAs.
Como benefícios da linguagem de especificação Z, pode- se citar:
Permite precisão e não ambigüidade na definição de conceitos comuns;
É suficientemente significativo para permitir uma consistência, descrição unificada e estruturada de um sistema de computador e suas operações associadas, permitindo assim, projetos alternativos de modelos particulares de agentes e sistemas para serem concebidos explicitamente, comparados e avaliados;
Provêuma base para desenvolvimento de novos conceitos refinados.
Através do uso de esquemas e inclusão de esquemas, Zfacilita a descrição de sistemas em diferentes níveis de abstração.
Conforme Luck a linguagem de especificação Z jáfoi utilizada em outros trabalhos para fornecer análise do relacionamento socialentre os agentes, para fornecer uma descrição de interações autônomas e para aplicar o modelo em sistemas existentes como meio de avaliar e comparar.
Adicionalmente, o framework proposto por pode servir como ambiente para o desenvolvimento de uma metodologia de projeto de software baseado em agentes.
Utilizando o formalimo Z, propôs um framewok conceitual, como citado anteriormente, que serve para compreender e organizar o ambiente de sistemas baseados em agentes.
Essa abordagem não é usada para restringir o uso da terminologia através de definições rígidas, mas é usada para prover uma infraestrutura abrangente que pode ser utilizada no entendimento da natureza dos diferentes sistemas.
O benefício disso é que a riqueza da metáfora do agente é preservada através dos diversos usos, enquanto as identidades distintas de diferentes perspectivas são destacadas e usadas para direcionar e focar pesquisa e desenvolvimento de acordo com os objetivos particulares das sub-áreas.
Maiores detalhes sobre o formalismo Z, no que se refere a esquemas, descrições de operações, tipos, variáveis, operações com esquemas e um glossário da notação, podem ser visto no Anexo A. Baseando-se nos estudos descritos sobre formalismos na seção 2.5 do capítulo 2, pode- se dizer que, após uma análise, um problema detectado foi a falta de recursos por parte desses formalismos no momento da descrição de agentes de usuário, em particular, a descrição das três propriedades consideradas como básicas:
Aprendizagem, autonomia e personalização.
Partindo- se dessa colocação, acredita- se que é possívelexplorar os aspectos do agente de usuário através de especificações em Z. Justifica-se a utilização do formalismo Z por o fato da noção de esquemas facilitar o mapeamento para classes, jáque existem outros trabalhos no projeto MASP nesta linha que podem ser mapeados.
O formalismo também acrescenta precisão formalna especificação utilizando os esquemas de agente.
Salienta- se também, que é necessário partir- se de uma linguagem formal (especificações em Z, no caso desse trabalho) para que se possa estender mais formalmente os agentes.
Assim, com as assertivas de uma especificação Z em linguagem de primeira ordem, torna- se mais fácilde agregar especificações sobre estados mentais.
A especificação Z também foi adotada por ser suficientemente expressiva para permitir uma consistência, unificar e estruturar a descrição de sistemas de computador e associar operações, estruturar especificações (que são feitas possivelmente por Z permitindo esquemas e inclusão de esquemas) e habilitar a descrição de sistemas em diferentes níveis de abstração.
Tendo o conjunto de propriedades jáestabelecidas, na seção 2.2.1 do capítulo 2, definiram- se os requisitos dessas propriedades que serão observados no momento da especificação dos agentes de usuário.
O formalismo Z deverápermitir a descrição desses requisitos através da formalização desses.
Para se chegar aos requisitos associados às propriedades dos agentes de usuário, partiu- se das características principais que cada propriedade apresenta e também se baseouem ações que os agentes podem tomar em relação a o usuário.
Em a propriedade de aprendizagem partiuda uma definição dada na seção 2.2.2, baseando- se em estudos preliminares e, assim, foram extraídos os requisitos a seguir.
Observar o usuário:
Observar as atuações do usuário no ambiente, tomando como ponto de partida, a reação desse em relação a determinadas situações e, se este segue sempre uma seqüência de atividades quando acessa o sistema/ site.
O que torna este socialé a interação do agente com o usuário observando suas reações no ambiente;
Observar o ambiente:
Observa as modificações ocorridas no ambiente a partir de as ações realizadas por o usuário.
Considerando o ambiente como um &quot;todo», supõe- se que o agente interage diretamente com outros agentes que compõe o sistema, o que torna este social;
Inferir tarefas e objetivos do usuário:
Explorar detalhadamente as tarefas e ações que o usuário estárealizando no ambiente e, principalmente, qualo objetivo que este possui no momento da interação.
Para que o agente realize essas tarefas é necessário que exista uma interação socialentre este e o usuário;
Entender o ambiente:
Entender as modificações que estão ocorrendo no ambiente no momento da interação do usuário, a fim de que ocorra o auxílio no processo de entendimento do usuário.
De a mesma forma que no item anterior, é necessário que o agente interaja com o ambiente para que atinja seus objetivos, isso torna este requisito social.
Basear- se em experiências anteriores:
Armazenar informações de atuações anteriores para que possam ser utilizadas em tarefas futuras.
Os agentes utilizam seupróprio conhecimento adquirido através de outras experiências realizadas em execuções anteriores.
Isto o caracteriza como requisito interno;
Armazenar características que considera importante na sua interação:
Este requisito estáassociado diretamente com o anterior, pois o agente pode selecionar as características que poderáutilizar 8 Ambiente:
Em essa situação, o ambiente é considerado como um todo.
Ouseja, o ambiente (sociedade) é a união dos agentes com outros objetos inseridos no sistema.
Aplicar informações armazenadas quando necessário:
O agente poderá aplicar informações importantes que armazenou de outras execuções, quando encontrar tarefas ou usuários semelhantes.
Para que essas informações sejam aplicadas, necessita conhecer os agentes, seus objetivos e tarefas que pretendem realizar, assim essa tarefa se torna do agente em particular.
Com base na definição de autonomia adotada para este trabalho (seção 2.2.3), definiu- se os requisitos listados a seguir.
Conhecer o grau de autonomia do usuário:
O agente deve reconhecer o quanto o usuário pode ser autônomo no ambiente.
Ouseja, qualgraude liberdade que o usuário tem para atuar num sistema que possui restrições baseadas no tipo de usuário que iráutilizar- lo.
O agente necessita manter contato (interação) diretamente com o usuário para que consiga conhecer o quanto este é autônomo no ambiente, assim é considerado um requisito social;
Escolher ação que vai executar:
Baseado na experiência que adquire através da interação com o usuário e no conhecimento &quot;implementado «(pré-definido) que possui, opta por uma ação a executar.
Assim, o agente é levado a tomar iniciativas, sempre baseado em informações que possui em seubanco de dados a respeito de o usuário.
Para que a escolha da ação que iráexecutar aconteça, além de possuir um conhecimento pré-definido, é necessário que exista interação com outros agentes (interação social), para que este adquira alguma experiência.
Controlar suas ações:
O agente deve controlar suas próprias ações, baseando- se nas atuações junto ao usuário e no conhecimento que possui sobre este.
Somente o agente pode ter controle sobre suas ações.
Ouseja, o controle depende somente deste em particular, caracterizando- o como um requisito interno.
Deve haver ações que o agente não precisa de autorização do usuário para executar.
Tomando como referência a definição dada para a propriedade de personalização neste trabalho (seção 2.2.4), definimos os seguintes requisitos:
Interessar- se por o usuário:
O agente deve ficar atento às ações do usuário e apresentar interesse por as atividades que o usuário realiza.
Para que o agente se interesse por o usuário é preciso que exista alguma interação entre eles (interação social), conseqüentemente um requisito social;
Manter informação sobre o usuário:
O agente deve conhecer o usuário através da observação de suas ações, e concentrar- se nos objetivos, hábitos, interesses e preferências deste.
O agente neste requisito necessita interagir com o usuário oucom outro agente, o que torna este social.
Agir de forma diferente comcada usuário:
Através da observação das ações do usuário o agente deveráagir sempre de forma a se adaptar a este, e assim, conseqüentemente, agiráde forma diferente com cada um.
Em esse caso, assume- se que existe interação socialentre eles, considerando como um requisito social.
Salienta- se que a propriedade de personalização não possui requisitos internos.
Ouseja, todos os requisitos que esta possui são considerados como sociais neste trabalho.
Justifica- se esta afirmação por o motivo de, na personalização os agentes necessitarem interagir sempre com outros agentes e com o usuário para que consigam realizar suas tarefas e personalizar o conteúdo.
A partir de a definição desses requisitos sociais e internos dos agentes de usuário, propõe- se uma especificação que permite expressar- los adequadamente, considerando sempre as três propriedades básicas:
Personalização, autonomia e aprendizagem.
Em particular, espera- se verificar a descrição dos requisitos sociais e internos dos agentes de usuário após a implementação de sistemas com essa abordagem.
A proposta de formalização dos requisitos associados às propriedades dos agentes de usuário possui vínculo com o trabalho proposto por.
Luck, em sua proposta, aplica métodos formais a fim de definir um frameworkpara sistemas baseados em agentes.
Este utiliza a especificação em Z para prover uma especificação formalacessívelem sistemas baseados em agentes.
Em a sua formalização Luck, dáenfoque para a propriedade de autonomia dos agentes, focalizando o que é necessário para um sistema ser autônomo em vários termos, distinguindo, objetos, agência e autonomia.
Assim, pode- se dizer que este trabalho segue a mesma linha do trabalho de, pois este também utiliza a especificação Zpara representar os agentes.
No entanto, dáenfoque às três propriedades básicas dos agentes de usuário:
Aprendizagem, autonomia e personalização, no que tange aos seus requisitos.
A partir de a definição dos requisitos dos agentes de usuário, propõe- se uma especificação que permite expressar- los adequadamente, considerando sempre as três propriedades básicas.
Em particular, espera- se verificar a descrição dos requisitos sociais e internos dos agentes de usuário após a implementação de sistemas com essa abordagem.
Em o momento em que foi definida, de forma genérica, uma metodologia inicialpara a 9 descrição do formalismo que expressa as propriedades básicas dos agentes de usuário, apresentou- se como proposta uma seqüência de passos que devem ser seguidos:
Primeiramente, como descrito na seção 3.1, definiram- se os requisitos das propriedades associadas aos agentes de usuário;
A partir de aí, cada requisito associado às propriedades é representado através de um esquema;
Os requisitos são agrupados, em função de as semelhanças que apresentam entre si;
Como estas propriedades são características básicas de um ouvários agentes de usuário;
Finalmente, é necessário, para compor a formalização, um esquema que mostre o conjunto das crenças, desejos e intenções que um agente, no caso deste trabalho, deve possuir.
A partir de isso, no momento de formalizar os requisitos dos agentes de usuário, refinou- se essa metodologia inicialmente proposta, apresentada anteriormente, conforme mostrada a seguir:
Primeiramente, define-seosrequisitosdo agente Requisitos de Aprendizagem.
Requisitos de Autonomia.
Requisitos de Personalização.
Logo Z Pode- se dizer que, para cada requisito a ser representado, tem- se um esquema descrevendo o estado das informações associadas ao requisito e um esquema descrevendo a mudança de estado (associada a uma ação efetuada por o agente).
Normalmente, os requisitos implicam em ações do agente, por isso, criamos esquemas representando mudanças de estado.
E, finalmente, esquemasquepossuem elementosem comum são agrupados;
Assim, elimina-sea redundância nosesquemas Esta etapa ocorre somente no caso de existirem esquemas redundantes que podem ser simplificados.
Ouseja, nos esquemas que expressam ações similares, pode- se unir os predicados que as expressam.
No entanto, enfoca- se que a inclusão de esquemas em outros esquemas não implica em agrupar estes e, sim, mostrar quais esquemas são necessários para complementar outros esquemas, em determinadas funções.
Salienta- se, que este formalismo satisfaz características básicas de um sistema.
De essa forma, no momento de especificar um sistema qualquer utilizando- se este formalismo, podem vir a surgir características consideradas como suplementares, com isso, estas podem ser inseridas através dos novos esquemas considerando- se como parte do conjunto de esquemas jáexistente.
Assumiu- se neste trabalho que os agentes de usuário são deliberativos;
Assim, os esquemas prevêem conjuntos de crenças, desejos e intenções.
Inicialmente na construção do formalismo que expressa os requisitos associados às propriedades básicas dos agentes de usuário, estendeu- se o esquema Agent de, o qualé chamado de Agente neste trabalho.
Para isso foi necessário, primeiramente, mostrar outros dois esquemas que o autor salienta serem importantes para definição do esquema Agente os esquemas das Figura 15 e Figura 17, respectivamente chamados de Entidade e Objeto.
Uma entidade é um componente que descreve o mais alto nívelde abstração, apenas como uma coleção de atributos.
Assim, apresenta- se inicialmente, o esquema Entidade, o que é um conjunto de atributos, com a restrição de que este é um conjunto não vazio.
A Figura 16 apresenta o esquema Ações (necessário para determinar o esquema Objeto), o qualé uma extensão do esquema ObjectAct proposto por em seutrabalho.
Este possui uma função de seleção de ação chamada de ato_ objeto, que determina qualo conjunto de ações é executado em seguida, num dado ambiente, definida como uma função total.
Como predicado é definido que as próximas ações a serem realizadas por o objeto (determinada por a aplicação da função ato_ objeto) estão contidas nas capacidades.
Em a Figura 17 apresenta- se o esquema Objeto, representando uma extensão do esquema Object proposto por.
Este inclui o esquema Ações e formaliza a definição de um objeto, incluindo o esquema Entidade.
Declara como variávelas capacidadesdo tipo ACOES.
Assim, apresenta- se o predicado que especifica as capacidades como não sendo um conjunto vazio.
Com base nos esquemas anteriores, apresenta um esquema Agent chamado, neste trabalho, de Agente na Figura 18, que estendido e definiu- se como agente genérico para este trabalho.
Este esquema inclui o esquema Objeto, apresentado anteriormente, e define uma variável objetivosque retorna um conjunto de objetivos.
Este objetivos são definidos, na parte de predicados, como um conjunto de objetivos não vazio.
De essa forma, conforme no esquema Agente, é atribuído um conjunto de objetivos que retém alguma instanciação.
Um objeto pode originar diferentes instanciações para os agentes.
A Figura 19 apresenta o esquema Agente de Usuário, no qualestão inseridos (na parte de declarações) os esquemas Agente, Aprendizagem, Autonomia, Personalização, EstadoAmbiente e, é apresentado um conjunto de ações, representado por a variávelA, um conjunto de crenças representado por a variávelB, um conjunto de desejos representado por a variávelD e um conjunto de intenções, representado por uma variávelI.
Ainda são declaradas as monitorarusuário pertence ao conjunto de ações e, o predicado em que a ação informar também pertence ao conjunto de ações.
Em a Figura 20, mostra- se o esquema EstadoAmbiente.
Mesmo este esquema sendo ligado diretamente ao agente de usuário, pode- se dizer que também expressa os requisitos relacionados ao ambiente e ao usuário na propriedade de aprendizagem.
Este esquema inclui o esquema AcoesAgente e possui como variáveis, ambiente, interacoespos (interações possíveis no ambiente) e interacoesat (interações atuais no ambiente) que representam um conjunto de interações e uma função proximoa, que representa o próximo conjunto de interações no ambiente a ser projetado.
Este esquema expressa, através de seus predicados, as interacoespos, que descrevem algumas interações possíveis no ambiente corrente, as quais pertencem as interações no ambiente;
Interacoesat, que mostra um conjunto de interações que são atuais no ambiente.
Ouseja, que fazem parte das interações possíveis no ambiente.
Ainda apresenta- se o conjunto de ações do agente a ser projetado, as interações atuais do usuário e o ambiente como pertencentes ao esquema AcoesAgente.
O esquema EstadoAmbiente representado na Figura 21, mostra a mudança de estado do esquema EstadoAmbiente, onde EstadoAmbiente, representa o novo estado.
Este possui também uma função chamada atualizainterações, que possui uma seqüência de ações que retorna as interações realizadas no ambiente.
Consequentemente, no predicado interacoesat ocorre mudança de estado, onde as interações realizadas no ambiente são atualizadas no ambiente.
Observa- se que a mudança de estado (novo estado) é representando por apóstrofe.
Em seguida, na Figura 22, é exposto o esquema Aprendizagem, que possui como função incluir o esquema que representa os requisitos associados a esta propriedade.
O esquema incluído é ObservarUsuario.
Em a Figura 23, é apresentado o esquema Autonomia que apresenta a propriedade de Autonomia, onde estão inseridos os esquemas que representam os requisitos associados a essa propriedade:
AcoesAgente e AutonomiaUsuario.
A Figura 24, especifica o esquema Personalização (a propriedade de personalização do agente de usuário).
Este esquema inclui os esquemas EstadoUsuario, EstadoUsuario (mudança de estado do esquema EstadoUsuario) e AcoesUsuario, os quais expressam os requisitos associados a essa propriedade.
Os esquemas das Figura 22, Figura 23 e Figura 24, possuem a funcionalidade (como é visivelmente apresentado) somente de inserir os esquemas que compõem cada propriedade, definindo, assim, quais são os requisitos associados a cada uma de elas.
O esquema AutonomiaUsuario (Figura 25) representa o requisito Conhecer o grau de autonomia do usuário.
Ouseja, o agente deve saber qualgraude liberdade que o usuário tem para atuar num sistema que possui restrições baseadas no tipo de usuário que iráutilizar- lo.
Assim este esquema inclui o esquema AcoesUsuario e declara variáveis como, usuario do tipo Usuario, agentedo tipo Agente e, agentescomo um conjunto de agente.
Como predicado é definido que, o agente não necessita de autorização para realizar suas ações.
E, para toda ação (a) do tipo AcoesUsuario (que são determinadas como sendo ações que o usuário pode realizar), o conjunto de agentes pode autorizar o usuário a realizar a ação em questão.
Esses predicados pertencem ao conjunto de crenças.
Em a Figura 26, apresenta- se o esquema EstadoUsuario, que faz parte da propriedade de personalização.
Este determina os requisitos da propriedade de personalização e os requisitos que competem ao usuário na propriedade de aprendizagem.
Este possui como variáveis, ambiente, AcoesUsuario do tipo Ações, objetivospos (objetivos possíveis do usuário) e objetivosat (objetivos atuais do usuário), que representam um conjunto de objetivos;
Historico, que mostra a seqüência de ações previamente projetada para um usuário e, uma função proximo, que é o próximo conjunto de ações do usuário a ser projetado.
Ouseja, um conjunto de objetivos no ambiente que retorna um conjunto de ações do usuário.
Como predicado tem- se:
Os objetivospos, que descrevem os objetivos possíveis no ambiente corrente, pertencendo aos objetivos do usuário, objetivosat, que mostra um conjunto de objetivos que são atuais para o usuário (que fazem parte dos objetivos possíveis do usuário), o conjunto de ações do usuário a ser projetado, os objetivos atuais do usuário e o ambiente que são declarados como pertencentes esquema AcoesUsuario.
O esquema EstadoUsuário representado na Figura 27, mostra a mudança de estado do esquema da Figura 26, onde EstadoUsuario, representa o novo estado.
Este possui uma função chamada atualizaobjetivos, que engloba uma seqüência de ações que retorna os objetivos do usuário no ambiente.
Como no predicado em objetivosatocorre mudança de estado, onde os objetivos do usuário são atualizados no ambiente e o histórico do usuário recebem atualização.
Em o esquema ObservarUsuario, Figura 28, são representados todos os requisitos associados à propriedade de aprendizagem que dizem respeito o usuário.
É inserido o esquema EstadoUsuário, representando o novo estado do usuário, o qualtambém representa a observação que o agente faz em relação a o usuário.
Consequentemente, o novo conjunto de objetivos atuais do usuário e a função proximo (que retorna o próximo conjunto de ações do usuário) e o ambiente também são declarados pertencentes ao conjunto de crenças.
A Figura 29, representa o esquema AcoesAgente, onde são mostrados os requisitos de Escolher a ação que vai executar e controlar suas ações, da propriedade de autonomia.
Este esquema é uma extensão do esquema AgentAct proposto por e possui semelhança com o esquema AcoesUsuario.
Este esquema inclui o esquema Agente, declara uma variávelambientedo tipo Ambiente e, inclui a função acoesagente, que recebe os objetivos e o ambiente e retorna as ações do agente, que devem estar contidas nas capacidades.
A Figura 30, representa o esquema AcoesUsuario, que faz parte da propriedade de autonomia.
Este esquema é semelhante ao esquema AcoesAgente.
Este esquema inclui o esquema Agente, declara uma variávelambientedo tipo Ambiente e, inclui a função acoesusuario, que recebe os objetivos e o ambiente e retorna as ações do usuário, que devem estar contidas nas capacidades.
Salienta- se que, neste formalismo não existe a necessidade de agrupar esquemas similares.
De essa forma, na seção 4.2, do capítulo 4, desse trabalho, é apresentado um exemplo com a ocorrência de agrupamento de esquemas, realizando a terceira etapa da metodologia.
Observa- se que, não hánecessidade de sempre utilizar este recurso.
A partir de a definição dos esquemas, apresenta- se na Figura 31, a organização desses esquemas conforme as inclusões realizadas.
De essa forma, as linhas (no sentido de cima para baixo) indicam a inclusão de esquemas em outros (herança de características de outros esquemas).
Como exemplo, pode- se citar:
O esquema AgenteUsuario inclui Agente que inclui Objeto, consequentemente, incluindo os esquemas Entidade e Acoes.
A Tabela 2 apresenta as variáveis utilizadas no formalismo proposto com seus respectivos tipos utilizados e determinando a funcionalidade que possuem na formalização.
Em a Tabela 1 são apresentados os símbolos em Z utilizados no formalismo proposto com seurespectivo significado.
Para fins de avaliação deste trabalho utilizar- se- ao trabalho de, onde o agente de interface possui um papelpreponderante no auxílio às interações entre o aluno e o ambiente.
O contexto da aplicação é um STI multiagente cooperativo na Web.
A seguir descreve- se o resumo do trabalho de.
O enfoque principaldo trabalho de Andrade centra- se no projeto de um agente pedagógico de diagnóstico para ambientes de aprendizagem colaborativa.
O ambiente é formado por uma arquitetura que possui quatro agentes artificiais que irão dar suporte àaprendizagem àdistância.
Os agentes integrantes do ambiente são:
Agente diagnóstico, agente mediador, agente semiótico e agente colaborador (social).
Segundo, na arquitetura proposta os agentes artificiais têm como função monitorar e auxiliar os agentes humanos em suas atividades colaborativas.
Esta arquitetura está sendo projetada independentemente do conteúdo e pode ser voltada a qualquer domínio de conhecimento.
Todos os personagens envolvidos, aprendizes e agentes, são modelados como agentes colaboradores integrados num ambiente de aprendizagem colaborativa.
Os agentes diagnóstico e mediador monitoram e interagem com os aprendizes.
Os agentes semiótico e colaborador auxiliam nas atividades relacionadas a toda a sociedade.
O sistema possui um agente diagnóstico e um agente mediador para cada aluno e um agente semiótico e colaborador para toda a sociedade.
A Figura 32 apresenta a arquitetura do sistema multiagente.
O AgenteMediadoré o agente de interface entre o aprendiz e o sistema.
A diferença centralentre o agente mediador e o agente diagnóstico é que o primeiro realiza todas as tarefas de interface e comunicação com o usuário, como também monitora as interações entre os usuários.
O agente mediador, além de a função de mediar a interação do aprendiz com o agente diagnóstico, deveráauxiliar na predição de comportamentos deste usuário permitindo determinar as melhores ações a serem executadas para auxiliar no processo de aprendizagem do aluno.
O AgenteSemiótico é responsávelpelo envio de conteúdos para mediar a aprendizagem do aluno.
Para que o agente mediador possa cumprir o seupapel, é necessária a intervenção de conteúdos adequados.
Estes conteúdos são compostos por elementos semióticos, constituídos principalmente por a linguagem e signos.
Estes elementos são introduzidos por o agente semiótico para auxiliar na atividade cognitiva do aluno a fim de solucionar um dado problema, fazer uma análise oupesquisa.
O AgenteColaboradorconhece todos os agentes da sociedade, como também estes têm conhecimento da sua existência.
É capaz de estabelecer a integração da sociedade e construir o modelo do grupo de aprendizes.
Uma das atividades desse agente é investigar a existência de um outro aprendiz que tenha, além de o conhecimento necessário, crenças e traços de personalidade que propiciem a melhor cooperação entre os aprendizes.
Como o foco do trabalho de Andrade é o agente diagnóstico, ele serámais detalhado a seguir.
O agente diagnóstico possui, na sua modelagem, o conceito de Zona de Desenvolvimento Proximal (ZDP) defendida por Vygotsky, visando transformar habilidades potenciais em habilidades reais, buscando expandir a capacidade de desenvolvimento sócio-cognitivo do aluno.
De acordo com, o sistema possui um agente diagnóstico, com a função de descrever diagnósticos cognitivos, modelando o grupo e sugerindo táticas pedagógicas.
Inicialmente, quando a tarefa é proposta para o grupo, o agente diagnóstico deve criar um mecanismo para avaliar quais habilidades estão na região do Core ouque estão na região ZDP.
Para iniciar o processo de diagnóstico, este agente deve propor alguma tarefa para o aprendiz ou o grupo variando o graude dificuldade.
Este agente define enquanto um agente do tipo tutor é capaz de observar o desenvolvimento realdo aprendiz e propor atividades que tornem as suas habilidades o mais próximo possíveldo nívelpotencial (habilidades que estão ainda fora de as aptidões do aluno, mas ele consegue realizar com o auxílio de um outro indivíduo mais capacitado).
Como esse agente deve monitorar especificamente um aprendiz, haverápara cada aprendiz um agente diagnóstico que iráatuar na ZDPdo aluno.
O agente diagnóstico trabalha o espaço entre crescimento espontâneo do aluno, sendo mediado por especialista que pode ser o professor, outro aluno mais experiente ouo próprio agente diagnóstico.
Para identificar a ZDP do aluno, o agente de diagnóstico deverádelimitar a área de aprendizagem em estudo e delimitar um domínio de conhecimento específico, para então definir seus desempenhos e competências.
Segundo Andrade, o agente diagnóstico é responsávelpor estimular àquelas funções do aprendiz que ainda não amadureceram, mas que estão em processo de desenvolvimento.
Suas funções são as seguintes:
Diagnosticar as habilidades e dificuldades dos alunos;
Variar o graude seucontrole nas formas de organização das atividades conjuntas;
Propor estratégias de ensino adaptadas ao perfildo aluno;
10 Core:
Identifica o conhecimento que se possui, quais as habilidades que o aprendiz jápossui.
Alterar gradualmente os apoios, ajudas ou suportes na realização de determinadas tarefas;
Aumentar o tempo dedicado a certos tipos de tarefas e diminuir o tempo dedicado a outras, de acordo com o desenvolvimento dos alunos;
Modificar as formas de ajuda/ suporte oferecidos, em função de as dificuldades dos alunos, desde a atuação dirigida até o oferecimento de pistas (dicas), que vão permitir o trabalho autônomo do aluno;
Observar os conhecimentos que jásão familiares;
Promover níveis diferentes de intervenção no momento em que o aluno jádominar certos conhecimentos;
Sugerir atividades através de um processo gradual com constantes ajustes e modificações.
Um dos papéis do agente diagnóstico é estabelecer as táticas de ensino de acordo com uma estratégia pedagógica apropriada ao aluno.
Para auxiliar na escolha da melhor estratégia e tática que se adeque ao aluno, o agente diagnóstico deve acessar e atualizar o modelo do aprendiz, identificando suas habilidades e deficiências, que seráconstruído por a observação das ações do usuário.
De esta maneira, ele é capaz de indicar a extensão na qualo aluno pode expandir- se, acessando e modificando este modelo.
O conhecimento sobre o aluno pode ser adquirido através de testes de aprendizagem, do modelo de aluno com as habilidades e dificuldades, como por exemplo seus questionamentos freqüentemente solicitados.
Além desses elementos citados, o modelo cognitivo do aluno controlado por o agente diagnóstico leva em conta aspectos qualitativos da interação, focalizando as informações relevantes àinteração social.
Conforme O modelo do aluno contém as seguintes informações:
Andrade exemplifica o modelo de interação, destacando que inicialmente, o agente diagnóstico estádiretamente relacionado com o agente colaborador (social) e com a crença que a interação com este agente pode favorecer o desenvolvimento intelectualdo aluno.
Para favorecer o processo de internalização por o aluno, o agente diagnóstico deverá interagir com o agente mediador permitindo trabalhar o conteúdo, as estratégias e as táticas de forma gradualpara que o aluno possa percorrer todo o ciclo de internalização:
Faseum: Assistência com um mediador mais capacitado;
Fasedois: Auto-assistência do aluno;
Fasetrês: Internalização;
Fasequatro: Desautomatização, surgimento de novos conflitos.
Reinício do ciclo.
A fim de que essas fases ocorram, quando o agente diagnóstico verificar que o aluno possui uma deficiência em algum conteúdo que estáestudando e verificar a necessidade da assistência de um outro aprendiz, ele enviaráuma mensagem ao agente colaborador solicitando o nome de um aprendiz que possua o perfiladequado.
Quando o agente colaborador identificar essa pessoa, ele enviaráuma mensagem ao agente diagnóstico.
O agente diagnóstico repassaráessa mensagem ao agente mediador que indicaráao aprendiz nomes de outros colegas com quem ele pode interagir para troca de idéias e explicações.
A especificação do Agente Diagnóstico realizou- se a partir de a aplicação do formalismo proposto na seção 3.2, do capítulo 3.
Juntamente com a aplicação do formalismo é utilizada a metodologia inicialproposta para especificar os requisitos das propriedades básicas dos agentes de usuário.
A partir de isso, a seguir apresenta- se a especificação realizada acerca de o Agente Diagnóstico, mostrando, passo- a- passo, a sua construção através da metodologia.
Como primeiro passo, definiu- se alguns requisitos que expressam as funções e ações do Agente Diagnóstico.
Sendo que, parte destes foram especificados conforme o formalismo proposto.
No entanto, os requisitos que não atendem o formalismo proposto, foram especificados de acordo com seugraude exigência.
Os requisitos que compõem o Agente Diagnóstico e que representam sua funcionalidade são expostos a seguir, classificados de acordo com cada propriedade:
Requisitos de Aprendizagem O Agente Diagnóstico deve:
Agente Mediador;
Requisitos de Autonomia O Agente Diagnóstico deve:
Requisitos de Personalização O Agente Diagnóstico deve:
Mediador; Assistência (suporte);
A partir de isso, apresentam- se os esquemas organizados da seguinte forma:
Um esquema para cada requisito, sendo que, estes são detalhados de acordo com sua ocorrência, através da aplicação da metodologia.
Observa- se que, o aprendiz, o qualé referenciado no trabalho de é representado por o atributo usuário nessa especificação.
Em este segundo passo, considerando os requisitos apontados no primeiro passo, definiu- se os esquemas que representam esses requisitos.
Partindo- se de situações mais particulares para, posteriormente, agrupar- las em esquemas mais genéricos, os quais dão uma visão generalizada do Agente Diagnóstico em si.
Inicialmente, pode- se dizer que a especificação dos agentes em geralutiliza a formalização padrão, conforme proposto no capítulo3.
De essa forma, os esquemas utilizados inicialmente, neste estudo de caso, são:
Entidade, Ações, Objeto e Agente, pois estes são padronizados para qualquer formalização inicialde um sistema.
A Figura 33 apresenta o esquema Agente de Usuário, que neste estudo de caso representa o AgenteDiagnóstico.
Também neste estudo de caso o aprendiz, é representando por usuário, como segue no formalismo proposto.
Este esquema foi criado anteriormente (seção esquemas Agente, Aprendizagem, Autonomia, Personalização, EstadoAmbiente e apresenta um conjunto de ações (variávelA), um conjunto de crenças (variávelB), um conjunto de desejos (variávelD) e um conjunto de intenções (variávelI).
Declara- se ainda as variáveis, conjunto de ações.
Em seguida, é exposto o esquema Aprendizagem, que insere os esquemas que representam cada requisito associado a esta propriedade:
ObservarUsuario, EstadoDiagnostico, Região e Região (vide Figura 34).
Em a Figura 35, é apresentado o esquema Autonomia representando a propriedade de Autonomia, que insere os esquemas que representam os requisitos associados a essa propriedade, tais como, AcoesAgente, AcoesUsuario, AutonomiaUsuario, EstadoZDP, EstadoCore e EstadoCore.
A Figura 36, representa o esquema Personalização (propriedade de personalização), sendo que, este inclui os esquemas EstadoUsuario e EstadoUsuario, expressando os requisitos associados àessa propriedade.
Em a Figura 37, é apresentado o esquema EstadoZDP, que expressa o requisito Registrar as dificuldades do aprendiz no módulo ZDP.
Em este esquema é inserido o esquema AcoesUsuario.
As variáveis declaradas são:
A como um conjunto de ações, dificuldadescomo um conjunto de dificuldades, suportedo tipo Suporte e, usuario do tipo Usuario.
Como predicados apresentam- se que, para todo usuário, tendo como base o seuconjunto de ações e dificuldades, deve- se atualizar seuestado no nívelZDP, num determinado tempo.
Assim o agente é capaz de fornecer algum tipo de suporte ao usuário.
Estes pertencem ao conjunto de crenças do agente.
O esquema EstadoZDP representado na Figura 38, mostra a mudança de estado do esquema da Figura 37, onde EstadoZDP', representa o novo estado e possui uma função atualizadif, que atualiza as dificuldades do usuário, através do esquema EstadoUsuario que retorna as dificuldades deste.
Assim, nos predicados tem- se a mudança de estado das dificuldades, onde as dificuldades do usuário são atualizadas no EstadoUsuário.
O esquema EstadoCore, expressa o requisito Registrar as habilidades do aprendiz no módulo Core.
Como este esquema possui semelhanças com o esquema EstadoZDP, também é inserido o esquema AcoesUsuario.
As variáveis declaradas são:
A como um conjunto de ações, habilidadescomo um conjunto de habilidades e, usuario do tipo Usuario.
O predicado desse esquema (pertence ao conjunto de crenças do agente) mostra que, para todo usuário, baseando- se no seuconjunto de ações e habilidades, deve- se atualizar seuestado no nívelCore, num determinado tempo.
O esquema EstadoCore representado na Figura 40, mostra a mudança de estado do esquema da Figura 39, onde EstadoCore', representa o novo estado e possui uma função atualizahab, a qualatualiza as habilidades do usuário, através do esquema EstadoUsuario que retorna as habilidades deste.
Também ocorre a mudança de estado das habilidades, onde as habilidades do usuário são atualizadas no EstadoUsuário.
Em seguida, são utilizados esquemas considerados como padrão na formalização proposta neste trabalho.
De essa forma, somente são citados os esquemas (da seção 3.2) que constituem a seqüência.
Estes esquemas são os seguintes:
EstadoUsuario, que representam os requisitos de Registrarhabilidadesoudificuldadesno modelo do aprendiz;
Seo aprendiz estáem ZDP, o agenteavalia ashabilidadesesugerea elealgum níveldeassistência (suporte) e;
Registrar o histórico de suporte em futuras interações;
AcoesAgente, representando o requisito de Registrarasinteraçõesdo AgenteDiagnóstico com outros agentes;
E os demais esquemas são necessários para a complementação da especificação.
O esquema ObservarUsuario, representa o requisito Verificar se o aprendiz estáou não no nívelZDP a fim de sugerir táticas e escalar o Agente Mediador.
Este insere o esquema EstadoUsuário, representando o novo estado do usuário, o qualtambém representa a observação que o agente faz em relação a o usuário.
Consequentemente, o novo conjunto de objetivos atuais do usuário são declarados como pertencentes ao conjunto de crenças e a função proximo, que retorna o próximo conjunto de ações do usuário e o ambiente também pertencem ao conjunto de crenças.
A Figura 42 representa o esquema EstadoRegião, que representa também o requisito Verificar se o aprendiz estáou não no nívelZDP a fimde sugerir táticas e escalar o Agente Mediador.
Em este esquema é definida a região em que o aluno se enquadra:
ZDP ou Core.
Assim, primeiramente, são declaradas as variáveis, ZDP (conjunto de dificuldades), Core (conjunto de habilidades), a um conjunto de ações e, nome (nome do agente) do tipo Agente.
Como predicado tem- se que, para toda região, representada por R, pertencente ao aluno, o agente deve consultar as ações a serem realizadas, que compõe a região ZDPoua região Core.
O esquema EstadoRegião representado na Figura 43, mostra a mudança de estado do esquema da Figura 42.
Ouseja, as mudanças de região (ZDP ouCore) que ocorrem com o usuário.
O EstadoRegiao', representa o novo estado e possui uma função atualizareg, que atualiza a região em que estáo usuário, através do esquema EstadoUsuario que retorna a região desse.
Também ocorre a mudança de estado da região (ZDPouCore), onde a região em que se encontra o usuário é atualizada no EstadoUsuário.
A Figura 44 (esquema EstadoDiagnostico) define o requisito Registrar o diagnóstico do aprendiz, que insere os esquemas AcoesAgente e EstadoUsuario, e declara as variáveis:
Nome do tipo Agente e, usuario do tipo Usuario.
Expressando que, para todo aluno pertencente a ZDP ouCore, o agente deve processar o diagnóstico (pertencente ao conjunto de desejos do agente).
O esquema EstadoDiagnostico representado na Figura 45, mostra a mudança de estado do esquema da Figura 44, que possui uma função atualizadiag, atualizando o diagnóstico do usuário, através do esquema EstadoUsuario retornando o diagnóstico desse.
Ocorre ainda a mudança de estado do diagnóstico, onde o diagnóstico do usuário é atualizado no EstadoUsuário.
A partir de a definição dos esquemas, apresenta- se na Figura 46, a estruturação dos esquemas no estudo de caso, conforme as inclusões realizadas.
Os esquemas em grifo são os novos esquemas criados em relação a o formalismo proposto.
As linhas (no sentido de cima para baixo) indicam a inclusão de esquemas em outros (herança de características de outros esquemas), conforme jámencionado na Figura 31.
Terceiro Passo ­é o Agrupamento de esquemas similares (eliminação de redundâncias) Um exemplo de agrupamento que foi realizado neste estudo de caso ocorreu com as seguintes táticas:
Registrar as dificuldades do aprendiz no módulo ZDP Se o aprendiz estáem ZDP, o agente avalia as habilidades e sugere a ele algum nívelde assistência (suporte) Estes requisitos são expressos num só esquema.
O esquema EstadoZDP, conforme exemplo mostrado na Figura 47.
Assim, a medida em que os esquemas são desenvolvidos e trabalhados, pode haver a necessidade de agrupamento, devido o número muito grande de esquemas que um sistema pode gerar e também por facilitar o entendimento e evitar duplicidades.
A Tabela 4, apresenta as variáveis utilizadas no estudo de caso, com seus respectivos tipos utilizados e determinando a funcionalidade que possuem na formalização.
As variáveis que constam são aquelas que não foram referenciadas na Tabela 2 (seção 3.2, capítulo 3).
Os símbolos em Z utilizados no estudo de caso com seu respectivo significado são mencionados na Tabela 3, da seção 3.2, capítulo 3.
Ainda persistem problemas na questão de especificação de agentes de usuário.
Em SMAs, necessita- se definir as propriedades dos agentes a fim de melhor especificar sua arquitetura, decorrente de seu papeldentro da sociedade.
De essa forma, verificamos a necessidade de especificar os agentes de usuário, a partir de os requisitos associados às propriedades identificadas/ selecionadas como básicas.
Para este trabalho a questão de pesquisa norteadora determinada foi:
Quais as propriedades básicas do agente de usuário devem ser consideradas quando de a definição de uma linguagempara especificação formalde agentes?
Pode- se responder esta questão através da proposta desenvolvida neste trabalho.
Inicialmente, através de levantamento bibliográfico rigoroso, detectou- se a necessidade de determinar algumas propriedades básicas para agentes de usuário:
Aprendizagem, autonomia e personalização.
Levando- se em consideração que os agentes de usuário ainda são uma área com estudos iniciais e, na literatura não existe um conceito clássico nem um conjunto de propriedades definidas especialmente para esses.
Consequentemente, decidiu- se abordar os requisitos associados a estas propriedades.
Ou seja, definiu- se para cada propriedade um conjunto de requisitos que melhor representam cada uma.
De essa forma, chegou- se àconclusão de que é necessário o levantamento de requisitos para que seja realizada uma posterior especificação oumodelagem.
A partir de os requisitos, necessitou- se propor uma metodologia iniciala fim de facilitar a especificação dos requisitos associados a cada propriedade.
Esta metodologia é composta de uma seqüência de passos que também deixa mais claro o entendimento da especificação.
Através dessa, é possívelrefinar a especificação/ formalismo, de talforma que fique sucinto e de fácil aplicação em diversos sistemas com a tecnologia de agentes de usuário.
No entanto, salienta- se que, é uma metodologia iniciale necessita de aprimoramentos para ser considerada completa.
Com as propriedades, requisitos e metodologia definidos, aplicou- se o formalismo Zsobre os requisitos, utilizando- se a metodologia, e chegou- se a um conjunto de esquemas capazes de expressar tais requisitos.
Assim, a partir desse conjunto de esquemas propostos foi necessário validar- los a fim de verificar sua aplicabilidade num sistema com a utilização de agentes de usuário.
Em este estudo de caso foi possíveldetectar que, além de os requisitos inicialmente definidos, cada aplicação possui um conjunto em particular de requisitos, os quais, às vezes, não se aplicam sobre os requisitos apresentados nas propriedades.
Assim, são definidos requisitos complementares.
A partir de aí, cada um desses é representado através de esquemas, e, como mencionado na metodologia, estes podem ser agrupados de acordo com adaptabilidade e semelhança, a fim de evitar redundâncias.
Assim, outra contribuição que o trabalho traz está ligada ànotação e a utilização do formalismo Zpara esta finalidade.
Levando em consideração esses aspectos descritos, acredita- se que todos os objetivos considerados na seção 1.5, do capítulo 1, foram contemplados e, inclusive, este foram complementados com a idéia de propor, além de outras coisas, uma metodologia inicialpara a especificação formalde requisitos.
Considera- se, também, que se alcançaram os resultados esperados para esta pesquisa.
Contudo, as alternativas e propostas aqui apresentadas são promissoras e podem ser ampliadas.
Acredita- se que a proposta é uma contribuição também para o projeto de pesquisa MASP, como jácolocado na seção 1.6 do capítulo 1.
A proposta apresenta facilidade para unir trabalhos existentes, tanto trabalhos utilizando representação através de estados mentais quanto trabalhos utilizando representação visual.
Em trabalhos que utilizam modelagem AUML torna fácila migração pois, os esquemas em Z são de fácilmapeamento para classes em AUML.
E, como pode ser visto, em Z é permitida a inclusão de esquemas em outros esquemas, tendo assim, semelhança com herança em AUML.
Jáem representação através de estado mentais, a arquitetura BDI descreve o processamento interno do agente utilizando estados mentais, juntamente com lógica multimodal.
Esses conceitos também são de fáciladaptação a especificação Z, onde, o conjunto de crenças, desejos e intenções pode ser expresso para especificar um agente, utilizando lógica de 1ª ordem.
De essa forma, a especificação formalrealizada possibilita que os trabalhos referenciados com outros trabalhos do projeto MASP que seguem na mesma linha, sejam possíveis de serem migrados para essa especificação.
Uma das maiores dificuldades encontradas foi a não disponibilização de um ambiente próprio para construção dos esquemas em Z. De essa forma, a construção dos esquemas demandou bastante tempo pois, sem uma ferramenta própria, não foi possívelfacilitar a construção dos esquemas e verificar com precisão e em pouco tempo a consistência do conjunto de esquemas.
Outra dificuldade apresentada foi em relação a os aspectos funcionais onde é preciso representar como o agente iráse comportar e não dizer quala função do agente, o que, na verdade, são os requisitos.
Ouseja, dessa forma é possívelentender como é difícilentender como é difícilmodelar os requisitos dos agentes.
A contribuição ainda não abordada foi a extensão do modelo proposto por Luck, o qualespecifica agente utilizando o formalismo Z, mas apresenta somente a propriedade de autonomia e, neste trabalho, além de essa, são consideradas as propriedades de aprendizagem e personalização.
Com essas considerações apontadas espera- se que o formalismo seja diferenciado no grupo de pesquisa tanto em novas pesquisas quanto na extensão de pesquisas jáexistentes.
Trabalhosfuturos Como todo trabalho de mestrado, algumas questões se mantém em aberto e o resultado possui um conjunto de limitações, em função de prazo estabelecido para o desenvolvimento deste.
A validação da especificação exigiria continuar o projeto e implementação do agente especificado, a fim de verificar a utilidade do formalismo como ferramenta para guiar o desenvolvimento e conferir se os requisitos estão satisfeitos.
Assim, um trabalho futuro é a continuidade do estudo de caso.
Durante o estudo de caso, não foi modelada a interação entre o agente diagnóstico e o grupo, em função de o prazo.
Em a versão atualdo trabalho de Andrade, as atribuições relativas ao grupo estão vinculadas ao agente diagnóstico, mas é possívelque migrem no futuro para o agente social.
Durante o trabalho, pensou- se em especificar como ocorrem as mudanças de estado do agente através de esquemas.
No entanto, constatou- se que os requisitos não fazem referência direta a essas mudanças de estado, portanto os esquemas correspondentes não foram incluídos na modelagem final.
A questão do quanto se deve detalhar os requisitos é ainda um tema ainda em aberto.
A metodologia proposta ainda é um esboço (metodologia inicial), precisando ser submetida a mais experimentação.
No entanto, háindícios de que a proposta pode ser generalizada para outras classes de agentes (agentes de domínio, de infra-estrutura, etc).
Acreditamos que essa extensão pode ser realizada no futuro, ainda no contexto do projeto MASP.
