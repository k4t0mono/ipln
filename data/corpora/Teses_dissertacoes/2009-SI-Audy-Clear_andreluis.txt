As organizações de desenvolvimento de software estão sempre buscando aumentar a qualidade dos produtos de software, para isto é necessário que os processos sejam bem definidos e possam ser controlados.
Entretanto, algumas dificuldades são encontradas como:
Processos voltados totalmente para a atividade produtiva e com pouco ou nenhuma atividade gerencial, má gerência de projetos ou ausência de gerência, não atendimento a expectativa dos envolvidos.
Estes processos devem permitir uma metodologia de gerência de projetos, que descreva as atividades importantes para garantir a qualidade do projeto com um todo, incluindo o produto e o processo.
Em este contexto, esta pesquisa propõe um processo integrado utilizando uma metodologia de gerência de projetos e um processo de desenvolvimento de software na área de gerenciamento de escopo.
Contribuindo para que atividades gerenciais e produtivas sejam executadas de forma integrada e utilizando a área de gerenciamento de escopo para determinar corretamente como estas atividades devem ser desenvolvidas no projeto de modo a se produzir as entregas previstas.
Assim, apresenta- se o processo e um exemplo de uso, para que possa auxiliar os gestores na tomada de decisão e planejamento, execução e controle dos projetos.
Palavra-Chave: Gerência de Projetos.
Processo de Desenvolvimento de Software.
Processo Integrado.
A globalização, as tecnologias emergentes, a reestruturação das organizações e a busca por a eficiência na gestão empresarial tornam o gerenciamento de projetos assunto fundamental para a continuidade e sobrevivência das organizações.
Normalmente o projeto é executado por pessoas que vão consumir horas, estão limitadas por prazo, custo e escopo.
Como em qualquer empreendimento, as atividades precisam ser planejadas, programadas e, durante a execução, precisam ser controladas.
Um projeto é bem-sucedido quando atende (ou excede) às expectativas dos stackholders, que são aquelas pessoas que investiram e participam do projeto.
São as pessoas que tem algo a ganhar ou a perder, como consequência do projeto.
O incremento no volume de projetos, aliado à necessidade de resultados mais rápidos, com maior qualidade e menor custo, somente reforçam a importância do bom gerenciamento do escopo em projetos, como forma de garantir que todo o trabalho necessário para a conclusão bem-sucedida de um projeto esteja descrito e aprovado para que possa ser controlado e as necessidades dos clientes atendidas.
Atualmente, os projetos são aplicados nas mais diversas áreas como:
Construção, engenharia, indústria, setor automotivo, finanças, militar, marketing e tecnologia da informação.
Segundo relatório benchmarking da Integração Nacional relativo ao gerenciamento de projetos no Brasil em 2007, a tecnologia da informação é a área que mais está utilizando metodologias de gerenciamento de projetos no cenário nacional representando uma fatia de 28% do total dos setores pesquisados.
Grande parte destas organizações de tecnologia da informação tem como atuação o desenvolvimento de software definindo modelos para o gerenciamento de projetos.
Algumas das características mais desejadas destes modelos incluem a habilidade de capturar as melhores práticas de desenvolvimento de software, um bom nível de flexibilidade (a fim de lidar com diferentes tipos de projetos), bem como um bom apoio à gestão.
A falta de metodologias específicas para a gerência de projetos de software, o aumento da complexidade e do número de projetos nas organizações contribuem para o aumento dos problemas relacionados a gestão de projetos,.
Em a maioria das vezes o processo de desenvolvimento está baseado em modelos e guias voltados para a gerência de projetos como o Project Management Body of Knowledge Guide (PMBOK) ou Projects In Controlled Environments (PRINCE2), e, que não tratam especificamente de processos de desenvolvimento de software.
Há casos em que a produção utilizando processos de desenvolvimento de software, atende parcialmente as práticas relacionadas à gerência de projetos como o Rational Unified Process (RUP) ou Object-oriented Process, Environment and Notation (OPEN).
O desenvolvimento de produtos de software requer o planejamento e a execução de atividades definidas de acordo com o escopo do projeto, onde é necessário lidar tanto com assuntos gerenciais quanto técnicos.
Entretanto, a maioria dos modelos ou guias voltados para a gerência de projetos não se dirigem especificamente a processos de desenvolvimento de software.
Além disso, os processos de desenvolvimento de software, por sua vez, geralmente fornecem apenas um conjunto de práticas que atendem a determinadas atividades e fluxos relacionados à gerência de projetos.
Em esta pesquisa apresentamos uma proposta de integração entre a gerência de projeto e o processo de desenvolvimento de software na área de gerenciamento de escopo.
Utilizamos o PMBOK como um modelo que apresenta uma visão gerencial no desenvolvimento de projetos e o RUP que oferece uma perspectiva de produção no processo de desenvolvimento de software.
Para a integração dos mesmos desenvolveuse estudos de mapeamento e compatibilidade em ambos, a fim de que as atividades gerenciais pudessem ser aplicadas ao processo de desenvolvimento de software sem interferir nas suas principais características técnicas.
Para verificar a viabilidade da proposta utilizamos a ferramenta Rational Method Composer (RMC), permitindo acesso a biblioteca do RUP que possui todo plugin de método e processo, em o qual pode- se incorporar as melhores práticas de gerenciamento de projetos do modelo PMBOK na área de gerenciamento de escopo ao processo de desenvolvimento de software.
Motivação Em percebe- se que o gerenciamento de projetos em geral e especificamente na área de software, apresenta um alto índice de falhas, ou seja, os projetos não são concluídos ou tem seus prazos e custos extrapolados.
O desenvolvimento de produtos de software requer o planejamento e a execução de atividades definidas de acordo com o escopo do projeto, onde é necessário lidar tanto com assuntos gerenciais quanto técnicos.
E complementa ainda que, a fim de se obter um processo mais detalhado para o gerenciamento de projetos de software, é necessário aplicar os conhecimentos de gestão de projetos aos processos de desenvolvimento do software.
No entanto o que se vê é cada vez mais surgir no mercado empresas de desenvolvimento de software, de todos os tamanhos e com sua especificidade delimitada, muitas utilizam seus processos individuais durante o desenvolvimento.
Muitas empresas não investem na padronização de suas atividades, o que acaba deixando cada integrante da equipe de desenvolvimento livre para implantar o seu próprio método de desenvolvimento.
A não utilização de uma padronização, tanto em código quanto em processo e documentação, acaba por transformar um sistema num conjunto de módulos, sendo que cada módulo só é entendido por o seu próprio autor.
Além disso, a não padronização no processo de desenvolvimento de software compromete aspectos relacionados à qualidade e confiabilidade do projeto Desta forma, muitos pesquisadores trabalham na investigação dos fatores de sucesso dos projetos, tais como a definição de produto, qualidade de execução e técnicas de gerência de projetos.
Mesmo existindo diversos artigos na literatura que enfatizam a importância do uso de processos de softwares bem definidos nas organizações, parece não haver estudos suficientes para suprir a carência no quesito de gerência de projetos destes processos.
As empresas na área de tecnologia percebem a necessidade de implantar projetos que consigam alcançar os resultados esperados, dentro de o prazo, custo e escopo ao qual foram planejados respeitando assim as restrições do projeto e trabalhando para diminuir índice de fracasso dos mesmos, consequentemente aumentando o índice de satisfação dos clientes.
Entre as medidas tomadas por estas organizações, a principal foi a utilização de metodologias de gerenciamento de projetos como, e.
Percebe- se que o uso das boas práticas contribuiu de forma satisfatória para melhorar os índices de sucesso de projetos, e, mas ainda há muito a se aperfeiçoar nesta área.
Diante de isto, destaca- se a iniciativa de várias metodologias em incluir disciplinas, responsabilidades, métodos e atividades relacionadas ao gerenciamento de projetos na área de software.
Entre elas citamos o RUP, bem sucedido na criação e manutenção de sistemas de software.
Com estas iniciativas surgiu a necessidade de mapear e integrar os padrões existentes, entre eles o RUP e o PMBOK,, e.
De essa forma, com estes esforços para criação de processos de gerenciamento de projetos de software, há uma contribuição para a probabilidade de um aumento no sucesso dos projetos nas organizações.
Várias pesquisas estão sendo realizadas quanto a unificação de padrões de gerenciamento de projetos e processos de desenvolvimento de software,, e.
Com o objetivo final de se aplicar estes processos em qualquer tipo de organização de desenvolvimento de software.
Faz- se necessário ainda especificar um processo que forneça a integração dos conhecimentos de gestão de projetos na área de gerenciamento de escopo aos processos de desenvolvimento do software, servindo de apoio ao gerente de projetos em suas atividades.
A questão de pesquisa abordada neste estudo foi a seguinte:
Como gerenciar escopo de projetos de software utilizando os padrões RUP e PMBOK num mesmo processo de forma integrada?»
Objetivos Definida a questão de pesquisa, definiu- se o objetivo geral e os objetivos específicos deste trabalho, os quais a seguir são apresentados.
O estudo realizado neste trabalho tem como objetivo geral propor um processo de gerenciamento de escopo baseado no RUP para projetos de softwares, inserindo contribuições da área de conhecimento do PMBOK de gerência de escopo ao conteúdo das disciplinas do RUP.
Contribuindo para a integração das melhores práticas de gestão ao processo de produção e auxiliando os gerentes de projetos durante o planejamento de projetos de software.
Como objetivos específicos têm- se:
Aprofundar o estudo teórico entre a gerência de projetos e os processos de desenvolvimento de software e o gerenciamento de escopo de projetos.
Identificar características e compatibilidades entre o modelo de gerência de escopo PMBOK e o processo de desenvolvimento de software RUP, mapeando estas características entre modelo e processo.
Integrar o modelo de gerência de escopo PMBOK na área de gerenciamento de escopo nas disciplinas do processo de desenvolvimento de software RUP;
Publicar a proposta de processo integrado utilizando o RMC;
Apresentar um exemplo de uso com a proposta integrada.
Estrutura do Trabalho Este trabalho está dividido em três partes:
Fundamentação teórica, proposta de integração do processo RUP+ PMBPOK na gerência de escopo no desenvolvimento de software e um exemplo de uso do processo.
O capítulo 2 apresenta a fundamentação teórica necessária para um bom entendimento do trabalho, onde são esclarecidos aspectos de gerência de projetos, processos de desenvolvimento de software, gerenciamento de escopo em projetos, além de as características principais e fundamentais do modelo de gerenciamento de projetos PMBOK e o processo de desenvolvimento de software RUP.
Em o capítulo 3 estão apresentados alguns trabalhos encontrados na literatura que relacionam- se à análise da gestão de projetos nos processos de desenvolvimento de software, bem como a integração destes, que de alguma forma contribuiram para esta proposta.
Já no capítulo 4 ilustramos a metodologia de pesquisa adotada para a elaboração deste trabalho.
Em o capítulo 5 demonstramos o mapeamento entre o PMBOK e o RUP realizado através de um estudo de suas características e um análise de suas compatibilidades.
A ferramenta de publicação e personalização de processos utilizada para configuração e desenvolvimento do processo é apresentada no capítulo 6.
Para então no capítulo 7 mostrarmos a integração do processo, quais atividades e papéis envolvidos, ilustrarmos como a integração foi publicada utilizando o RMC.
Em o capítulo 8 demonstramos um exemplo de uso com a integração proposta por este trabalho.
E finalmente no capítulo 9 são apresentadas as conclusões, contribuições e os trabalhos futuros.
Para se ter um bom entendimento da proposta de integração que este trabalho apresenta é necessária a compreensão dos fundamentos teóricos e das metodologias básicas em os quais a proposta esta embasada.
Assim características na gerais seção sobre projetos apresentamos gerência conceitos de projetos.
Demonstramos uma pesquisa relacionada a problemas na gerência de projetos, na seção 2.2 o conceito sobre processo de desenvolvimento de software, na seção 2.3 apresentamos o RUP e o PMBOK e finalmente na seção 2.4 gerenciamento de escopo de projetos.
Gerência de Projetos Antes de estudar os conceitos de gerência de projeto é importante compreender o conceito e o surgimento dos projetos.
Muitos afirmam que os primeiros projetos podem ser considerados a construção das Pirâmides do Egito, a Muralha da China, a Torre de Babel, entre outras grandes construções que são tão conhecidas.
Para o gerenciamento de projeto moderno, considera- se o início de tudo com o projeto Manhattan1, com isto podemos afirmar que nos primeiros dias o gerenciamento de projetos foi utilizado para projetos grandes, de complexa pesquisa e desenvolvimento.
Depois disto a construção de refinarias, represas e grandes complexos, foram o palco para o gerenciamento de projetos.
Com esta divulgação companhias do setor privado de construção perceberam que além de grandes construções o gerenciamento de projeto poderia ser utilizado por exemplo em centros menores, como condomínios residenciais.
Além de isto, com o uso de gerenciamento de projetos várias organizações também encontraram uma oportunidade de negócio para seus empreendimentos, utilizando então este modelo para o planejamento e execução de sapatos a turbinas de avião.
Passados alguns anos notou- se o crescimento e utilização de gerenciamento de projetos por parte de empresas prestadoras de serviços de uma forma rápida, hoje encontramos as técnicas de gerenciamento de projetos para uma festa de casamento ou uma cerimônia de colação de grau na universidade.
Importante ressaltar o uso frequente de gerenciamento de projetos para o desenvolvimento de softwares e conjunto de aplicações das mais diversas áreas da tecnologia atual.
O ponto de partida para compreensão de gerência de projetos é o entendimento do conceito de projeto.
Conforme, um projeto é um empreendimento temporário com o objetivo de produzir um único produto ou serviço.
Geralmente é direcionado a alcançar um resultado específico e envolve a execução coordenada de atividades inter-relacionadas.
De acordo com a definição de, um projeto é um esforço temporário realizado para criar um produto ou serviço único, diferente de alguma maneira, de todos os outros produtos e serviços, com início e fim definidos, que utiliza recursos, é dirigido por pessoas e obedece a parâmetros de custo, tempo e qualidade.
Projeto é um empreendimento não repetitivo, caracterizado por uma sequência clara e lógica de eventos, com início, meio e fim, que se destina a atingir um objetivo claro e definido.
Por usa vez, sendo conduzido por pessoas dentro de parâmetros predefinidos de tempo, custo, recursos envolvidos e qualidade, como afirma.
Um projeto pode ser definido como um empreendimento único, com início e fim determinados, que utiliza recursos e é conduzido por pessoas, visando atingir objetivos predefinidos.
Desta forma o define o projeto com as seguintes características: --
Temporário: Significa que todos os projetos possuem um início e um final definidos.
O final é alcançado quando os objetivos do projeto tiverem sido atingidos.
Quando se tornar claro que os objetivos do projeto não serão ou não poderão ser atingidos, ou quando não existir mais a necessidade do projeto e ele for encerrado.
Temporário não significa necessariamente de curta duração sendo assim muitos projetos duram vários anos.
Em todos os casos, no entanto, a duração de um projeto é finita.
Projetos não são esforços contínuos.
Além disso, geralmente o termo temporário não se aplica ao produto, serviço ou resultado criado por o projeto.
A maioria dos projetos é realizado, para criar um resultado duradouro.
Por exemplo, um projeto para erguer um monumento nacional criará um resultado que deve durar séculos.
Os projetos também podem com freqüência ter impactos sociais, econômicos e ambientais, intencionais ou não, com duração muito mais longa que a dos próprios projetos.
A natureza temporária dos projetos pode também ser aplicada a outros aspectos do esforço:
A oportunidade ou janela do mercado geralmente é temporária:
Alguns projetos têm um prazo limitado durante o qual seu produto ou serviço deve ser gerado;
A equipe do projeto, como uma unidade de trabalho, raramente sobrevive ao projeto:
Uma equipe criada com o único objetivo de realizar o projeto realizará esse projeto e, em seguida, será desfeita e seus membros serão realocados quando o projeto for concluído. --
Produtos, serviços ou resultados exclusivos:
Um projeto cria entregas exclusivas, que são produtos, serviços ou resultados.
Os projetos podem criar:
Um produto ou objeto produzido, quantificável e que pode ser um item final ou um item componente;
Uma capacidade de realizar um serviço, como funções de negócios que dão suporte à produção ou à distribuição;
Um resultado, como resultados finais ou documentos.
Por exemplo, um projeto de pesquisa desenvolve um conhecimento que pode ser usado para determinar se uma tendência está presente ou não, se um novo processo irá beneficiar a sociedade.
A singularidade é uma característica importante das entregas do projeto.
Por exemplo, muitos milhares de prédios de escritórios foram construídos, mas cada prédio em particular é único, pois tem proprietário diferente, projeto diferente, local diferente, construtora diferente, etc..
A presença de elementos repetitivos não muda a singularidade fundamental do trabalho do projeto. --
Elaboração progressiva:
É uma característica de projetos que integra os conceitos de temporário e exclusivo.
Elaboração progressiva significa desenvolver em etapas e continuar por incrementos.
Por exemplo, o escopo do projeto será descrito de maneira geral no início do projeto e se tornará mais explícito e detalhado conforme a equipe do projeto desenvolver um entendimento mais completo dos objetivos e das entregas.
A elaboração progressiva não deve ser confundida com aumento do escopo.
A gerência de projetos é responsável por o controle da realização dos objetivos do projeto através da aplicação de um conjunto de técnicas e ferramentas.
Conforme o, o gerenciamento de projetos é a aplicação de conhecimento, habilidades, ferramentas e técnicas às atividades do projeto a fim de atender aos seus requisitos.
O gerenciamento de projetos é realizado através da aplicação e da integração dos seguintes processos de gerenciamento de projetos:
Iniciação, planejamento, execução, monitoramento e controle, e encerramento.
O gerente de projetos é a pessoa responsável por a realização dos objetivos do projeto.
Gerenciar um projeto inclui:
Identificação das necessidades;
Estabelecimento de objetivos claros e alcançáveis;
Balanceamento das demandas conflitantes de qualidade, escopo, tempo e custo;
Adaptação das especificações, dos planos e da abordagem às diferentes preocupações e expectativas das diversas partes interessadas.
Os gerentes de projetos frequentemente falam da &quot;restrição tripla», escopo, tempo e custo do projeto, no gerenciamento de necessidades conflitantes do projeto.
A qualidade do projeto é afetada por o balanceamento desses três fatores.
Projetos de alta qualidade entregam o produto, serviço ou resultado solicitado dentro de o escopo, no prazo e dentro de o orçamento.
A relação entre esses fatores ocorre de tal forma que se algum dos três fatores mudar, pelo menos um outro, provavelmente será afetado.
Os gerentes de projetos também gerenciam projetos em resposta a incertezas.
Um risco do projeto é um evento ou condição incerta que, se ocorrer terá um efeito positivo ou negativo em pelo menos um dos objetivos do projeto.
Conforme, citando, os principais problemas da gerência de projetos estão relacionados à falta de processos adequados e padronizados de gestão.
Sendo que os principais motivos do insucesso nos projetos estão relacionados à falta de procedimentos, metodologias e padrões de gestão.
Em, é feito um comparativo utilizando- se como base os relatórios de Chaos, e, que é uma pesquisa significativa, possuindo estatísticas que traduzem um período de 10 anos no gerenciamento de projetos aplicados na área da Tecnologia da Informação, período em que houve uma ascensão e consolidação da gestão de projetos como uma disciplina formal.
Observamos na Figura 1, que o percentual das taxas de projetos executados com sucesso praticamente dobraram, passando de 16,2% em 1994 para 29% em 2004, e o número de projetos que falharam ou não foram completados diminuíram de 31,1% em 1994 para 18% em 2004.
Os projetos considerados arriscados (projetos que geralmente ultrapassam a estimativa de custo, prazo e escopo, causando enorme prejuízos aos clientes e organizações envolvidas) permanece na taxa em torno de 53%.
Verifica- se que utilizar processos para gerenciamento de projetos pode, seguramente, ser ponto fundamental para o sucesso do projeto, mas ainda está longe de ser a solução de todos os problemas.
As principais razões para ainda termos um número expressivo de projetos com orçamento, tempo e escopo excedidos, podem ser elencados como:
A mudança ou especificação incompleta de requisitos;
A falta de recursos humanos ou financeiros;
As expectativas irrealistas dos stakeholders;
A falta de comunicação dos membros da equipe, que os leva a trabalhar de forma não integrada;
Ausência de processos bem definidos na organização.
As organizações devem continuar investindo em metodologias de gerenciamento de projetos e em modalidades de qualidade de processo para que o número de projetos bem sucedidos seja aceitável, para que futuramente possamos alcançar um nível de excelência.
Segundo, para que a evolução dos modelos possa reduzir a quantidade de falhas no desenvolvimento de software é importante o investimento em métodos de gerenciamento mais amplos e na profissionalização das organizações.
Os problemas que afetam desenvolvimento de software podem ser caracterizados a partir de uma série de perspectivas diferentes.
Entre os principais problemas, pode- se citar a especificação de requisitos, capacitação de pessoal, qualidade e teste de software, planejamento e gerência de projeto, cumprimento dos prazos, trabalho em equipe, e muitos outros, conforme.
Processo de desenvolvimento de software De acordo com, um processo de desenvolvimento de software pode ser definido como um conjunto de atividades, métodos, práticas e transformações que as pessoas empregam para desenvolver e manter o software e os produtos associados (por exemplo, planos de projeto, documentos de projeto, design, código, casos de teste, manual do usuário).
O processo de desenvolvimento de software, segundo, é o conjunto de atividades parcialmente ordenadas que um projeto deve seguir para desempenhar alguma tarefa.
Esta tarefa deve ter como objetivo atingir uma determinada meta e geralmente está associada ao desenvolvimento de um ou mais produtos.
Projetos de software podem envolver um pequeno grupo ou centenas de pessoas.
Sua duração pode variar de algumas semanas a vários anos.
Podem envolver um único setor da organização, toda a organização, ou até ultrapassar os limites da organização, abrangendo todas as entidades externas que participam nos processos a serem automatizados e contemplados no sistema.
Por estes motivos os processos de desenvolvimento de software podem apresentar grande complexidade, e desta forma, possibilitar diversas alternativas de execução de suas atividades, e por isso estão ganhando importância e fazendo parte das atividades estratégicas das organizações.
A importância da utilização de um processo de desenvolvimento de software padrão deve- se ao fato de que este atua como um guia para a execução de todos os projetos dentro de uma organização.
Assim, muitos processos ou guias tais como RUP, SCRUM, Extreme Programming (XP), Microsoft Solutions Framework (MSF) e OPEN estão sendo utilizados como base no desenvolvimento de processos de desenvolvimento de software padrão nas organizações.
Mesmo assim, os processos de desenvolvimento de software identificando o importância das atividades relacionadas à gestão, não tratam de forma adequada os aspectos relacionados à gerência de projeto.
Modelo de gestão de projetos e de processo de desenvolvimento de software Em esta seção apresenta- se uma visão geral do PMBOK e do processo de desenvolvimento de software RUP.
Destacando características e conceitos inerentes a cada um, já que ambos são os objetos de estudo para a proposta de integração que este documento propõe.
O PMBOK ­ conjunto de conhecimentos em gerenciamento de projetos ­, publicado por o Project Management Institute (PMI), tem- se consolidado como a principal referência para a gestão de projetos em nível mundial.
Em os Estados Unidos é reconhecido por o American National Standards Institute (ANSI) como padrão para gestão de projetos desde 1999.
O objetivo principal do PMBOK é identificar e descrever os conhecimentos e práticas &quot;normalmente aceitos «sobre a gestão de projetos, bem como estabelecer um vocabulário comum para essa área.
&quot;Normalmente aceitos», significa que há consenso sobre o valor e a utilidade das práticas e dos conhecimentos descritos.
Conforme o, o principal objetivo do PMBOK é identificar um subconjunto dos conhecimentos sobre gerência de projetos que seja reconhecido, genericamente, como sendo uma coleção de boas práticas.
O PMBOK, porém, não é um processo em seu sentido estrito, pois não determina quais são as ações e nem indica como estas devem ser executadas para o correto desenvolvimento de um projeto.
A organização ou os gerentes de projetos podem dividir projetos em fases para oferecer melhor controle gerencial com ligações adequadas com as operações em andamento da organização executora.
Coletivamente, essas fases são conhecidas como o ciclo de vida do projeto.
Muitas organizações identificam um conjunto específico de ciclos de vida para serem usados em todos os seus projetos.
O ciclo de vida do projeto define as fases que conectam o início de um projeto ao seu final.
A transição de uma fase para a outra dentro de o ciclo de vida de um projeto em geral envolve e normalmente é definida por alguma forma de transferência técnica ou entrega.
As entregas de uma fase geralmente são revisadas, para garantir que estejam completas e exatas, e aprovadas antes que o trabalho seja iniciado na próxima fase.
Os ciclos de vida do projeto geralmente definem:
Que trabalho técnico deve ser realizado em cada fase;
Quando as entregas devem ser geradas em cada fase e como cada entrega é revisada, verificada e validada;
Quem está envolvido em cada fase;
Como controlar e aprovar cada fase.
Embora muitos ciclos de vida do projeto possuam nomes de fases semelhantes com entregas semelhantes, poucos ciclos de vida são idênticos.
Alguns podem ter quatro ou cinco fases, mas outros podem ter nove ou mais.
O término e a aprovação de um ou mais produtos caracteriza uma fase do projeto.
Chamamos genericamente de produto o resultado mensurável e verificável do trabalho, como uma especificação, um relatório de estudo de viabilidade, um documento de projeto detalhado ou um protótipo.
Alguns produtos podem corresponder ao processo de gerenciamento de projetos, enquanto outros são os produtos finais ou componentes dos produtos finais para os quais o projeto foi concebido.
Os produtos e, portanto, as fases fazem parte de um processo geralmente sequencial criado para garantir o controle adequado do projeto e conseguir o produto ou serviço desejado, que é o objetivo do projeto, conforme a Figura 2.
Uma fase do projeto em geral é concluída com uma revisão do trabalho realizado e dos produtos para definir a aceitação, se ainda é necessário algum trabalho adicional ou se a fase deve ser considerada encerrada.
O gerenciamento de projetos é a aplicação de conhecimento, habilidades, ferramentas e técnicas às atividades do projeto a fim de atender a seus requisitos.
O gerenciamento de projetos é realizado através de processos, usando conhecimento, habilidades, ferramentas e técnicas do gerenciamento de projetos que recebem entradas e geram saídas.
Esta seção identifica e descreve os cinco grupos de processos de gerenciamento de projetos necessários para qualquer projeto.
Esses cinco grupos de processos possuem dependências claras e são executados na mesma sequência em todos os projetos, conforme Figura 3.
Os cinco grupos de processos são:
Grupo de processos de iniciação:
Define e autoriza o projeto ou uma fase do projeto.
Grupo de processos de planejamento:
Define e refina os objetivos e planeja a ação necessária para alcançar os objetivos e o escopo para os quais o projeto foi realizado.
Grupo de processos de execução:
Integra pessoas e outros recursos para realizar o plano de gerenciamento do projeto para o projeto.
Grupo de processos de monitoramento e controle:
Mede e monitora regularmente o progresso para identificar variações em relação a o plano de gerenciamento do projeto, de forma que possam ser tomadas ações corretivas quando necessário para atender aos objetivos do projeto.
Grupo de processos de encerramento:
Formaliza a aceitação do produto, serviço ou resultado e conduz o projeto ou uma fase do projeto a um final ordenado.
Os grupos de processos de gerenciamento de projetos estão ligados por os objetivos que produzem.
Em geral, as saídas de um processo se tornam entradas para outro processo ou são entregas do projeto.
Além disso, os grupos de processos raramente são eventos distintos ou únicos.
Eles são atividades sobrepostas que ocorrem em diversos níveis de intensidade durante todo o projeto.
A Figura 4 ilustra como os grupos de processos interagem e o nível de sobreposição em momentos diferentes dentro de um projeto.
Se o projeto estiver dividido em fases, os grupos de processos irão interagir dentro de uma fase do projeto e também poderão atravessar várias fases de ele.
As áreas de conhecimento em gerenciamento de projetos podem ser encontradas na Figura 5, totalizando um número de 9 diferentes áreas de conhecimento, logo abaixo podemos identificar estas áreas seguidas de uma breve descrição das atividades que a compõem.
Gerenciamento de integração do projeto:
Descreve os processos e as atividades que integram os diversos elementos do gerenciamento de projetos, que são identificados, definidos, combinados, unificados e coordenados dentro de os grupos de processos de gerenciamento de projetos.
Gerenciamento do escopo do projeto:
Descreve os processos envolvidos na verificação de que o projeto inclui todo o trabalho necessário, e apenas o trabalho necessário, para que seja concluído com sucesso.
Gerenciamento de tempo do projeto:
Descreve os processos relativos ao término do projeto no prazo correto.
Gerenciamento de custos do projeto:
Descreve os processos envolvidos em planejamento, estimativa, orçamentação e controle de custos, de modo que o projeto termine dentro de o orçamento aprovado.
Gerenciamento da qualidade do projeto:
Descreve os processos envolvidos na garantia de que o projeto irá satisfazer os objetivos para os quais foi realizado.
Gerenciamento de recursos humanos do projeto:
Descreve os processos que organizam e gerenciam a equipe do projeto.
Gerenciamento das comunicações do projeto:
Descreve os processos relativos à geração, coleta, disseminação, armazenamento e destinação final das informações do projeto de forma oportuna e adequada.
Gerenciamento de riscos do projeto:
Descreve os processos relativos à realização do gerenciamento de riscos num projeto.
Gerenciamento de aquisições do projeto:
Descreve os processos que compram ou adquirem produtos, serviços ou resultados, além de os processos de gerenciamento de contratos.
Conforme, as principais competências que os gerentes de projeto devem desenvolver para a execução dos processos gerenciais são descritas nas áreas de conhecimento do PMBOK.
Estas 9 áreas de conhecimento conforme a Figura 6 organizam os 44 processos de gerenciamento de projetos dentro de os grupos de processos que são:
Iniciação, planejamento, execução, monitoramento e controle e encerramento.
Entre os grupos de processos e seus processos, as saídas dos processos estão relacionadas e possuem um impacto nos outros grupos de processos.
Quando um projeto é dividido em fases, os grupos de processos são normalmente repetidos dentro de cada fase, durante toda a vida do projeto, para conduzir o projeto de modo eficaz.
O Rational Unified Process (RUP) é um processo de engenharia de software.
Ele fornece uma abordagem disciplinada para assumir tarefas e responsabilidades dentro de uma organização de desenvolvimento.
Seu objetivo é assegurar a produção de software de alta qualidade que satisfaça as necessidades de seus usuários finais dentro de o prazo e orçamento previsíveis.
O RUP, é por si só, um produto de software.
É desenvolvido e mantido por a IBM Rational Software, sendo modular e automatizado, e toda a sua metodologia é apoiada por diversas ferramentas de desenvolvimento de software integradas.
É também uma estrutura de processo que pode ser adaptada e estendida para compor as necessidades de uma organização que o esteja adotando.
Capturando muitas das melhores práticas no desenvolvimento moderno de software de forma satisfatória para uma grande faixa de projetos e organizações.
Em particular, cobre as seis práticas descritas abaixo:
Desenvolver software iterativamente:
Dado o tempo gasto para desenvolver um software grande e sofisticado, não é possível definir o problema e construir o software num único passo.
Os requerimentos irão frequentemente mudar no decorrer de o desenvolvimento do projeto, devido a restrições de arquitetura, necessidades do usuário ou a uma maior compreensão do problema original.
Alterações permitem ao projeto ser constantemente refinado, além de assinalarem itens de alto risco do projeto como as tarefas de maior prioridade.
De forma ideal, ao término de cada iteração haverá uma versão executável, o que ajuda a reduzir o risco de configuração do projeto, permitindo maior retorno do usuário e ajudando ao desenvolvedor manter- se focado.
Gerenciar requisitos:
O Gerenciamento de requisitos no RUP está concentrado em encontrar as necessidades do usuário final por a identificação e especificação do que ele necessita e identificando aquilo que deve ser mudado.
Isto traz como benefícios:
A correção dos requisitos gera a correção do produto, as necessidades dos usuários são encontradas;
As características necessárias serão incluídas, reduzindo o custo de desenvolvimentos posteriores.
Usar arquiteturas baseadas em componente:
Arquitetura baseada em componentes cria um sistema que é facilmente extensível, intuitivo e de fácil compreensão e promove a reusabilidade de software.
Um componente freqüentemente se relaciona com um conjunto de objetos na programação orientada ao objeto.
Arquitetura de software aumenta de importância quando um sistema se torna maior e mais complexo.
O RUP foca na produção da arquitetura básica nas primeiras iterações.
Esta arquitetura então se torna um protótipo nos ciclos iniciais de desenvolvimento.
A arquitetura desenvolve- se em cada iteração para se tornar a arquitetura final do sistema.
O RUP também propõe regras de projeto e restrições para capturar regras de arquitetura.
Por o desenvolvimento iterativo é possível identificar gradualmente componentes os quais podem então ser desenvolvidos, comprados ou reusados.
Modelar visualmente o software:
Abstraindo sua programação do seu código e representando- a usando blocos de construção gráfica constitui- se de uma forma efetiva de obter uma visão geral de uma solução.
Usando esta representação, recursos técnicos podem determinar a melhor forma para implementar a dado conjunto de interdependências lógicas.
Isto também constrói uma camada intermediária entre o processo de negócio e o código necessário através da tecnologia da informação.
Um modelo neste contexto é uma visualização e ao mesmo tempo uma simplificação de um projeto complexo.
O RUP especifica quais modelos são necessários e porque.
A Linguagem modelagem unificada (UML) pode ser usada para modelagem de casos de uso, diagrama de classes e outros objetos.
O RUP também discute outras formas para construir estes modelos.
Verificar continuamente a qualidade do software:
O RUP ajuda no planejamento do controle da qualidade e cuida da sua construção em todo processo, envolvendo todos os membros da equipe.
Nenhuma tarefa é especificamente direcionada para a qualidade;
O RUP assume que cada membro da equipe é responsável por a qualidade durante todo o processo.
O processo foca na descoberta do nível de qualidade esperado e provê testes nos processos para medir este nível.
Controlar mudanças no software:
Em todos os projetos de software, mudanças são inevitáveis.
O RUP define métodos para controlar, rastrear e monitorar estas mudanças.
O RUP também define espaços de trabalho seguros (secure workspaces), garantindo que um sistema de engenharia de software não será afetado por mudanças em outros sistemas.
Este conceito é bem aderente com arquiteturas de software baseados em componentes.
Conforme a Figura 7, o RUP contém elementos em duas dimensões distintas:
Estática e dinâmica.
A primeira dimensão representa o aspecto estático do processo:
Sua descrição em termos de componentes de processo, atividades, fluxos, artefatos e papéis, são agrupados em workflows.
A segunda dimensão representa o aspecto dinâmico do processo como é ordenado, e é expresso em termos de ciclos, fases, iterações e marcos.
Um processo descreve quem está fazendo o quê, como e quando.
O RUP é representado usando quatro elementos primários de modelagem:
Papéis (quem), atividades (como), artefatos (o quê) e fluxos (quando).
Papéis: Um papel define o comportamento e as responsabilidades de um indivíduo ou grupo de indivíduos que trabalham juntos como uma equipe.
O comportamento é expresso em termos de atividades que o papel desempenha, e cada papel é associado a um conjunto de atividades coesas.
Em este sentido, &quot;coesas «significa as atividades melhor executadas por uma pessoa.
Normalmente são expressas as responsabilidades de cada papel em relação a certos artefatos que o papel cria, modifica ou controla.
Um papel desempenha um ou mais papéis e é dono de um conjunto de artefatos.
Importante salientar que os papéis não são indivíduos;
Ao contrário, eles descrevem como os indivíduos deveriam se comportar no negócio e as responsabilidades de cada um.
Atividades: Uma atividade é uma unidade de trabalho que um indivíduo naquele papel pode ser pedido a desempenhar, e isso produz um resultado significante no contexto do projeto.
Toda atividade deve ser atribuída a um papel.
A atividade tem um propósito claro, normalmente expresso em termos de criar ou modificar artefatos.
A granulação de uma atividade geralmente é de algumas horas a alguns dias.
Normalmente envolve um papel e afeta um ou só um número pequeno de artefatos.
Uma atividade deveria ser utilizável como elemento de planejamento e progresso;
Se for muito pequeno, será negligenciado, se for muito grande, o progresso terá que ser expresso em termos de as partes da atividade.
As atividades podem ser repetidas várias vezes no mesmo artefato, especialmente de uma iteração para a outra, quando o sistema é refinado ou expandido.
Atividades repetidas podem ser desempenhadas por o mesmo papel, mas não necessariamente por o mesmo indivíduo.
Artefatos: Um artefato é um pedaço de informação que é produzida, modificada ou usada por um processo.
Os artefatos são os produtos tangíveis do projeto:
As coisas que o projeto produz ou usa enquanto trabalha para o produto final.
Os artefatos são usados como entrada por papéis para desempenhar uma atividade e são o resultado ou a saída de tais atividades.
Os artefatos possuem diferentes formas de apresentação, tais como modelos (modelo de caso de uso ou modelo de projeto), elementos do modelo (classe, caso de uso), documentos (caso de uso do negócio ou documento de arquitetura de software), códigos-fonte e executáveis.
Os artefatos também podem ser compostos de outros artefatos.
Fluxos: Um fluxo é uma sequência de atividades que produz um resultado de valor observável.
Em termos de UML, um fluxo pode ser expresso como um diagrama de sequência, de colaboração ou de atividade.
Em o RUP podemos dividir os fluxos em dois grupos principais:
Fluxos centrais (core workflows), que são as disciplinas do processo, e os detalhes de fluxo (workflow detail), que são os fluxos internos de cada disciplina.
É importante ressaltar que um fluxo não pode ser interpretado literalmente como sendo um conjunto de passos em o qual um indivíduo irá executar de forma automática e mecânica.
Há nove fluxos centrais no processo RUP, e eles representam uma partição de todos os papéis e atividades em grupos lógicos:
Áreas de interesse e disciplinas.
Os fluxos centrais (disciplinas) são divididos em seis na engenharia e três no suporte.
Sendo as disciplinas de engenharia: --
Modelagem de Negócios; --
Requisitos; -- Análise e Design; --
Implementação; -- Teste; --
Implantação. Sendo as disciplinas de suporte: --
Gerenciamento de Configurações e Mudanças; -- Gerenciamento de Projetos; --
Ambiente. Um projeto baseado no RUP passa por quatro fases:
Iniciação, Elaboração, Construção e Transição.
Cada fase contém uma ou mais iterações.
Através desta característica iterativa, cada fase é realizada com base no resultado da fase anterior, de maneira a refinar o sistema até o momento em que o produto final esteja completo.
E ainda destaca, cada fase no processo RUP atravessará diversas iterações.
Uma iteração é um laço completo do desenvolvimento tendo por resultado uma liberação (interna ou externa) de um produto executável, um subconjunto do produto final sob o desenvolvimento, que cresce de forma incremental de iteração em iteração até se transformar no sistema final.
Fase Iniciação: A Iniciação é significativa para novos esforços de desenvolvimento, onde é necessário tratar de riscos de negócios e de requisitos importantes, antes da continuação do projeto.
Para projetos que visam melhorias num sistema existente, a fase de Iniciação é mais rápida, mas ainda se concentra em assegurar que o projeto seja compensatório e que seja possível fazer- lo.
Durante a Iniciação, é criado o caso de negócios para construção do software.
A Visão é um artefato chave produzido durante a Iniciação.
É uma descrição de alto nível do sistema.
Ela informa a todos qual é o sistema e também pode informar que o utilizará, por que ele será utilizado, quais recursos devem ser apresentados e quais restrições existem.
Muitas vezes, a Visão contém os recursos críticos fornecidos por o software para o cliente.
Fase Elaboração: A meta da fase de Elaboração é criar a linha de base2 para a arquitetura do sistema, a fim de fornecer uma base estável para a parte principal do esforço de design e de implementação da fase de Construção.
A arquitetura se desenvolve a partir de um exame dos requisitos mais significativos (aqueles que têm grande impacto na arquitetura do sistema) e de uma avaliação de risco.
A estabilidade da arquitetura é avaliada através de um ou mais protótipos de arquitetura.
Fase Construção: A meta da Construção é concluir o desenvolvimento do sistema.
A fase de Construção é, de certa forma, um processo de manufatura, em que a ênfase está no gerenciamento de recursos e controle de operações para otimizar custos, programações e qualidade.
Em esse sentido, a intenção do gerenciamento passa por uma transição do desenvolvimento de propriedade intelectual durante a Iniciação e Elaboração, para o desenvolvimento de produtos implantáveis durante a Construção e a Transição.
Uma situação inicial de referência de planejamento normalmente utilizada para comparação do planejado com o real.
Largamente utilizada na literatura de projetos.
Fase Transição: O foco da Transição é assegurar que o software esteja disponível para seus usuários finais.
A fase de Transição inclui testar o produto em preparação para release e ajustes pequenos com base no feedback do usuário.
Em esse momento no ciclo de vida, o feedback do usuário precisa principalmente ser focalizado no ajuste do produto, na configuração, na instalação e nos problemas de utilidade.
Gerenciamento de Escopo Como enfatiza, a área de conhecimento do gerenciamento do escopo é aquela que trata, principalmente, da definição e controle do que está e do que não está incluído no projeto, ou seja, a fundamentação do planejamento do projeto.
Serve para a criação de sua linha de base, onde estão contidos os processos de gerenciamento de projeto necessários para que possamos nos assegurar de que o projeto inclui a descrição de todo o trabalho necessário para uma conclusão bem-sucedida.
Assim, o trabalho não descrito no plano de gerenciamento do escopo do projeto não faz parte do projeto.
A declaração de escopo é fundamental, já que o gerente precisa ter uma visão muito clara do produto ou serviço a ser desenvolvido, incluindo suas características, premissas assumidas, restrições, etc..
O que não faz parte do escopo também precisa estar bem claro na declaração, para facilitar o entendimento do projeto e viabilizar um diagrama de rede coerente com a realidade do produto a ser desenvolvido.
Em a definição formal do, o gerenciamento do escopo do projeto inclui os processos necessários para garantir que o projeto inclua todo o trabalho necessário, e somente ele, para terminar o projeto com sucesso.
O gerenciamento do escopo do projeto trata principalmente da definição e controle do que está e do que não está incluído no projeto.
Fica muito difícil a definição de atividades sem o conhecimento total do escopo pretendido.
Não é impossível, porque isso pode variar de projeto para projeto, mas fica visivelmente dificultada, dado que logicamente é preciso saber antes o que se deseja obter para depois se planejar como conseguir.
Comparado a 2006, prazo, escopo e custo continuam sendo em 2007, as principais áreas consideradas nas metodologias de gerenciamento de projetos, assim como integração e aquisições continuam sendo as áreas menos consideradas.
Conforme a Figura 8 demonstra esta situação.
Isto demonstra uma preocupação das organizações com o escopo e com o tempo no gerenciamento de projetos, são áreas que merecem uma atenção especial por influenciarem diretamente no sucesso do projeto, bem como no custo.
A falha em definir exatamente o que será feito provavelmente irá impactar o custo (e talvez o lucro) de um projeto, ou pior, resultar num projeto que produz entregas que o cliente se recusa a aceitar.
Conforme, não somente o gerenciamento do tempo, mas todas as áreas do gerenciamento de projetos têm no escopo do projeto a base para seu planejamento.
Mas no caso específico do gerenciamento do tempo, e principalmente no momento da definição das atividades, essa influência é determinante.
Um dos aspectos de maior relevância num projeto é o tempo dedicado ao planejamento do mesmo e, em particular, à caracterização do escopo.
Em este ponto, atividades aparentemente simples são menosprezadas ou desconsideradas.
É a etapa em a qual busca- se garantir que todos os envolvidos, desde o contratante até cada um dos projetistas, tenham um conhecimento comum e preciso daquilo que deverá ser feito para gerar o produto desejado e nada mais do que o produto desejado.
Em outras palavras, um conhecimento das necessidades e expectativas do cliente.
Ainda conforme, espera- se que os projetos tenham um objetivo claro e entendido por todas as partes interessadas.
A realidade, no entanto, pode ser bem diferente.
Muitos projetos iniciam com uma ideia vaga do resultado final ou com apenas uma definição superficial.
Assim, muitos projetos falham devido a a má definição do escopo.
De acordo com a pesquisa de, a Figura 9 demonstra os problemas que ocorrem com mais frequência nos projetos das organizações, observa- se que o não cumprimento de prazos (66%), problemas de comunicação (64%) e mudanças constantes de escopo (62%) são os principais problemas relatados por as organizações.
Através deste estudo da, é possível verificar a importância do planejamento e da definição de escopo para sucesso nos projetos.
Com estes resultados referentes aos problemas teremos também, atrasos no cronograma, mudanças de requisitos e especificações, falta de recursos humanos, custos acima de o esperado, produtos e/ ou serviços que não satisfazem o cliente, muitas vezes pode levar ao cancelamento do projeto.
O escopo do produto não deve ser confundido com o escopo do projeto.
Com uma certa frequência esta diferença é ignorada.
O término do escopo do projeto é medido em relação a o plano de gerenciamento do projeto, à declaração do escopo do projeto, e à Estrutura Analítica do Projeto (EAP) e ao dicionário da EAP associados a ele, mas o término do escopo do produto é medido em relação a os requisitos do produto.
O gerenciamento do escopo do projeto precisa estar bem integrado aos outros processos da área de conhecimento, de forma que o resultado do trabalho do projeto seja a entrega do escopo do produto especificado.
O escopo do produto é composto por a especificação técnica que descreve o conjunto de funcionalidades e o desempenho desejado para o produto, e deve ser elaborado antes do escopo do projeto.
Já conforme, o escopo do produto está relacionado ao conjunto de características e funções que descrevem um produto, serviço ou resultado, seja ele parcial ou final.
Está intimamente relacionado aos requisitos e especificações fornecidos por o cliente, os quais podem ser mais ou menos detalhados.
Muitas vezes ele é desenvolvido por a equipe do projeto junto ao próprio cliente.
Em a definição de, o escopo do projeto descreve as principais atividades a serem executadas, é a base para elaboração do cronograma e do orçamento.
Algumas vezes é necessário especificar o que o projeto não vai produzir, particularmente quando existe algo que as pessoas possam presumir como sendo parte do projeto.
Por exemplo, no desenvolvimento de um sistema, pode ou não fazer parte do escopo do projeto o treinamento dos usuários, a geração de manuais e a instalação dos sistemas nos computadores dos usuários.
O escopo do projeto refere- se ao trabalho que deve ser realizado para entregar um produto, serviço ou resultado com as características e funções especificadas.
Para, em geral, o resultado de um projeto é um único produto, que pode incluir componentes auxiliares, cada um de eles com seu próprio escopo do produto separado, mas interdependente.
Por exemplo, se você for contratado para desenvolver um avião, umas das entregas é o próprio avião, porém existem outras entregas que são necessárias para o sucesso do empreendimento, como um hangar para fabricar o avião, simulador, treinamento, dados etc..
Os processos de gerenciamento do escopo do projeto, e suas ferramentas e técnicas associadas, variam por área de aplicação, são normalmente definidos como parte do ciclo de vida do projeto e são documentados no plano de gerenciamento do escopo do projeto.
A declaração do escopo detalhada do projeto aprovada, a EAP e o dicionário da EAP associados a ela, constituem a linha de base do escopo do projeto O gerenciamento do escopo envolve processos necessários para garantir que os vários elementos do projeto estejam apropriadamente coordenados.
Desenvolver estes processos envolve decidir entre objetivos e alternativas que competem entre si de modo a atender ou exceder as necessidades e expectativas das partes interessadas.
Gerenciar o escopo envolve desenvolver os seguintes processos que serão detalhados nas próximas seções deste documento:
Planejamento do escopo;
Definição do escopo;
Criação da estrutura analítica do projeto;
Verificação do escopo;
Controle do escopo.
Estes processos do gerenciamento do escopo interagem entre si e também com processos de outras áreas de conhecimento.
Cada processo pode envolver o esforço de uma ou mais pessoas ou grupos de pessoas, com base nas necessidades do projeto, ocorre pelo menos uma vez em todos os projetos e também numa ou mais fases do projeto, se ele estiver dividido em fases.
Embora os processos estejam apresentados aqui como componentes distintos com interfaces bem definidas, na prática eles podem se sobrepor e interagir de maneiras não detalhadas aqui.
A definição e o gerenciamento do escopo do projeto influenciam o sucesso total do projeto.
Cada projeto exige um balanceamento cuidadoso de ferramentas, fontes de dados, metodologias, processos e procedimentos, e de outros fatores, para garantir que o esforço gasto nas atividades de determinação do escopo esteja de acordo com o tamanho, complexidade e importância do projeto.
O plano de gerenciamento do escopo do projeto é uma ferramenta de planejamento que descreve como a equipe irá definir o escopo do projeto, e desenvolver a declaração do escopo detalhada do projeto, definir e desenvolver a estrutura analítica do projeto, verificar o escopo do projeto e controlar o escopo do projeto.
A determinação de planejar disciplinadamente o escopo é constantemente desafiada por o contexto de negócios das organizações.
Esse ambiente, pleno de oportunidades e desafios estratégicos, operacionais e técnicos, ao mesmo tempo que restringe, passa a exigir tempo dedicado à aplicação efetiva das boas práticas em gerenciamento de projetos, como um mecanismo eficaz de geração de soluções &quot;em o escopo estabelecido, dentro de o prazo e do orçamento contratados e de acordo com os níveis de qualidade acordados».
O objetivo fundamental do esforço de planejamento deve ser o de prover uma orientação consistente e realista a respeito de o que deve ser gerado por o projeto e de como isso deve ser executado e controlado.
A preparação de uma declaração do escopo detalhada do projeto é essencial para o sucesso do projeto e é desenvolvida a partir de as principais entregas, premissas e restrições, que são documentadas durante a iniciação do projeto, na declaração do escopo preliminar do projeto.
Durante o planejamento, o escopo do projeto é definido e descrito mais especificamente porque se conhecem mais informações sobre o projeto.
Necessidades, desejos e expectativas das partes interessadas são analisados e convertidos em requisitos.
As premissas e restrições são analisadas para garantir que estejam completas, adicionando- se mais premissas e restrições conforme necessário.
A equipe do projeto e outras partes interessadas, que possuem uma visão mais clara da declaração do escopo preliminar do projeto, podem realizar e preparar as análises Conforme, antes de simplesmente &quot;sair fazendo», o objetivo central do gerente e da equipe na definição do escopo do projeto deve ser:
A partir de as definições preliminares sobre o projeto, registradas no termo de abertura, prover esclarecimento paulatino, no menor tempo possível, sobre o que fazer, de que forma entregar- lo e como medir os resultados do escopo do projeto.
Em um equilíbrio satisfatório entre as restrições-chave do empreendimento e o nível de incerteza com o qual os envolvidos sentem- se confortáveis para tomar decisões.
O documento que consolida essas informações é a declaração de escopo.
Segundo, na definição do escopo deve estar claro a estratégia e as táticas que serão utilizadas.
A estratégia está associada à abordagem que será utilizada para realizar o projeto, como por exemplo, utilizar análise essencial ou UML para especificação de um sistema.
A tática indica que passos serão dados para implementar a estratégia ou abordagem:
Elaborar o modelo de dados, documentação de casos de uso e outras atividades associadas ao desenvolvimento.
A EAP é uma decomposição hierárquica orientada à entrega do trabalho a ser executado por a equipe do projeto, para atingir os objetivos do projeto e criar as entregas necessárias.
A EAP organiza e define o escopo total do projeto.
A EAP subdivide o trabalho do projeto em partes menores e mais facilmente gerenciáveis, em que cada nível descendente da EAP representa uma definição cada vez mais detalhada do trabalho do projeto.
É possível agendar, estimar custos, monitorar e controlar o trabalho planejado contido nos componentes de nível mais baixo da EAP, denominados pacotes de trabalho A organização das entregas por meio de uma EAP vem sendo fortemente utilizadas nos projetos de sucesso em todo o mundo, já que permite o esclarecimento à equipe do projeto, fornecedores, clientes, patrocinadores e demais interessados sobre o que se espera em termos de resultados do projeto e, consequentemente, do que será monitorado e controlado.&amp;&amp;&amp;
O gerenciamento do conhecimento aplicado a um projeto deve coletar, armazenar e disponibilizar as informações históricas e as lições aprendidas em outros projetos, viabilizando o aprendizado com o passado.
Assim, uma EAP de um projeto específico poderá ser utilizada parcialmente em outro projeto semelhante.
Os passos seguintes são a representação de uma estratégia para criação de uma EAP, não indicando ser uma abordagem obrigatória e única:
Escrever o nome do projeto no primeiro nível da EAP;
Iniciar o segundo nível com uma entrega denominada gerenciamento do projeto;
Acrescentar as fases do ciclo de vida ou maiores entregas no segundo nível;
Acrescentar no segundo nível, ao final, uma entrega denominada fechamento do projeto;
Acrescentar as entregas (produtos) e subprodutos (entregas parciais) que as compõem;
Decompor as entregas parciais até um nível de detalhe que viabilize o planejamento e controle em termos de tempo, custo, qualidade, risco, atribuição de responsabilidade e contratação, se for o caso;
Revisar continuamente a EAP, refinando- a quando necessário, até que a mesma esteja apta a ser aprovada;
É importante salientar, que é possível escolher uma estratégia onde o projeto seja decomposto por área geográfica ou partes componentes e não por fases de ciclo de vida.
Abaixo apresentamos na Figura 11 um exemplo com os passos para a criação de uma EAP e os seus respectivos níveis.
Não existe uma regra que defina em quantos níveis o gerente de projetos deverá decompor sua EAP.
O importante é que o nível adotado seja suficiente para especificar o que será gerado no projeto, de forma que as partes interessadas possam compreender e participar ativamente em suas atribuições.
Em a Figura 12, apresentamos um exemplo de como poderia ser organizada a EAP para o desenvolvimento de uma versão de um software.
É importante lembrar do documento complementar da EAP, que é o dicionário da EAP, fundamental para especificar cada pacote de trabalho definido na EAP.
Apresentando uma breve especificação do pacote de trabalho e seu critério de aceitação.
Ações de monitoramento e verificação do escopo são aquelas que exigem o acompanhamento e certificação das condições e dos resultados que são obtidos durante a execução do projeto, bem como a sua comparação com o que foi, anteriormente, planejado.
O enfoque dado a essas ações é sobre o resultado obtido durante a implementação do projeto.
Esse resultado desejado nos projetos, é representado por a linha de base, a referência, estabelecida após os ajustes durante o esforço de planejamento.
As atividades do grupo de processos de controle e monitoramento, em as quais encontramos o desenvolvimento das ações de &quot;verificação do escopo», ocorrem concomitantemente às atividades de execução do plano do projeto.
A verificação do escopo é o processo de obtenção da aceitação formal por as partes interessadas do escopo do projeto terminado e das entregas associadas.
A verificação do escopo do projeto inclui a revisão das entregas para garantir que cada uma de elas foi terminada de forma satisfatória.
Se o projeto foi finalizado antes do término (abortado), o processo de verificação do escopo do projeto deve determinar e documentar o nível e a extensão do término.
A verificação do escopo difere do controle da qualidade porque a verificação do escopo trata principalmente da aceitação das entregas, enquanto o controle da qualidade trata principalmente do atendimento aos requisitos de qualidade especificados para as entregas.
Em geral, o controle da qualidade é realizado antes da verificação do escopo, mas esses dois processos podem ser realizados em paralelo As entregas estabelecidas no plano do projeto e no contrato é uma regra que deve ser respeitada por o gerente do projeto.
Um dos mecanismos para que isso possa ser mais bem conduzido está no estabelecimento, ainda na fase de planejamento do projeto, das entregas do projeto.
Elas devem ser claramente definidas para que a sua aferição possa ser feita de maneira indubitável.
Uma forma prática para a identificação das entregas é por meio de a EAP, que é orientada a resultados.
Assim, os pacotes de trabalho devem permitir ao gerente do projeto identificar com clareza uma entrega.
Além de a entrega, um dos grandes desafios do gerente de projetos é garantir que o cliente irá avaliar e aceitar os resultados parciais ou finais do projeto.
Antes de qualquer entrega o gerente deve se certificar de que ela está completa e respeita as especificações ajustadas.
Isto feito, ele deve se preparar e agendar a reunião formal para o encaminhamento dos resultados ao cliente.
Além de o produto e da documentação técnica, deve ser providenciado um termo de recebimento para que o cliente possa assinar e atestar a aprovação do que está sendo entregue.
O controle do escopo do projeto trata de influenciar os fatores que criam mudanças no escopo do projeto e de controlar o impacto dessas mudanças.
O controle do escopo garante que todas as mudanças solicitadas e ações corretivas recomendadas sejam processadas por meio de o processo de controle integrado de mudanças do projeto.
O controle do escopo do projeto também é usado para gerenciar as mudanças no momento em que efetivamente ocorrem e é integrado a outros processos de controle.
As mudanças não controladas são frequentemente chamadas de aumento do escopo do projeto.
A mudança é inevitável e, portanto, exige algum tipo de processo de controle de mudanças As solicitações de mudança de escopo devem ser formalizadas como parte do sistema de controle de mudanças do escopo do projeto.
Ele é iniciado com uma solicitação formal, depois com a análise dos seus possíveis impactos e, por último deve receber a aprovação dos órgãos e/ ou profissionais competentes e o aceite das mudanças por parte de o cliente.
Essa solicitação, aprovada e aceita, autorizará a implementação das mudanças no projeto.
Trabalhar com controle do escopo quase sempre é lidar com o controle das mudanças do escopo.
Fazer um controle das mudanças de escopo deve significar, para a organização do projeto um atributo de autoproteção.
O escopo é, sem sombra de dúvida, um dos elementos mais suscetíveis à mudanças ao longo de o desenvolvimento de um projeto.
Assim, gerir as mudanças de escopo envolve a criação de mecanismos que sirvam como obstáculos às tentativas de mudança no escopo do projeto.
É atribuição do gerente do projeto evitar ou minimizar as mudanças de escopo que tantos impactos desagradáveis tragam ao projeto, principalmente no que se refere à qualidade, aos recursos, prazos, riscos, custos e orçamentos.
O gerente do projeto deve ter em mente a necessidade de criar mecanismos que funcionem ao longo de o ciclo de vida do projeto para registro das solicitações de mudança;
Acompanhadas as mudanças de escopo, será importante atualizar a documentação do projeto.
A declaração de escopo deve compreender os novos produtos ou soluções solicitadas e que foram aceitas por a equipe do projeto e/ ou cliente.
Já a estrutura analítica do projeto, seus respectivos pacotes de trabalho e detalhamento, por meio de o seu dicionário, também precisam ser atualizados caso alguma alteração de escopo tenha sido implementada.
Isso provocará uma alteração na referência, na linha de base do escopo que deverá ser registrado para o gerenciamento do escopo como parte importante do projeto.
Enfim vários processos podem sofrer ajustes com as mudanças oriundas de alterações de escopo.
Mas algumas alterações não devem gerar alterações na documentação do projeto.
Uma mudança pode representar muito para um projeto, desde um mero e pequeno atraso até uma grande alteração no projeto.
O importante é aplicar ações de controle do escopo para manter as variações de produtos e serviços devidamente administrados.
Considerações sobre o capítulo As seções anteriores apresentam conceitos básicos utilizados na construção do processo de integração proposto.
Inicialmente, as definições apresentadas de gerência de projetos, processos de desenvolvimento de software e principais problemas relacionados à gestão de projetos, ilustram as características essenciais a estes conceitos, auxiliando na criação do processo de integração.
Logo após, foi apresentado o PMBOK, documento redigido e mantido por o PMI onde estão registradas as melhores práticas de gerência de projetos defendidas por a organização.
Também apresentou- se uma visão geral do processo de desenvolvimento RUP ressaltando a importância deste processo nos projetos de software.
Por fim, demonstrou- se o detalhamento da gerência de escopo em projetos, contextualizando o planejamento, definição, criação da estrutura analítica do projeto e verificação e controle do escopo, bem como a relação entre as falhas nos projetos com a gerência de escopo.
Constatou- se que a gerência de projetos, como o PMBOK, não é especificamente voltado à processos de desenvolvimento de software e que o RUP tem carências no tocante a a gerência de projetos e elencamos ainda, as principais falhas com a gerência de escopo.
Estudamos abordagens para realizar a integração destes modelos a fim de proporcionar soluções à estas carências.
A seguir serão apresentados os trabalhos relacionados que foram selecionados e que de alguma forma contribuíram para a elaboração desta proposta.
Este capítulo tem como principal objetivo apresentar os principais trabalhos relacionados à gestão de projetos nos processos de desenvolvimento de software, especificamente utilizando- se do RUP e o PMBOK numa forma integrada.
Em a literatura foram encontradas propostas, ilustrando que o desenvolvimento de software requer o planejamento e que a execução de atividades seja definida de acordo com o escopo do projeto, havendo a necessidade de se lidar tanto com aspectos técnicos como gerenciais do projeto.
Vários modelos e guias de gerenciamento de projetos não se dirigem especificamente à processos de desenvolvimento de software.
Com a finalidade de se obter um processo mais detalhado para o gerenciamento de projetos de software, é necessário aplicar os conhecimentos de gestão de projetos aos processos de desenvolvimento de software.
Entre as propostas encontradas na literatura destacamos e que sugestionam uma forma de integração e mapeamento entre o PMBOK e o RUP.
Em é discutido a forma em a qual o PMBOK se relaciona com o RUP e maneiras de evitar- se ambiguidades, por fim em é apresentado um modelo de integração entre o PMBOK e o RUP, OPEN.
Gerenciamento de Projetos de Software ­ Um mapeamento entre RUP e o Em, dois importantes processos de gestão de projetos são comparados, proporcionando um mapeamento entre as melhores práticas na gestão de projetos das disciplinas RUP e as melhores práticas do PMBOK.
Muitas organizações pretendem padronizar suas práticas em engenharia de software, bem como suas práticas quanto a a gestão de projetos, e os dois conhecidos processos estão disponíveis para ajudar ambas áreas.
O RUP que oferece uma abordagem prescritiva para a padronização das melhores práticas em engenharia de software e o PMBOK que oferece uma abordagem descritiva para a padronização das melhores práticas em gestão de projetos.
Com duas abordagens a disposição das organizações, a questão torna- se:
&quot;Eles são compatíveis?»
A resposta simples é Sim.
Ao longo de o artigo (mapeamento) é possível visualizar que existem semelhanças e diferenças entre os processos.
Essencialmente, que o RUP está inserido nas melhores práticas para o gerenciamento de projetos de software especificamente, enquanto as melhores práticas do PMBOK são aplicáveis a gestão de projetos genéricos, ou seja, no domínio de qualquer aplicação.
O RUP auxilia na execução das melhores práticas para o desenvolvimento de software, mas algumas áreas de gestão de projetos estão fora de o âmbito de suas disciplinas, e são cobertas por as melhores práticas do PMBOK:
Gestão de Pessoas:
Contratação e treinamento;
Gestão de Orçamento: Definição e atribuição;
Gestão de Contratos: Com fornecedores e clientes.
Portanto três das nove áreas do PMBOK não tem equivalentes no RUP, (gerência de recursos humanos, gerência de custos e gerência de aquisições).
Em o referido artigo o autor apresenta diversos mapeamentos entre o RUP e o PMBOK entre eles (principais características, metamodelos, áreas de conhecimento e disciplinas, processos e atividades, processos de saída e artefatos).
O autor conclui o estudo enfatizando que com base na comparação entre o RUP e o PMBOK não existe nenhuma incompatibilidade fundamental entre os dois padrões.
E que são utilizados termos diferentes para descrever semanticamente conceitos idênticos ou semelhantes, sendo que as boas práticas do RUP não contradizem o PMBOK, nem as boas práticas do PMBOK contrariam o RUP.
Padrões, Tendências, e o Rational Unified Process, Parte I:
Integrando- se RUP e o PMBOK Em, o autor explica o relacionamento entre os processos RUP e PMBOK, e durante a descrição deste relacionamento indica a necessidade de se estudar formas de integrar os padrões, para que o RUP possa incorporar características do padrão da gestão de projetos da indústria instituídos no PMBOK.
As organizações de desenvolvimento de software ao integrar estes padrões podem se tornar mais competitivas, alcançar metas comerciais, resolver problemas no processo de negócio, melhorar a comunicação da equipe e conseqüentemente ter melhores resultados financeiros.
Traçando inicialmente uma comparação entre os padrões para ajudar- nos a ter um entendimento de como estes padrões se relacionam vejamos:
PMBOK descreve orientações baseada em melhores práticas da indústria.
O RUP ajuda os desenvolvedores de software a implementar software utilizandose das melhores práticas.
PMBOK descreve o ciclo de vida de projetos genéricos.
O RUP prescreve um ciclo de vida genérico para desenvolvimento de software dentro de um ciclo de vida do projeto.
PMBOK descreve padrões para projetos de qualquer tamanho.
O RUP pode ser adaptado para a implementação de projetos de software de qualquer tamanho.
Sobre as comparações acima o autor relata que o PMBOK descreve as melhores práticas de gestão de projetos e o RUP prescreve as melhores práticas no desenvolvimento de software.
A Figura 13, ilustra a forma como o PMBOK é implementado durante cada iteração dentro de um projeto RUP.
Um projeto com RUP utiliza as melhores práticas do PMBOK em cada iteração e em todas as quatro fases (Criação, Elaboração, Construção e Transição) como podemos observar na disciplina gerenciamento de projeto na ilustração.
Isso significa que temos de adequar o RUP aos elementos-chave do PMBOK.
Assim, nós vamos considerar o PMBOK como um processo existente e incorporar as suas melhores práticas ao RUP.
Para fazer isto primeiramente tem- se que saber o que deve- se adequar.
E depois como demonstar esta integração e comunicar as mudanças, sendo sempre realizada a documentação destas alterações por a equipe do projeto.
O autor conclui o artigo com sugestões de integração dos padrões com base no que foi apresentado, e alertando sobre o nível de subjetividade que é aplicado para a integração dos padrões que pode estar intimamente ligado a organização ou ambiente em que o autor está inserido.
O gerenciamento de projetos com RUP em revisão Em é discutida a forma com que o PMBOK se relaciona com o RUP e explica maneiras de reduzir ou eliminar ambiguidades imperceptíveis que existem quando relacionamos estes dois processos.
É retratado a importância do gerente de projetos, principalmente no comando de equipes, pois os projetos de software dependem, e muito, de habilidades profissionais e intelectuais de vários indivíduos, por exemplo, indivíduos que compõem a equipe de desenvolvimento.
O RUP não é um modelo de gestão de projetos com características voltadas para a gestão de pessoas, mas sim voltado especificamente às melhores práticas de desenvolvimento de software.
Já o gerenciamento de projetos utilizando os padrões do PMBOK podem ajudar os gerentes de projetos que estão utilizando o processo RUP para a gerência de seus projetos.
Conforme a Figura 14, observamos que é incluida uma disciplina &quot;extra «chamada PMBOK junto as conhecidas disciplinas do RUP e substituindo a disciplina de gerenciamento de projetos do RUP, esta disciplina integra todo um ciclo de vida do processo a cada iteração de cada fase do RUP.
Podemos notar que a disciplina começa antes mesmo de qualquer outra disciplina do RUP ter iniciado ou antes mesmo de oficialmente o RUP ter iniciado o processo.
Com uma certa prudência, alguns cuidados e considerações pode- se utilizar o PMBOK como uma disciplina de apoio para as configurações iniciais das iterações do RUP, afirma Temnenco.
Um modelo de integração entre a gerência de projetos e o processo de desenvolvimento de software Em, apresenta um modelo de integração entre a gerência de projetos (PMBOK) e os processos de desenvolvimento de software (RUP) e Object-oriented Process, Environment and Notation (OPEN).
O modelo foi denominado Software Planning Integrated Model (Spim).
Este modelo inclui um conjunto de regras para o planejamento integrado de atividades gerenciais e produtivas no contexto de desenvolvimento de software.
Enquanto o PMBOK fornece uma perspectiva gerencial da solução, a visão sobre a produção é obtida a partir de o RUP.
Assim, ao aplicar o conhecimento de gerência de projetos em conjunto com um processo de desenvolvimento de software apropriado será possível obter um fluxo mais completo e integrado de atividades e suas dependências.
A integração dos modelos também permitiu que um conjunto de regras e restrições pudessem ser derivadas, essas características, em sua maioria, visam apoiar a consistência do modelo proposto.
Para realizar o trabalho que originou o modelo Spim o autor realizou um estudo detalhado dos metamodelos do PMBOK e RUP representados por estruturas compatíveis, já que a intenção era comparar dois modelos e depois promover a integração dos mesmos.
Através da integração entre a gerência de projetos e os processos de desenvolvimento de software foi possível identificar as principais características e discrepâncias entre os elementos de tais modelos.
Em o critério de integração entre os modelos seguiu- se um conjunto de regras que devem ser observadas ao realizar uma integração entre dois modelos, e as seguintes situações podem ocorrer: --
Uma sobreposição de conceitos (duas classes com o mesmo conceito em cada modelo):
Em este caso, pode- se transformar e unir estas duas classes num único conceito dentro de um pacote comum; --
Relação entre conceitos (uma classe de um dos modelos se relaciona com alguma outra classe de outro modelo, mas estas classes não representam exatamente o mesmo conceito):
Deve- se manter as classes em seus modelos originais e criar uma associação entre elas; --
Conceitos independentes (classes com conceitos independentes e distintos):
Deve- se deixar cada classe em seu próprio pacote.
O autor conclui sua pesquisa relatando como o estudo da integração do PMBOK com dois processos distintos de desenvolvimento de software (RUP e OPEN) permitiu elaborar uma visão mais ampla de como a gerência de projetos pode positivamente contribuir no desenvolvimento de um produto de software.
Em os trabalhos futuros o autor reforça a existência na literatura sobre diferentes integrações da gerência de projetos com os processos de desenvolvimento de software, entretanto, parece não haver estudos suficientes para suprir a carência no quesito de gerência de projetos destes processos.
Indicando que novas pesquisas e a continuidade do estudo iniciado levem à novas contribuições para a engenharia de software, melhorando nossa compreensão dos relacionamentos da gerência de projetos com os processos de desenvolvimento de software.
Considerações sobre o capítulo Com as abordagens apresentadas pode- se deduzir que o processo de desenvolvimento de software RUP tem carências quanto a a conceitos de gestão de projetos e sugestiona que estas lacunas podem ser cobertas por o modelo de gerenciamento de projetos PMBOK.
Estas propostas utilizadas como trabalhos relacionados identificam possíveis diretrizes para a integração do modelo de gerenciamento de projetos (PMBOK) com o processo de desenvolvimento de software (RUP) onde é discutida a compatibilidade entre as duas abordagens, cada qual com suas contribuições e limitações.
A seguir, apresenta- se a metodologia de pesquisa adotada neste trabalho.
Em este capítulo caracterizou- se o tipo de pesquisa realizada, buscou- se apresentar e descrever o desenho da pesquisa com suas respectivas fases, detalhando- se o método usado para exemplo de uso.
Tipo de Pesquisa Apesar dos temas uso de gerência de projetos e processos de desenvolvimento de software possuirem vários estudos em desenvolvimento e pesquisas já realizadas, a integração proposta neste trabalho com os modelos referenciados possuem poucas publicações a respeito.
Por isso, optou- se por realizar uma pesquisa exploratória com uma estratégia qualitativa que é particularmente adequada para o desenvolvimento de novas teorias em áreas ou abordagens ainda não consolidadas.
Segundo e, a pesquisa exploratória é normalmente utilizada nos casos em que o tema em questão foi pouco pesquisado ou então quando a revisão da literatura mostrar que existem apenas fragmentos teóricos com vaga relação ao tema pesquisado.
Além de exploratório, o método de pesquisa definido caracteriza- se por seguir uma estratégia qualitativa.
Esta é de caráter subjetivo, ou seja, a interpretação dos dados não é realizada em termos de quantidade, intensidade ou frequência estatística, mas sim de acordo com a interpretação do pesquisador.
Desenho da Pesquisa O desenho de pesquisa se refere ao plano concebido para responder ao problema de pesquisa, onde aparecem os métodos a serem utilizados e a identificação das etapas do processo de pesquisa.
O trabalho apresentado neste estudo foi realizado por meio de 4 etapas, as quais estão representadas por a Figura 15 e são descritas a seguir.
Etapa 1: Em esta etapa efetuou- se o levantamento bibliográfico e o estudo do referencial teórico que permitiu aprofundar os conhecimentos sobre gerência de projetos e processos de desenvolvimento de software;
Com enfâse no gerenciamento de escopo.
Etapa 2: Após o desenvolvimento da etapa 1, utilizou- se o PMBOK como modelo de gerenciamento de projetos e o RUP como processo de desenvolvimento de software, comparando- os e identificando compatibilidades e relacionamentos comuns, traçando um mapeamento das características do processo e do modelo.
Etapa 3: Em esta etapa foi apresentada uma proposta de integração entre a gerência de projetos e o processo de desenvolvimento de software, na área de gerenciamento de escopo.
Esta proposta visa auxiliar o planejamento integrado das atividades do PMBOK e RUP e reduzir problemas na gerência de escopo no processo de desenvolvimento de software.
Etapa 4: Em esta etapa escolhemos a ferramenta que permite publicar a integração proposta na etapa anterior.
O RMC foi escolhido porque é uma plataforma de ferramentas que permite que engenheiros e gerentes de processo implementem, desenvolvam e façam a manutenção em projetos ou processos para organizações.
Em o capítulo 8 desenvolveu- se um exemplo de uso, com a criação de um fluxo de um processo de desenvolvimento de software, ou seja, o fluxo demonstra processos da área de conhecimento de gerenciamento de escopo e gerenciamento de integração do PMBOK, sendo executados de forma integrada com as fases do processo RUP e com o processo de desenvolvimento de software do projeto (PDSP), fornecendo a base para o planejamento, desempenho e aperfeiçoamento das atividades gerenciais e técnicas que as tarefas do projeto executam.
Considerações sobre o capítulo Em esta seção demonstrou- se que o tipo de pesquisa que caracteriza o trabalho é do tipo exploratória seguindo uma estratégia qualitativa, que é de caráter subjetiva dando ênfase então a interpretação do autor.
Mostrou- se o desenho de pesquisa onde podemos identificar todas as etapas de pesquisa do planejamento concebido para resolver ao problema de pesquisa.
Com o intuito de atingir o objetivo deste trabalho é necessário que se faça uma comparação e análise de compatibilidade entre os modelos, para que tenhamos instrumentos de avaliação entre os modelos PMBOK e RUP.
Fazendo o mapeamento do PMBOK (áreas de conhecimento, grupos de processos) com o RUP (disciplinas, atividades) poderemos identificar os relacionamentos e também possíveis adequações que devem ser efetuadas para a integração proposta.
Em este trabalho é proposto um processo integrado utilizando o RUP associado às melhores práticas do PMBOK para gerenciamento de escopo em projetos de software.
Em esta seção demonstrou- se os mapeamentos básicos e essenciais entre o RUP e o PMBOK, para que se alcance o objetivo deste trabalho, destacando:
Principais características, áreas de conhecimento e disciplinas, processos e atividades.
Cobre todos os aspectos da gestão de Cobre alguns aspectos da gestão de projetos Abordagem descritiva Abordagem prescritiva As fases são dependentes do domínio As fases e as iterações são especificas da aplicação para o desenvolvimento de software A Tabela 1 apresenta uma comparação entre o PMBOK e o RUP em relação as suas principais características.
Tanto o PMBOK como o RUP tem em suas atividades grupos estruturais e grupos temporais, estas e outras características podem ser observadas na Tabela 2 que nos mostra uma comparação do metamodelo PMBOK e RUP.
Revisão do fim da Fim de fase, estágios e Revisão do ciclo de vida entre fase Grupo de Atividades Estruturais Grupo de Atividades Temporais marcas marcos Áreas de Conhecimento Disciplinas Grupo de Processos Atividades A comparação é feita do processo RUP em relação as práticas de gerenciamento de projetos propostas por o PMBOK, de modo a analisarmos qual é o grau de atendimento da engenharia de software em relação a as práticas executadas e consagradas como &quot;melhores práticas «por os profissionais em gerenciamento de projetos.
Mesmo que em alguns processos exista sobreposição, as abordagens do RUP e PMBOK são essencialmente complementares e compatíveis, conforme a Figura 16.
Principalmente porque o RUP trata da perspectiva técnica focado na engenharia do produto e o PMBOK numa perspectiva mais gerencial de um sentido mais amplo do projeto.
O RUP fornece processos e ferramentas para a definição de papéis e responsabilidades, e o PMBOK de como organizar e gerenciar a equipe.
Mapeamentos RUP/ PMBOK Em a Tabela 3, comparamos o RUP com suas disciplinas e o PMBOK em relação as áreas de gerenciamento de projetos.
O PMBOK, por ser mais genérico, cobre processos não cobertos por o modelo RUP (gerenciamento de pessoal, orçamento e contratos).
O RUP têm incluído práticas gerenciais no processo de desenvolvimento de software, porém, apesar de diversas pesquisas evidenciarem que o problema é gerencial e não técnico isso não está sendo representado devidamente no modelo.
Tabela 4 -- Relação entre processos PMBOK e atividades RUP.
Adaptado de[ CHA04].
Com base no mapeamento entre o RUP e o PMBOK não existe nenhuma incompatibilidade fundamental entre os dois padrões.
E que são utilizados termos diferentes para descrever semanticamente conceitos idênticos ou semelhantes, sendo que as boas práticas do RUP não contradizem o PMBOK, nem as boas práticas do PMBOK contrariam o RUP.
Utilizando a relação entre processos PMBOK e disciplinas RUP conforme demonstrado na Tabela 4, podemos identificar as disciplinas do RUP relacionadas com os grupos de processos dos processos da área de gerenciamento do escopo de projetos, de acordo com a Figura 17.
Considerações sobre o capítulo Como apresentado nas seções anteriores, realizou- se um estudo detalhado de compatibilidade entre o RUP e PMBOK, o que concluiu- se que de uma forma geral o PMBOK cobre algumas áreas não cobertas por o RUP, como gerenciamento de aquisições e custos, e que em alguns casos encontramos conceitos semelhantes representados com termos semanticamente diferentes, como gerenciamento de integração e gerenciamento de projeto.
O Mapeamento das áreas de conhecimento do PMBOK com as disciplinas do RUP requer uma atenção especial, pois em várias situações este mapeamento pode estar cruzado entre estes conceitos, ou seja, poderíamos ter uma ou várias áreas de conhecimento se relacionando com uma ou mais disciplinas.
Como neste trabalho se prevê a integração a nível de gerenciamento de escopo, tratamos especificamente dessa área de conhecimento do PMBOK, e utilizamos atividades da área de gerenciamento de integração que por sua vez faz a interação entre todas ás areas de conhecimento do PMBOK.
O desenvolvimento deste mapeamento é o primeiro passo para a criação da integração proposta, aqui demonstrou- se o relacionamento entre o RUP e o PMBOK quanto as suas principais características e mais detalhadamente na área de gerenciamento de escopo.
Esta seção foi fundamental para a criação do Apêndice A Demonstração da Integração dos Modelos, que por sua vez serviu de base para o processo integrado proposto que é apresentado no capítulo 7.
Em o próximo capítulo apresentamos o ferramenta RMC.
Em este Capítulo apresenta- se a ferramenta Rational Method Composer utilizada para estender a estrutura do método existente com o novo conteúdo de método, o RMC é a ferramenta utilizada para a publicação e personalização do processo proposto.
Descrição principal do Rational Method Composer O aplicativo RMC (IBM® Rational® Method Composer) é uma ferramenta de publicação e personalização de processos que permite aos engenheiros de processo acelerar a distribuição de processos de desenvolvimento de software personalizados, modelar processos visualmente utilizando a Linguagem de Modelagem Unificada e promover o uso de boas práticas capturadas no RUP.
O RMC ajuda a personalizar RUP para os requisitos precisos da sua organização, melhorando sua própria experiência, práticas e conhecimento interno.
Construído na plataforma Eclipse -- o Rational Method Composer é especificamente projetado para o gerenciamento de conteúdo do método com funções como autoria com base em formulário, navegação de conteúdo, pesquisa de conteúdo e importação e exportação de conteúdo do método.
O RMC suporta configuração durante a publicação bem refinada do conteúdo para atender a diferentes necessidades de projetos e usuários finais.
O poderoso recurso Plugin de Conteúdo do RMC permite que o conteúdo existente seja estendido e modificado por meio de plug-ins, simplificando o gerenciamento e a manutenção do conteúdo de método.
O Rational Method Composer tem dois objetivos principais:
Fornecer uma base de conhecimento de capital intelectual que você possa procurar, gerenciar e implementar.
Este conteúdo pode incluir conteúdo desenvolvido externamente e, o mais importante, pode incluir seu próprio conteúdo, que pode ser white papers, diretrizes, gabaritos, princípios, boas práticas, procedimentos e regulamentações internos, material de treinamento e qualquer outra descrição geral de seus métodos.
Essa base de conhecimento pode ser utilizada para referência e educação.
Ela também compõe a base para processos de desenvolvimento (o segundo objetivo).
O Rational Method Composer foi projetado para ser um sistema de gerenciamento de conteúdo que fornece uma estrutura comum de gerenciamento e aparência e comportamento para todo o seu conteúdo, em vez de ser um sistema de gerenciamento de documento em que você armazena e acessa documentos herdados de difícil manutenção, tudo em suas próprias formas e formatos.
Todo o conteúdo gerenciado no Rational Method Composer pode ser publicado em Html e implementado em servidores da Web para uso distribuído.
Fornecer recursos de engenharia do processo, dando suporte a engenheiros do processo e coordenadores de projeto na seleção, personalização e rápida montagem de processos para os projetos de desenvolvimento concretos correspondentes.
O Rational Method Composer fornece catálogos de processos predefinidos para situações típicas de projetos que podem ser adaptadas às necessidades individuais.
Ele também fornece blocos de construção de processo, chamados padrões de recursos, que representam as boas práticas de desenvolvimento para disciplinas, tecnologias ou estilos de gerenciamento específicos.
Esses blocos de construção compõem um toolkit para rápida montagem de processos baseados nas necessidades específicas do projeto.
O Rational Method Composer também permite configurar suas próprias bibliotecas com padrão de recurso específicas da organização.
Finalmente, os processos criados com o Rational Method Composer podem ser publicados e implementados como Web sites.
Eles também podem ser implementados como modelos de plano de projeto para o Rational Portfolio Manager.
O princípio mais fundamental no Rational Method Composer é a separação de conteúdo de método principal reutilizável de seu aplicativo em processos.
Quase todos os conceitos do Rational Method Composer estão categorizados com essa separação.
O conteúdo de método descreve o que deve ser produzido, as habilidades necessárias exibidas e as explicações de ponta a ponta, que descrevem como metas de desenvolvimento específicas são atingidas.
Essas descrições de conteúdo de método são independentes de um ciclo de vida de desenvolvimento.
Os processos descrevem o ciclo de vida de desenvolvimento.
Os processos obtêm os elementos do conteúdo de método e os relatam para seqüências semi-ordenadas que são personalizadas para tipos específicos de projetos.
Podemos visualizar na Figura 18, como essa separação foi relatada no Processo Unificado do Rational.
A Figura 19 abaixo fornece um resumo dos principais elementos utilizados no Rational Method Composer e como estão relacionados ao conteúdo ou ao processo do método.
O conteúdo de método é expresso principalmente utilizando produtos de trabalho, funções, tarefas e orientação.
A orientação, como listas de verificação, exemplos ou roteiros, também pode ser definida para fornecer acompanhamentos exemplares de um processo.
Em o lado direito do diagrama, podemos observar os elementos utilizados para representar os processos do Rational Method Composer.
O elemento principal é a atividade que pode ser aninhada para definir estruturas de divisão, bem como relacionada uma com a outra para definir um fluxo de trabalho.
As atividades também contêm descritores que fazem referência ao conteúdo de método.
As atividades são utilizadas para definir os processos suportados por o Rational Method Composer em dois tipos principais:
Processos de entrega e padrões de recurso.
Os processos de entrega representam um gabarito de processo completo e integrado para executar um tipo específico de projeto.
Eles descrevem um ciclo de vida completo e de ponta a ponta do projeto e são utilizados como uma referência para executar projetos com características similares.
Os padrões de recursos são processos que expressam e comunicam o conhecimento do processo para uma área principal de interesse, como uma disciplina ou uma boa prática.
Eles também são utilizados como blocos de construção para montar processos de entrega ou grandes padrões de recursos.
Isso garante a ótima reutilização e a aplicação das melhores práticas nas atividades de autoria de processo no Rational Method Composer.
Em a integração proposta neste trabalho é utilizado o RMC em sua versão IBM Rational Method Composer 7.5.0 que acessa a versão do Rational Unified Process® Base Plug-in 7.0.1, sendo que utilizamos o RUP em sua configuração clássica para grandes projetos.
Visão da configuração de método da integração O Rational Method Composer oferece uma biblioteca que contém uma grande quantidade de conteúdo reutilizável.
Ele inclui a estrutura de método do RUP e diversos plug-ins que estendem o RUP com inclusões específicas do domínio.
É possível criar e especificar uma configuração utilizando o editor de configurações descrito na Figura 20.
Pode- se começar criando uma própria configuração de método, copiando uma das configurações incluídas com o Rational Method Composer e modificála para que se adapte às necessidades específicas.
Ou ainda incluir ou remover os plugins de método por completo, bem como fazer a seleção com cada plugin, marcando ou desmarcando pacotes.
Em a Figura 22 podemos observar algumas das configurações que foram realizadas para a criação da integração e posteriormente a publicação da mesma: --
Configuração do RUP clássico para grandes projetos: --
Perspectiva no modo de autoria: --
Criação de um plugin de método, utilizando toda a base do RUP:
Com estes procedimentos realizados nesta tela de configuração temos toda a biblioteca de métodos do RUP criado em sua configuração clássica para grandes projetos, podemos então começar a adaptação nesta fase de elementos do método e conteúdo do método.
Visão da autoria de conteúdo do método Em o modo de perspectiva do tipo autoria, podemos começar a fazer as alterações e inclusões necessárias para a integração do processo de acordo com os mapeamentos estabelecidos.
É possível criar vários tipos diferentes de elementos do método de acordo com suas características e objetivos, a Figura 21 mostra as possibilidades de novos elementos do método.
É interessante atentar- se que o elemento de método é criado dentro de o pacote de conteúdo que o usuário estiver acessando no momento.
Como a biblioteca é muito extensa e apresenta nomes de elementos semelhantes, é importante ter a exata noção de referência da criação dos elementos, pois evita a criação de um elemento num pacote de conteúdo errado e por consequência no momento da visualização o conteúdo do método vai estar com informações inconsistentes e com uma visão errônea quanto a a produtos, papéis, atividades, etc..
Para evitar este tipo de problema aconselha- se a utilização da disposição em navegação em árvore para visualização, o que pode facilitar a localização e a organização das visões que as alterações podem influenciar.
A Figura 22 a seguir, ilustra a tela de um elemento de método que foi criado na visão da autoria de conteúdo do método, sendo que o conteúdo de método descreve as funções, e as tarefas que as funções podem executar, os produtos de trabalho que são utilizados e produzidos por essas tarefas e a orientação de suporte, nesta figura podemos observar a autoria de uma tarefa ­ «Atividade Gerencial de Planejamento:
AGP ­ Desenvolver Declaração do Escopo do Projeto».
Em esta Figura 22, podemos observar ainda que o elemento de método que foi criado pode ter seu conteúdo configurado através das abas que ficam localizadas na parte inferior da tela.
Cada elemento de método possui um conjunto de abas diferenciado.
Demonstraremos as abas dos elementos que são mais comuns e também que foram criados nesta integração (Tarefa, Produtos de Trabalho).
Elemento Tarefa:
Descrição: Pode- se fornecer uma multiplicidade de informações sobre o elemento que foi criado, como informações gerais, informações detalhadas, objetivos, palavras chaves, versão, informa o relacionamento com outro elemento de mesmo tipo, configuração de ícone do elemento;
Etapas: Cria e especifica as etapas necessárias para desempenhar o elemento de método criado;
Funções: Designa as funções que podem desempenhar o elemento do método, mostrando os executores primários e executores adicionais e uma breve descrição destes executores;
Produtos de Trabalho:
Especifica os produtos de trabalho de entrada e saída para este elemento de método, suas entradas opcionais e uma breve descrição dos elementos selecionados;
Orientação: Fornece links adicionais na forma de orientação (fórum de discussões, listas de verificação);
Categorias: Gerência as categorias às quais este elemento de método pertence (disciplinas);
Estimativa: Fornece uma estimativa padrão para este elemento de método (em horas) e pode- se selecionar os fatores de estimativa;
Visualizar: Visualiza a publicação apenas do elemento de método em questão, onde é possível verificar a situação de todas as alterações feitas neste elemento na forma de página web.
Elemento Função: Descrição:
Semelhante ao elemento de método tarefa, mais a opção de definição sobre equipe;
Produtos de Trabalho:
Especifica os produtos de trabalho que este elemento de método é responsável e os produtos de trabalho que são saídas de tarefas que este elemento de método desempenha;
Orientação: Semelhante ao elemento de método tarefa;
Categorias: Gerência os domínios os quais este elemento de método pertence e define o tipo deste elemento;
Visualizar: Semelhante ao elemento de método tarefa.
Elemento Produto de Trabalho: Descrição:
Semelhante ao elemento de método tarefa;
Orientação: Semelhante ao elemento de método tarefa;
Categorias: Gerência os domínios os quais este elemento de método pertence e define o tipo deste elemento;
Visualizar: Semelhante ao elemento de método tarefa.
Considerações sobre o capítulo Mostrou- se uma breve descrição da ferramente RMC que serve para configurar e adaptar o processo de uma maneira conveniente aos usuários do processo, salientando ainda, os objetivos propostos por esta ferramenta.
Posteriormente observou- se as configurações dos elementos de método, onde mostrou- se o procedimento para proceder com a criacão e personalização destes elementos que estão diretamente ligados a integração do processo proposto.
Em o próximo capítulo apresentamos a integração proposta nestre trabalho e desenvolvida com o uso da ferramenta RMC.
Sendo que foram analisados no capítulo 5 os mapeamentos e compatibilidades entre os modelos e no capítulo 6 demonstrou- se a ferramenta que possibilita desenvolver a proposta de integração, o processo RUP+ PMBOK de gerência de escopo é apresentado nesta seção.
Primeiramente mostramos o planejamento adotado para a integração dos modelos e suas atividades, assim como os papéis envolvidos no processo, posteriormente mostramos a publicação do processo na forma de Web Site utilizando o RMC.
É necessário que seja apresentado um planejamento integrado de atividades pertencentes ao projeto de desenvolvimento de software e aos fluxos de trabalho da organização referentes ao gerenciamento de escopo do projeto.
Conforme, o gerente de projetos pode não possuir todas as informações relevantes para o projeto e poderão ocorrer interações com outros departamentos da organização durante o planejamento de um projeto de software.
Assim, o fluxo de atividades de um projeto de software pode interagir com os demais fluxos de atividades da organização.
Devemos conceber um processo que possa lidar com uma significativa parte dos aspectos produtivos e gerenciais do desenvolvimento de um produto de software, contribuindo com o aumento da qualidade global do trabalho resultante.
A partir de os estudos de mapeamentos e compatibilidades realizados no Capítulo 5, é possível darmos início a integração do RUP com o PMBOK, permitindo assim que as organizações e os próprios gerentes de projetos apliquem os conhecimentos gerencias em conjunto com aspectos técnicos.
Premissas para a integração Segundo o, para que o processo possa ser adaptado é necessário seguir as seguintes orientações:
Elemento dos esforços direcionados.
Identificar o conteúdo do método a ser acrescentado ou refinado no RUP.
Identificar os ativos do método existente que podem ser incluídos.
Por exemplo, orientações organização/ projeto, gabaritos, exemplos, entre outros.
Selecionar os processos, funções, tarefas, produtos de trabalho, orientação, processos, entre outros, que deseja adaptar.
Níveis de Adaptação.
Há diferentes níveis de adaptação em o qual o RUP pode ser adaptado, cada um com um &quot;custo «e &quot;benefício «associado.
Adaptar o processo.
Adaptar as partes identificadas do RUP utilizando o nível de adaptação selecionado.
Não importa qual o nível de adaptação que foi escolhido, a adaptação do RUP geralmente envolve quatro etapas principais (embora algumas etapas sejam opcionais, dependendo do nível de adaptação):
Desenvolvimento dos elementos do método.
Essa etapa inclui o desenvolvimento de novo conteúdo e/ ou redefinição do conteúdo existente.
Configurar o conteúdo do método.
Inclui decidir qual conteúdo incluir e qual conteúdo excluir, bem como fornecer visões apropriadas sobre esse conteúdo (por exemplo, visões baseadas em função ou domínios específicos).
Configurar o conteúdo do método é uma questão de dimensionamento exato do processo de modo que corresponda às necessidades de uma organização específica ou projeto individual.
Desenvolver o processo para a configuração.
Inclui selecionar um tipo de ciclo de vida de desenvolvimento (por exemplo, em cascata ou repetitivo) e definir um processo que esteja bem afinado para atender às necessidades exatas da organização ou do projeto.
O processo resultante servirá como uma entrada direta ao planejamento do projeto.
Tornar o processo disponível.
Inclui publicar a configuração (e seu processo) como um Web site do processo, e/ ou exportar o processo para uma ferramenta de planejamento do projeto.
Elementos dos esforços direcionados Em esta seção identificamos o conteúdo do método a ser excluído, acrescentado ou refinado no RUP.
No caso de nossa integração nenhum conteúdo de método deverá ser excluído já que a base do processo é o RUP e que a ele será integrado as práticas do PMBOK na área de gerenciamento de escopo, interessante ainda afirmar que não é conveniente que as características principais do sejam afetadas:
Mas novos elementos de método foram incluídos para compor o processo de forma integrada e devem ser informados, bem como os elementos de método existentes que foram envolvidos diretamente com a integração, sendo:
Conforme já exposto no Capítulo 5 as disciplinas mapeadas para a integração entre os modelos RUP e PMBOK são:
Gerenciamento de Projetos, Requisitos e Gerenciamento de Configuração e Mudanças.
Em a Tabela 5 apresentamos uma breve descrição da função principal da disciplina.
Em esta etapa da pesquisa foram selecionados os papéis (funções) do RUP que estão envolvidos diretamente com a gerência de escopo, sendo resultado dos mapeamentos efetuados entre os modelos RUP e PMBOK.
Estes papéis são:
Coordenador de Projeto, Revisor de Gerenciamento, Gerenciador de Configuração, Analista de Sistemas, Especificador de Requisitos, Revisor Técnico e Todas as Funções.
Apresentados os papéis envolvidos na Figura 23 e Figura 24, podemos observar que 3 papéis compõem o conjunto de funções (generalizados):
Analista, Funções Gerais Gerenciadores, os quais possuem atribuições diferenciadas, sendo então especializados em outros 7 papéis já citados anteriormente.
Em a Tabela 6 apresentamos uma breve descrição das atribuições dos papéis envolvidos na integração do processo RUP e PMBOK.
As atividades envolvidas diretamente com a integração foram todas criadas com base nas atividades já existentes no RUP, sendo então diferenciadas visualmente, da seguinte forma:
Primeiramente por a cor, sendo a imagem original que representa a atividade na cor amarela e as atividades criadas para a integração são representadas na cor azul.
Posteriormente por o nome, mais especificamente por a sigla anterior a identificação da atividade, por exemplo, a Figura 25: Para a atividade original &quot;Avaliar Iteração «tem- se uma atividade criada que é chamada &quot;AGMC ­ Avaliar Iteração», onde AGMC quer dizer, Atividade Gerencial de Monitoramento e Controle.
Definindo então ao usuário do processo que esta é uma Atividade Gerencial (PMBOK), e que é do Grupo de Processos de Monitoramento e Controle.
Importante notar que a identificação da atividade não mudou o que facilita o usuário do processo a identificar por o nome uma determinada atividade, já que muito provavelmente este usuário deve estar familiarizado com os nomes das atividades no processo RUP original.
Todas as atividades criadas para a integração possuem uma nomenclatura que identifica que é uma atividade gerencial e a que grupo de processos de gerenciamento de projetos pertence, conforme a Tabela 7.
Os artefatos envolvidos diretamente com a integração foram todos criados com base nas saídas das atividades gerenciais geradas para a integração do RUP+ PMBOK.
Sendo então diferenciadas visualmente, da seguinte forma:
Primeiramente por a cor, sendo a imagem original que representa o artefato na cor vermelha e os artefatos criados para a integração são representadas na cor verde.
Posteriormente por o nome, mais especificamente por a sigla anterior a identificação da atividade, por exemplo, a Figura 26: Para o artefato original &quot;Plano de Iteração «tem- se um artefato criado que é chamado &quot;PM ­ Estrutura Analítica do Projeto», onde PM quer dizer, que o artefato é um artefato PMBOK.
Todos os artefatos criados para a integração possuem uma nomenclatura que identifica que é um artefato PMBOK e o mesmo é saída/ entrada de uma Atividade Gerencial.
Níveis de adaptação Em o RUP existem 6 níveis de adaptação disponíveis atualmente, relacionados a partir de o mais fácil até o mais complexo, em os quais cada nível inclui o nível precedente.
A seguir na Tabela 8 relacionamos estes níveis com uma breve descrição de cada um.
Documentar o processo adaptado num documento externo que refere- se a um processo subjacente, assim como qualquer ativo de método personalizado.
Personalizar um processo existente de Web site utilizando My RUP e documentos externos.
Configurar um processo de Web site a partir de um conteúdo de método existente utilizando Rational Method Composer.
Incluir Orientação na estrutura do método existente utilizando Rational Method Composer.
Desenvolver um novo Processo de Entrega (idealmente baseado em Padrão de Capacidade disponível) utilizando Rational Method Composer.
Estender a estrutura do método existente com novo conteúdo de método (ex., Tarefas, Produto de Trabalhos, Funçãos) utilizando Rational Method Composer.
Este nível é, às vezes, conhecido como desenvolvimento de plugin &quot;estrutural».
Um plug-in estrutural é um plug-in que estende o RUP incluindo/ refinando Funções, Tarefas, e/ ou Produtos de Trabalho.
Em a integração proposta por este trabalho é necessariamente obrigatório a criação de novos conteúdos de método, estendendo assim a estrutura do método.
De essa forma, automaticamente exclui- se a possibilidade de utilização dos níveis de adaptação de 1 a 5, sendo necessário o uso do nível de adaptação de número 6.
Adaptar o processo Parte desta primeira etapa de adaptação já foi apresentada na seção 7.2, no que refere- se as características visuais e na nomenclatura utilizada para identificar os elementos de método criados para este processo.
Abaixo apresentamos a listagens dos elementos de método, atividade e artefatos (produtos de trabalho) incluídos no processo.
Atividades AGI ­ Desenvolver Declaração Preliminar do Escopo do Projeto;
Agi ­ Desenvolver Termo de Abertura do Projeto;
Agi ­ Iniciar Plano de Gerenciamento do Projeto;
AGP ­ Desenvolver Declaração do Escopo do Projeto;
AGP ­ Atualizar Declaração do Escopo do Projeto;
AGP ­ Capturar Glossário;
AGP ­ Atualizar Plano Gerenciamento do Projeto;
AGP ­ Planejar Estrutura Analítica do Projeto;
AGP ­ Desenvolver Estrutura Analítica do Projeto;
AGP ­ Desenvolver Plano Gerenciamento do Escopo;
AGP ­ Desenvolver Plano de Resoluções dos Problemas;
AGP ­ Escrever Plano de Gerenciamento e Configuração (Cm);
AGMC ­ Desenvolver a Declaração do Escopo do Projeto;
AGMC ­ Atualizar Declaração do Escopo do Projeto;
AGMC ­ Capturar Glossário;
AGMC ­ Controlar Mudanças;
AGMC ­ Avaliar Iterações;
AGMC ­ Planejar Estrutura Analítica do Projeto;
AGMC ­ Desenvolver Estrutura Analítica do Projeto;
AGMC ­ Relatar Status.
Artefatos PM ­ Declaração Preliminar do Escopo do Projeto;
PM ­ Declaração do Escopo do Projeto;
PM ­ Plano de Gerenciamento do Escopo do Projeto;
PM ­ Termo de Abertura do Projeto;
PM ­ Plano de Gerenciamento do Projeto;
PM ­ Estrutura Analítica do Projeto;
PM ­ Dicionário da Estrutura Analítica do Projeto;
PM ­ Linha de Base do Escopo;
PM ­ Mudanças Solicitadas;
PM ­ Entregas Aceitas;
PM ­ Requisitos do Gerenciamento de Configuração e Controle.
Em esta seção apresentaremos especificamente como adaptar os elementos de método e suas características ao conteúdo do método, e também fornecer as visões apropriadas a este novo elemento de método.
Em a Figura 27 apresentamos uma situação para decisão de inclusão de elementos de métodos, e definimos a visão destes elementos de método baseados na função específica.
Em este caso, a função é coordenador de projeto.
Baseando- se nos mapeamentos apresentados no Capítulo 5 deste trabalho, determinamos que para a função &quot;Coordenador de Projeto», que desempenha uma atividade descrita como &quot;Desenvolver Plano de Iteração «e que esta atividade gera um artefato de saída &quot;Plano de Iteração», é necessário à esta função uma integração que permita a inclusão de nova atividade, definida como &quot;AGP ­ Desenvolver Estrutura Analítica do Projeto «e que esta atividade gere um artefato de saída denominado &quot;PM ­ Estrutura Analítica».&amp;&amp;&amp;
Em este caso descrito na Figura 27, a visão está baseada na função, ou seja, a função &quot;Coordenador de Projeto «agora desempenha uma atividade descrita como &quot;AGP Desenvolver Estrutura Analítica do Projeto».
Atividade que gera um artefato de saída &quot;PM ­ Estrutura Analítica do Projeto».
A integração deste e outros elementos de método podem ser visualizados na seção 6.8 deste capítulo de maneira integral na seção &quot;visualização da publicação do processo integrado RUP e PMBOK».
Ainda nesta fase é necessário desenvolver/ configurar o conteúdo destes elementos de método, definindo características e relacionamentos deste elemento dentro de o processo.
Em a Figura 28, podemos observar como devem aparecer as configurações dos conteúdos de elementos de método, para facilitar a descrição desta atividade enumeramos as principais características de configuração, numa tarefa ainda não adaptada.
Além de estas principais características dependendo do tipo de elemento de método, este pode apresentar alguma característica adicional, como uma categoria contendo exemplos de desenvolvimento do elemento de método.
A integração com a configuração deste e outros conteúdos de elementos de método podem ser visualizados de maneira integral na seção 6.8 (&quot;visualização da publicação do processo integrado RUP e PMBOK&quot;) deste capítulo.
Esta etapa inclui publicar a configuração (e seu processo) como um Web Site do processo, e/ ou exportar o processo para uma ferramenta de planejamento do projeto.
Para um melhor entendimento desta etapa destinamos a seção 7.5 onde apresentamos de forma detalhada a Publicação da Integração.
Visualização da publicação do processo integrado RUP+ PMBOK Em o Apêndice A apresentamos um exemplo da Integração dos Modelos, onde exemplificamos as integrações que foram realizadas neste trabalho em forma de uma tabela com todos os elementos, nesta forma de demonstração temos uma visualização geral de todos os elementos envolvidos de forma rápida e simples.
Em esta seção ilustramos o processo integrado RUP+ PMBOK para gerência de escopo em projetos de desenvolvimento de software, com algumas telas da interface e uma descrição do tipo de integração.
Como são diversas as telas da integração do processo e as descrições das atividades e produtos de trabalho, bem como as visões apresentadas nestes elementos, foi disponibilizado todas as telas no Apêndice B. Veremos que o RUP+ PMBOK é entregue aos profissionais como um Web site interativo utilizando a tecnologia de navegador padrão de mercado.
Um Web site do RUP+ PMBOK é uma apresentação do processo publicado do Rational Method Composer, configurada para seu projeto e ajustada para suas necessidades específicas.
O Web site é criado utilizando páginas Html geradas dinamicamente, as quais o RMC permite que sejam publicadas na forma de vários Web sites do RUP+ PMBOK, cada um representando uma definição de processo configurada e ajustada.
A Figura 29 apresenta a tela inicial do processo RUP que foi estendido com o PMBOK na área de gerenciamento de escopo.
Sendo que para esta tela foi acrescentado uma nomenclatura para designar a integração, no restante a tela é igual a interface inicial do processo RUP padrão.
Em a Figura 30 é possível visualizar a função Coordenador de Projeto e seus relacionamentos, como as atividades que desempenha e os produtos de trabalho por os quais é responsável.
Observamos que nesta função que é uma das principais nesta integração, foram adicionados várias atividades novas relacionadas a gerência de escopo do PMBOK todas representadas por a nomenclatura Ag (Atividade Gerencial)+ nomenclatura do grupo de processos+ nome da atividade, ainda podemos diferenciar estas das outras atividades por estarem na cor azul.
Quase que necessariamente estas atividades produzem produtos de trabalho, os artefatos adicionados estão aqui representados por a nomenclatura PM (PMBOK)+ nome do produto de trabalho e ainda podemos diferencias- los dos outros produtos de trabalho por estarem na cor verde.
Em a Figura 31, semelhante a figura anterior, apresentamos uma outra função Analista de Sistemas, e também podemos visualizar as atividades que são desempenhadas por esta função e os produtos de trabalhos que esta função é responsável, a nomeclatura utilizada para o processo é a padronizada já explicada anteriormente, na figura podemos visualizar várias atividades incorporadas a esta função e os seus artefados.
Todas as interfaces do conjunto de funções que estão diretamente ligados a integração podem ser encontrados no Apêndice B. na Figura 32, é apresentado a tela de uma atividade desempenhada por o Coordenador do Projeto, atividade chamada AGP (Atividade Gerencial+ Planejamento) ­ Desenvolver Estrutura Analítica do Projeto.
Podemos observar nesta atividade que ela possui a descrição de seu nome e a que grupo de disciplinas pertence, possui ainda a descrição do seu objetivo a informação de sua descrição principal e quais as etapas necessárias para desenvolver esta atividade, possuí uma opção para a inserção de exemplos, neste caso foram utilizados arquivos externos no formato PDF.
Possui a informação de todos os seus relacionamentos, como:
Quem é o seu executor primário e quem são seus executores adicionais, quais os produtos de trabalho são obrigatórios para esta atividade e quais os produtos de trabalhos que são opcionais, informa também quais são os produtos de trabalho que são saídas desta atividade.
A Figura 33 é semelhante a figura anterior, em ela é demonstrado a tela de uma atividade desempenhada por o Analista de Sistemas, atividade chamada AGP (Atividade Gerencial+ Planejamento) ­ Captar Glossário.
Todas as interfaces das atividades que estão diretamente ligados a integração podem ser encontrados no Apêndice B. na Figura 34, é apresentado a tela de um produto de trabalho que é saída de uma atividade desempenhada por o Coordenador do Projeto, produto de trabalho chamado PM (PMBOK) ­ Estrutura Analítica do Projeto.
Semelhante aos outros elementos de método apresentados a figura apresenta as características específicas deste produto de trabalho, como:
Definição, a que domínio pertence, tipo do produto de trabalho, objetivo e descrição principal.
Ainda podemos visualizar as informações de relacionamentos deste produto de trabalho com os elementos do método, como:
Quem é responsável por o produto de trabalho, quem pode modificar- lo, para quais tarefas este produto de trabalho é entrada e de quais tarefas este produto de trabalho é saída.
A Figura 35, é semelhante a figura anterior, em ela é apresentado a tela de um produto de trabalho que é saída de uma atividade desenvolvida por o Analista de Sistema, produto de trabalho chamado PM (PMBOK) ­ Projeto.
Escopo do Projeto Todas as interfaces dos produtos de trabalho que estão diretamente ligados a integração podem ser encontrados no Apêndice B. Considerações sobre o capítulo Em este Capítulo foi apresentado o processo proposto para a integração dos modelos, suas atividades e as premissas necessárias para a adaptação.
Verificou- se ainda os elementos que são diretamente afetados por a integração, como as disciplinas, papéis envolvidos, atividades e artefatos.
Dentro deste planejamento foi definido o nível de adaptação que o processo deveria ter e qual o motivo da utilização deste nível de adaptação.
Por fim, mostra- se a publicação da integração RUP+ PMBOK para gerenciamento do escopo de projetos de desenvolvimento de software, elementos de métodos criados e devidamente configurados foram apresentados já integrados ao processo RUP, demonstrando de forma simples como a integração favorece o gerenciamento por parte de o gerente de projetos.
Como são várias as telas da integração convencionou- se demonstrar a integração completa no Apêndice B. E no próximo capítulo veremos o fluxo para o desenvolvimento de projetos de software criado integrando o RUP+ PMBOK que pode ser seguido utilizando o processo que foi gerado neste trabalho.
Em este Capítulo demonstramos um exemplo de uso do processo de desenvolvimento de software, criando um fluxo entre o RUP, Processo de Desenvolvimento de Software do Projeto (PDSP) e o PMBOK especificamente na área de gerenciamento de escopo e integração.
Fluxo de processo de desenvolvimento de software Para ilustrar o uso processo integrado RUP+ PMBOK criou- se um fluxo de processo de desenvolvimento de software, onde através desse podemos identificar as fases do RUP, sendo que dentro de cada fase é apresentado o detalhamento dos processos do PMBOK na área de gerenciamento de escopo e integração.
Dentro de o detalhamento de cada item dos processos do PMBOK temos o processo de desenvolvimento de software do projeto, este fluxo fornece a base para o planejamento, desempenho e aperfeiçoamento das atividades gerenciais e técnicas que as tarefas do projeto executam.
Em as Figura 37 e 37 temos o fluxo das atividades da fase &quot;iniciação «do RUP.
Dentro de esta fase temos vários processos do PMBOK especificamente da área de gerenciamento de escopo e integração sendo executados em conjunto com o processo de desenvolvimento de software do projeto.
Em as Figuras abaixo de número 38 e 39 temos o fluxo das atividades da fase &quot;elaboração «do RUP.
Dentro de esta fase temos vários processos do PMBOK especificamente da área de gerenciamento de escopo e integração sendo executados em conjunto com o processo de desenvolvimento de software do projeto.
Em as Figura 40 temos o fluxo das atividades da fase &quot;construção «do RUP.
Dentro de esta fase temos vários processos do PMBOK especificamente da área de gerenciamento de escopo e integração sendo executados em conjunto com o processo de desenvolvimento de software do projeto.
Em as Figura 42 temos o fluxo das atividades da fase &quot;transição «do RUP.
Dentro de esta fase temos vários processos do PMBOK especificamente da área de gerenciamento de escopo e integração sendo executados em conjunto com o processo de desenvolvimento de software do projeto.
Em todas as fases do projeto de desenvolvimento de software notamos processos de controle que aparecem no fluxo que asseguram ao máximo a qualidade das atividades que estão sendo desenvolvidas na fase.
A numeração dos itens que aparecem nos processos PMBOK do fluxo fazem referência ao número do processo em:
&quot;Um Guia do Conjunto de Conhecimentos em Gerenciamento de Projetos 3ª Edição ­ Guia «PMBOK».
A publicação do processo RUP+ PMBOK (Web Site) está adaptado a fim de servir como base ao gerente de projetos e sua equipe utilizar tanto as práticas de atividade gerencial como as atividades técnicas no gerenciamento de escopo para projetos de desenvolvimento de software.
O processo constante no fluxo deste exemplo de uso pode ser consultado no processo RUP+ PMBOK para que sejam seguidas as diretrizes propostas por a adaptação.
Considerações sobre o capítulo O fluxo para desenvolvimento de projetos de software criado neste capítulo, demonstra os processos referentes as áreas de gerenciamento de escopo e integração do PMBOK sendo executados dentro de as fases de desenvolvimento do RUP de uma forma integrada.
Tanto as atividades gerenciais e técnicas que aparecem no fluxo ao serem desenvolvidas precisam seguir um processo também integrado, sendo recomendado o processo RUP+ PMBOK para gerenciamento de escopo.
Os processos nos fluxos referem- se apenas as áreas de conhecimento de gerência de escopo e integração do PMBOK, mas para um fluxo completo tem- se que integrar todos processos PMBOK ao processo de desenvolvimento de software, o que é de extrema relevância, no entanto, este não é o objetivo deste trabalho.
Este capítulo apresenta as considerações finais deste trabalho destaca ainda, as contribuições, limitações do estudo e os rumos para futuras pesquisas na área.
Segundo, as organizações da área de tecnologia, entendendo as dificuldades da área em realizar projetos bem sucedidos, isto é, projetos que respeitem as restrições e objetivos impostos durante o seu planejamento, buscaram, nos últimos anos, subsídios para diminuir os índices de fracasso.
Várias ações foram tomadas, sendo a principal de elas a utilização de metodologias de gerenciamento de projetos como o PMBOK Guide ou o PRINCE2, e.
O sucesso de um projeto está intimamente ligado a assegurar que o projeto vai satisfazer as necessidades para as quais foi criado, ou seja, gerenciar a qualidade.
Isso envolve levantar em detalhes e especificar formalmente as necessidades explícitas e implícitas dos clientes, usuários e outras partes importantes interessadas, validar- los com essas partes e comprometer- se a entregar o que foi especificado (nada mais).
A crescente preocupação relativa ao desenvolvimento de software pode ser observada devido a a adoção de práticas de engenharia de software por as empresas.
O desenvolvimento de produtos de software requer o planejamento e a execução de atividades, definidas de acordo com o escopo do projeto, onde é necessário lidar tanto com assuntos gerenciais quanto técnicos.
Em qualquer contexto deve- se considerar o fato de que projetos sempre são esforços únicos e temporários, além de envolverem um elevado nível de incerteza, e.
Assim, percebe- se que o escopo do projeto é ponto crucial em seu desenvolvimento e que é extremamente relevante gerenciarmos atividades relacionadas a assuntos especificamente gerenciais e atividades relacionadas a assuntos técnicos voltadas ao desenvolvimento do produto de maneira integrada.
Autores como,,, e, pesquisam e trabalham neste contexto para que possamos garantir um desenvolvimento de software de maior qualidade e um aumento das taxas de sucesso dos projetos de software.
Então, através da realização deste trabalho pode- se refletir de que forma as organizações de desenvolvimento de software poderiam gerenciar o escopo de projetos de software utilizando um modelo de gerenciamento de projetos e um processo de desenvolvimento de software num mesmo processo de forma integrada.
De essa maneira chegou- se à proposta de um processo integrado RUP+ PMBOK para gerência de escopo em projetos de desenvolvimento de software.
Esse descrito no capítulo 6 deste trabalho.
As seções seguintes descrevem os resultados da pesquisa, as contribuições teóricas e prática do trabalho para a área, as limitações de pesquisa e, finalmente, as sugestões de trabalhos futuros.
Resultados da pesquisa Os objetivos propostos inicialmente, descritos no capítulo 1, foram alcançados.
O objetivo geral do trabalho foi atendido por o processo proposto apresentado no capítulo 7, que propunha uma forma de gerenciar o escopo dos projetos de software de forma integrada com o RUP+ PMBOK.
Em relação a os objetivos específicos as referências consultadas nas áreas de gerência de projetos, gerenciamento de escopo de projetos, processo de desenvolvimento de software, foram apresentadas no capítulo 2, e os trabalhos relacionados que muito contribuíram para esta proposta foram elencados no capítulo 3, os quais proporcionaram a expansão do conhecimento para a integração entre ­ RUP+ PMBOK ­ e a formalização desse entendimento no processo proposto.
A integração só foi possível por ser antecedida de uma análise de compatibilidade entre os modelos realizada no capítulo 5, gerando um mapeamento entre os mesmos que serviu de base para todo o processo.
Em o capítulo 6 demonstrou- se a ferramenta de publicação e personalização de processos RMC que proporcionou a customização e integração do processo proposto de forma satisfatória.
Em o processo proposto, descrito no capítulo 7 desse trabalho, o foco está no auxílio ao gerente de projetos para que ao executar as fases do processo de desenvolvimento de software possa utilizar das atividades gerencias do modelo de gestão de projetos, especificamente na área de gerenciamento de escopo e integração.
Finalmente foi apresentado através da criação de um fluxo de processo de desenvolvimento de software um exemplo de uso para a utilização do processo proposto, apresentado no capítulo 8.
Contribuições Este trabalho oportunizou pesquisar um processo de desenvolvimento de software e um modelo de gestão para gerenciamento de projetos, apresentando uma proposta de integração entre estes, denominada RUP+ PMBOK.
Em função de a integração proposta foi desenvolvido um processo de gerenciamento de escopo para projetos de software, que permite elaborar uma visão mais ampla de como a área de gerenciamento de escopo em projetos pode contribuir de maneira positiva com o desenvolvimento de um produto de software.
Acredita- se que este trabalho contribua com a área de ciência da computação, nas subáreas de engenharia de software e gerenciamento de projetos de desenvolvimento de software, ampliando as publicações acerca de estas áreas.
Também acredita- se que o estudo fornece uma visão complementar de integração de um modelo de gestão de projetos e um processo de desenvolvimento de software.
Espera- se que algumas lacunas sobre o tema integração de processos, no mínimo, sejam parcialmente cobertas por o processo proposto, de forma que o estudo do processo forneça subsídios para o desenvolvimento de processos de software.
Estes, integrados as melhores práticas de gestão de projetos, contribuindo para uma melhor produtividade das demandas nesta área por as organizações de tecnologia.
Prática Tendo em vista a complexidade do processo de desenvolvimento de software que integre questões gerenciais e técnicas, são necessários mecanismos de apoio para guiar os gerentes no planejamento e controle desses projetos.
Supõe- se que o processo proposto neste estudo possa apoiar os gestores nas áreas de sistemas de informação permitindo o planejamento integrado de atividades gerenciais e técnicas.
A biblioteca com o processo RUP+ PMBOK está disponível para que os gestores de projetos possam utilizar- se de sua estrutura e método aplicando as melhores práticas em projetos reais de desenvolvimento de software.
Além disso, a biblioteca do processo proposto está disponível servindo de modelo para que os gestores façam a personalização e integração das atividades de acordo com o padrão utilizado em suas organizações.
Limitações da pesquisa Com base no método de pesquisa adotado, descrito no capítulo 4, a pesquisa qualifica- se como um estudo qualitativo, o que não nos permite a generalização dos resultados.
O método de pesquisa, descrito no capítulo 4, previa a demonstração do processo através da realização de um estudo de caso, já no desenvolvimento do seminário de andamento foi detectado que não haveria possibilidade da aplicação deste método por os seguintes motivos:
Não existem empresas locais (Tangará da Serra ­ MT) que utilizam o processo de desenvolvimento de software escolhido para o estudo e pesquisa deste trabalho;
O tempo necessário para a implantação primeiramente do processo de desenvolvimento de software escolhido e posteriormente o processo proposto neste estudo não era suficiente, dada à limitação imposta por o cronograma deste trabalho.
Estudos futuros Apesar de os objetivos propostos inicialmente terem sido alcançados, identificou- se oportunidades de estudos futuros com possibilidades de avançar a pesquisa no sentido de avaliar o processo proposto, as quais são apresentadas a seguir:
Realização de múltiplos estudos de caso, e aplicação do processo proposto em diferentes organizações, permitindo que o grau de generalização dos resultados seja ampliado;
Desenvolvimento de um protocolo para a avaliação do processo proposto com empresas de software, utilizando o processo em projetos reais;
Ampliação da integração entre todas as áreas de conhecimento do modelo de gestão de projetos PMBOK e o processo de desenvolvimento de software RUP;
Criação de um fluxo de processo de desenvolvimento de software completo para demonstrar o uso da integração entre todas as áreas de conhecimento do modelo de gestão de projetos PMBOK e o processo de desenvolvimento de software RUP.
