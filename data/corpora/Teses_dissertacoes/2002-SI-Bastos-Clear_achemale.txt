Este trabalho apresenta um modelo de sistema multiagente para o apoio ao processo de alocação de recursos em ambientes de desenvolvimento de software distribuídos.
Para realizar esta proposição, primeiramente são revisados os conceitos da área de sistemas multiagente e gerência de projeto, identificando os requisitos do processo de alocação de recurso.
A partir destes requisitos e do estudo de trabalhos correlatos, é desenvolvido um modelo de um sistema multiagente, utilizando uma metodologia escolhida para a identificação e definição dos agentes.
O resultado gerado permite ao gerente de projeto identificar quais os recursos mais apropriados para cada tarefa analisada, usando critérios como qualidade, disponibilidade, custo e balanceamento de carga.
Palavras Chaves: Alocação de Recursos, sistemas multiagentes, gerência de projeto.
Viii O desenvolvimento de software, como a maior parte das áreas da informática, tem passado por severas modificações, aprimorando- se rapidamente.
Suas mudanças são necessárias para comportar as necessidades sempre crescentes de um mercado competitivo e globalizado, dinâmico e exigências cada vez maiores.
As mudanças impostas por o mercado aumentam a complexidade dos projetos, demandando um esforço gerencial maior para cumprir as metas esperadas.
A disciplina de Gerência de Projeto é complexa não somente por os requisitos e metas cada vez mais exigentes, mas por trabalhar com atividades únicas.
Dificilmente, uma atividade será repetida com exatidão em dois projetos diferentes, o que agrega riscos ao projeto, pois o gerente estará mais sujeito a imprevistos durante a sua duração.
Três aspectos constituem fatores centrais na atenção do gerente de projeto:
Custo, tempo e escopo.
Estes, comumente referidos como dimensões ou restrição tripla, são determinantes para a viabilidade e sucesso do projeto.
Assim, qualquer processo gerencial que afete essas dimensões, por conseguinte, afetará aspectos centrais de um projeto.
A alocação de recursos é uma atividade gerencial cujos resultados influenciam estas três dimensões.
Todos os recursos apresentam um custo associado, que irá refletir na dimensão de custo de um projeto quando estes forem relacionados às suas atividades.
Além disso, num universo real, os recursos são finitos, não estando sempre disponíveis para as atividades de um projeto quando necessários.
Assim, o gerente de projeto deve se preocupar com a disponibilidade dos mesmos, a fim de cumprir os prazos estipulados, ou seja, a dimensão de tempo.
Por fim, as atividades que constituem um projeto apresentam perfis, que determinam requisitos necessários aos recursos que irão realizar- las.
Se essas exigências não forem cumpridas, eventualmente, o produto resultante pode estar abaixo de os padrões de qualidade esperados ou não atender às funcionalidades previstas em seu escopo, frustrando as expectativas dos patrocinadores.
Por outro lado, com o crescimento do mercado e a aproximação de fronteiras devido a a tecnologia de informação, uma crescente tendência em empresas de desenvolvimento de software é a distribuição do desenvolvimento em diversas equipes fisicamente separadas.
Essa distribuição apresenta vantagens como, por exemplo, a redução de custos de mão de obra.
No entanto, dificuldades também se fazem presentes, pois a agregação da característica de ambientes distribuídos exige um esforço gerencial ainda mais intenso para atingir as metas propostas.
A complexidade resultante da distribuição do desenvolvimento é percebida no processo de alocação de recurso.
É neste contexto que este trabalho busca uma alternativa tecnológica para auxiliar o gerente de projeto, mais especificamente com o processo de alocação de recursos.
Questiona- se se a natureza distribuída de sistemas multiagentes pode auxiliar o gerente na resolução desse problema complexo, hipótese sobre a qual será desenvolvida a dissertação, além de buscar- se determinar como este auxílio pode ser obtido.
Como objetivo principal desta dissertação demonstrará- se- o estudo realizado com o objetivo de propor um modelo denominado de Harmony.
Esse modelo busca empregar uma sociedade de agentes para apoiar o processo de alocação de recursos feito por o gerente de projeto.
Para este fim, a pesquisa envolve a determinação dos requisitos da atividade de alocação de recursos, utilizando os processos de modelagem propostos por e para a definição do SMA.
A fim de apoiar o objetivo principal e responder a questão de pesquisa levantada, ou seja, se a aplicação de sistemas multiagentes pode agregar valor ao processo de alocação de recursos em projetos de desenvolvimento de software, um conjunto de objetivos específicos foram estipulados.
São estes:
O restante desta dissertação está organizado em sete capítulos.
Em o segundo capítulo, são revisados os conceitos de gerência de projeto, introduzindo a visão de como norteadora dos processos gerenciais.
O processo de alocação de recursos é abordado e um conjunto de requisitos é identificado, a fim de ser utilizado como base para o desenvolvimento do modelo.
Em o terceiro capítulo, os conceitos revisados são na área de agentes.
Em esse capítulo, apresentam- se os motivos de os quais provém a crença de que esta tecnologia é aplicável para o domínio em questão.
Aqui também é revisado o processo apresentado por e, que foi adotado como base para a obtenção do modelo.
Em o quarto capítulo, trabalhos correlatos são apresentados.
É demonstrado o esforço de outros autores no trabalho com a área de alocação de recurso, e as lacunas de suas pesquisas quando aplicadas em projetos de desenvolvimento de software.
O modelo, propriamente dito, é apresentado no quinto capítulo do texto.
São descritos os resultados obtidos a cada passo do processo de modelagem adotado.
Tanto os aspectos sociais e organizacionais são expostos, como também a arquitetura de referência utilizada para a modelagem de cada agente.
Em o sexto capítulo, descreve- se o protótipo gerado com base no Harmony, ressaltando suas características.
Também é exemplificado um caso de teste usado no protótipo para o estudo do modelo.
Seguinte, no capítulo 7, são apresentadas as considerações finais deste trabalho, retomando a questão de pesquisa.
Relacionam- se também trabalhos futuros que podem vir a ser desenvolvidos como continuidade da pesquisa corrente.
Por fim, são apresentadas as referências bibliográficas utilizadas nesta dissertação, assim como o conjunto de anexos onde especificações mais detalhadas do modelo e protótipo são fornecidas.
Este capítulo terá como foco o estudo dos processos de gerência de projeto, a fim de delimitar o contexto da alocação de recursos sobre o qual se proporá um modelo baseado em sistemas multiagentes.
Apenas recentemente, os processos de gerência de projetos começaram a ter seu valor reconhecido.
Como cita, tais processos eram vistos por as empresas como uma atividade de acompanhamento de elementos chaves do projeto, tais como recursos e cronogramas, a fim de prover informações a instâncias superioras da empresa.
Embora sejam atividades significativas do processo de gerência de projeto, estas são apenas um subconjunto das mesmas.
Ao longo de o final da década de oitenta e toda a década de noventa, os negócios tiveram sua complexidade aumentada sensivelmente.
Por conseguinte, os diversos processos de gerência de projeto, vigentes até então, entraram em colapso.
A crescente insatisfação com esses processos e suas deficiências, para corretamente solucionar questões críticas, levaram a resultados alarmantes.
Em uma pesquisa denominada CHAOS, referência amplamente citada na área, o Standish Group demonstrou a situação então corrente no ambiente de desenvolvimento de projetos.
Constatouse, nesta pesquisa, que cerca de 250 bilhões de dólares eram gastos todo o ano em projetos de desenvolvimento de sistemas de informação.
No entanto, apenas 16.2% destes projetos eram bem sucedidos e 31% do total de projetos desenvolvidos eram cancelados antes mesmo de seu término, o que resultava num custo de 81 bilhões de dólares para o governo e empresas americanas.
O critério de sucesso para essa pesquisa limitava- se à entrega dentro de o prazo e do orçamento previsto, negligenciando fatores como qualidade.
Se aplicados, possivelmente os números obtidos poderiam ser ainda mais alarmantes.
Gradualmente, o mercado tomou consciência de que o fundamental para o sucesso de um projeto é a sua gerência.
Em o restante deste capítulo, definirá- se- conceitos fundamentais, tais como:
O objeto de estudo da atividade de gerência de projeto é o projeto, propriamente dito.
Faz- se necessário, então, adotar um conceito para definir esse objeto.
Define um projeto por as suas características, sendo elas:
Propósito Único:
Cada projeto deve apresentar um propósito bem definido e único que deverá ser atingido por o esforço coletivo dos membros da equipe.
Esse propósito usualmente resulta num ou mais produtos.
No entanto, não existe obrigatoriedade de haver um produto ao término de seu ciclo de vida.
Além disso, segundo, faz- se necessário ressaltar que a unicidade presente no projeto, necessariamente, não está presente na categoria do mesmo.
Por exemplo, a construção de um conjunto de prédios é uma categoria genérica, embora cada prédio apresente características próprias e únicas.
Temporalidade: Todo o projeto tem uma duração limitada, ou seja, pode- se identificar um ponto de início e um de fim.
Qualquer esforço cuja duração é indefinida ou perpétua não pode ser considerado um projeto.
A temporalidade de um projeto, segundo, não reflete, via de regra, no produto ou serviço resultante.
Essa característica também está presente no caso de se constatar que o conjunto de metas de um projeto não mais poderá ser atingido.
Necessidade de Recursos: Define que todo o projeto deve alocar recursos para a sua realização.
A quantidade de recursos irá variar de acordo com as dimensões do projeto, mas um mínimo estará sempre presente.
Os recursos de um projeto podem transcender fronteiras departamentais, envolvendo diversas áreas.
Patrocinador: Todo o projeto deve apresentar pelo menos um patrocinador que irá prover as verbas e determinar o curso que será seguido.
Embora alguém deva assumir o papel de patrocinador principal, diversos grupos podem estar envolvidos.
Incerteza: Uma das características fundamentais presentes em projetos são as incertezas e os riscos que as acompanham.
Como um projeto é, por definição, único.
Ou seja, nunca foi executado antes, diversas perturbações podem ocorrer durante o seu ciclo de vida.
Assim, faz- se presente a possibilidade de não se atingir os objetivos esperados.
Essas características, citadas por, e constituem atributos fundamentais para a classificação de um conjunto de atividades num projeto.
No entanto, outros aspectos também estão presentes.
Além de os atributos anteriormente citados, uma característica fundamental, encontrada em todos os projetos, é a restrição tripla.
Este é o termo usado para se referir a três aspectos relacionados e fundamentais, comumente chamados de dimensões.
São eles tempo, custo e escopo.
A figura 2-1 representa a restrição tripla.
Observa- se que, ao iniciar- se um projeto, buscase atingir um determinado escopo, num período de tempo específico e dentro de um orçamento previsto.
Este ponto é representado no gráfico por o objetivo.
A inerente relação entre esses três aspectos torna- os centrais no sucesso de um projeto.
Este dependerá da habilidade de um gerente em administrar as dimensões, uma vez que a mudança num aspecto afetará os outros.
Logo, segundo, a obtenção dos objetivos esperados não depende apenas de características técnicas da equipe, mas sim da habilidade gerencial da pessoa responsável.
É com base no contexto citado anteriormente que a gerência de projeto ressurge como um fator fundamental para o sucesso de um projeto.
Faz- se necessário, assim, adotar uma definição para o termo e abordar seus aspectos fundamentais.
Segundo, a gerência de projeto é definida como a aplicação de conhecimentos, habilidades, ferramentas e técnicas para atingir ou ultrapassar as necessidades e expectativas de pessoas envolvidas no processo.
Ressalta que essa definição salienta dois aspectos fundamentais do processo de gerência de projetos:
O gerente deve conciliar forças competitivas dentro de um projeto, tais como custo, qualidade, escopo e tempo, com expectativas e necessidades divergentes das pessoas envolvidas.
Essas atividades constituem um conjunto exclusivo da gerência de projeto, em oposição a outras atividades existentes dentro de um processo de desenvolvimento de software.
A fim de detalhar mais o âmbito de gerência de projeto, optou- se por a adoção do modelo proposto por o Program Management Institute, devido a sua larga adoção por parte de a comunidade em geral.
Os conhecimentos da área de gerência comum estão presentes na gerência de projeto, mas nem todas as suas técnicas e disciplinas podem ser aproveitadas.
Isso devido a as diferenças fundamentais entre os tipos de atividades envolvidos em cada uma das gerências.
Enquanto a comum trata com questões rotineiras e repetitivas, o gerente de projeto deve trabalhar com atividades de risco e únicas.
Além disso, o gerente de projeto deve apresentar um conhecimento sobre área da aplicação sendo desenvolvida, de modo a melhor entender e estimar os requisitos e riscos envolvidos no desenvolvimento.
Conhecimento de aplicação inclui informações tais como logística, marketing, dinâmica de funcionalidade dos departamentos e questões legais.
A interdisciplinaridade do conhecimento necessário para satisfatoriamente gerenciar um projeto é extensa, tornando- o, por conseguinte, difícil de ser estudado quando tratado como um objeto único.
Assim, as técnicas e conhecimentos envolvidos foram agrupados em subconjuntos ou áreas chaves.
As literaturas e agrupam as técnicas e conhecimentos envolvidos na gerência de projeto em 9 áreas.
Quatro dessas áreas são classificadas como centrais e quatro como facilitadoras.
As áreas de conhecimento centrais, ou core areas, são aquelas que diretamente trabalham em prol de os objetivos do projeto.
As áreas facilitadoras, por outro lado, provêem suporte para a conclusão do mesmo, mas não atuam diretamente sobre seus objetivos.
Gerência de integração:
A gerência de integração é uma exceção à classificação oferecida por o.
Esta área não é considerada uma área central ou facilitadora, permanecendo fora de essas classificações.
Embora, como ressaltado em, todo o processo de gerência seja uma atividade de integração, é através dos processos desta área de gerenciamento que os diferentes aspectos do projeto são consolidados por o gerente.
Dentro de essas atividades está o desenvolvimento do plano do projeto e o acompanhamento de sua execução, assim como o controle de alterações provenientes de pedidos de mudanças.
As quatro áreas de conhecimento centrais incluem as dimensões da restrição tríplice, ou seja, tempo, custo e escopo.
A quarta área apresenta os processos de controle de qualidade.
Gerência de Custo envolve o planejamento e gerenciamento das verbas e custos associados a um projeto.
Aponta quatro processos principais envolvidos no gerenciamento de custo:
A work breakdown structure, ou WBS, consiste no resultado de uma análise, definindo o escopo total do projeto, normalmente organizada na forma de árvores de atividades.
Este documento, entre outros, como avaliação de riscos, são utilizados para determinar as estimativas de custos do projeto.
Será através das estimativas de custos geradas, do cronograma e do plano de gerência de risco que o gerente de projeto irá criar a baseline de custos, a fim de destinar verbas.
Por fim, estão contidas nessa área de conhecimento as atividades de controle de custo, acompanhando o projeto e provendo revisões em estimativas e atualizações das verbas.
Gerência de Escopo: Inclui os processos de inicialização, em os quais é selecionado um gerente, identificadas as restrições e pressupostos do projeto.
Dentro de os processos de planejamento e definição de escopo está a geração da Work Breakdown Structure e do plano de gerência de escopo.
Os processos para verificar se o escopo está sendo respeitado e o controle de mudanças do mesmo, também, são partes dessa área.
Gerência de Qualidade: É composta por três processos fundamentais:
Planejamento, garantia e controle de qualidade.
O processo de planejamento envolve a identificação dos padrões de qualidade necessários para o projeto e como estes serão satisfeitos.
O processo de garantia de qualidade envolve o acompanhamento do projeto ao longo de seu ciclo de vida, avaliando o desempenho de forma a prover segurança e confiabilidade no mesmo, em relação a os padrões estipulados.
Por fim, o controle abrange a avaliação de resultados de forma a determinar se estes estão de acordo com o que foi planejado.
No caso de identificar- se possíveis fatores causadores de insatisfação, cabe a este processo determinar como tratar- los.
Gerência de Tempo: Constitui mais uma área central no processo de desenvolvimento de software.
Os primeiros processos da gerência de tempo incluem a definição das atividades que deverão ser executadas no processo, assim como o seqüenciamento das mesmas.
A partir de essas definições, o gerente deve estimar o tempo necessário para que cada atividade seja concluída.
Com base nessas estimativas, e utilizando definições adicionais, tais como os requisitos de recursos gerados por o processo de gerência de custo, o gerente de tempo deve criar um cronograma de base do projeto.
O acompanhamento desse cronograma e o controle de mudanças que venham a acontecer durante o ciclo de vida também são processos da área de gerência de tempo.
Gerência de Recursos Humanos: É responsável por os processos da gerência de projeto que trabalham com a organização, aquisição e desenvolvimento de pessoal.
O planejamento organizacional é o processo usado para gerar o plano de gerenciamento de pessoas, assim como para determinar os papéis e responsabilidades a serem atribuídos em cada projeto.
A aquisição de pessoas e o acompanhamento de desempenho das mesmas durante o projeto são processos atribuídos a está área de conhecimento Gerência de comunicação:
É responsável por a geração, coleção e distribuição de informações para os stakeholders sempre que estes as necessitarem.
Entenda- se por stakeholders, toda e qualquer pessoa que é afetada por o projeto, incluindo patrocinadores e a sua equipe.
Assim, os processos envolvidos com essa área incluem o planejamento da comunicação e distribuição de informações, como também o acompanhamento do desempenho do projeto como um todo, mantendo a equipe e pessoas envolvidas cientes do andamento das atividades.
Por fim, esta área também é responsável por o processo de fechamento administrativo, onde informações são coletadas e disseminadas para formalizar o encerramento do projeto ou de uma de suas fases.
Gerência de risco:
Corresponde aos processos que identificam, analisam e tratam de riscos para o projeto.
Os processos envolvidos nesta área são os de planejamento de gerência de riscos e a identificação dos mesmos.
Os processos de análise quantitativa e qualitativa dos riscos e o planejamento de respostas dos mesmos também estão presentes.
Por fim, existe a preocupação de acompanhamento e controle do projeto, onde se observa riscos persistentes, identifica- se novos e avalia- se a efetividade dos planos tomados.
Gerência de Aquisição: Delimita os processos, cujos propósitos estão relacionados com a aquisição de bens ou serviços para atingir o escopo do projeto.
De entre estes processos está o planejamento de como deverão ser feitas as solicitações e aquisições.
Durante a ocorrência do projeto, a administração das solicitações, a seleção de provedores de serviços ou benefícios e o gerenciamento das relações com os vendedores também são processos que recaem sobre esta área de conhecimento.
As nove áreas apresentadas anteriormente têm processos que ocorrem ao longo de todo o ciclo de vida do projeto.
Para melhor compreensão do comportamento desses processos, identificou quatro fases no ciclo de vida gerencial.
Em o tópico anterior, foi apresentada a classificação das atividades e conhecimentos de gerência de projeto, agrupando- as segundo o domínio das informações envolvidas.
No entanto, dentro de cada uma dessas áreas, existem processos relacionados que ocorrem ao longo de todo o ciclo de vida do projeto.
E agrupam esses processos em cinco grupos distintos.
Os processos de inicialização dão inicio a cada fase de um projeto, autorizando sua execução.
Por outro lado, os processos de planejamento executam a definição e planejamento dos objetivos a serem atingidos, selecionando o melhor curso de ação para alcançar- los.
O terceiro grupo consiste em processos de execução, onde recursos são coordenados segundo os planos definidos anteriormente.
Os processos de controle asseguram que os objetivos estipulados serão atingidos, através do monitoramento do progresso da equipe.
Por fim, existem os processos de fechamento, que formalizam a aceitação do projeto como um todo, ou da fase que está sendo concluída.
Em os dois últimos tópicos, buscou- se identificar categorias de processos relevantes para a atividade de gerência.
Estes são executados ao longo de o ciclo de vida da gerência de um projeto que, por sua vez, pode ser classificado em fases.
A gerência de projeto pode ser classificada em quatro fases.
Essa classificação não é unânime, mas, de uma forma geral, é a mais comumente encontrada.
Como demonstrado na figura 2-3, concepção e desenvolvimento são classificados como fases em as quais a praticabilidade do projeto é verificada, enquanto a implementação e fechamento são consideradas fases onde o projeto é adquirido.
Apresenta a Concepção como primeira fase de um projeto, onde os primeiros esboços de estimativas e de planos são criados, assim como as descrições iniciais.
Será nessa fase que uma primeira versão da WBS (Work Breakdown Structure) será gerada como parte da gerência de escopo.
A fase de Desenvolvimento segue à Concepção, sendo gerada a partir de as informações obtidas na fase anterior.
Em este período, os gerentes envolvidos irão refinar os planos e diversas estimativas criadas anteriormente.
O detalhamento de pontos previamente encontrados é buscado.
A WBS será reavaliada, acrescentando novas atividades, detalhando outras existentes.
Ressalta que a abordagem em fases permite minimizar tempo e custo, evitando que esforços maiores sejam empregados sobre idéias inexeqüíveis.
Uma vez vencida a fase de Desenvolvimento, tem início a Implementação.
Em este período, a equipe de projeto irá desenvolver o trabalho necessário para atingir as suas metas, gerando estimativas definitivas e precisas.
A última fase apresentada por é o Fechamento, em que as diversas atividades pendentes do projeto são concluídas.
Faz parte das atividades dessa fase a aceitação do produto final do projeto por o cliente, assim como a documentação da experiência e práticas da equipe envolvida.
Em a figura 2-4, observa- se a incidência de atividades dos cinco grupos de processos distribuídas ao longo de a duração de uma fase.
É importante ressaltar que essas incidências irão se repetir de uma forma genérica em todas as fases de seu ciclo de vida.
Inserido nestas atividades, está o processo de alocação de recursos.
Esse processo, de fato, afeta e é afetado por diversas áreas chaves de conhecimento, exigindo manutenção ao longo de todas as fases do projeto.
O processo de alocação de recursos, de fato, é uma atividade crítica para o sucesso de um projeto, pois impacta diretamente sobre diversas áreas centrais de conhecimento, tais como custo, escopo e qualidade, e algumas facilitadoras, como gerência de recursos humanos.
Um recurso, no escopo deste trabalho, pode ser definido como uma entidade física ou virtual necessária à conclusão de uma atividade, sem que, no entanto, seja consumido no processo.
De uma forma geral, pode- se descrever o processo de alocação de recursos como o conciliamento destes ao longo de um período, buscando perfis adequados para atender à demanda das atividades envolvidas num projeto, respeitando as restrições de tempo e qualidade.
No entanto, esse processo não é trivial.
O gerente de projeto deve, ao definir os requisitos de cada atividade do mesmo, avaliar os recursos disponíveis.
A seleção envolve uma série de critérios, alguns objetivos, outros subjetivos, sendo a disponibilidade temporal do recurso um fator fundamental.
Os fatores subjetivos estão fortemente presentes neste domínio, pois a presença humana exerce grande influência no ambiente de desenvolvimento de software.
Estes fatores incluem aspectos como relacionamentos sociais entre os recursos e convicções não objetivas por parte de o gerente.
A o buscar- se o desenvolvimento de um modelo prescritivo para abordar o problema, em contraposição a um modelo descritivo, características subjetivas não serão o foco deste estudo.
Em a avaliação de critérios objetivos, a qualificação é um critério importante na seleção.
Usando este critério, o gerente de projeto será capaz de determinar se o emprego do recurso atenderá os requisitos de uma atividade, a fim de realizar- la nos prazos estipulados.
Assim, tempo e qualificação são aspectos chaves no processo de alocação.
O escopo deste processo, entretanto, não se limita a esses dois aspectos, pois uma série de fatores agrega complexidade à atividade.
O modo por o o qual os projetos são recebidos por a equipe é fundamental para o processo de alocação.
A forma como os projetos são apresentados poderá influenciar o modo como o planejamento deve ser tratado.
Uma equipe que aloca projetos por demanda não é capaz de buscar um maior aproveitamento dos recursos, enquanto aquela que planeja alocações, levando conjuntos de projetos em consideração, pode direcionar os recursos de forma a obter um melhor aproveitamento.
Assim, a alocação de um projeto pode ser considerada por demanda ou por período.
Outras classificações são possíveis.
No entanto, o ponto a ser ressaltado é que a visibilidade de entrada de novos projetos tem influência direta na otimização do processo seletivo dos recursos.
O custo de um recurso é mais um fator a ser considerado.
A gerência deve buscar o balanceamento do custo de um projeto e dos recursos empregados.
Por conseguinte, não é interessante para uma empresa colocar sempre o seu recurso mais oneroso numa atividade, se outras alternativas mais acessíveis estiverem disponíveis.
Este custo acarretará na diminuição da margem de lucro do projeto desenvolvido, ou será repassado para o cliente.
Além de os aspectos técnicos anteriormente citados, a disposição geral dos recursos deve também ser levada em consideração.
A complexidade gerencial de um conjunto qualquer de recursos aumenta consideravelmente quando estes estão distribuídos ao longo de diversas unidades produtivas.
A distribuição tem sido uma característica emergente nas empresas de desenvolvimento de software, possibilitando a redução de custos e o aumento das margens de lucro, através da utilização de mão de obra, local e maquinário estrangeiro.
Embora, financeiramente, essa opção seja atraente, no nível gerencial o desenvolvimento torna- se mais complexo de ser gerido.
A complexidade da questão de alocação aumenta ao se considerar a possibilidade da entrada de projetos ser também descentralizada.
Se este for o caso, então o planejamento de alocação pode ser feito concorrentemente por diversas entidades, dividindo um mesmo conjunto finito de recursos, o que eventualmente gerará conflito de interesses.
Além de o planejamento inicial de recursos num projeto, o acompanhamento da execução de atividades ao longo de o ciclo de vida deve ser considerado.
Em um ambiente genérico, um projeto está sujeito a diversas perturbações ao longo de sua execução.
Estas podem acontecer por diversas motivos, tais como indisponibilidade de recursos ou atrasos de atividades.
Como no desenvolvimento de software tem- se a presença forte de recursos humanos, esse fator é ainda mais crítico, pois a produtividade desses recursos é inconstante e sujeita a influências externas.
Como foi anteriormente citado, as atividades apresentam uma seqüência a ser cumprida.
O acompanhamento destas para a alocação de recursos é necessário, porque um atraso numa de elas pode se propagar para as outras atividades na seqüência.
Eventualmente, os períodos de realização dessas atividades podem ser atrasados para datas em que os recursos previamente selecionados não estejam disponíveis, exigindo a reavaliação do plano de alocação.
Em suma, o processo de alocação de recursos apresenta uma complexidade razoável em sua resolução.
Para a criação de um modelo de alocação, analisou- se o cenário previamente descrito e se obteve um conjunto de requisitos.
Um modelo de alocação de recurso num projeto de desenvolvimento de software deve considerar diversos requisitos a fim de desempenhar eficientemente seu papel.
O primeiro aspecto a ser considerado é a natureza dos recursos, podendo classificar- los em dois tipos diferentes:
Recursos passivos e recursos ativos.
Para fins deste documento, denominam- se recursos ativos todos os recursos humanos disponíveis.
Recursos passivos, por outro lado, são aqueles que não apresentam iniciativas próprias.
Entram nesta categoria equipamentos de hardware e software, linhas telefônicas, mesas e outros objetos físicos ou virtuais.
Tem- se, por exemplo, um programador alocado para um projeto como sendo ativo, enquanto o computador utilizado por o mesmo para sua atividade é passivo.
Faz- se necessário aqui esclarecer que neste documento, embora artefatos reutilizáveis sejam considerados como parte integrante do produto final, optou- se por não tratar- los como recursos.
Essa opção dá- se devido a o fato de um artefato reutilizável não apresentar um comportamento que se enquadre numa alocação.
Um artefato alocado não deixa de estar disponível para que outros processos o utilizem.
De a mesma forma, não se pode considerar- lo como um insumo, já que ele não é consumido por o processo que o utiliza.
Para que um processo de alocação de recursos seja eficiente, este deve trabalhar com os requisitos significativos da atividade.
Tendo como referência, pode- se classificar estes requisitos fundamentais em três grupos distintos:
O primeiro relativo às características de cada recurso, o segundo quanto a o produto e o terceiro relativo ao processo de alocação de recurso.
Qualidade de Recurso:
A qualidade de um recurso está relacionada diretamente à capacidade do mesmo de, ao final de uma atividade à qual está associado, produzir um resultado dentro de os parâmetros de qualidade esperados para o projeto.
O recurso ao ser capaz de produzir este resultado se tornará um candidato apto para ser alocado na realização da atividade em análise.
A fim de determinar a qualidade de um recurso, faz- se necessária uma parametrização das habilidades possíveis.
Tal classificação deve contemplar não somente as diversas perícias possíveis de um recurso, mas também um modo de quantificar- las para posterior comparação.
Em um recurso passivo, essas métricas são estáveis e previsíveis.
No entanto, quando falamos de recursos ativos, as métricas sobre habilidades se tornam mais subjetivas.
Essa subjetividade não contribui com o processo de análise para eleição de recursos adequados para cada atividade.
Disponibilidade de Tempo para Alocação: Uma atividade apresenta um tempo necessário para sua realização.
Este, no entanto, consiste num problema no ambiente de projetos de software.
Devido a o fato de um projeto ser único, muitas atividades a serem realizadas não apresentam um tempo padrão, o que diferência o tratamento de disponibilidade de tempo entre um recurso de um projeto e de uma linha de produção.
Assim, existe também a preocupação de adaptabilidade do tempo previsto de trabalho de um recurso, uma vez que este está associado a uma estimativa por parte de o gerente de tempo.
Ainda dentro de a disponibilidade de tempo para alocação, deve- se considerar o período de preparação de um recurso.
Um programador, por exemplo, alocado a uma atividade não é imediatamente produtivo, um período de integração é necessário.
Disponibilidade de tempo produtivo:
A disponibilidade tempo produtivo diz respeito ao tempo empregado no desenvolvimento de que o recurso dispõe numa medida de tempo qualquer.
Essa característica deve ser levada em consideração para a estimativa de duração de uma atividade.
Compreende- se dentro de esta característica também a disponibilidade de horas extras máximas, no caso de haver necessidade para correções de cronograma.
Capacidade Produtiva: A capacidade produtiva é um aspecto muito próximo de a disponibilidade de tempo produtivo.
Enquanto esta última refere- se à quantidade de horas disponíveis para cada recurso trabalhar num período de tempo, a característica em questão diz respeito à produtividade dentro deste período de tempo.
Mais uma vez, existe diferença na capacidade produtiva entre um recurso passivo e ativo.
O recurso passivo apresenta uma produtividade constante.
Uma impressora hipotética, por exemplo, sempre terá uma velocidade constante de impressão, o que determina a quantidade máxima de folhas impressas num período fixo.
Por outro lado, um recurso ativo apresenta uma série de fatores que afetam sua produtividade de forma pouco previsível.
Tais fatores, como planos de incentivo e políticas motivacionais, estão fora de o escopo deste trabalho.
Refere- se a esta variabilidade como flutuação estatística.
Custo de produção:
Um recurso apresenta sempre um custo produtivo, normalmente representado na forma de custo por horas produtivas.
Esse custo pode ser expresso de diversas formas, como em recursos ativos e passivos.
A seleção de recursos deve considerar esses fatores no momento da alocação inicial e em eventuais perturbações que venham a acontecer.
Características como custo por horas extras entram dentro desse critério.
Modelo iterativo:
No decorrer de os anos, o processo de desenvolvimento de software apresentou mudanças na tentativa de comportar a demanda crescente de software mais complexos.
O modelo iterativo é uma destas mudanças.
Através da seleção de grupos específicos de casos de usos e abordando uma coleção de riscos, o gerente de projeto trata uma interação por vez do projeto.
Estas iterações podem ser vistas como mini projetos dentro de o projeto maior, cada uma entregando um produto, podendo ou não ser incremental ao produto anterior.
Desta forma, a análise do projeto torna- se mais simples e os riscos menores, pois os testes podem ser realizados com plenitude sobre um produto de complexidade inferior ao projeto total.
Em o evento de um objetivo não ser atingido, os recursos desperdiçados serão menores, pois serão apenas aqueles relativos à interação, e não ao projeto como um todo.
O processo de alocação de recursos deve apresentar, por conseguinte, a capacidade de tratar iteratividade, a fim de ser empregado em projetos de maior porte, onde a utilização deste modelo é mais crucial.
Prazos: Todo o produto apresenta um conjunto de prazos para a sua entrega.
Em o modelo iterativo, esses prazos estão presentes não somente em nível de projeto final, mas para cada mini projeto representado por uma iteração.
O processo de alocação de recursos deve ter estes limites temporais como objetivos tanto no planejamento para alocação, quanto na escolha de cursos de ações no tratamento de perturbações ao longo de o ciclo de vida do projeto.
Reutilização: A reutilização de artefatos tem crescido em importância no processo de desenvolvimento de software.
Um artefato reutilizável pode ter diferentes tipos de natureza, tais como componentes ou frameworks.
Suas utilizações podem diminuir ou mesmo nulificar o tempo necessário para a execução de uma atividade.
O processo de alocação de recurso deve levar esses fatores em consideração na administração de tempo das atividades.
Não apenas características dos recursos devem ser levadas em consideração como necessidades na definição de um modelo de alocação de recurso.
O processo de alocação de recursos impõe certos requisitos importantes para o modelo.
Seqüência: Um projeto apresenta um workflow de atividades.
Como já foi visto no capítulo de Gerência de Projeto, esse workflow é chamado de diagrama de atividades dentro de o processo de gerência.
Esta representação é utilizada por o gerente de projeto para determinar o tempo de duração do projeto como um todo.
A ferramenta também determina uma ordem, ou seqüência natural, em que as atividades deverão ocorrer.
O modelo deve respeitar essa seqüência.
Existem diversas definições para o que constitui um workflow, sendo, na sua maioria, muito semelhante entre si, divergindo apenas em aspectos menores.
Segundo, workflow é constituído por a automação total ou parcial de um processo de negócio, em que a realização do processo, o intercâmbio de informação ou a passagem de documentos entre os agentes de execução, é necessário.
Segundo, a definição de workflow está diretamente ligada ao modelo de processos de uma empresa.
As atividades, freqüentemente definidas como repetitivas de cada funcionário ou maquinário, são mapeadas e registradas na forma destes modelos.
Limites Temporais: Ainda dentro de o processo de gerência de tempo, a preocupação do modelo também deve incluir as datas limites estipuladas por o gerente de projeto.
O modelo deve estar comprometido com o comprimento destas datas tanto quanto possível.
Balanceamento de Recursos:
Outro requisito a ser considerado é o balanceamento de recursos.
Deve- se buscar o melhor balanceamento possível dos recursos com as atividades, respeitando seus requisitos.
Assim, evita- se tanto a ociosidade desnecessária quanto a sobrecarga de um recurso preferencial.
Sincronização: Uma atividade dentro de um projeto pode requisitar alocação de diversos recursos simultâneos que viabilizam sua conclusão.
O modelo, por conseguinte, deve ser capaz de negociar entre os diversos recursos para sincronizar- los com as mesmas atividades.
Confiabilidade: Deve existir um alto grau de confiabilidade por parte de o processo.
Um recurso, uma vez comprometido em fazer uma atividade, deve executar- la da melhor forma possível.
Capacidade Adaptativa: Todo o processo de gerência de projeto está sujeito a diversas perturbações ao longo de o processo, tais como reorganização de cronogramas ou indisponibilidades momentâneas ou permanentes de recursos.
Um dos requisitos a ser atendido por um processo de alocação de recursos é a capacidade de se adaptar e tratar essas perturbações, mantendo a validade do planejamento ao longo de todo o processo e não apenas na fase de concepção.
Priorização de Custos:
Outro requisito para alocação de recurso é o cuidado com os custos na tomada de decisão.
Sempre onde houver soluções igualmente eficientes, aquela que tiver o menor custo deve ser priorizada.
Compartilhamento de Recurso:
Por fim, um dos requisitos mais importantes no processo de alocação em projetos de desenvolvimento de software é a necessidade constantemente presente de compartilhamento de recursos limitados.
Muitas vezes, encontra- se, ao longo de um processo, ou mesmo entre projetos diferentes, atividades concorrendo por os mesmos recursos para sua execução.
O processo de alocação deve tratar esse conflito, oferecendo alternativas.
Distributividade: Os recursos envolvidos no processo de alocação podem estar distribuídos em diversas áreas de desenvolvimento da empresa.
Assim, faz- se necessário que o processo de alocação seja capaz de superar as limitações que esta condição impõe.
A o longo deste capítulo, foram apresentados os conceitos de projeto e gerência de projeto, destacando- se questões como as fases envolvidas no processo gerencial e as áreas utilizadas para agrupar conhecimentos e práticas.
A partir de essas definições, introduziu- se o processo de alocação de recursos, caracterizando sua complexidade.
Tomando como base as características deste processo e trabalhos como, buscou- se definir um conjunto de requisitos a serem considerados no desenvolvimento do modelo de alocação.
Estes foram agrupados em três categorias:
Requisitos de recurso, de produto e de processo.
Uma vez caracterizado o problema de alocação de recursos e definidos os requisitos necessários para o modelo, faz- se necessário avaliar a tecnologia de sistemas multiagentes, a fim de determinar sua adequação para a resolução das questões envolvidas no domínio escolhido.
A tecnologia de agentes tem encontrado um crescente suporte por parte de o meio acadêmico e no ambiente tecnológico.
Destaca que esse apoio é oriundo do aumento da complexidade dos requisitos de desenvolvimento.
A dificuldade no desenvolvimento e manutenção de sistemas complexos tornou- se uma limitação severa, e a tecnologia de agentes surgiu como uma alternativa interessante para a resolução do problema.
A abordagem orientada a agentes nem sempre constitui a melhor solução para um problema.
Buscando indicações de que esta tecnologia é adequada para a criação de uma solução para o problema abordado no capítulo 2, encontrou- se referência em.
O autor afirma que o domínio apropriado para a utilização de sistemas multiagentes deve apresentar quatro características:
1) Distribuição intrínseca de dados.
Como já citado anteriormente, considera- se como requisito para o processo de alocação, a possibilidade de distribuição dos recursos e suas informações.
2) Autonomia.
Um sistema multiagente deve ter autonomia em suas subpartes, sem perder a estrutura organizacional.
Isto está presente neste domínio, a partir de o momento que cada atividade no projeto pode ser desempenhada e controlada independentemente, desde que respeite as precedências definidas.
3) Interações Complexas.
O problema deve apresentar interações complexas, exigindo negociação e coordenação por parte de os subsistemas envolvidos.
Esse aspecto é bastante real no processo de alocação de recursos, uma vez que estes são em quantidade e capacidade limitada, podendo ser requisitados em diversas atividades simultâneas.
4) Dinamismo.
A solução do problema deve compreender a possibilidade de mudanças dinâmicas em tempo real.
Observa- se essa característica principalmente por a possibilidade de perturbações presentes no processo de alocação, já que um recurso pode se tornar indisponível a qualquer momento ao longo de o ciclo de vida do projeto.
Isto implica em que o processo não pode, via de regra, ser inteiramente documentado, pois está sujeito a mudanças imprevisíveis.
A abordagem de agentes tem aproximadamente 20 anos, tendo sido primeiramente formalizada em 1982.
Apresenta a abordagem como derivada da área de Inteligência Artificial Distribuída (dai -- Distributed Artificial Intelligence).
Por conseguinte, esta herda algumas características fundamentais da Dai, tais como modularidade, velocidade e confiabilidade.
De fato, as origens de agentes remontam um período anterior, quando Hewitt, em 1977, propôs objetos autocontidos e interativos denominados de atores.
mais de vinte anos depois do princípio da tecnologia de agentes, a comunidade científica continua discordando quanto a uma definição do que consiste ser um agente.
Esse conceito ilude os pesquisadores da área, gerando polêmicas similares ao conceito de inteligência, na comunidade de inteligência artificial, como coloca.
Aponta pelo menos duas causas fundamentais para a confusão de agentes.
O termo agente não é proprietário da comunidade científica que o utiliza, sendo empregado em situações cotidianas tais como:
Agentes de viagem e agentes de estado.
Dentro de a comunidade científica, este termo é usado por grupos de pesquisadores de áreas heterogêneas.
Define agentes como sistemas computacionais que estão situados num ambiente, em o qual são capazes de tomar ações autônomas para atingir seus objetivos.
Através dessa definição, introduz à noção de agente a característica de autonomia e reatividade ao ambiente, representada na figura 3-1.
Essa definição é atribuída a agentes genéricos.
A o referir- se a agentes inteligentes, o autor, juntamente com, acrescenta como característica a habilidade social, ou seja, a capacidade de interagir com outros ambientes ou mesmo seres humanos através de uma linguagem de comunicação.
O autor ainda adiciona a proatividade à lista, que pode ser interpretada como o comportamento, não relacionado a respostas de estímulos do ambiente, a fim de atingir seus objetivos.
Acrescenta que alguns pesquisadores trabalhando com Inteligência Artificial atribuem aos agentes características humanas.
As noções mentalistas que caracterizam os agentes para esses pesquisadores incluem conhecimento, crenças, intenções e obrigações.
De fato, o conjunto de características que podem ser atribuídas aos agentes varia significativamente de acordo com a aplicação e o domínio.
Por ser uma área experimental, e a tecnologia estar constantemente sendo abordada sobre ângulos diferentes, existem diversos tipos de agentes.
Como ressaltado em, a classificação de proposta em é limitada, pois é dependente da tecnologia utilizada.
Assim, existe uma tendência desta taxionomia tornar- se obsoleta rapidamente, à medida que a tecnologia envolvida na área avança.
Wooldridge oferece uma forma mais interessante de classificar os agentes, baseando- se na arquitetura interna que estes apresentam.
Através da análise de arquiteturas concretas, oferece quatro categorias de classificação:
Arquiteturas baseadas em lógica, arquiteturas reativas, arquiteturas BDI e arquiteturas em camadas.
Arquiteturas baseadas em lógica buscam a representação de diversos aspectos do mundo através de lógica.
Em esta categoria, a tomada de decisão dos agentes baseia- se na prova de teoremas.
No entanto, ressalta a dificuldade em modelar com precisão os aspectos do mundo em lógica de primeira ordem e a ausência de garantia que este irá chegar a uma conclusão em determinados casos.
As arquiteturas reativas baseiam- se na total falta de representação de informação por simbolismos.
Agentes reativos basicamente respondem a estímulos do ambiente de forma prédeterminada, não havendo deliberação sobre o assunto.
Os agentes baseados em arquiteturas BDI têm processo de decisão centrado na manipulação de estruturas de dados que representam os estados mentais.
Estes mais comumente são crenças, desejos e intenções.
Por fim, pode- se classificar ainda aqueles com arquiteturas em camadas.
Esta permite que o processo deliberativo tome parte em diferentes níveis da arquitetura, permitindo que cada camada raciocine sobre um aspecto ou nível do ambiente.
Sistemas multiagentes, definido por, pode ser considerado como um grupo de agentes inteligentes, que interagem entre si, a fim de atingir um conjunto de metas ou realizar um conjunto de tarefas.
Observa- se que parte fundamental da definição apresentada implica em conceitos de interação, comunicação e organização social.
A comunicação é parte fundamental para que um grupo de agentes interaja entre si e seja capaz de exercer habilidade social.
Através desta, é possível para os agentes coordenarem suas ações, buscando sistemas mais coerentes.
Coerência, neste contexto, define o quanto uma sociedade é capaz de trabalhar como uma unidade.
Os diversos relacionamentos que surgem através da comunicação exigem que haja coordenação entre os membros da sociedade, a fim de evitar que esta se deteriore num conjunto de ações individuais caóticas.
Segundo, para que tal deterioração aconteça, basta que um indivíduo apresente uma visão parcial ou imprecisa do sistema e que suas ações sejam capazes de interferir com as de outros agentes, ao invés de apoiar- las.
A coordenação é definida em como o processo em que os agentes raciocinam suas ações e as ações de outros para garantir a funcionalidade coerente de uma comunidade.
Dentro de o processo de coordenação, destaca a cooperação.
Esta existirá quando um processo de coordenação envolver agentes com objetivos não conflitantes, ou seja, agentes não antagonistas.
A cooperação pode suprir a incapacidade de um agente atingir seu objetivo, seja por falta de recurso, de visão do ambiente ou de conhecimento.
Uma forma de cooperação é o planejamento, em o qual uma sociedade de agentes adota um plano de ação que irá contemplar os objetivos individuais de cada agente.
Esses planos podem ser centralizados, quando apenas um agente os constrói, ou distribuídos, quando são o resultado do esforço de vários agentes.
Enquanto a cooperação pressupõe a coordenação de agentes não antagonistas, existem situações onde objetivos conflitantes devem ser atendidos.
Em esse caso, faz- se necessária a negociação entre os membros envolvidos da sociedade.
Em a negociação, duas abordagens podem ser tomadas:
As focadas no ambiente e as focadas nos agentes.
Quando o foco está no ambiente, o esforço reside na criação de regras que permitam aos agentes desempenharem suas funções de forma ordenada e produtiva.
Por outro lado, quando o foco está no agente, assume- se que os agentes apresentam um grau de racionalidade e, através de uma linguagem e uma abstração do problema, são capazes de buscar uma resposta.
Em esse contexto, as redes de contrato são uma forma de abordagem bastante utilizada, onde agentes coordenam suas ações através de contratos assumidos na sociedade.
Esta será a forma adotada por o modelo em proposição.
A fim de haver coordenação entre agentes, é necessário que estes sejam capazes de se comunicar, trocando mensagens e informações.
A comunicação pode ser expressa através de atos de fala, que representam ações a serem tomadas.
Diversas linguagens podem ser usadas para representar os atos de fala, tais como KQML, no entanto, adotará- se- neste trabalho a ACL (Agent Comunication Language).
A escolha se dá por o fato de que esta linguagem encontra- se difundida entre pesquisadores da área, além de ser adotada como padrão por a FIPA (Foundation of Intelligent Physical Agent).
Um ato de fala apresenta sempre um significado que, através da ACL, é padronizado segundo um protocolo.
O resumo dos atos de fala na linguagem escolhida é:
Accept Proposal: Aceita uma proposta recebida.
Agree: Concorda com a execução de um serviço.
Cancel: Cancela a execução de um serviço requisitado por outro agente Call for Proposal:
Executa uma chamada de propostas para a execução de um serviço.
Inform: Informa a veracidade de uma proposição Propose:
Envia uma proposta para a execução de um serviço Query-Ref:
Questiona um objeto através de uma expressão Refuse:
Recusa a execução de um serviço Reject Proposal:
Rejeita uma proposta recebida para a execução de um serviço.
Request: Requisita a execução de um serviço.
Além de os atos de falas, uma série de parâmetros deve ser informada na especificação da mensagem.
A tabela 3-1 resume esses parâmetros:
Referência a ser adicionada à resposta desta mensagem a ser utilizada por o emissor para a identificação da mesma:
In--reply-to Referência a uma mensagem anterior para qual esta mensagem é uma resposta:
Envelope Informações necessárias para o envio da mensagem a serem utilizadas por o serviço de transporte.
Tipo de linguagem utilizada no conteúdo da mensagem:
Ontology Identifica qual a ontologia que deve ser adotada para obter o correto significado dos símbolos presentes no conteúdo:
Reply-by Estabelece o prazo máximo para a resposta da mensagem:
Protocol Identifica o protocolo utilizado por o agente emissor:
Conversation-id Identifica conjunto de atos de fala que constituem uma conversação A fim de modelar uma solução de sistemas multiagentes, faz- se necessário o emprego de uma metodologia.
Diversas metodologias estão disponíveis, tais como metodologia Gaia, modelagem de agentes, embora não seja considerada uma metodologia.
Optou- se, no entanto, por o processo de modelagem proposto por.
Essa opção, complementada por, foi escolhida por apresentar todas as ferramentas necessárias para representar os diversos aspectos de uma sociedade multiagente, tais como sua comunicação e organização social.
Alem disso, a documentação e os autores do processo são de fácil acesso.
O fato desta dissertação e o processo em questão estarem inseridos no mesmo grupo de pesquisa, MASP, constitui o terceiro motivo da escolha feita.
O objetivo do projeto MASP (MultiAgent Systems develoPment) envolve a especificação de uma linguagem de modelagem para sistemas multiagentes (SMAs) e o conjunto de atividades a serem desenvolvidas para a construção de um sistema baseado neste paradigma.
A fim de representar as características relevantes da estruturação social e interação dos agentes, algumas ferramentas de diagramação serão utilizadas neste trabalho.
Estas visam modelar aquilo que denominou como a etapa de projeto de sociedade, ou seja, o nível macro do sistema, em oposição ao nível micro, ou estrutura interna do agente.
Diagramas de casos de uso como definidos na UML(,) visam definir os requisitos funcionais do sistema, incluindo as coordenações entre os agentes.
Posterior a sua primeira referência em, os autores de acrescentaram a finalidade de identificação de papéis de agentes ao diagrama de casos de uso.
Os agentes serão definidos através do estudo destes papéis.
Cada agente apresentará pelo menos um papel, podendo acumular funções.
No entanto, o diagrama de casos de uso não é capaz de representar todos os aspectos estáticos de relacionamento da sociedade.
Para tal, apresenta o diagrama da Sociedade, onde as comunicações mais freqüentes entre os agentes são consideradas estáticas e freqüentemente denominadas de associações.
Estas podem ser tanto temporárias, quando não apresentam uma relação hierárquica associada, ou permanente, quando uma resposta por parte de o agente inquirido é obrigatória.
Além disso, características como papéis, cardinalidade de responsabilidades podem ser representadas no diagrama.
Enquanto o diagrama de sociedade representa aspectos estáticos, o diagrama de interação seqüencial demonstra o relacionamento dinâmico que acontece entre os agentes.
Em a comunicação da sociedade, não é possível invocar métodos de outros agentes, mas sim trocar mensagens, como já exposto no capítulo 3.
Este diagrama permite a visualização da dinâmica de troca de mensagens, permitindo representar aspectos tais como negociações e cooperações.
O diagrama de funções permite uma representação mais apurada de determinados aspectos de um agente.
Através desse diagrama, faz- se possível a documentação, na forma de tabela, do relacionamento de responsabilidades, restrições e serviços disponíveis para cada papel que um agente assume.
Por fim, têm- se os diagramas de classes de negócios, também apresentados na UML.
Embora esses diagramas não façam parte do processo de modelagem apresentado por Souza, foram utilizados neste trabalho.
Seu emprego foi no início da modelagem, com a finalidade de elucidar melhor o domínio escolhido através da criação de um modelo conceitual.
A o longo deste capítulo, diversos conceitos da área de agentes e sistemas multiagentes foram apresentados, incluindo as motivações que direcionaram a aplicação desta tecnologia no domínio escolhido.
Também foram ressaltados aspectos gerais do processo de modelagem de agentes que serão adotados para a especificação do modelo desenvolvido.
O tema de alocação de recurso é freqüentemente alvo de estudos por parte de a comunidade científica, devido a sua complexidade de manutenção.
Embora abordado por diversas óticas, nenhuma solução definitiva foi apresentada, pois a definição do domínio do problema determinará muitos aspectos práticos do comportamento de uma sociedade multiagente.
A o longo deste capítulo, apresentará- se- alguns modelos interessantes que abordam a questão de alocação.
Primeiramente, será apresentado o CIRCA, um modelo que utiliza sistemas de inteligência artificial para gerar planos de alocação, mas que não emprega a tecnologia de agentes.
Então, são apresentados os modelos Challenger e Trace, ambos, empregando a solução de agentes para abordar a questão.
Por fim, apresentará- se- o modelo de, utilizado como base desta pesquisa.
O processo de alocação de recurso utilizando Inteligência Artificial foi explorado de diversas formas.
Uma abordagem interessante, mas que desconsidera a utilização de agentes, foi apresentada em.
Em este artigo, os autores apresentam uma interface entre o processo de alocação de recurso e o planejador implementado com inteligência artificial a fim de criar planos de ação com tolerância a falhas.
O modelo proposto por é uma extensão da arquitetura CIRCA, que foi originalmente desenvolvida, em 1995, por Musliner.
A arquitetura do CIRCA cria um modelo global a partir de um estado inicial armazenado em sua base de conhecimento.
O modelo global é desenvolvido através da aplicação de todas as transições possíveis até atingir o estado final, também armazenado na base de conhecimento, criando uma rede de estados.
O planejador avalia todas as opções desta rede, verificando aqueles caminhos que trarão ganho ao processamento.
Os planos selecionados, então, são enviados para o modulo responsável por a execução.
Uma vez concluído, o executor informa ao módulo de planejamento os resultados das atividades.
A figura 4-1 apresenta uma representação deste modelo.
O modelo CIRCA II estende a arquitetura original para trabalhar com múltiplos recursos de agendamento de um plano.
A arquitetura do CIRCA II é muito similar à arquitetura original, mas acrescenta mais passos ao processo de planejamento.
Apresenta o funcionamento dessa nova arquitetura, cujo processo de criação do plano de alocação se desenvolve de mesma forma que o CIRCA I. No entanto, a partir de o seu desenvolvimento, ele é transmitido, via uma interface de comunicação, para o módulo de análise de recursos.
Este novo componente verifica se é possível alocar os recursos necessários para a realização das tarefas, através das informações contidas em sua base de conhecimento.
Se a alocação for possível, o plano é montado e depositado no Plan Cache, aguardando sua execução.
Observe figura 4-2.
No caso de um plano não poder ser agendado, o analisador de recursos irá retornar ao planejador as informações da tarefa mais custosa do processo.
O planejador, então, tentará determinar abordagens para substituir ou dividir essa tarefa de forma a ser mais facilmente tratável por o analisador de recursos.
A interface entre o planejador e o analisador de recurso é uma tentativa de maximizar o aproveitamento do sistema.
Seu objetivo é reaproveitar os planos existentes, tornando- os compatíveis com os algoritmos de alocação existentes, que dependem da natureza do domínio onde o sistema está sendo aplicado.
A arquitetura proposta apresenta preocupações com restrições de tempo, uma vez que seu intuito é possibilitar o planejamento em tempo real.
O planejador chega a considerar atributos de cada recurso para alocar- los.
No entanto, não existe uma preocupação com a distribuição de recursos, inerente ao domínio escolhido para ser trabalhado nesta dissertação.
O CIRCA apresenta uma arquitetura centralizadora, que não auxilia no tratamento de problemas distribuídos.
Durante o estudo dos trabalhos existentes envolvendo alocação de recursos e sistemas multiagentes, o modelo proposto por Anthony Chavez foi analisado devido a sua interessante proposta de trabalho com recursos distribuídos.
Em, o autor apresenta o Challenger, modelo implementado usando multiagentes para trabalhar com a problemática de recursos.
A preocupação inicial para o controle de um sistema de alocação de recursos é a complexidade do processo.
A distribuição dos recursos ao longo de diversas atividades aumenta a dificuldade de coordenação, no sentido gerencial, do processo, como já foi apontado no capítulo 2.
Foi pensando nesta problemática que Chavez implementou o modelo de gerenciamento baseado na técnica de controle orientada ao mercado.
Esta técnica, apresentada em, visa atingir o controle de sistemas complexos que, de outra forma, seriam muito complicados para coordenar, manter ou expandir.
A técnica baseia- se no princípio da economia real, em a qual, através da interação entre agentes locais, é possível obter um comportamento global coerente.
O Challenger é um modelo voltado para um domínio específico.
Os recursos em ele envolvidos são de um único tipo:
Recurso de processamento por parte de um servidor.
O objetivo do Challenger é gerenciar a alocação de processamento para tarefas de um laboratório, a fim de reduzir a quantidade, tanto de processadores subutilizados, como a quantidade de processadores sobrecarregados de atividades.
O modelo proposto apresenta agentes de serviço que auxiliam o usuário sem que ele esteja ciente do fato, ao contrário de os agentes de usuários que não apresentam esta transparência.
Além de destacar os pontos acima, ressalta outras duas características do modelo, tomadas como vantagem.
Estas características são, em verdade, provenientes da tecnologia adotada.
Modelo Robusto: O autor considera que, por não apresentar um ponto central de controle de calendários e compromissos com recursos, o sistema é menos susceptível a falhas.
Estrutura Adaptativa: A estrutura adaptativa é mais um traço herdado da tecnologia de agentes, pois permite a inclusão de novos recursos no ambiente sem que haja a necessidade real de reconfiguração.
O modelo em apresenta uma sociedade composta por apenas um tipo de agente, que com um comportamento bem definido, baseado numa estrutura de ofertas e que pode ser resumido em quatro atividades:
Origem de tarefa:
Toda vez que uma nova tarefa surge, o agente responsável gera um pedido de ofertas por parte de o restante da sociedade, passando informações básicas, tais como a identificação da tarefa, sua prioridade, etc..
Ofertas: Toda vez que um agente receber um pedido de oferta, o agente começa a montar sua resposta.
Esta se constitui numa proposta, informando quanto tempo será necessário para concluir o serviço.
Para tal oferta, o agente leva em consideração os compromissos assumidos.
O tratamento de múltiplos pedidos é feito por o agente através da adoção de um sistema de prioridade, informado por o agente menor.
A o fazer uma oferta, o agente tornase indisponível, até que esta seja respondida.
Avaliação de ofertas:
O agente que requisitou ofertas irá atrasar o seu processamento por algum tempo a fim de permitir que estas sejam enviadas.
Em o momento em que esse tempo de atraso terminar, ele avaliará as ofertas disponíveis, incluindo a sua.
A melhor será selecionada, sendo o agente responsável notificado, enquanto os outros receberão notificações de cancelamento do pedido, liberando- os.
Se nenhuma oferta, incluindo a sua, tiver chegado ao agente até o tempo de espera acabar, a primeira requisição a chegar será selecionada.
Notificação de resultados:
Quando o agente que possui a oferta selecionada terminar de processar- la, o resultado será enviado de volta para o agente que pediu a oferta, encerrando o processo.
A fim de tornar possível a operacionalidade de seu modelo, ressalta algumas suposições assumidas sobre o seu domínio.
Esse modelo baseia- se na premissa de que é possível estimar o tempo para uma determinada tarefa.
Para tal, o agente, divide um valor por a velocidade de máquina.
No entanto, é necessário que a tarefa seja finita e, por conseguinte, estimável.
Outra determinação feita por o autor diz respeito à priorização das tarefas.
Como o objetivo é otimizar o tempo médio de processamento, aquelas tarefas que têm uma estimativa de duração menor recebem prioridade.
O modelo apresentado em apresenta algumas restrições significativas.
Embora, de uma forma geral, o modelo constitui uma solução interessante para alocação de recurso, suas limitações são inerentes ao domínio escolhido.
A ausência plena de qualquer qualidade dos recursos, trabalhando com características simples de disponibilidade, torna o modelo pouco aplicável para a gerência de projeto em desenvolvimento de software, onde as atividades exigem requisitos para poderem ser satisfeitas.
Um outro modelo estudado que apresenta um sistema de multiagentes para trabalhar com proposto por Shaheen Fatima e Wooldridge.
Este modelo propõe- se a trabalhar com a alocação genérica de tarefas a recursos, fazendo uso de um sistema determinístico.
De um modo geral, pode- se descrever o modelo social do Trace como um conjunto de organizações compostas por agentes, cada qual dispondo de qualidades que serão usadas como critérios decisórios na alocação.
Os recursos apresentam um ciclo de vida medido em passos de tempo.
A o final de cada um destes, os recursos estão sujeitos a diversas modificações, pois é quando os algoritmos de planejamento e replanejamento atuam.
Em este ambiente, as três entidades centrais são as organizações, os recursos e as tarefas.
Entende- se organização por um conjunto de agentes que podem ou não apresentar características semelhantes.
Cada uma de elas apresenta um montante de conhecimento que constituem seu domínio.
Três tipos distintos de agentes constituem esse ambiente:
Agentes Permanentes:
Este tipo de agente está permanentemente alocado a um determinado grupo, permanecendo em ele indefinidamente.
Agentes Negociáveis: Estão associados a grupos, mas sua permanência não é certa.
Para atender a demanda de tarefas que são inseridas no sistema, eles podem ser transferidos entre grupos.
Gerentes de Recurso: É o terceiro tipo de agente compondo uma organização.
Ele é responsável por alugar os serviços de agentes negociáveis entre as organizações quando existe a necessidade.
A arquitetura Trace é composta por dois componentes fundamentais:
O protocolo TAP (Task Allocation Protocol) e Rap (Resource Allocation Protocol).
A função do protocolo TAP é designar tarefas aos agentes, processando- as em ordem de prioridade.
O autor também busca minimizar a quantidade de tarefas que são abandonadas por conflitos.
Este protocolo segue uma ordem específica de validação, baseando- se em redes de contrato para gerar a cooperação necessária entre os agentes.
Para toda a tarefa a ser designada a um recurso, o agente representante recebe uma proposta.
Com a finalidade de confirmar- la, ele deve avaliar suas capacidade e determinar se pode realizar- la.
Se a resposta for afirmativa, ele aceita, caso contrário, repassa a proposta para outros membros da organização.
Quando conflitos surgem entre tarefas, o problema é resolvido através do atributo de prioridade.
A maior prioridade deve ser atendida primeiro.
Se atividades não mais puderem ser cumpridas no prazo proposto, pois foram sendo preteridas por outras com prioridades maiores, serão abandonadas.
Rap é o segundo componente da arquitetura do Trace, seu objetivo é controlar a atribuição de agentes negociáveis às organizações.
Esse processo é efetuado por o gerente de recurso.
Periodicamente, cada gerente de recurso avalia a necessidade de recursos da organização, em que está inserido, com relação a a demanda de tarefas que foram enviadas.
Se existe excesso de recursos em relação a a demanda de tarefas, os agentes negociáveis podem ser transferidos para outras organizações que estejam sobrecarregadas.
O modelo de Fatima apresenta uma das arquiteturas mais interessantes de entre as estudadas.
Trace faz uso de redes de contrato para comunicação de agentes, como o modelo a ser proposto no capítulo 5.
Existe uma preocupação com a qualificação do recurso, apresentando atributos utilizados como critérios para seleção, assim como um esforço para realizar balanceamento de carga no sistema.
No entanto, existem diferenças fundamentais entre a definição do domínio utilizado por Fatima e Wooldridge e a utilizada neste estudo.
Como já foi citado no capítulo 2, os processos gerenciais em projetos diferem sensivelmente daqueles em outros ambientes.
Fatima desconsidera a sincronização de recursos numa tarefa, aspecto este que o presente trabalho considera um requisito para o domínio em questão.
Outro aspecto de divergência são as tarefas.
Para não existe nenhuma relação entre uma tarefa e outra, sendo unidades independentes.
De fato, para alocação de recursos em projetos, as atividades (análogas às tarefas em) apresentam regras de comportamento e seqüenciamento, criando um workflow.
A dependência entre atividades trás mais uma diferença.
Trace é um modelo para alocação de recursos, mas não para sua manutenção.
O modelo Harmony busca oferecer apoio a manutenção de planos de alocação tanto quanto propor- los.
O modelo M-DRAP (Multi-agent Dynamic Resource Allocation Planning) foi desenvolvido com o intuito de efetuar a alocação de recursos de produção às atividades componentes de um roteiro de produção a serem executadas em atendimento a um evento desta.
O modelo faz uso de um comportamento orientado ao mercado, ou seja, revolve o problema de alocação de recurso, formulando uma economia computacional e um equilíbrio competitivo.
Assim, os agentes da sociedade em questão competem para realizar as tarefas e, através da competição, incorporam um fator de balanceamento de carga.
A fim de desenvolver o modelo, o autor gerou um levantamento de requisitos para a alocação industrial, utilizado como base, no capítulo 2, para determinar os requisitos do domínio em foco nesta dissertação.
Utilizando uma metodologia que, posteriormente seria base dos estudos de e, Bastos definiu uma sociedade de agentes para o sistema M-DRAP.
Em a sociedade do M-DRAP, um conjunto de cinco tipos de agentes foi especificado.
Estes, cujas relações estão representadas na figura 4-3, podem ser classificados como agentes internos ao modelo e externos ao modelo.
Agente Processo do Domínio (APD):
Existe apenas uma instância desse agente num dado domínio ou empresa.
Cabe a ele a responsabilidade de atender às requisições de processos de domínios originadas por o agente humano.
Agente Processo do Negócio (APN):
Os APNs representam cada processo de negócio definido no sistema de produção.
Haverá tantos agentes desse tipo, quantos processos de negócios definidos.
A função principal de eles é iniciar o processo de licitação junto aos agentes de atividades empresariais.
Agente Atividade Empresarial (AAE):
Cada atividade empresarial é representada no sistema por um AAE.
A responsabilidade principal atribuída a estes agentes é a elaboração de propostas para atender à requisição de um processo de negócio.
Agente Entidade Funcional (AEF):
Este representa entidades da empresa, ou seja, recursos.
Cada recurso tem a responsabilidade de gerenciamento de sua agenda e seus compromissos, assim como a participação de licitações.
Cabe a esse agente também o gerenciamento e reprogramação de suas atividades alteradas por perturbações que venham a ocorrer no recurso representado.
Agente Humano (Ah):
Todos os agentes externos ao modelo do M-DRAP são representados por a classe Ah.
Os dessa classe serão responsáveis por a geração de eventos que dispararão os processos no modelo de alocação.
O processo de alocação no sistema M-DRAP baseia- se em redes de contrato.
São descritas, a seguir, as interações entre os agentes da sociedade para atender à demanda de produção.
Quando um agente humano gera um evento de produção, o APD inicia o seu processo de atendimento, criando licitações para os APN e AAE.
A o receber as propostas enviadas por estes, o agente de processo de domínio irá avaliar- las, selecionando um para si.
Sob a ótica dos agentes de atividade empresarial, ao receberem as requisições de proposta, cada um de eles irá iniciar um processo licitação com os agentes de entidade funcional.
Será com base nas propostas recebidas dos recursos que um AAE irá formar a sua proposta.
Bastos utiliza a abstração de coalizões para denotar a sincronização necessária entre AEFs quando uma atividade é formada por mais de uma operação funcional, não podendo ser atendida por apenas um recurso.
O processo de produção está sujeito a diversas perturbações ao longo de sua duração.
Estas perturbações podem decorrer tanto por problemas nos recursos, como por eventos externos, tais como a falta de energia.
Para o tratamento de elas, o AEF deve avaliar o seu recurso.
Caso seja possível uma simples substituição do mesmo, sem que haja atrasos, a opção é tomada.
Em o evento de um recurso não puder ser substituído, a coalizão ao qual este está associado reorganizará- se- para compensar a perda.
Em última instância, uma nova coalizão pode ser contratada para suprir a necessidade específica desta tarefa.
De entre todos os modelos apresentados neste capítulo, observa- se que os modelos mais robustos, tais como Trace e M-DRAP, utilizam- se de abordagens orientadas a mercado, baseando a comunicação da sociedade em atos de fala através de redes de contrato.
De um modo geral, o Challenger, CIRCA e mesmo Trace são modelos interessantes, com soluções eficientes, mas de pouca aplicação na área de projetos de desenvolvimento de software, devido a as diferenças entre a gerência de projeto e os domínios sobre os quais esses modelos foram fundamentados.
O M-DRAP utiliza- se de um domínio mais próximo de a realidade abordada neste trabalho, apresentando um conjunto de requisitos similares, sendo então o modelo proposto por Bastos utilizado como base de referência para o desenvolvimento do Harmony.
Embora os requisitos envolvidos na área de produção estejam mais próximos da alocação de recurso em gerência de projeto, eles não são idênticos.
Assim, buscará- se- o M-DRAP como um eixo norteador da pesquisa, desenvolvendo um modelo similar, mas voltado para as necessidades que a gerência de projeto apresenta.
Baseado no levantamento de requisitos realizado no item 2.3.1 e na descrição do processo de alocação de recurso realizada no tópico 2.3, foi desenvolvido um modelo multiagente capaz de trabalhar com o domínio escolhido.
O processo de criação do sistema multiagente, no entanto, deve seguir uma metodologia.
Para tal, o processo de e foi escolhido, por os motivos explicitados no item 3.4.1.
O processo proposto por e divide o desenvolvimento de uma solução multiagente em quatro fases:
Definição de requisitos, fase de análise, fase de projeto e teste.
A fim de criar um modelo prescritivo para a alocação de recursos e, antes de iniciar a geração dos agentes, o problema precisa ser entendido, como parte do processo de definição de requisito.
Para tal, um modelo conceitual, que está representado na figura 5-1, foi criado para expor o domínio escolhido.
O modelo conceitual foi gerado como uma instância do C-Wf.
O C-Wf, é um modelo de referência de objetos que representam a funcionalidade e estrutura de elementos empresariais, tais como recursos humanos, atividades empresariais e maquinário.
Esse modelo foi criado fortemente baseado em conceitos da WfMC e do Cimosa ­ (Computer Integrated Manufacturing -- Open Systems Architecture),.
O modelo conceitual do domínio apresenta uma série de entidades envolvidas, tais como iterações, habilidades e eventos.
No entanto, as duas entidades centrais do domínio são os recursos e atividades.
A entidade recurso nominal do ambiente representa um recurso que existe no ambiente real para a alocação.
Cada recurso pertence a uma categoria, representada por a entidade Tipo de Recurso.
A disponibilidade que ele apresenta está representada por as entidades calendários.
Um recurso pode dispor de um calendário padrão, ou de um calendário personalizado.
Será a sua disponibilidade, junto com suas qualificações e atributos que serão levados em consideração para determinar o plano de alocação.
Cada recurso nominal apresenta uma especialização, podendo ser passivo ou ativo.
Os recursos passivos representam entidades como maquinário, software e outros objetos que sejam críticos para os projetos, enquanto os recursos ativos representam as entidades humanas envolvidas.
O modelo apresenta um conjunto genérico de atividades que, ao se relacionarem com uma iteração, geram atividades instanciadas.
Assim, uma atividade instanciada pode estar relacionada com apenas uma iteração e uma atividade genérica.
As atividades instanciadas armazenam informações como as datas de início previstas, assim como os prazos de conclusão que servirão como parâmetros para seleção do critério de disponibilidade dos agentes.
As habilidades se relacionam tanto às atividades instanciadas de um projeto, como aos recursos nominais do ambiente.
Quando uma habilidade está relacionada a uma atividade instanciada, considera- se que está habilidade seja um requisito necessário para que a atividade seja realizada.
Por outro lado, quando relacionada a um recurso, a habilidade representa uma qualidade que o recurso possui.
Em ambos os casos, as habilidades são quantificadas por métricas através da atribuição de valores.
Considera- se fora de o escopo desta dissertação a discussão de métricas de recursos, uma vez que estas questões variam de acordo com cada empresa.
Assim, a quantificação de uma habilidade dáse por a atribuição de um valor numérico, cujo significado exato depende da empresa que abastece o banco de dados.
A entidade de projeto representa os dados gerais sobre o mesmo, como sua data de início e fim.
Ele é composto por uma ou mais iterações, cada qual interage com a próxima de uma forma seqüencial.
Logo, pode- se dizer que para cada projeto, encontrará- se- apenas uma iteração em execução, que pode ser tanto sucedida, como antecedida por até uma outra iteração.
As regras de comportamento relacionam as diferentes atividades dentro de uma iteração no projeto.
Através destas, é possível determinar a seqüência de execução de um projeto, determinando pré-requisitos para as atividades.
As regras de comportamento também permitem a definição de linhas paralelas de execução e sincronização de atividades.
Segundo e, o primeiro passo, a fim de definir uma sociedade SMA, é efetuar um levantamento de requisitos.
Para tal, é necessário determinar os casos de uso.
A fim de identificar os requisitos envolvidos na implementação de um modelo de alocação de recursos, o diagrama de casos de uso foi utilizado para representar as funcionalidades que devem ser disponibilizadas.
A o analisar o problema, inicialmente, foram listados três atores envolvidos:
O gerente de projeto, o gerente de recursos e o recurso.
O gerente de recurso atua no fornecimento de dados cadastrais, tais como os tipos de recursos, seus cadastros e suas qualidades.
Por outro lado, o gerente de projeto é responsável por o cadastro das informações do projeto, tais como iterações, atividades, prazos e requisitos envolvidos.
Cabe a este ator também criar e aprovar um plano de alocação, assim como o tratamento de alertas de perturbações que afetem mais de um recurso.
Por fim, o recurso, último ator mapeado, deve informar qualquer perturbação que este sofra, assim como o andamento das atividades para as quais foi designado.
Esta informação permite que o gerente de projeto possa tomar medidas corretivas para não comprometer o andamento do projeto.
A figura 5-2 apresenta o diagrama encontrado.
Em a fase de análise, os requisitos identificados nos primeiros modelos são refinados para a obtenção da estratégia de solução multiagente a ser utilizada.
O processo inicia- se por a reavaliação dos casos de uso.
Foram incorporados princípios e propriedades de SMA ao modelo inicial de casos de uso, como previsto em.
Por conseguinte, um segundo diagrama de casos de uso foi gerado, representado na figura 5-3, acrescentando diversas funcionalidades, requisitos e papéis relacionados com a tecnologia de SMA.
A o acrescentar os requisitos de sistemas multiagentes, o diagrama torna- se mais extenso e complexo.
Em este, são identificados os papéis de executor de atividades, gerenciador de projetos, gerenciador de contratos e recurso candidato.
O papel de executor de atividade refere- se ao recurso alocado à atividade de um projeto.
A este papel, é dada a responsabilidade de atualizar o status das atividades que lhe foram encarregadas, notificando ao papel de gerenciador de projetos do andamento da mesma.
Faz parte das responsabilidades deste papel notificar qualquer perturbação que venha acontecer junto ao recurso que este executor representa.
Outro papel identificado neste novo diagrama é o de gerenciador de projetos.
Suas responsabilidades são de interlocutor entre o gerente de projeto e os outros possíveis agentes do ambiente.
Será através do gerenciador de projeto que o gerente de projeto irá definir atividades e seus requisitos.
Estas definições serão passadas para o agente no papel de gerenciador de contratos a fim de obter uma proposta de alocação.
Está nas atribuições desse papel também notificar o gerente de qualquer perturbação que ele receba dos agentes de recursos, ou que ele mesmo crie, por anomalias no fluxo planejado de atividades.
O gerenciador de contratação é responsável por a coordenação das contratações de recursos para as atividades que lhe são repassadas por o gerenciador de projetos.
Cabe a ele transmitir requisições para os candidatos, selecionando- os previamente e oferecendo ao gerente de projeto um plano de alocação.
Por fim, recai em ele também a incumbência de firmar os compromissos com os recursos que foram selecionados.
O último papel mapeado no diagrama foi o de recurso candidato.
Esse papel representa os recursos que aguardam solicitações para se candidatarem à realização de atividades.
Sua função restringe- se à atividade de candidatura, a qual somente realizarão se suas qualidades forem satisfatórias.
Seguindo o processo de e, a partir de a análise das informações disponíveis, a identificação de possíveis agentes é realizada.
A definição dos agentes de domínio foi obtida a partir de o estudo do diagrama de casos de uso e dos papéis ali identificados.
Para tal, os papéis existentes foram agrupados e atribuídos a agentes possíveis.
Dois agentes foram o resultado deste processo:
Agente Gerenciador de Projetos e Agente de Recurso.
A distribuição da atribuição de papéis realizada está demonstrada no quadro 5-1.
Recurso Quadro 5-1: Agentes e seus Papéis.
Recurso Candidato Executor de Tarefas Projetos Gerenciador de Projetos Gerenciador de Contrato O primeiro agente obtido foi denominado de Recurso (AR), podendo ser instanciado tantas vezes quantas houver recursos no ambiente.
Ele apresenta um conjunto de habilidades, utilizado na seleção para alocação em atividades de projeto, e um custo por unidade de tempo.
Tem as atribuições de assumir compromissos com atividades que necessitam do recurso que ele representa e tratar perturbações ao nível de seu recurso individual, ou seja, no papel de candidato e executor.
Esses dois papéis foram atribuídos a este agente por relacionarem- se diretamente às atividades de um recurso.
O segundo agente mapeado é o Agente de Projeto.
Deve haver um de eles para cada projeto instanciado na empresa.
É sua responsabilidade deste agente organizar contratações de recursos para atividades que ele define junto ao gerente de projeto.
O acompanhamento de atividades e o tratamento de perturbações que excedem o escopo de uma atividade individual também é de responsabilidade sua.
O papel de gerenciador de contrato foi agrupado ao de gerenciador de projetos devido a a demanda de novo planejamento que pode se fazer necessária durante o ciclo de vida do projeto.
Novos planejamentos podem substituir antigos quando estes se tornam inviáveis devido a perturbações que venham a acontecer, exigindo os serviços do papel de gerenciador de contratação para obter- se um novo plano de atuação.
Como já foi mencionado nas características de agentes no tópico 2.1, estes caracterizam- se por ter habilidades sociais.
Por conseguinte, faz- se necessário especificar os seus relacionamentos dentro de uma sociedade.
Em o capítulo 3, é apresentado o diagrama de sociedade proposto por, o qual permite representar tanto a estrutura e organização social dos agentes, bem como suas interações e comunicação.
Em a figura 5-4 está representada, através de um diagrama de sociedade, a organização social que se estabelece entre os agentes de projeto e agentes de recurso.
O relacionamento existente entre os agentes permite que um agente de projeto estabeleça comunicação com vários agentes de recurso, da mesma forma que os agentes de recurso podem se comunicar com diversos agentes de projeto.
A possibilidade de múltiplas instâncias de cada classe de agentes é representada por o caractere(*), como apresentando na figura 5-4.
No entanto, existem dois tipos diferentes de relacionamento entre os agentes de projeto e recurso.
Quando um agente de projeto está efetuando uma verificação do andamento de projeto, há uma relação de subordinação entre o projeto e o recurso.
Isso se dá, pois o recurso que está desempenhando o papel de executor deve, obrigatoriamente, responder ao agente a cujo projeto ele está associado.
A relação entre os dois agentes sofre uma alteração quando o processo de contratação está sendo desempenhado.
Em essa relação, não existe qualquer tipo de subordinação, pois os agentes não são obrigados a responder a comunicação iniciada por outros.
Embora a interação e comunicação entre os agentes fiquem representadas com o diagrama de sociedade, não é possível verificar características de comportamento, tais como cooperação, conflito e planejamento.
As interações entre os agentes de projeto e de recurso permitem a coordenação da sociedade para tanto a criação de uma sugestão de alocação, como também a manutenção do plano escolhido por o gerente de projeto.
Para representar essa negociação, utilizou- se mais um diagrama estendido da UML.
O diagrama de interação seqüencial, referenciado em, e resgatado no trabalho de como ferramenta para auxiliar sua metodologia, permite a representação seqüencial dos atos de fala na comunicação entre agentes.
Revisará- se-, nos próximos tópicos, a seqüência de comunicação de alguns processos centrais da alocação.
Serão estes a negociação para alocação de recursos, o acompanhamento de atividades e a notificação de perturbação.
O processo de negociação para alocação de recurso visa a criação de sugestões por os candidatos para execução de atividades, com a finalidade de apoiar a escolha que o gerente de projeto irá fazer.
Esse processo tem início com o gerente de projeto e o Agente de Projeto.
O gerente de projeto define, junto ao Agente de Projeto, todas as atividades que irão compor o mesmo, assim como seus requisitos, carga horária estimada e datas de início e término.
É importante ressaltar que neste momento também são definidas as regras de comportamento das atividades, a fim de determinar o fluxo de trabalho a ser seguido.
De posse dessas informações, o agente de projeto inicia um broadcast para a comunidade de agentes, requisitando a candidatura de recursos para desempenhar as atividades de projeto.
Para cada atividade, um broadcast é realizado, e o período, requisitos e carga horária são informados.
Com essas informações, os agentes de recurso analisam suas condições, verificando se eles apresentam um subconjunto não vazio de habilidades que atendam aos requisitos enunciados.
Esse subconjunto pode ser completo, ou seja, o requisito atende plenamente as especificações recebidas, ou apenas parcialmente.
No caso de ser capaz de atender, mesmo parcialmente, aos requisitos da atividade, o Agente de Recurso avalia seus compromissos e disponibilidade de tempo.
Caso seja possível para o recurso cumprir a carga horária estipulada por a atividade no período desejado, uma resposta, contendo uma candidatura, será transmitida de volta.
Como os agentes são confiáveis, eles não irão assumir compromissos que não possam cumprir.
O Agente de Projeto, de posse de diversas candidaturas, busca primeiramente agentes que possam cumprir plenamente os requisitos impostos por as atividades.
No caso de não haver candidatos que satisfaçam a todos os requisitos, o agente de projeto informa que os recursos disponíveis não são capazes de realizar tal tarefa.
Por outro lado, se as condições foram satisfeitas, então o agente de projeto passa a refinar sua seleção, se possível, para chegar a uma sugestão melhor.
O Refinamento de sugestões dá- se por critérios diversos como, por exemplo, custo e balanceamento de carga.
É possível instruir os agentes a respeito de quais características são mais relevantes para a empresa.
Por utilizar- se uma abordagem orientada ao mercado, ou seja, criando um ambiente competitivo onde os recursos disputam entre si por a oportunidade de realizar uma tarefa, pode- se considerar o conjunto de características de cada recurso utilizado na proposta como um valor.
O modo de cálculo do valor da proposta de cada agente (quais características devem ser mais valorizadas), não é o foco deste trabalho.
A relevância dos fatores muda entre diferentes empresas, por conseguinte, deve ser definida no momento em que um sistema esteja sendo instanciado.
A o chegar a uma conclusão, o agente de projeto informa ao gerente de sua sugestão e aguarda o posicionamento do mesmo.
Os candidatos que não são selecionados recebem um multicast notificando- os de que suas candidaturas não foram aceitas, enquanto os selecionados recebem outra mensagem multicast e passam a tratar a candidatura como compromisso.
A figura 5-5 representa essa seqüência de interações.
Observa- se que, no modelo, o agente de projeto requisita a confirmação, por parte de o agente de recurso, se ele ainda está disponível, mesmo após este já ter sido selecionado.
Isso se dá, porque uma candidatura não é tratada como compromisso, ou seja, o recurso pode assumir diversas candidaturas, sem a obrigação de cumprir- las.
Como todos os agentes são benignos e comprometidos com a realização de suas candidaturas, estes apenas irão negar assumir- las, caso elas tornem- se conflitantes com um compromisso gerado no intervalo de tempo entre a submissão da candidatura e a confirmação do aceite.
O acompanhamento do andamento de atividades é uma responsabilidade do agente no papel de gerenciador de projeto.
O Agente de Projeto requisita aos agentes de recursos que estão alocados em atividades do seu projeto, um reporte de quão completa estão suas atividades.
A figura 5-6 demonstra esta interação.
Observa- se que neste tipo de interação, existe uma relação de subordinação, pois quando agente projeto envia uma mensagem para todos os recursos (no papel de executor) associados ao seu projeto, estes são obrigados a fornecer uma resposta.
O acompanhamento de uma atividade tem o objetivo de fornecer informações para que o agente de projeto possa tomar atitudes preemptivas quanto a riscos de perturbações.
Uma perturbação é um desvio do fluxo previsto de atividades.
É importante destacar que essa pró-atividade visa evitar problemas que poderão vir a acontecer, tomando medidas preventivas, ao invés de corretivas.
Um exemplo possível dessa situação seria o percentual baixo de realização de uma atividade, que está muito próxima de seu prazo de conclusão.
Isto constitui um risco que, possivelmente, irá afetar o andamento de outras atividades relacionadas por regras de comportamento.
No entanto, como nenhuma anomalia de fato existe, pois a atividade ainda está dentro de o prazo, os agentes de recurso ainda não geraram alertas de perturbação.
A identificação de perturbações é uma função central na manutenção de um plano de alocação.
As perturbações podem ser fundamentadas na disponibilidade de um recurso, na execução de uma atividade ou na realização de uma pré-condição para o projeto.
Quando uma perturbação é oriunda da disponibilidade de um recurso, o responsável por a sua identificação é o agente de recurso.
Uma vez que este perceba a perturbação, o seu primeiro processo é verificar se esta irá coincidir com algum compromisso assumido.
Se este for o caso, o agente de recurso verifica se, apesar de a perturbação, o compromisso ainda pode ser completado dentro de o período designado.
Apenas no caso de uma perturbação tornar impossível a realização de um compromisso nas datas assumidas, o agente recurso informará os agentes de projeto cujas atividades foram perturbadas para que estes façam um replanejamento.
A figura 5-7 ilustra a comunicação entre os agentes.
No caso de uma perturbação se dar por o atraso numa atividade, também serão os agentes de recursos associados à atividade que irão informar ao agente de projeto.
Em esse caso, como o atraso necessariamente afeta a atividade, nenhuma verificação adicional por parte de os recursos é necessária.
O terceiro caso de perturbação é detectado por o agente de projeto.
No caso de atividades apresentarem pré-condições, e as mesmas não puderem ser cumpridas, perturbações serão geradas.
Cabe ao AP efetuar um replanejamento, abrindo renegociações com os agentes, de forma a comportar essa alteração no plano.
Em este capítulo, até o presente momento, foram revisados os passos tomados para a criação da sociedade de agentes, demonstrando sua organização social, relacionamentos e negociações.
O Modelo de Funções em pode ser utilizado para resumir os agentes, seus papéis, responsabilidades, restrições e serviços, como expresso no quadro 5-2 e 5-3.
Quadro 5-2: Modelo de Funções de Agentes de Projeto Papel:
Gerenciador de Projetos Responsabilidades Restrições Serviços Definir atividades Adquirir de um projeto dados junto ao gerente de projeto Verificar andamento de projeto e perturbações Gerente de Projeto Papel:
Gerenciador de Contratos Responsabilidades Restrições Serviços Coordenar Observar Cfp:
Content (pedidocontratação de limitações proposta (requisitos, data recursos dos inicio, data final, carga recursos horaria) Refuse proposal:
Content (recursar- proposta (Identificador chamada)) Request:
Content (confirmação de disponibilidade (identificador chamada) Accept proposal:
Content (aceitar proposta (Identificador chamada)) Request:
Content (requisição características) Consultar Query-ref agentes:
Content (requisiçãorecursos A especificação gerada por a fase de análise, apesar de permitir a visualização de diversos aspectos da sociedade, não é suficiente para permitir a implementação do modelo.
Assim, é necessário um maior refinamento das informações disponíveis.
Uma vez encerrada a fase de análise, proposta por, a fase de projeto tem início.
A infraestrutura de cada agente é, então, especificada.
Também são retomados os diagramas e informações da fase anterior, a fim de refinar- los.
Assim, a preocupação volta- se para aspectos de implementação do modelo e os agentes de infra-estrutura são introduzidos neste contexto.
Agentes de infraestrutura, como definido em, oferecem serviços especializados.
Estes serviços fornecem apoio aos agentes de domínio para a execução de suas atribuições.
Quadro 5-3: Modelo de Funções de Agentes de Recurso Gerente de Recurso Papel:
Executor de tarefas Papel:
Recurso candidato Responsabilidades Restrições Serviços Responsabilidades Restrições Notificar o status Inform Candidatar-se a Observar de cada atividade limitações contratação de tempo qualidade Notificar perturbações ao agente de projeto Serviços Propose:
Content (propostacandidatura (identificador de chamada) Inform:
Content (caracteristicas (Listacaracteristica)) Inform:
Content (cofirmar disponibilidade (Identificador Chamada)) Inform:
Content (negar disponibilidade (Identificador Chamada)) Inform Este é um agente de infra-estrutura responsável por a comunicação da sociedade com o banco de dados.
Através dos serviços disponibilizados por este agente, os dados são inseridos, removidos, alterados e recuperados do banco.
Por meio de o refinamento dos diagramas de caso de uso e do diagrama da sociedade, o agente de banco, também chamado de Database Handler, é representado, como demonstra a figura 5-8.
O agente de banco apresenta um relacionamento diferente com os agentes de projeto e recurso.
Esse relacionamento estabelece uma subordinação do agente de banco em relação a os outros dois, pois ele é obrigado a responder a qualquer requisição que os agentes de domínio enviarem.
Essa subordinação, no entanto, independe do papel que os agentes estejam desempenhando.
No caso de ambientes distribuídos, onde agentes podem estar instanciados em diferentes localizações, o agente roteador oferece o serviço de comunicação.
Assim, em cada nodo da rede, um agente roteador fica residente, e cada agente de domínio comunica- se com ele a fim de transmitir e receber as mensagens.
Por se relacionar com todos as agentes de uma sociedade, um agente roteador não é representado nos diagramas de sociedade e casos de uso.
Este tipo de agente permite uma interface entre o SMA e o agente humano.
Através dessa interface, é possível acompanhar ou mesmo interferir com o progresso da sociedade.
Sua aplicação é justificável, principalmente por o fato de não ser possível para a sociedade do Harmony tomar uma decisão final sobre qual recurso alocar a uma atividade, requerendo a intervenção humana para tal.
Em a figura 5-9, é apresentado o diagrama de implementação, onde a interface para agente humano, o roteador e o database handler são representados.
Com a finalidade de complementar a especificação do modelo, não somente a estrutura organizacional e social dos agentes deve ser abordada.
Assim, neste tópico, descreve- se a arquitetura utilizada como referência para implementação.
Baseado no modelo do M-DRAP, chegou- se a uma arquitetura para os agentes, sendo composta por seis módulos distintos.
Cada módulo é responsável por um subconjunto das atividades desempenhadas por o agente.
Os módulos que compõem esta estrutura são:
Gerenciador de Escopo Restrito;
Gerenciador de Compromissos; Gerenciador de Eventos;
Planejador; Negociador;
Executor. Esta arquitetura de referência é utilizada por os agentes do modelo, com algumas variações de suas funcionalidades e implementações, de forma que possam desempenhar os diferentes papeis que lhe são atribuídos.
No entanto, tais adaptações de implementação não descaracterizam a arquitetura básica, podendo ainda ser identificada com clareza em cada agente.
A representação desta arquitetura é feita na figura 5-10.
Em o restante deste tópico, serão apresentados os diferentes módulos que compõem a arquitetura genérica dos agentes do Harmony.
Gerenciador de Escopo Restrito: Este módulo administra as informações do agente propriamente dito.
Dados relativos ao objeto que ele representa serão tratados por estas funções.
Todas as informações de uso interno do agente são manipuladas por esse módulo.
No caso de agentes de projeto, o mesmo irá armazenar os dados relevantes ao projeto em si, acessando os objetos diretamente relacionados, como projeto, iteração e atividades instanciadas, seus prazos e requisitos.
Por outro lado, o agente de recurso tem esse módulo relacionado a um recurso nominal, manipulando dados como o calendário, habilidades e características.
Gerenciador de Compromissos: Este módulo mantém todos os compromissos acordados por o agente.
Todos os compromissos assumidos ou aguardando aprovação aqui estão armazenados.
No caso de agentes de projeto, esse módulo armazena a informação de quais agentes de recursos estão associados às atividades que constituem seu projeto, e precisam ser realizadas.
Não somente a informação sobre os agentes designados para as tarefas é tratada, mas também as candidaturas de todos os que não foram aceitos, uma vez que todos os que submeteram propostas, respondendo a um pedido de candidatura devem receber uma resposta, mesmo que esta seja uma rejeição.
Por outro lado, esse módulo, na arquitetura de um agente de recurso, armazena quais são os compromissos assumidos com todos os agentes de projeto.
São armazenados não somente dados de atividades confirmadas, mas também atividades candidatas.
Estas informações são consultadas para evitar a possibilidade de um recurso candidato assumir dois compromissos num mesmo período, gerando um conflito real de disponibilidade.
Gerenciador de Eventos: O gerenciador de eventos é responsável por a recepção e tratamento de eventos externos ao agente.
Tais eventos, normalmente iniciados por o usuário ou outros agentes do sistema, são primeiramente recebidos neste módulo e então encaminhados aos que irão tratar- los.
O módulo tem, de fato, o papel de sensor do agente para o ambiente externo.
Planejador: É o conjunto de funções deliberativas do agente.
Será através deste módulo que o agente irá criar planos de atuação para a resolução de requisições do usuário.
Mais uma vez, existe diferenças de implementação entre o agente de projeto e o agente de recurso.
Um agente desempenhando o papel de candidato irá usar as funções deste módulo para verificar sua disponibilidade junto ao módulo de compromissos a fim de atender a requisição.
A comunicação com o módulo de gerência de escopo restrito obtém as informações de qualificação técnica do recurso que o agente representa, verificando concordância deste com os requisitos técnicos da atividade contratante.
Por outro lado, o agente de projeto utiliza estas funções e as informações fornecidas por os candidatos para efetivamente criar um plano de alocação de recursos.
Para tal, o Planejador fará uso dos serviços disponibilizados por o Gerenciador de Compromisso e o Gerenciador de escopo restrito.
Negociador: É o responsável por a comunicação entre agentes.
Uma vez que um evento, tal como o início da comunicação, de um agente com outro, é detectado por o gerenciador de eventos do agente, a comunicação entre os agentes é transferida para o módulo negociador.
Efetivamente, este módulo irá montar as mensagens que outros necessitam enviar, segundo o protocolo da ACL.
Executor: O modulo executor é responsável por o acompanhamento do andamento de cada atividade e projeto.
Serão estas funções que efetivarão, no agente recurso, alertas de atrasos no progresso de uma atividade, propagando a mensagem para o gerente de projeto.
No caso de o agente de projeto, este módulo é que manterá o controle das atividades, verificando se nenhuma está em atraso e, no caso de receber uma notificação de atraso por parte de agentes de recurso, tratará perturbações junto ao planejador.
Uma vez que uma atividade esteja concluída, será o módulo que irá verificar se as atividades seguintes já estão prontas para serem iniciadas.
Concluída a especificação da arquitetura a ser implementada, outro angulo deve ser abordado.
A percepção do gerente de projeto sobre a alocação de recurso está sujeita a modificações, devido a maior quantidade de dados disponíveis.
O modelo, sob a ótica gerencial, pode ser traduzido como um processo representado na figura 5-11.
Em esse processo, o gerente de projeto define junto ao sistema um fluxo de atividades, suas características e requisitos.
De posse dessa informação, o sistema buscará junto aos dados de seus recursos, que podem estar distribuídos em diversos ambientes, informações de qualidade e disponibilidade temporal.
O conjunto de recursos avaliados como aptos e disponíveis para serem empregados nas atividades será filtrado.
O sistema irá considerar fatores tais, como o aproveitamento dos recursos disponíveis, seu custo operacional e produtividade de modo que sejam fatores qualificadores de cada conjunto.
O objetivo aqui não é somente empregar um recurso eficiente para a atividade, mas também aquele que seja mais vantajoso para a empresa.
No entanto, os critérios exatos que definiram o modo como cada recurso será qualificado varia de empresa para empresa.
Critérios como custo e balanceamento de carga estão presentes, mas a ordem de importância dos mesmos pode ser diferente.
Será a partir de o refinamento da seleção feito através do conjunto de atributos relevantes para a empresa que o modelo fornecerá sugestões de recursos a serem empregados no projeto.
No entanto, o modelo limita- se a sugestões, pois a decisão dependerá do gerente de projeto, que pode utilizar critérios empíricos em sua escolha.
A escolha feita por o gerente de projeto será traduzida como compromissos para o sistema, que serão considerados na próxima vez que critérios como disponibilidade e balanceamento de carga forem considerados.
A o longo deste capítulo, foram demonstrados os passos tomados para a geração de um sistema multiagente capaz de lidar com o processo de alocação de recursos.
Estudou- se desde os estágios iniciais, em que o modelo conceitual do problema foi definido, até a identificação dos agentes propriamente ditos.
A partir de os agentes, definiu- se a organização social e interação dos mesmos, demonstrando os processos de negociação envolvidos.
Por fim, demonstraram- se aspectos gerais de arquitetura de referência utilizada para os agentes, assim como o modo de percepção do modelo abstraindo os conceitos técnicos de tecnologia.
A o longo deste capítulo, são descritas as características do protótipo implementado para a simulação do modelo Harmony.
É também apresentado um exemplo dos casos de teste usados para estudar o comportamento do modelo, salientado constatações observadas durante suas execuções.
Com base na especificação apresentada no capítulo 5 deste trabalho, buscou- se desenvolver um protótipo, a fim de melhor estudar o comportamento que um sistema apresentaria se baseado no Harmony.
Um conjunto de casos de uso, de entre aqueles definidos na figura 5-3, no capítulo 5, desta dissertação, foi selecionado para constituir o escopo do protótipo.
O diagrama de casos de uso desse protótipo está disponível no Anexo III deste trabalho.
A fim de permitir a manipulação dos dados, todos os casos de uso que envolvem o cadastramento de instâncias das classes do domínio foram implementados.
Assim, é possível, através do protótipo, inserir informações dos recursos, suas habilidades, calendários e tipos.
Também foi implementado o cadastramento de atividades genéricas, que serão usadas como referência por o usuário do sistema quando novas atividades instanciadas estiverem sendo associadas a projetos.
Um outro caso de uso implementado foi o de cadastramento de projeto.
O usuário do protótipo utiliza os dados disponibilizados por os outros cadastros como apoio para inserir essas informações.
O gerente define as iterações e atividades instanciadas.
Para cada atividade, prazos e um conjunto de requisitos podem ser estipulados, tomando como base as habilidades já disponibilizadas no ambiente.
Com essas informações, os agentes podem, então, gerar uma sugestão de alocação para cada atividade.
Para a simulação do Harmony, um conjunto de casos de uso que envolve diretamente a participação de agentes foi selecionado.
São eles:
A solicitação de contratação de candidatos, a emissão de propostas de candidatos, a seleção de recursos e a contratação efetiva de recursos selecionados.
Também foi desenvolvida a notificação de perturbação, abordando dois aspectos diferentes:
A indisponibilidade de recurso e os atrasos em atividades.
O usuário do sistema pode informar perturbações num recurso, notificando o período de indisponibilidade que este está sujeito.
Se essa indisponibilidade afetar a capacidade do recurso de cumprir um compromisso assumido, o seu agente irá gerar uma notificação para o agente de projeto.
Por outro lado, é possível notificar o estado de uma atividade.
O usuário, mudando a data do dia corrente no sistema, faz com que os agentes de recurso verifiquem o estado de suas atividades.
Se qualquer uma de elas apresentar um prazo inferior à data atualizada por o usuário e seu estado não for de concluído, um alerta de perturbação também é gerado.
A título de implementação, algumas adaptações tiveram de ser feitas.
O protótipo não foi montado para trabalhar em ambiente distribuído.
Assim, a aplicação é executada em apenas uma máquina, ao contrário de o modelo Harmony, onde os agentes podem estar fisicamente distribuídos.
Para otimizar os recursos computacionais necessários, uma vez que toda a carga de processamento e armazenamento de informações está sendo realizada no mesmo computador, optou- se por criar tabelas comunitárias para agentes do mesmo tipo.
Por conseguinte, agentes de recurso armazenam seus dados numa mesma base, enquanto numa implementação real, estes repositórios seriam individualizados.
Os agentes foram instanciados através de sistemas multithreads, ou seja, cada um possui uma linha de execução própria e independente.
A comunicação da sociedade segue os protocolos de redes de contrato adotados no modelo Harmony.
A troca de informação entre as entidades instanciadas é simulada através de uma área comum de dados, onde os agentes depositam as informações necessárias para que a coordenação da sociedade seja efetivada.
Através dessas adaptações, foi possível criar um protótipo capaz de simular o comportamento de um sistema multiagente baseado no modelo proposto.
Para estudar o comportamento do Harmony, casos de teste foram desenvolvidos.
Para cada teste do protótipo, um conjunto de informações deve ser gerado.
Essas informações correspondem ao conjunto de habilidades, recursos e atividades que compõem o ambiente onde será gerado o plano de alocação.
Foi elaborado um conjunto de onze habilidades que constituíram o ambiente deste caso de teste.
Estas habilidades determinaram requisitos necessários para cada atividade que os recursos deverão apresentar a fim de serem selecionados para executar- las.
As habilidades estão representadas na figura 6-1.
Este conjunto não apenas determina os requisitos possíveis que uma atividade apresenta, mas também as qualidades disponíveis para serem associadas a um recurso.
Foi necessário cadastrar um conjunto de recursos.
Em este exemplo, eles são ativos, ou seja, humanos.
A cada recurso foram atribuídos um conjunto de qualidades e uma disponibilidade diária de 8 horas.
O quadro 6-1 retrata o valor que cada recurso tem atribuído a si numa determinada habilidade.
A fim de associar as habilidades existentes a um recurso, atribuindo valores, este recurso deve estar previamente cadastro no ambiente.
A figura 6-1 demonstra, dentro de o protótipo, a interface de associação de uma habilidade com um recurso.
Uma vez introduzido no sistema o conjunto de informações que constituem o ambiente de desenvolvimento, ou seja, os recursos e suas habilidades, o projeto a ser realizado foi cadastrado.
Para tal, primeiramente foram informados os dados gerais do projeto, como sua descrição, e então, inseridas as iterações.
Em este caso de teste, o projeto apresenta apenas uma iteração.
Em ela, foram registradas onze atividades como parte de sua execução.
O relacionamento entre atividades e seus requisitos está representado no quadro 6-2.
Quadro 6-1: Recursos e suas habilidades Recurso Habilidade Valor Codificação JAVA Gerência de Rede Gerência de Projeto Codificação JAVA Codificação VB Mariana Conhecimento de processo Maria Gerência de Banco Oracle João Analise de Sistema Enrique Analise de Banco Codificação PL/ SQL Conhecimento do Processo Clarissa Conhecimento de Processo Mateos Conhecimento em teste Língua Inglesa Conhecimento de processo Codificação JAVA Tadeu Codificação VB Ricardo Codificação JAVA Nível Para que o projeto apresente uma ordem lógica de execução, as regras de comportamento destas atividades foram estipuladas, permitindo dispor- las de forma a criar um workflow.&amp;&amp;&amp;
Essas regras de comportamento estão organizadas conforme apresentado na figura 6-2.
A fim de complementar os dados do projeto, prazos foram estipulados.
As datas relacionadas com os prazos estão demonstradas na tabela 6-2.
Uma vez configurado o ambiente e inserido os dados do projeto, os agentes podem iniciar a configuração de uma sugestão de plano de alocação.
Em o protótipo, este processo é iniciado quando o agente de projeto é lançado.
A sugestão resultante é apresentada para cada atividade do projeto, como demonstrado na figura 6-3.
O protótipo apresentou uma proposta de alocação de atividades, demonstrada no quadro 6-3, para o caso de teste em análise.
Não somente as sugestões são demonstradas para o usuário, mas todas as candidaturas feitas por os recursos.
A seleção dos recursos irá ser efetuada por o usuário, através da lista geral de recursos que o protótipo disponibiliza.
Baseando a análise do modelo numa série de testes similares ao que foi apresentado no tópico 6.2, foram identificadas algumas características.
Através da utilização da abordagem multiagente, o modelo trata um dos tópicos mais críticos na alocação de recursos em desenvolvimento de software:
A distribuição dos recursos.
Este fator é central na identificação de contribuições que o modelo pode fornecer ao gerente de projeto.
Além disso, o Harmony favorece um aumento na informação disponível ao gerente de projeto.
Isso acontece por dois fatores:
A eliminação das barreiras impostas por a distância e o tratamento modular do problema.
As informações distribuídas dos recursos tornam- se mais acessíveis para avaliação e estudo através da comunicação dos agentes que, de outra forma, poderiam ser difíceis de serem reunidas.
Além disso, por o fato de cada recurso apresentar um tratamento individual e descentralizado por meio de seu agente, a quantidade de informação a ser disponibilizada aumenta por o processamento distribuído.
Por fim, a agilidade ganha com o processo de planejamento do Harmony, que é outro fator de relevância.
Mesmo que o gerente disponha de dados dos seus recursos, a verificação dos mesmos é um trabalho complexo e, possivelmente, demorado.
Por outro lado, o processo de sugestão do Harmony permite ao gerente uma visualização da solução mais próxima do ideal, dentro de os critérios de avaliação do modelo.
Essa agilidade contribui não somente para a alocação de recursos, mas também para sua manutenção.
Perturbações que venham a ocorrer durante o ciclo de vida de um projeto podem ser rapidamente repassadas, quando necessário, para atores do sistema com poder gerencial para tratar- las, sejam eles agentes ou mesmo gerente de projeto.
A redução de riscos inerentes às perturbações ocorre, por conseguinte, devido a o aumento, tanto de informação, quanto de capacidade de manipulação de dados, que o gerente experimenta.
Foi constado também que a forma com que os projetos são inseridos para a alocação influência o resultado da sugestão feita por o modelo.
Como a seleção dos recursos é uma decisão do gerente de projeto, o balanceamento de carga não pode ser garantido.
No entanto, as sugestões feitas ao usuário por o sistema consideram o critério de balanceamento.
Em o protótipo, a avaliação de carga para balancemento é realizada no momento da candidatura dos agentes, ou seja, no início do período de seleção de recursos, não sendo verificada novamente durante o processo de alocação, até que um projeto necessite de um novo plano de alocação.
Quadro 6-3: Embora o Harmony não trate critérios subjetivos do processo de alocação, tais como o grau de confiança entre as partes envolvidas, relacionamentos humanos e questões motivacionais, foi reconhecida a importância destes fatores para a decisão do processo de alocação.
Assim, reitera- se que esta ferramenta é considerada de apoio ao processo de alocação, pois não intenciona, na sua presente configuração, trabalhar com estas questões subjetivas.
Essas convicções e crenças, porém assumem, freqüentemente, prioridade sobre critérios mais concretos, embora não sigam nenhum padrão lógico.
Assim o Harmony auxilia o gerente, disponibilizando a informação baseada em fatos concretos, de forma a apoiar sua decisão.
Permanece em aberto a possibilidade de, em estudos futuros, mapear- se as crenças humanas para tornar- las parte do critério de decisão de alocação.
A o longo deste trabalho, foram revisados diversos conceitos das áreas de sistemas multiagentes e gerência de projeto, a fim de possibilitar a proposição de um modelo multiagente para alocação de recurso em ambientes de desenvolvimento de software.
Em o capítulo 2, foram revisados tópicos da área de gerência de projeto e do problema de alocação de recursos, resultando num conjunto de requisitos necessários para o desenvolvimento do modelo.
Em o capítulo 3, foi revisada a questão tecnológica na área de agentes.
A definição de sociedade de agentes e a importância de seus relacionamentos sociais foram apresentadas.
A base teórica que fundamenta a crença de que a abordagem multiagente constitui uma solução adequada para o problema em questão foi também abordada.
Uma vez fundamentada a pesquisa com estudos sobre as áreas envolvidas, buscou- se, na literatura, trabalhos correlatos, apontando- se nestes as razões por as quais os modelos existentes não são plenamente satisfatórios, justificando o esforço de desenvolvimento de um modelo novo.
Baseado nos estudos realizados, iniciou- se a definição de um modelo multiagente, buscando atender os requisitos levantados anteriormente.
Para tal, foi adotado um processo de modelagem que permitisse definir a organização e relacionamento social dos agentes.
A fim de testar o modelo desenvolvido, um protótipo foi implementado, permitindo que testes pudessem ser realizados a fim de melhor identificar características da solução associadas ao modelo.
As contribuições resultantes desta pesquisa foram um levantamento dos requisitos do processo de alocação de recursos em projetos de desenvolvimento de software, assim como um modelo conceitual do problema, instanciado a partir de o C-Wf.
Resultante destas duas contribuições, gerou- se um modelo multiagente capaz de apoiar o gerente de projeto no processo de alocação de recursos, para avaliar a aplicabilidade da abordagem multiagente no domínio em questão.
A o retomar a questão de pesquisa, observando as constatações relatadas no capítulo 6, conclui- se que, de fato, existem contribuições significativas na aplicação de uma abordagem multiagente ao processo de alocação de recurso em projetos de desenvolvimento de software.
No entanto, enquanto os ganhos são identificáveis na forma de agilidade, riqueza de informação e apoio à decisão, a questão não está esgotada.
A abordagem multiagente oferece recursos para expandir o escopo do estudo, ampliando as aplicações do Harmony.
Diversas pesquisas podem ser realizadas para complementar e estender este trabalho.
A questão não foi esgotada no curto espaço de tempo desta dissertação.
A primeira possibilidade de trabalhos futuros que pode vir a ser explorada é a implementação de um sistema pleno de multiagentes, ao contrário de o protótipo desenvolvido.
O exercício de implementação é complexo, uma vez que envolve vários complicadores para o desenvolvimento, que fogem do escopo desta dissertação.
Funcionalidades como o replanejamento então poderão ser incluídas.
Com uma ferramenta mais robusta, um processo de validação do modelo poderia ser desenvolvido.
Para tal, seriam necessários diversos testes de campo, mapeando- se candidatos e acompanhando a utilização diária do aplicativo por um período significativo de tempo.
Por fim, um dos trabalhos futuros mais interessantes, que podem vir a ser desenvolvidos, é verificar e, possivelmente, implementar o mapeamento das crenças humanas e questões subjetivas para o Harmony.
Esta pesquisa permitiria transformar o modelo prescritivo, hoje em atuação, num modelo descritivo, mudando, possivelmente, as ferramentas baseadas no Harmony.
Assim, estas passariam de um sistema de apoio à alocação, para um sistema de alocação de recurso, tais como os existentes em ambientes onde os critérios subjetivos estão menos presentes.
Enfim, o tópico abordado é em verdade um ponto inicial para diversas outras pesquisas futuras que podem levar a uma maior compreensão, não só da tecnologia de agentes, mas também dos processos gerenciais envolvidos.
