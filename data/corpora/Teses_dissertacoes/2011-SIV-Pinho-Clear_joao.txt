Além de o entretenimento, um jogo pode ser aplicado no treinamento de profissionais ou como ferramenta de auxílio para o aprendizado de alunos.
Este gênero de jogo é conhecido como Jogos Sérios.
Em a área da Educação, tipo de ferramenta faz parte dos chamados Objetos de Aprendizagem.
Atualmente, pode- se observar um aumento da quantidade de Objetos de Aprendizagem disponíveis, alguns inclusive incorporando recursos de Realidade Virtual.
O desenvolvimento deste tipo de aplicação demanda um esforço computacional considerável dadas as especificidades das áreas envolvidas (jogos, educação, realidade virtual).
Além de isto, a falta de normatização dos dispositivos, a ausência de padronização, tanto dos elementos de interface, quanto das técnicas de interação, faz com que a construção destas aplicações seja realizada sem a possibilidade de reutilização de artefatos já existentes, fazendo com que novas aplicações tenham de refazer o que poderia ser reaproveitado.
Dentro de a Engenharia de Software, a área de Reuso busca formas de promover a reutilização de artefatos de software para aumentar a produtividade, melhorar a confiança na qualidade das aplicações e diminuir os custos do processo de desenvolvimento.
Esta área busca identificar, organizar e agrupar funcionalidades similares de um mesmo domínio para compor uma coleção de aplicações, com um conjunto específico de características.
Uma das ferramentas usadas para tirar proveito deste conjunto comum de características, as Domain Specific Language visam resolver problemas particulares do domínio modelado, tendo como principais vantagens a criação e a documentação de regras e particularidades importantes deste domínio.
Partindo deste cenário a VR-MED, descrita neste trabalho, tem o objetivo de permitir o desenvolvimento de ambientes virtuais, na forma de jogos de computador, aplicados ao domínio do Ensino da Medicina de Família e Comunidade.
Com base em uma notação visual de alto nível de abstração e de fácil utilização, tanto por parte de programadores quanto de profissionais de saúde, a VR-MED permite a criação de ambientes virtuais executáveis (jogos) a partir de casos médicos textuais, comumente usados na prática de ensino de medicina.
Palavras Chave: Realidade Virtual, Linguagem de Domínio Específico, Jogos Digitais.
O desenvolvimento de aplicações de Realidade Virtual (RV) demanda uma quantidade grande de esforços dos programadores, além de requerer profunda habilidade de programação.
Os principais fatores que contribuem para isso são a falta de normatização dos dispositivos de RV, e a ausência de padronização, tanto dos elementos de interface, quanto das técnicas de interação.
Assim, boa parte das aplicações de RV é implementada sem a preocupação com a reutilização dos artefatos construídos, fazendo com que novas aplicações tenham de refazer o que poderia ser reaproveitado.
Além de a reescrita de código no decorrer de o desenvolvimento de aplicações de RV, as etapas de análise e modelagem dos processos, assim como o processo de interação, são carentes de formalismos adequados aos diversos campos das aplicações de RV, desde simulações médicas, até aplicações voltadas ao entretenimento, tal como jogos digitais.
Um jogo digital ou jogo computacional pode ser definido como uma aplicação computacional que possui técnicas de Computação Gráfica, RV e também Inteligência Artificial.
O objetivo de um jogo digital, doravante denominado apenas de jogo, é prover entretenimento e a experimentação num ambiente interativo.
Além de o entretenimento, um jogo pode ser aplicado para criar simulações com o objetivo de viabilizar um ambiente computacional aplicado no treinamento de profissionais ou como ferramenta de auxílio para o aprendizado de alunos.
Este gênero de jogo é conhecido como Serious Games ou Jogos Sérios.
Os jogos, assim como as aplicações de RV, possuem diversas plataformas, tais como:
Consoles, computadores, aparelhos celulares, de entre outros.
Cada plataforma é formada por diferentes características referentes a vídeo, poder computacional, dispositivos de entrada e saída e também de interação.
Os jogos e as aplicações de RV compartilham muitas características, de entre as quais destacam- se o uso de gráficos 3 D, simulação de física, metáforas para navegação, de entre outras.
Assim, com vistas para áreas de RV e jogos é possível verificar a convergência de técnicas e ferramentas dessas áreas.
A construção de aplicações de RV, jogos, tal como o desenvolvimento de softwares, de um modo geral, produz um conjunto de artefatos que podem ser reutilizados em aplicações com objetivos semelhantes.
Através desses artefatos reutilizáveis, pode- se aumentar a produtividade, melhorar a confiança e diminuir os custos relacionados ao desenvolvimento de software.
Para estabelecer normas e processos para a reutilização de software a Engenharia de Software, através da área de Reutilização de Software, estuda formas de promover um processo que identifique, organize e agrupe funcionalidades similares num mesmo domínio de aplicação, sendo possível compor uma coleção de aplicações com um conjunto específico de características que permitirão a construção de elementos reutilizáveis de software.
Uma das metodologias disponíveis para modelar e identificar as características de um domínio de aplicação é a Engenharia de Domínio.
A partir de uma modelagem de domínio, pode- se obter uma Linguagem de Domínio Específico, do inglês Domain Specific Language (DSL), que visa resolver problemas particulares do domínio modelado, tendo como principais vantagens a criação e a documentação de regras e particularidades importantes deste.
A criação de DSL é atualmente facilitada por a utilização de ferramentas com o propósito específico de criação e manutenção destas linguagens.
Tais ferramentas são denominadas de Language Workbenches (Lw).
Já que as DSL são criadas para resolver um conjunto específico de problemas, elas podem ser aplicadas nos diferentes contextos de desenvolvimento de software, tais como, na construção de sistemas comerciais, sistemas para plataformas móveis, criação de aplicações de RV e jogos ou no desenvolvimento de sistemas computacionais utilizados como recursos didáticos nas diferentes áreas do conhecimento.
Os softwares e diferentes soluções digitais aplicados como recursos didáticos empregados no auxílio do processo de ensino aprendizagem são conhecidos como Objetos de Aprendizagem (OA).
Atualmente, pode- se observar um aumento da quantidade de OA disponíveis na Internet e muitos destes recursos encontram- se publicados na rede, inclusive para uso público, nos diferentes níveis de ensino.
Contudo, ainda existem áreas do conhecimento que carecem de OA.
Uma destas áreas que tem pouca disponibilidade de OA é a área de Medicina de Família e Comunidade que se ocupa dos primeiros estágios de um processo de doença e também das medidas preventivas das principais enfermidades, além de considerar os aspectos sociais envolvidos no tratamento das enfermidades.
A fim de aprimorar o atendimento de saúde prestado à população, o Ministério da Saúde do Brasil criou, em 2008, a Universidade Aberta do Sistema Único de Saúde ­ Una-SUS, com o objetivo de promover a formação e educação permanente dos colaboradores (médicos, enfermeiros e técnicos) do Sistema Único de Saúde (Sus, através da oferta de cursos de especialização e extensão, ministrados numa combinação de metodologias à distância e presencial.
Para dar suporte a esses cursos, que no período de 2008-2011 já ofereceram 50.000 vagas, o Ministério da Saúde tem incentivado o uso de OA, como forma de dar mais agilidade ao processo de ensino-aprendizagem e mais autonomia aos alunos no estudo dos assuntos tratados nos cursos, tendo como uma das áreas contempladas com recursos a Medicina de Família e Comunidade.
Considerando a carência de OA na Medicina de Família e Comunidade, este trabalho propôs- se a criar uma linguagem de domínio específico, intitulada de VR-MED, que tem o objetivo de permitir o desenvolvimento de Ambientes Virtuais (AV) aplicados no ensino da Medicina de Família e Comunidade, com base em uma notação visual que fornece o formalismo necessário para especificação dos casos de ensino e que pode ser usada para gerar jogos que sejam empregados como OA.
A VR-MED foi concebida para que programadores, projetistas de software e também profissionais da saúde, apoiados por uma notação própria que permite representar as características do domínio de Medicina de Família e Comunidade, criem ambientes virtuais que simulem os casos de ensino na forma de jogos de computadores.
Conforme mencionado anteriormente, em junho de 2008, o Ministério da Saúde criou a Universidade Aberta do Sistema Único de Saúde ­ Una-SUS com o objetivo de promover formação e educação permanente dos colaboradores do Sistema Único de Saúde e ofertar cursos de saúde adequados à realidade brasileira.
Esses cursos, em nível de especialização ou extensão, que estão sendo ministrados numa combinação de metodologias à distância e presencial, visam o atendimento da meta 4.4 do programa &quot;Mais Saúde «que aborda a oferta de cursos de especialização em larga escala.
Um exemplo destes cursos já em andamento é o de Especialização em Saúde da Família que prevê uma oferta de mais de 50.000 vagas no período entre 20082011.
Para oferecer esses os cursos, a Una-SUS tem produzido os materiais instrucionais através de espaços virtuais e presenciais colaborativos, unindo esforços de entidades nacionais como universidades e associações profissionais e científicas, tomando como modelo a experiência do Campus Virtual de Saúde Pública (CVSP) da OPAS1-OMS2.
A Una-SUS funciona como uma rede formada por o intercâmbio de diversas Universidades Federais que compartilham materiais e cooperam para o desenvolvimento e implementação de novas tecnologias educacionais em saúde.
Além de produzir material instrucional, também é objetivo do Una-SUS viabilizar novas tecnologias e o aperfeiçoamento das existentes no intuito de auxiliar na produção de material didático, assim como, oferecer uma melhor infraestrutura para cursos na modalidade a distância.
Uma das parceiras da Una-SUS no cumprimento destes objetivos, a Universidade Federal de Ciências da Saúde de Porto Alegre (UFCSPA), vem atuando, entre outras frentes, no sentido de produzir materiais instrucionais para os cursos de ensino a distância em Saúde da Família, e no desenvolvimento de pesquisa cooperação técnica para disseminação de tecnologias educacionais, desenvolvimento de ferramentas de simulação para resolução de casos clínicos complexos com ênfase em custo-efetividade, que será utilizada como recurso didático no decorrer de os cursos.&amp;&amp;&amp;
Em o contexto destas ferramentas de simulação, os jogos computacionais podem ser utilizados como OA no ensino a distância, com o objetivo de simular ações corriqueiras de um profissional de medicina de família, tornando o material didático produzido mais real e interativo.
Para facilitar a produção destes jogos e promover sua aplicação como objetos instrucionais, é necessário conceber um processo de criação que contenha elementos que sejam de entendimento dos profissionais da saúde e também dos profissionais da computação.
Esse processo de criação pode ser entendido como um processo de desenvolvimento de software, de modo que o objeto educacional é um software (jogo computacional) que permite acesso ao conteúdo didático através do seu uso.
Em este sentido, a VR-MED apresenta uma notação visual legível para os profissionais da área médica e também da computação, permitindo o desenvolvimento de ambientes virtuais, na forma de jogos, aplicados ao ensino da Medicina de Família e Comunidade, sem a necessidade de preocupações técnicas envolvidas na produção.
O próximo capítulo apresenta os conceitos necessários para a compreensão do Organização Pan-- Americana da Saúde Organização Mundial da Saúde que é Medicina de Família e Comunidade, bem como, o método de ensino em Medicina, assim como uma definição do que é Objeto de Aprendizagem.
Já o capítulo 3 apresenta um estudo sobre desenvolvimento de software, em especial sobre as metodologias de Engenharia de Software empregadas para construção de sistemas computacionais, tais como:
Engenharia de Domínio, Linguagem de Domínio Específico e Model Driven Development.
O capítulo 4 apresenta trabalhos relacionados nas áreas de RV e jogos.
Em seguida, o capítulo 5 descreve como foi desenvolvido o protótipo da Linguagem de Domínio Específica intitulada VR-MED, bem como as características de domínio presentes nessa linguagem, assim como o diagrama (modelo) que foi concebido como parte a programação orientada por modelos.
O capítulo 6 apresenta a avaliação da VR-MED realizada durante uma oficina no contexto da Una-SUS.
E, por fim, o capítulo 7 apresenta as contribuições e limitações da VR-MED, citando possíveis melhorias a serem desenvolvidas para dar continuidade às pesquisas e aprimoramento das mesmas.
A Medicina Geral e Familiar, conhecida como Medicina de Família e Comunidade, é uma especialidade com conteúdos próprios de investigação e estudo acadêmico.
Esta especialidade da Medicina ocupa- se com cuidados pertencentes aos primeiros estágios de um processo de doença e também em trabalhar com medidas preventivas das principais enfermidades.
O Brasil conta com a Sociedade Brasileira de Medicina de Família e Comunidade (SBMFC) 3, que é a entidade nacional que congrega os médicos que atuam em postos e outros serviços de Atenção Primária em Saúde.
Sendo assim, o médico de família é normalmente o primeiro contato do paciente com o sistema de saúde, logo, uma das principais atribuições deste profissional é proporcionar ao paciente um acesso ilimitado ao sistema de saúde, independente de sexo, idade ou outras características.
Complementarmente, o profissional da Medicina de Família adota o papel de defensor do paciente quando necessário, assumindo a função de interlocutor do paciente frente a as outras especialidades médicas, promovendo o uso eficiente dos recursos da saúde.
A partir de a característica de interlocução faz- se necessário que o médico de família estabeleça uma relação com o paciente, considerando seus aspectos individuais, familiares e comunitários, no intuito de formar uma comunicação médico-paciente efetiva.
O médico de família fica responsável por prover uma prestação de cuidados médicos continuados ao paciente, gerindo, de forma simultânea, problemas agudos e crônicos.
De entre as principais funções deste profissional, destacam- se a administração de doenças que se apresentam ainda numa fase precoce, a promoção do bem-estar da comunidade, além de o combate aos problemas de saúde nas dimensões física, psicológica, social, cultural e existencial.
Em o contexto no ensino da Medicina Família e Comunidade, é possível utilizar materiais educacionais que são executados por sistemas computacionais, a partir de isto, o ensino torna- se mais interativo.
Tais materiais são conhecidos como Objetos de Aprendizagem, a próxima seção apresenta uma definição para estes.
Atualmente, a informática está presente no cotidiano das pessoas, dos processos industriais, comercias, pode- se facilmente verificar o emprego de diversas tecnologias nos diferentes setores da economia.
Aplicações computacionais também estão presentes na área de educação, não apenas nos processos administrativos das instituições de ensino, mas também no processo de ensino e aprendizagem.
A partir de o uso de ferramentas computacionais é possível gerar novas práticas curriculares, diferentes metodologias e promover novos meios para estimular habilidades nos estudantes.
A informática pode promover um ambiente que desperte o interesse do aluno, motivando a pesquisa e a descoberta.
O emprego de tecnologias no processo de ensino e aprendizagem pode oferecer ao aluno um paradigma de ensino construcionista.
Os materiais construídos através de um processo que permita o armazenamento digital de seu conteúdo podem ser definidos como Objetos de Aprendizagem (OA).
Segundo Wiley, define- se por OA quaisquer recursos digitais, tais como texto, som, imagem, jogos, que podem ser reutilizados para assistir à aprendizagem e que podem ser distribuídos por a rede.
Ainda, outra importante característica é a reutilização.
O OA deve ser construído de modo a permitir o seu reuso em diferentes contextos pedagógicos e por várias pessoas.
Pode- se, também, definir um OA como um bloco que contém material educacional que pode ser aplicado, e reutilizado, em diferentes situações de aprendizagem onde o recurso possa ser empregado.
Costumeiramente, um OA, também é chamado de Learning Object em outras literaturas.
Um exemplo de OA no formato textual é apresentado no Apêndice A. Este OA é um caso de estudo na forma de uma história que simula a realidade do cotidiano da prática da Medicina de Família e Comunidade.
Em o contexto do ensino da Medicina pode- se empregar uma técnica de ensino onde a abordagem principal é a memorística.
Essa é fundamentada principalmente na memorização de conteúdos ministrados durante o curso.
Em oposição a essa abordagem, surgiu, em 1968, na McMaster University do Canadá, uma técnica que privilegia o ensino a partir de problemas similares à prática profissional de Medicina.
Essa prática de ensino ficou conhecida como Problem Based Learning (PBL).
O PBL permite que o aluno tenha contato com problemas semelhantes aos problemas reais presentes no cotidiano da prática profissional.
Este modelo de ensino pretende que o aluno busque solucionar os problemas auxiliando- se de pesquisas bibliográficas, consultas dirigidas a especialistas, discussões ou sob a orientação de um professor tutor.
A aplicação do PBL, responsável por fomentar a autoaprendizagem, teve origem nos cursos de Medicina, para promover a formação de profissionais com um conhecimento interdisciplinar, capazes de relacionar os conhecimentos presentes em diferentes disciplinas, tal como é necessário na prática médica.
Então, como a prática da Medicina de Família e Comunidade também exige do profissional um conhecimento amplo de várias disciplinas para resolver as diferentes situações abordadas por o médico de família em seu cotidiano, pode ser empregado o uso do PBL na formação de profissionais especialistas nesta área.
O PBL apresenta problemas aos estudantes e permite que os mesmos realizem discussões sobre eles.
Os problemas, além de queixas biológicas, precisam complementar dados referentes às condições sociais e emocionais dos envolvidos.
Assim, vislumbra- se que um jogo pode ser utilizado também como um OA, contendo as informações apresentadas nos problemas, além de permitir que o aluno investigue as informações do ambiente do jogo.
A RV e os jogos introduzidos nesse contexto possibilitam a criação de ambientes tridimensionais, que colocam o estudante de Medicina num ambiente virtual que expõe o aluno a situações do cotidiano, tal como interagir com pacientes, com um alto grau de representação da realidade.
De entre as vantagens da utilização de RV aplicada ao ensino da Medicina, destacam- se a possibilidade de reproduzir uma grande variedade de situações do cotidiano profissional com um bom grau de realismo, através de cenários com representações visuais, sonoras e táteis muito semelhantes à realidade.
Em se tratando de estímulos táteis, o trabalho de Kotranza apresenta uma abordagem que simula um paciente virtual submetido a um exame físico, que visa identificar um possível câncer de mama.
A simulação utiliza um ser humano virtual e um dispositivo tátil de interação que possui a forma de um corpo humano.
Os resultados do experimento mostram que a interação com o dispositivo tátil é semelhante ao contato com o paciente real.
Outro importante tema que pode ser abordado utilizando- se RV, no âmbito do ensino de Medicina, é a interação entre o médico e o paciente.
Em o intuito de permitir que acadêmicos de Medicina aprimorem suas habilidades interpessoais, foi proposta uma ferramenta denominada IPSViz.
Esta ferramenta captura as ações do aluno em relação a o paciente virtual e, posteriormente, permite que este aluno observe suas ações, tomando consciência de sua forma de agir, podendo melhorar a interação com os seres humanos reais.
Também no treinamento de suporte à vida podem ser usadas técnicas de RV no intuito de prover ao aluno, em treinamento, situações semelhantes à realidade.
O projeto ARLIST (Augmented Reality Environment for Life Support Training), por exemplo, simula um atendimento médico de emergência.
Para prover maior realismo à simulação, o ambiente baseia- se num manequim anatômico com o qual o aluno interage.
Este manequim possui fala, responde a perguntas do aluno, exibe expressões faciais de cansaço, dor, choro, entre outras, além de apresentar lesões de tórax e permitir a execução de ausculta4 cardíaca e pulmonar com um estetoscópio5 real.
Apesar de as inúmeras aplicações, o desenvolvimento de sistemas de RV e jogos, tal como os aplicados ao domínio do ensino de Medicina, carecem de um processo formal de modelagem e implementação.
A ausência dessa descrição formal dificulta a detecção de semelhanças entre as diferentes técnicas de RV, e isso impede a reutilização eficiente de componentes de software, além de impedir a construção de uma documentação num nível de detalhe inteligível ao usuário da aplicação.
Ouvir, escutar um som emitido por o aparelho respiratório ou sons gerados por o ciclo cardíaco.
Aparelho utilizado por diversos profissionais da saúde para amplificar sons corporais.
A Engenharia de Software pesquisa processos de desenvolvimento que formalizem a construção de sistemas computacionais.
O principal objetivo desta formalização é definir uma metodologia, composta de etapas e normas, que torne o processo de desenvolvimento de software repetível e, assim, diminua as ocorrências não previstas durante a execução do processo.
Outros importantes objetivos da formalização é a melhoria da produtividade e da qualidade do software desenvolvido.
Essas melhorias são obtidas nas vantagens que uma abordagem metódica bem delineada propicia.
Por exemplo, através da documentação organizada de procedimentos e processos é possível diminuir as incertezas sobre elementos que devem ser construídos, reduzindo o número de defeitos associados a esses elementos e, com isto, proporcionando um menor tempo na construção do software.
As diversas atividades que compõem o processo de desenvolvimento de software são executadas de maneira ordenada e, ao término da execução de uma tarefa, se produz um ou mais artefatos que são utilizados em etapas posteriores.
O objetivo das etapas iniciais de um processo de desenvolvimento é obter dados sobre o problema.
Esses dados formam os requisitos que devem ser atendidos no software pretendido.
Além de o registro apropriado dos requisitos, deve- se, nas etapas iniciais, investigar os atores envolvidos no sistema, pois muitos aspectos sobre o funcionamento do sistema dependem das necessidades dos atores envolvidos com o uso do sistema.
Os requisitos e também os atores relacionados no início do processo de desenvolvimento devem ser documentados, respeitando as normas originárias da metodologia de desenvolvimento adotada.
Além de a definição de uma metodologia, a Engenharia de Software preocupa- se com a reutilização de software, e busca formas de aumentar a produtividade através da reutilização de artefatos de software, tais como, os documentos que representam os atores e requisitos.
De entre as finalidades da reutilização desses artefatos cita- se o aumento da produtividade.
Em o contexto de reutilização, pode- se determinar um conjunto de conceitos, normas e procedimentos comuns a um grupo de sistemas.
Desta forma, quando agrupado um conjunto de aplicações computacionais que compartilham características relevantes, tais como:
Requisitos, objetivos, normas e procedimentos, obtêm- se o domínio dessas aplicações.
A área de Engenharia de Software, que se preocupa com este assunto, chama- se Engenharia de Domínio.
Esta área estuda formas de modelar e identificar as características de um dado domínio e tem como principal finalidade possibilitar que os sistemas de um mesmo domínio sejam construídos a partir de um mesmo processo e artefatos, viabilizando a reutilização de conceitos e funcionalidades comuns.
Define- se por domínio um determinado conjunto de normas e procedimentos comuns que podem ser agrupados, formando uma unidade.
Desta forma, um domínio pode ser caracterizado por um conjunto de aplicações computacionais que compartilham algumas características como:
Requisitos, objetivos, normas e procedimentos.
Existem abordagens de cunho genérico que tentam prover uma mesma solução geral para diferentes problemas.
A Engenharia de Domínio estuda como identificar e organizar informações sobre problemas similares, ou seja, que possuem características comuns, assim, constituindo- se um domínio comum para essa classe de problemas.
Então, pode- se utilizar das práticas de Engenharia de Domínio para se obter uma solução especializada em fornecer uma solução melhor para um conjunto menor de problemas similares.
A principal finalidade da Engenharia de Domínio é possibilitar que os sistemas de um mesmo domínio sejam construídos a partir de um mesmo processo e artefatos, viabilizando a reutilização de conceitos e funcionalidades comuns.
A Engenharia de Domínio descreve as atividades necessárias para a construção de artefatos reutilizados nas aplicações.
Essas atividades estão contempladas no processo de modelagem do domínio, que realiza o estudo para prover a documentação adequada para o domínio, ou seja, que forneça as informações necessárias sobre o funcionamento do objeto de estudo.
As atividades da modelagem para construção de artefatos reutilizáveis são descritas a seguir:
Identificação do domínio:
Define o escopo de abrangência do domínio, ou seja, é o levantamento dos requisitos identificados no domínio da aplicação, caracterizando as variabilidades e também as opcionalidades dos requisitos;
Construção de um projeto adaptável do domínio:
Define uma arquitetura de referência para o domínio.
Essa arquitetura deve abranger os requisitos funcionais e não funcionais identificados no domínio;
Mecanismos de tradução:
Define mecanismos que viabilizem a tradução dos requisitos do domínio em sistemas gerados através dos artefatos reutilizáveis definidos.
Em as subseções a seguir, as fases que formam o processo da Engenharia de Domínio (Análise, Projeto e Implementação) são detalhadas.
A Análise de Domínio é a etapa responsável por coletar e organizar toda a informação necessária para o desenvolvimento de aplicações de um mesmo domínio A literatura apresenta métodos que viabilizam a documentação do domínio, através da definição de um processo que formaliza as etapas de levantamento de dados e também organização da informação associada ao domínio.
De entre os métodos para análise do domínio pode- se citar o Foda, e FeatuRSEB.
Tais métodos procuram estabelecer e registrar o escopo do domínio, isso é realizado através da geração de um documento denominado de modelo de características.
As características, por sua vez, podem ser:
Opcionais, mandatórias, variáveis e invariáveis.
As características variáveis e invariáveis são denominadas de variabilidade, já as opcionais e mandatórias são denominadas de opcionalidades.
O modelo de característica pode ser definido como o artefato produzido durante a etapa de Análise de Domínio.
Este modelo descreve as características do domínio, assim como seus relacionamentos, formalizando as variabilidades e opcionalidades de cada característica do domínio.
Conforme descrito anteriormente, uma determinada característica do domínio apresenta suas variabilidades e opcionalidades diante de o domínio.
Assim, de acordo com a sua variabilidade, uma característica pode ser classificada como:
Ponto de variação:
Características que viabilizam a parametrização no domínio.
A configuração do ponto de variação ocorre nas variantes;
Variantes: São as alternativas de parametrização disponíveis para cada ponto de variação, portanto, uma variante deve estar ligada a um ponto de variação;
Invariante: Característica que não sofre modificação no domínio, assim, não pode ser configurável.
No que diz respeito à opcionalidade, uma característica pode ser qualificada como Opcional:
Característica que pode ou não pertencer a uma aplicação derivada do domínio;
Mandatória: Característica presente, obrigatoriamente, em todas as aplicações derivadas de um domínio.
O Projeto de Domínio define um modelo de arquitetura de software específica para o domínio do problema.
Define- se, neste trabalho, a arquitetura de software específica como um molde que documenta os aspectos essenciais próprios do domínio e demonstra como esses são implementados.
A principal responsabilidade desta etapa é desenvolver uma arquitetura genérica o suficiente para atender às necessidades do domínio estudado.
O embasamento necessário para a construção da arquitetura é fornecido por a etapa de Análise do Domínio, assim, todo o estudo realizado e documentado naquela etapa, serve de insumo para a construção do Projeto de Domínio.
De forma sucinta, o que ocorre nesta etapa é o refinamento das características definidas na análise.
Em este momento, são definidas e documentadas as regras que estão associadas às características, sempre observando sua variabilidade e opcionalidade.
O Projeto de Domínio não possui uma preocupação com os detalhes de implementação das características, a responsabilidade desta etapa é continuar refinando o modelo de característica de forma organizada e documental no intuito de identificar as operações necessárias para suprir as necessidades do domínio.
A documentação elaborada nesta etapa produz artefatos de software tais como:
Modelos de classe, diagramas de colaboração e de atividades.
A Implementação do Domínio preocupa- se com a construção dos artefatos reutilizáveis de software.
A construção dos artefatos utiliza- se do conhecimento estabelecido na etapa de Projeto de Domínio.
Após o processo de Engenharia de Domínio, pode- se projetar uma DSL embasada nos artefatos construídos em cada uma das fases.
Assim, a próxima seção deste trabalho apresenta a DSL, seu processo de criação e as ferramentas que auxiliam na construção deste tipo de abordagem.
Como resultado das atividades executadas no processo da Engenharia de Domínio podem ser obtidos padrões de projeto, geradores de código, arquiteturas de referência, ou ainda as Linguagens de Domínio Específico (DSL).
De entre estas diversas maneiras de utilizar o conhecimento adquirido na Engenharia de Domínio, os padrões de projeto delineiam maneiras de solucionar problemas que são recorrentes no desenvolvimento de aplicações.
O foco principal dos padrões de projeto é a reutilização na fase de projeto, sem a preocupação com a implementação.
Já os geradores de código são ferramentas que permitem a geração de códigos a partir de modelos, tal como o modelo de classes.
Ainda as arquiteturas de referência caracterizam- se por um conjunto de definições que expressam a organização estrutural das aplicações.
Enquanto que uma DSL é uma linguagem computacional que possui notações e abstrações voltadas para um domínio em particular.
A ciência possui abordagens genéricas para prover soluções generalistas para muitos problemas em diversas áreas.
Por outro lado, essas mesmas soluções, de cunho genérico, podem ser otimizadas quando aplicadas de forma específica com o intuito de aumentar a eficiência da solução, seja em termos de seu custo, seu tempo de execução ou duração de seus resultados, ou mesmo de seus efeitos colaterais.
Então, a DSL é uma linguagem computacional aplicada a um determinado tipo particular de problema, em oposição às linguagens de propósito gerais (GPL -- General Purpose Languages) que se destinam a resolver problemas genéricos.
As DSLs oferecem uma especificação executável que possui um formalismo que propicia abstração sobre um conjunto de problemas em particular.
Enquanto as GPLs são projetadas com a finalidade de resolver problemas genéricos, as DSLs são construídas no contexto de uma área, visando uma melhor forma de resolver problemas específicos desta, utilizando- se do conhecimento prévio existente sobre o domínio da área em questão.
A definição de uma DSL está diretamente ligada à Engenharia de Domínio, visto que essa proporciona a contextualização, formalização e análise do domínio, tanto para a criação, quanto aplicação de uma DSL.
Uma das vantagens do uso de DSL é a possibilidade de gerar uma abstração utilizando- se o mesmo idioma e metáforas associadas ao domínio do problema.
Assim, especialistas no domínio são capazes de compreender, validar, criar ou propor alterações numa DSL, além de a geração de aplicações voltadas ao domínio da DSL.
Outra vantagem do uso de DSLs é dada por a auto-documentação do domínio abordado, ou seja, a linguagem é definida com expressões próprias do domínio.
Este uso de metáforas apropriadas ao domínio do problema promove uma documentação do domínio que é expressa diretamente na DSL.
Além disso, as soluções construídas através de uma DSL são otimizadas para solução do problema modelado, uma vez que as DSLs são projetadas e desenvolvidas de forma especializada para um determinado domínio.
Ainda, o uso de uma DSL aumenta a produtividade, isso decorre da reutilização que a DSL promove no seu domínio de aplicação, a confiabilidade dos sistemas construídos, dado que os elementos da DSL são experimentados e testados a cada nova construção.
A melhoria da portabilidade é proporcionada por o alto nível de abstração que a DSL promove, além de incorporar o conhecimento do domínio e permitir que os testes sejam realizados no nível do domínio do problema.
Por outro lado, as desvantagens da utilização de DSL são determinadas por os custos associados às atividades como:
Manutenção da própria DSL, análise de domínio necessária para a criação da DSL e a aprendizagem da DSL.
Apesar de as desvantagens, as vantagens presentes nas DSLs justificam sua utilização.
De acordo com Fowler, as DSLs classificam- se em internas e externas:
DSLs Internas são maneiras de programar e construir artefatos de forma que uma GPL simule as características de uma DSL.
O termo fluent interfaces também é utilizado para denominar uma DSL Interna.
Essa abordagem torna o código mais legível e facilmente alterável;
DSLs Externas, por sua vez, são linguagens com sintaxe e geradores próprios, que podem possuir uma notação textual ou gráfica.
As DLS externas podem ser compiladas ou ainda concebidas como geradores ou tradutores de código, para posterior compilação numa GPL.
Durante o processo prático de desenvolvimento de sistemas, não é possível a construção de uma aplicação inteira somente com o uso de uma DSL.
Ela deve ser combinada com outras linguagens, podendo ser outras GPLs, outras bibliotecas e, até mesmo, outras DSLs, pois podem existir DSLs adequadas para especificar diferentes tipos de problemas que compõem uma aplicação.
Em a subseção a seguir são apresentadas metodologias para a criação de DSLs.
A metodologia proposta por Bierhoff oferece uma abordagem incremental para criação de DSLs.
Essa metodologia consiste em construir uma DSL a partir de a investigação incremental de uma série de aplicações já existentes num domínio.
As principais vantagens do modelo incremental de construção de DSLs são observadas primeiramente na diminuição dos custos associados ao projeto de criação da DSL, que são inicialmente mais baixos.
Os limites do domínio e, portanto, também da DSL, são definidos no decorrer de o processo, e ainda se pode fazer uso da DSL muito mais cedo, visto que a sua utilização pode ocorrer de acordo com o avanço do processo de criação.
Conforme outra abordagem, proposta por Deursen, a criação de uma DSL compreende as seguintes etapas:
Análise: Esta etapa consiste em definir a abrangência da DSL no domínio de aplicação.
A partir de a definição do escopo deve- se coletar e registrar, de forma adequada, o conhecimento relevante do domínio, com a finalidade de tradução deste conhecimento em elementos semânticos e também operações possíveis dentro de uma linguagem computacional.
Além disso, a etapa de análise deve projetar a DSL;
Implementação: Deve assegurar a construção de uma biblioteca que implemente as noções semânticas documentadas na etapa anterior.
Além de a biblioteca, é obrigação desta etapa o desenvolvimento de um compilador que traduza os programas escritos na forma da DSL para uma sequência de chamadas para a biblioteca;
Utilização: Consiste em utilizar a DSL para construir as aplicações desejadas no domínio.
A próxima seção apresenta uma definição para ferramentas que auxiliam na criação de DSLs.
Segundo a definição apresentada por Fowler em, uma DSL Externa deve contemplar os seguintes elementos básicos:
Uma sintaxe adequada, gerador de código e um editor com as funcionalidades necessárias para a construção das aplicações do domínio.
A construção de compiladores faz uso de ferramentas tradicionais, tais como:
Lex e Yacc7, ferramentas complexas, o que inviabiliza seu uso para criação de DSLs.
Em o intuito de solucionar esse problema relacionado à criação de DSLs, foram desenvolvidas ferramentas especializadas chamadas Language Workbenches (Lw).
Como exemplo dessas ferramentas tem- se o MPS (Meta Programming System), Microsoft DSL Tools e o Xtext.
Existem LWs que permitem a definição de DSLs através de definições textuais, em formatos semelhantes a uma BNF -- Backus­Naur Form.
Outros, no entanto, viabilizam a utilização de diagramas gráficos para definição das DSLs e também dos templates8 para geração de código.
Os problemas a serem resolvidos de forma computacional tornam- se cada vez mais complexos e com isto aumenta a busca por alternativas viáveis para facilitar a produção de software.
As linguagens de programação de alto nível, por exemplo, criam Lex é um programa para gerar analisadores léxicos.
Yacc é um programa para gerar parsers.
Trechos de código previamente definidos que podem ser complementados conforme a necessidade.
Para elaborar diagramas, modelos, de alta abstração, ou seja, capazes de generalizar os conceitos observáveis e ainda armazenar as informações necessárias para a construção de sistemas foi criada a Engenharia Dirigida por Modelos, do inglês Model Driven Engineering (MDE).
O MDE, também é conhecido como Desenvolvimento Dirigido por Modelos, do inglês Model Driven Development (MDD), que caracteriza- se por apresentar uma abordagem que sugere o desenvolvimento guiado por modelos, fazendo com que o mesmo seja parte integrante do software e não apenas um documento de orientação para guiar as tarefas de desenvolvimento.
A MDD é um paradigma que fornece um processo que combina conceitos próprios de um domínio.
Esses conceitos são mapeados através de modelos e abstrações, o que simplifica a construção de sistemas e promove um melhor entendimento do problema, assim como, uma melhor comunicação entre os indivíduos, através do uso das abstrações.
O MDD formata o processo de desenvolvimento através da elaboração de modelos específicos para o contexto de aplicação, ou seja, o foco dos modelos é o próprio domínio.
Assim, um processo de desenvolvimento que adota MDD utiliza- se de um ou mais modelos que representam de forma adequada as características do domínio A Figura 1 demonstra os elementos presentes no MDD.
Para viabilizar a criação de modelos é necessário o suporte de uma ferramenta de modelagem, através de a qual o usuário (programador), apoiado por uma semântica, produz modelos que abstraem os conceitos do domínio.
Os modelos passam por um processo de transformação que traduz o modelo de entrada e pode produzir diferentes tipos de artefatos como saída.
Assim, o uso de modelos permite automatizar diferentes tarefas durante um processo de desenvolvimento de software, destacando- se a possibilidade de transformar um modelo em código fonte, ou então, em outro modelo, assim como, em artefatos de software utilizados para teste e também na criação da documentação do sistema modelado.
De entre as vantagens apresentadas na literatura para a utilização de MDD destacam- se as seguintes:
Melhoria da comunicação:
Um modelo permite a representação das características, associadas à natureza do domínio, omitindo os detalhes técnicos, para melhor transmitir o funcionamento de um processo, de uma tarefa, ou de um sistema;
Possibilidade de reuso e melhoria da manutenção:
Como a modelagem é realizada sem uma preocupação com a plataforma ou tecnologia, é possível aplicar o reuso de componentes e padrões de arquitetura.
Ainda é possível aproveitar o mesmo modelo para geração de código com diferentes componentes ou tecnologias.
A reutilização de artefatos de alto nível, tais como modelos, proporcionam um maior benefício na reutilização de software, quando comparados, por exemplo, com a reutilização de código fonte;
Portabilidade: Um mesmo modelo pode ser traduzido para diferentes plataformas.
Ainda, cada parte de um mesmo modelo pode possuir transformações para diferentes plataformas, desta forma, a tradução do modelo pode ser executada num ambiente heterogêneo (interoperabilidade);
Ganho de produtividade:
Com o aumento do nível de abstração, através da utilização de modelos, reduz- se tempo esforço de desenvolvimento associado à complexidade dos artefatos de software Já de entre as desvantagens apresentadas na literatura para a utilização de MDD, destacam- se as seguintes:
Aumento da curva de aprendizagem:
Em o início da utilização do MDD observa- se o aumento da curva de aprendizagem, visto que é necessário o aprendizado das técnicas associadas ao desenvolvimento guiado por modelos;
Investimento inicial:
O MDD requer um investimento inicial alto, dado à necessidade da construção do processo que se preocupe com a reutilização baseada em modelos;
Rigidez do software gerado:
As ferramentas de modelagem e transformação produzem software, tal como o modelo o descreve, sendo difícil modificar características, ou então, criar aquelas que não estão presentes no modelo.
O desenvolvimento de aplicações de RV carece de um processo de desenvolvimento formal, capaz de abranger as peculiaridades da área.
Conforme Lindeman, a RV ainda está em fase de definição e necessita ser classificada e categorizada, sendo esse um dos principais fatores que prejudica a definição formal de um processo de desenvolvimento.
Outros fatores, igualmente significativos para essa escassez de formalismos apropriados à RV, são a falta de normatização dos dispositivos e das técnicas de interação, além de a ausência de padronização dos elementos de interface.
Devido a a essa falta de formalismo, boa parte das aplicações de RV são implementadas de maneira ad-hoc, sem a preocupação com a reutilização dos componentes já construídos.
Este processo de reescrita pode levar à criação de uma ambiguidade na proposição e na implementação de técnicas.
Buscando reduzir estes problemas, alguns trabalhos já foram desenvolvidos nesta área, descritos a seguir.
Rieder definiu uma metodologia para especificar tarefas de interação de uma aplicação de RV.
Baseado nas Redes de Petri, o formalismo permite aproximar o desenvolvimento de aplicações da etapa de concepção e projeto, além de oferecer recursos para implementação, testes e documentação do sistema.
Em a metodologia proposta, as operações são representadas como transições de uma Rede de Petri e os lugares da rede representam os dados, conforme apresentado na Figura 2.
Fonte: O framework DART é composto por um conjunto de ferramentas que permite a geração de protótipos de aplicações em Realidade Aumentada.
Com essas ferramentas, os protótipos são construídos ainda na fase de projeto, permitindo que as aplicações sejam testadas já no começo de sua concepção.
Fonte: O trabalho de Broil apresenta uma abordagem para o desenvolvimento de aplicações de RV baseada em componentes.
Através desses componentes podem- se especificar técnicas de interação, comportamento dos objetos e prover o uso de diferentes dispositivos de RV.
O trabalho também provê um ambiente de programação visual.
O processo de desenvolvimento de aplicações é realizado por quatro etapas, sendo a primeira a seleção apropriada dos componentes, conforme necessidade da aplicação.
A segunda, configuração das propriedades dos componentes, seguida da especificação do fluxo de dados entre os componentes e, por fim, os testes.
De entre os componentes que estão presentes nesta abordagem, alguns são responsáveis por o envio e o recebimento de mensagens, outros por a alteração, pesquisa e execução de tarefas.
Há ainda componentes que controlam as entradas de dados a partir de dispositivos de RV.
O ambiente de desenvolvimento pode ser visualizado na Figura 5.
Já o trabalho de Furtado demonstra a utilização de uma DSL para a geração rápida de um jogo do tipo adventure.
Em a Figura 6, pode- se observar um exemplo de um jogo gerado com a DSL.
Em este jogo o personagem principal que se move em torno de um labirinto formado por salas conectadas, cada uma contendo inimigos que devem ser derrotados e elementos de jogo que devem ser conquistados.
Outro projeto a ser ressaltado é o Language for an Easy Medical Model Analysis (LEMMA), uma linguagem que apresenta uma notação baseada em elementos gráficos (visuais), com o objetivo de viabilizar uma a modelagem de processos médicos.
Fonte: Internamente os diagramas descritos nesta notação gráfica são traduzidos para Redes de Petri, sem que o usuário precise conhecer este formalismo.
Com esta tradução é possível simular e validar estes processos.
A Figura 7, apresenta um processo modelado a partir de a LEMMA, em o qual o início é representando por o círculo em amarelo e os retângulos representam exames.
Cada exame possui duas saídas distintas, uma positiva outra negativa, indicando qual o fluxo a seguir dependendo do resultado do exame.
Já o círculo em cor vermelha, que se encontra ligado aos exames é ponto terminal do processo.
Fonte: Conforme apresentado no capítulo 4, existem algumas ferramentas que visam melhorar o processo de desenvolvimento de aplicações de RV e jogos, contudo, durante esta investigação, não foi identificada uma pesquisa fundamentada em conceitos originários do domínio de Medicina de Família e Comunidade, área alvo deste trabalho.
Em este sentido, foi proposta uma abordagem para permitir o desenvolvimento de ambientes aplicados no ensino da Medicina de Família e Comunidade, utilizando uma notação visual para modelar casos clínicos que resultem num jogo computacional.
A estratégia para a criação da VR-MED foi definida a partir de discussões dos requisitos em conjunto com o grupo de Educação e Informação em Saúde da Universidade Federal de Ciências da Saúde de Porto Alegre (UFCSPA).
A partir de reuniões, verificou- se que no ensino de Medicina de Família e Comunidade já existe uma prática de utilização de OA textuais que agrupam o conhecimento de casos clínicos.
A partir destes casos clínicos textuais os educadores empregam as técnicas de PBL no processo de ensino aprendizagem.
De entre os requisitos constatou­se que VR-MED deveria:
Possibilitar que usuários leigos em programação pudessem modelar jogos a partir de os casos clínicos, manipulando apenas elementos gráficos da linguagem;
Permitir a reutilização dos modelos criados;
Permitir a geração de código executável tanto para ambientes interativos 3D como para páginas web, pois segundo análise realizada muitos dos usuários não teriam condições de usar interfaces 3D.
Para guiar a construção da VR-MED, utilizou- se o processo incremental de desenvolvimento de DSLs composto por as etapas de Análise, Implementação e Utilização.
Em a etapa de análise foram utilizados casos de estudos empregados por os professores das aulas de Medicina de Família e Comunidade, dentro de a metodologia PBL.
Durante a análise procurou- se identificar as características comuns nos casos de estudo, com a finalidade de prover uma documentação acerca de o domínio.
Durante a etapa de implementação da DSL foi importante encontrar um modelo legível por profissionais de informática e por educadores da área médica.
Considerando as características de domínio e os requisitos coletados durante as reuniões, decidiu- se optar por a criação de uma DSL baseada num fluxograma, considerando que esse é um formato compreensível aos especialistas do domínio, que não possuem necessariamente conhecimentos da área de desenvolvimento de sistemas.
Em as seções a seguir, as fases que formam a metodologia de construção da VR-MED são detalhadas.
A VR-MED deve produzir como saída um jogo cujo roteiro viabilize um ambiente para o jogador investigar situações relacionadas ao domínio de Medicina de Família e Comunidade.
A metodologia para realizar a etapa de análise consistiu, primeiramente, de pesquisa executada nos casos de estudos textuais utilizados no ensino de Medicina de Família e Comunidade.
O levantamento realizado durante essa pesquisa coletou e registrou características presentes no domínio, tais características estarão presentes na DSL para a montagem do jogo.
As características obtidas durante esse processo foram registradas num Diagrama de Características.
Este diagrama documenta, essencialmente, as características conceituais que representam entidades do domínio.
São exemplos destas características:
Médico, Paciente, Exames Complementares, entre outros.
O diagrama de características criado pode ser observado no Apêndice B. Em esta etapa foram documentadas ainda as características funcionais que representam as ações que podem ser atribuídas ao domínio, tais como:
Médico Perguntar Sintomas, Paciente Executar Exames, entre outros.
A Tabela 1 apresenta as características Funcionais e Conceituais, coletadas a partir de os casos de estudos.
Em as seções a seguir é feito um detalhamento destas características.
Conforme mencionado na seção 5.1, a VR-MED deve gerar código, tendo como base um modelo.
Esse código, por sua vez, resulta num jogo que estará disponível para os alunos.
As características conceituais denominadas Médico, Dentista e Enfermeiro representam os jogadores, ou seja, o papel que o aluno pode assumir ao jogar.
Já a característica Paciente representa todos os pacientes envolvidos no caso de estudo.
Em um modelo da VR-MED pode haver vários pacientes, pois os casos de estudos textuais apresentam relatos com vários pacientes, visto que isto é frequente nos atendimento de Medicina de Família e Comunidade.
Através da característica conceitual Remédio, pode se estabelecer os fármacos que o aluno poderá receitar ao paciente.
A utilização da característica Histórico permite que sejam incluídas informações sobre o passado do paciente, assim o aluno (jogador) poderá ter acesso a essas informações.
A característica Sintoma pode representar a alteração de um sinal, ou então, uma sensação que o paciente relata e que pode constituir- se em evidência de doença.
A utilização dessa característica no diagrama permite, por exemplo, expressar sinais de temperatura, sensações de cansaço por parte de o paciente.
Todos estes sintomas diagramados ficam disponíveis para o aluno investigar durante o jogo.
Após a entrevista, é habitual que o médico realize uma série de procedimentos, denominado Exame Físico, no intuito de diagnosticar problemas de funcionalidade, ou até mesmo doenças.
Estes exames são realizados através do tato (palpação), da ausculta, que consiste em escutar o som produzido por o organismo do paciente e da precursão, que consiste na investigação do som produzido por parte de o corpo depois que o mesmo é submetido a um pequeno golpe ou batida.
A característica Exame Físico possibilita a representação dessas técnicas no diagrama da VR-MED.
Uma prática médica comum é a utilização de exames complementares, em conjunto com os dados relatados por o paciente e àqueles obtidos nos exames físicos.
Define- se por exame complementar todos aqueles exames que ajudam a elucidar e confirmar hipóteses de doença ou tratamento.
Normalmente são exames laboratoriais, ou de imagem, tais como radiografias e tomografias.
Para permitir a diagramação desses elementos a VR-MED disponibiliza a caraterística Exame Complementar.
A característica Sintoma é uma característica que pode ser especializada em sintomas individuais.
Exame Complementar e Exame Físico.
Para permitir a criação de um diálogo entre o médico e o paciente pode- se utilizar a característica Conversar.
A característica funcional Perguntar Sintoma consiste no ato realizado por o médico (aluno) que executa a ação para um paciente.
Já o paciente complementa a ação através da característica Contar Sintoma.
A característica funcional Solicitar Exame Complementar permite ao aluno requerer, de um determinado paciente, a execução de exames complementares, por exemplo, exames laboratoriais.
O paciente deve atender a solicitação para realização de exames complementares através de uma característica funcional Efetuar Exame Complementar.
O mesmo ocorre com as características funcionais Realizar Exame Físico (Médico) e Efetuar Exame Físico (Paciente), sendo que se entende por exame físico o exame do corpo do paciente para observar a presença ou a ausência de problemas físicos.
Já a característica funcional Encaminhar Especialista, permite que o médico (jogador) realize o encaminhamento do paciente para o atendimento de outro médico, especialista em alguma área da saúde.
As características do domínio, apresentadas, na Tabela 1, possuem atributos chamados de propriedades.
As principais são agrupadas e apresentadas na Tabela 2.
A característica denominada de Início do Caso, não presente na Tabela 1, é utilizada para formalizar o início do caso, ou seja, início do jogo.
Cada característica de domínio pode apresentar um conjunto de propriedades, que ajudam a configurar e a diagramar o jogo.
As características de domínio Sintoma, Exame Físico e Exame Complementar apresentam propriedades de Vídeo, Som e Imagem que permitem, por exemplo, simular sons de auscultas e apresentar durante o jogo imagens contendo informações importantes, tais como lesões, resultados de exames por imagem.
Essas propriedades são configuradas, a partir de uma biblioteca multimídia, incorporada na VR-MED.
A propriedade Descrição do Ambiente, permite apresentar, no início do jogo, um resumo que relata particularidades do caso como, por exemplo, algum problema social que acomete os pacientes do caso.
As propriedades ligadas ao Paciente podem, por exemplo, informar o nome do paciente, sua a altura e seu peso, permitindo ao jogador investigar se existe alguma alteração física no paciente.
Além disso, a propriedade Modelo de Representação viabiliza que seja associado um modelo gráfico 3D ao paciente para criar uma representação visual durante a execução do jogo.
Durante a etapa de Análise, após coleta e o registro das características de domínio foram definidas também as regras e os signos gráficos para representar- las num diagrama próprio para a VR-MED, formalizando o diagrama, ou seja, o modelo base para o processo de MDD.
O diagrama consiste de um fluxograma que contém uma representação gráfica diferente para cada uma das características de domínio.
Essa notação foi escolhida, tendo como objetivo fornecer uma representação que descreva uma sequência de atividades.
Mais detalhes sobre este modelo, intitulado de Diagrama da são apresentados nas subseções que apresentam, respectivamente, o Desenvolvimento e a Utilização da VR-MED.
A etapa de Análise se preocupou ainda em criar uma arquitetura capaz de permitir portabilidade e extensibilidade.
A extensibilidade é possível através da expansão da DSL, já que a VR-MED é construída em ciclos iterativos, permitindo que à medida que novas características são observadas no domínio, essas podem ser agregadas na linguagem.
A Figura 8 apresenta a estratégia usada na VR-MED para permitir a portabilidade.
Um diagrama construído, conforme o formalismo da VR-MED, é traduzido para um arquivo no formato XML que, por sua vez, pode ser lido por diferentes players que interpretam as regras contidas no XML e apresentam como saída um jogo.
Com esta estratégia é possível construir players para as diferentes plataformas e com diferentes tecnologias, sempre interpretando arquivos que contém as informações diagramadas.
Esta seção apresenta a estratégia de desenvolvimento utilizada na construção da Para o desenvolvimento da VR-MED foi utilizado o Language Workbench Microsoft DSL Tools.
De entre as características disponíveis na Microsoft DSL Tools, destacam- se:
A possibilidade da construção visual de DSLs;
Existência de suporte à geração de código através do T4 (Text Template Transformation Toolkit).
O T4 é um framework útil para desenvolvimento de DSLs, principalmente para realizar a leitura de um diagrama e gerar um produto de saída, que pode ser um código compilável, ou arquivo XML;
Disponibilidade de um ambiente para experimentação da desenvolvida;
Disponibilidade de um assistente (Wizard) que contém uma série de elementos previamente construídos e customizáveis para prover um meio simples de criação de DSLs visuais.
O Microsoft DSL Tools disponibiliza uma forma de desenvolvimento visual de DSLs e permite que os conceitos presentes no Diagrama de Características sejam mapeados no intuito de consolidar a construção da DSL.
O ambiente de desenvolvimento é composto por um espaço denominado DSL Designer que se subdivide em dois compartilhamentos.
O primeiro é destinado para a definição das características de domínio e o segundo para definição da notação gráfica a ser utilizada, determinando os signos gráficos da DSL.
Outro ambiente presente no Microsoft DSL Tools é o DSL Experimental Designer, este permite instanciar a DSL desenvolvida por o DSL Designer, assim, pode- se fazer uso da DSL já durante o desenvolvimento, promovendo uma convergência entre a etapa de Desenvolvimento e Utilização.
A construção da VR-MED foi baseada nas características de domínio e para cada característica, foi criado um signo gráfico para representação.
A o final obteve- se um diagrama onde se representa os elementos do domínio.
Em o intuito de permitir que o jogo desenvolvido na VR-MED possa ser executado em diferentes plataformas, a partir de uma mesma definição, foi necessário desenvolver um tradutor capaz de criar uma representação intermediária das informações contidas no diagrama, o que é posteriormente interpretado por um player que realiza a execução do jogo.
Para facilitar o desenvolvimento, foi escolhido o formato XML para a representação intermediária.
O mapeamento das características de domínio, em elementos, signos gráficos, da VR-MED é descritos a seguir.
Conforme apresentado na seção 5.2, Análise da VR-MED, as características, Médico, Dentista, Enfermeiro e Paciente representam os personagens que participam do jogo.
Em o diagrama, estes personagens são representados por estruturas chamadas Raias, que funcionam como recipientes que agregam suas funcionalidades e características.
Todo o programa desenvolvido com a VR-MED deve possuir pelo menos um médico.
A Raia Médico representa o jogador, que no caso é o aluno, e é este que realizará as interações e seleções no mundo virtual gerado.
As demais raias representam os outros participantes presentes na modelagem, quais sejam:
Dentista, Enfermeiro e Paciente.
Um exemplo que ilustra a utilização das raias pode ser observado na Figura 10.
Em essa, duas raiais são apresentadas, sendo a primeira o recipiente que agrupará as funcionalidades e características do médico e a segunda receberá as informações de um determinado paciente.
Cada raia recebe um nome que deve ser único no modelo, já que um modelo da VR-MED pode ser formado por várias raias.
Quando for necessário, durante o jogo, para que o aluno possa questionar sobre os sintomas de um paciente, podem ser utilizadas as características funcionais Médico Perguntar Sintoma e Paciente Contar Sintoma, conforme a Figura 11.
Em este exemplo, entre ntre essas duas características funcionais estão modelados três Sintomas (característica conceitual).
Com isto, isto o aluno poderá, durante a execução do jogo, estabelecer possíveis eis relações de um sintoma com outro, para, a partir de isto, estabelecer um diagnóstico.
Para modelar Sequências de Fluxo, que indicam o encadeamento lógico dos elementos da VR-MED, se pode ligar características funcionais entre si, como, na Figura 12, é feito com os blocos indicados por as letras A e B. em A estão modeladas as características funcionais já apresentadas na n Figura 11 e em B, as características funcionais Médico Solicitar Exames Físicos e Paciente Efetuar Exames Físicos.
Optou- se se por modelar, modelar, na raia do paciente, os elementos como Perguntar Sintoma, neste caso, Médico Perguntar Sintoma.
Sintoma Sendo assim, as características Realizar Exame Físico, Solicitar Exame Complementar e Perguntar Sintoma possuem a palavra Médico na frente para indicar que são características funcionais do médico, embora no diagrama estejam representadas na raia do paciente.
A o diagramar os elementos diretamente na raia do Paciente, o diagrama fica mais claro, sem a necessidade de criar linhas de fluxo que ficam cruzando entre uma raia e outra, o que pode atrapalhar o entendimento do fluxo.
A utilização dos blocos, conforme apresentado na Figura 12, visa permitir que o usuário, ao construir o diagrama, possa controlar quando certas opções serão ou não liberadas ao jogador, garantindo que este tenha percorrido um determinado percurso.
Pode- se, por exemplo, configurar para que o jogador não tenha acesso às informações diagramadas no bloco B, antes de investigar uma ou todas as informações presentes no bloco A. As características que representam os exames complementares seguem o mesmo modelo, como pode ser observado na Figura 13, onde são apresentadas as características funcionais Médico Solicitar Exame Complementar e Paciente Efetuar Exame Complementar.
Os Exames Físicos são representados graficamente de forma semelhante aos Sintomas e Exames Complementares.
Um exemplo de diagramação de Exames Físicos é apresentado na Figura 14.
A Figura 15, apresenta um diagrama com mais elementos, tais como conversa e histórico, ambos modelados na raia do Paciente.
Ainda na Figura 15, o elemento em destaque na raia Médico representa o Início de Caso no diagrama da VR-MED.
Esse elemento determina qual raia representa o jogador.
Em este exemplo o Início de Caso está localizado na raia do Médico, indicando que esse é o jogador.
Esse elemento possui uma propriedade que permite configurar a representação gráfica do cenário do jogo e outra que possibilita descrever, textualmente, previamente onde o jogo é ambientado.
Para permitir representar o diálogo entre o personagem do jogo (representado por a Raia) e jogador, a VR-MED disponibiliza o elemento Conversa (Figura 16 -- A).
Este elemento possui a propriedade que permite adicionar um texto para simular uma conversa entre o personagem e o jogador.
Para possibilitar que o jogador analise o histórico médico de um personagem do jogo a VR-MED possui o Histórico.
Este elemento possui a propriedade também denominada Histórico, que permite ao projetista adicionar informações sobre histórico clínico do paciente, tais como doenças pregressas ou histórico familiar.
Em esta seção será apresentado o uso da VR-MED para geração de um ambiente que envolva as principais características do domínio.
O protótipo da VR-MED possui uma aparência visual semelhante a outros ambientes de desenvolvimento de software, consequência do uso da DSL Experimental Designer presente no Microsoft DSL Tools.
Em a interface as Características de Domínio ficam disponíveis para uso numa barra de ferramentas que armazena todos os signos gráficos que as representam.
Originalmente, para executar os jogos construídos com a VR-MED havia sido planejado um Player 3D que foi de fato desenvolvido.
Este player foi desenvolvido em C&amp; com a biblioteca de programação 3D Microsoft XNA que possibilita o desenvolvimento de jogos para computadores pessoais e também para Xbox 360 (Console para jogos da Microsoft).
A utilização de tecnologias 3 D, apesar de permitir interação mais rica, requer, no entanto, computadores de melhor desempenho e habilidades no processo interativo que podem não ser comuns nos ambientes onde a VR-MED pretende ser utilizada.
Por esta razão, decidiu- se criar também um player 2D baseado em tecnologia mais simples e de mais fácil acesso.
Este segundo player roda num navegador Web convencional e foi desenvolvido em linguagem de programação JAVA usando Servlets e Java Server Pages (JSP).
A camada de apresentação é gerada utilizando- se de linguagem de marcação de hipertexto (Html).
Para apresentar estes dois players definiu- se um diagrama de exemplo na VR-MED, representando uma situação em que o médico atende no consultório de uma unidade de saúde.
O Paciente, com nome de Gustavo, apresenta um quadro de hipertermia, falta de apetite e encontra- se emagrecido.
A imagem deste diagrama é apresentada na Figura 18.
O diagrama possui duas raias, uma para o Paciente e outra para Médico.
As características diagramadas para o paciente encontram- se na raia denominada &quot;Gustavo», o detalhamento das propriedades de cada um dos elementos modelados no diagrama é apresentado na Tabela 3 e Tabela 5.
Tabela 4 ­ Propriedades dos elementos presentes no caso médico Propriedades Característica (Elemento da VR-MED) Valor Nome Exame Físico Exame Físico (2º Exame Físico) Nome do Exame Resultado Nome do Exame Resultado Som Nome do Exame Exame Complementar Resultado Imagem Inspeção Emagrecido Ausculta Pulmonar Frequência respiratória de 28, ausculta pulmonar mostrando crepitantes inspiratórios finos em campo médio direito Crepitantes Rx de Tórax Infiltrado intersticial difuso RX Infiltrado Intersticial As seções a seguir apresentam o jogo gerado, sendo executado por os players construídos em 2D e 3 D, respectivamente.&amp;&amp;&amp;
O diagrama apresentado na seção anterior, quando reproduzido por o programa chamado Player 2 D, exibe inicialmente uma tela conforme a Figura 19.
Pode- se observar que o jogo apresenta apenas um paciente, conforme diagramado.
Em esta tela inicial também é exibida a descrição do ambiente em o qual se passa o jogo, conforme destacado por o retângulo em vermelho.
Essa informação é uma das propriedades no elemento Início de Caso da VR-MED.
As representações gráficas de personagem e ambiente são partes das bibliotecas multimídias e foram configuradas através das propriedades dos elementos no diagrama da VR-MED.
Em o Player 2D o jogador interage com o ambiente do jogo, utilizando o mouse.
Quando o jogador pretender interagir com um paciente, ele deve clicar sobre sua imagem, o que lhe dará acesso a informações como idade, peso, altura e nome (propriedades do paciente).
Além de essas informações, conforme pode ser visto na parte inferior da Figura 20, o Player 2D apresenta ao jogador um menu que representa as características presentes no diagrama que gerou esse jogo.
Para acessar estas características, que representam atividades possíveis no jogo, basta clicar sobre a opção desejada.
Através da característica funcional Realizar Exame Físico, por exemplo, o jogador terá acesso aos exames inseridos durante a modelagem do caso com a VR-MED, numa lista na parte inferior da tela.
Caso escolha, por exemplo, a ausculta pulmonar, uma nova tela é apresentada ao usuário, permitindo a reprodução do som.
De forma semelhante à apresentação do som de uma ausculta, pode- se ter acesso a imagens ou outras mídias, que contenham informações importantes para o jogo.
No caso de a Figura 22, é apresentada uma tela contendo uma radiografia, obtida a partir de a opção Solicitar Exame Complementar.
A partir de o mesmo diagrama utilizado nas seções anteriores, esta seção apresenta a ferramenta denominada Player 3 D, como forma de demonstrar tanto as peculiaridades do ambiente 3D quanto a possibilidade de converter o mesmo diagrama para diferentes plataformas de execução.
O aluno, jogando, pode explorar as opções presentes no menu do Paciente, e obter, como na Figura 25, o resultado da opção de Informações Paciente.
Outro exemplo é apresentado por a Figura 27, em a qual o jogador obtém, depois de acessar a opção Sintomas (Figura 26) e, em seguida, investigar o sintoma de Hipertermia, encontrando informações relacionadas ao sintoma acessado.
As demais funções existentes no Player 2D operam de forma análoga no Player 3D.
Em a Figura 28, por exemplo, o jogador observa uma Radiografia, acessada a partir de a opção Exame Complementar.
O ambiente 3D permite, adicionalmente ao que faz o Player 2 D, a execução de livre navegação por o cenário, o que pode dar ao aluno uma visão mais clara do contexto onde o paciente está inserido, o que pode ser relevante para um diagnóstico.
Um exemplo disto seria se ter um quarto com paredes mofadas ou sem janelas, o que poderia ser determinante para problemas respiratórios.
Além de isto, o ambiente 3D permite incluir animações nos modelos tridimensionais.
O modelo tridimensional utilizado para representar um paciente pode possuir, por exemplo, a animação de um ciclo de caminhada.
Essa animação pode ser reproduzida para simular um paciente com dificuldades de caminhar ou então, mover o paciente no ambiente 3 D, se necessário.
A Figura 29 apresenta três instantes do ciclo de caminhada de um paciente, que possui dificuldades para caminhar.
O modelo foi obtido no site do projeto Turbo Squid.
Além de os Players 2D e 3 D, é possível criar novos players para diferentes plataformas.
A seção seguinte apresenta um framework para ser utilizado como referência de novos players.
Em conjunto com a etapa de análise foi possível modelar um framework de referência para os players da VR-MED, disponibilizando uma abstração comum que forneça uma série de informações comuns ao domínio, objetivando a reutilização desta arquitetura na construção de novos players.
Até este momento foi concebido apenas um conjunto de classes, apresentado do diagrama da Figura 30, com as principais classes do framework.
Em este diagrama, a classe Paciente representa as raias do modelo da VR-MED e seus atributos são as características levantadas durante a etapa de análise, tais como nome do paciente e idade.
A classe Percurso, por sua vez, é responsável por resolver as sequências de fluxo, controlando para que esta seja seguida, conforme modelada na VR-MED.
Para isso, ela possui uma propriedade que define as Etapas, ou seja, uma coleção da classe Etapa.
A classe Etapa, por sua vez, controla os diferentes passos, diferentes fases, conforme é dado por as definições, presentes no diagrama da VR-MED.
Observa- se que as classes Sintomas, Exames Físicos, Exames Complementares podem ser estendidas, possibilitando que se represente na VR-MED sintomas e exames específicos, ressaltando- se, contudo, que essas especializações devem ser realizadas tanto no framework quanto na DSL.
Com o objetivo de avaliar a utilização da VR-MED por um grupo de profissionais da saúde e analisar seu poder de expressar os elementos necessários de um jogo que modele um caso clínico da área de Medicina de Família, foi executado um processo de avaliação abordando os seguintes eixos, propostos por Dias e inicialmente utilizado no trabalho de Murray:
Interpretação do modelo:
Visa verificar o entendimento e a interpretação do modelo proposto na VR-MED, por profissionais da área de saúde;
Representação do problema:
Examinar se é possível utilizar a VR-MED para modelar um jogo a partir de um caso de estudo textual;
Satisfação do usuário:
Verificar, as opiniões dos participantes da avaliação, no que se refere a pontos fracos e fortes do modelo da Para realizar os testes, foi oferecida uma oficina para os profissionais ligados ao Una-SUS.
Em as próximas seções são detalhados os objetivos da avaliação da VR-MED, a metodologia utilizada para realização das avaliações, a descrição sobre as fases de testes e, por fim, a análise dos resultados obtidos com os testes.
Com a finalidade de verificar a qualidade e efiCiência da VR-MED, foi realizada uma avaliação empírica através de uma oficina de utilização da VR-MED com um grupo de profissionais de saúde.
A avaliação foi realizada durante um encontro presencial periódico promovido por o Una-SUS, para reunir as coordenações e os grupos de trabalho.
A oficina para avaliação ocorreu na UFCSPA, contando com a participação de profissionais das universidades conveniadas junto ao Una-SUS.
A oficina foi ministrada no dia 3 de dezembro de 2010 e teve a duração de quatro horas.
A proposta e definição do formato da oficina surgiram após constantes interações com o grupo responsável por a organização do evento.
O Apêndice C apresenta o material de apoio utilizado durante a oficina, composto por um conjunto de slides utilizados para apresentar a VR-MED e um caso médico utilizado para a prática durante a oficina.
O laboratório utilizado para a realização da oficina era composto por 24 microcomputadores equipados com uma máquina virtual que, além de o sistema operacional Windows, continha o protótipo da VR-MED e um ambiente capaz de reproduzir o jogo descrito na DSL.
A Figura 31 apresenta o laboratório no momento da execução da oficina.
As atividades da oficina ficaram divididas em duas partes.
Em a primeira, com duração de duas horas, foi realizada a capacitação dos presentes.
Em esta capacitação foram abordados os conceitos que estão envolvidos num projeto da VR-MED e na segunda etapa, após um intervalo de 30 minutos, foi realizada a oficina para realização dos testes, também com duração de duas horas.
Durante a primeira parte da oficina, os participantes receberam um texto que apresentava de forma breve os objetivos da VR-MED (Apêndice D) e o Termo de Consentimento Livre e Esclarecido (Apêndice E) que deveria ser assinado, sendo, uma das vias entregue ao ministrante da oficina, autor desta dissertação.
Em o momento seguinte foi entregue o primeiro formulário, chamado de Formulário de Pré-Teste (Apêndice F), que buscou obter informações sobre ao nível de conhecimento dos usuários na utilização de fluxogramas as ferramentas computacionais.
Conforme já citado, foi elaborado um material auxiliar para guiar a oficina.
Esse material continha informações sobre os tópicos abordados durante a oficina.
A etapa de capacitação contou ainda com demonstrações práticas da VR-MED que eram apresentadas e, a seguir, exercitadas por os participantes da oficina.
Em a segunda parte da oficina os participantes realizaram a avaliação da VR-MED.
O questionário empregado (Apêndice G) foi inspirado nos trabalho de Murray e Dias que foi concebido contemplando os três eixos já citados na introdução deste capítulo.
O primeiro eixo referia- se à Interpretação do Modelo, visando avaliar o nível de entendimento e a interpretação de um modelo criado na VR-MED.
Para isso, os usuários responderam a questões referentes aos diagramas, interpretando os conceitos presentes no mesmo.
O eixo Representação do Problema tinha como objetivo examinar se é possível descrever um diagrama a partir de um caso de estudo textual.
O caso textual utilizado na avaliação é de autoria do médico João Marcelo Fonseca, e contém componentes semelhantes aos elaborados por a SBMFC.
O eixo final do questionário, por sua vez, buscava avaliar a Satisfação geral do usuário na utilização da VR-MED, contendo questões que verificavam as opiniões dos participantes no que se refere a pontos fracos e fortes do modelo com a VR-MED e também se esta se encontra adequada ao seu propósito.
Assim, este experimento verifica a legibilidade do diagrama criado, ou seja, se o diagrama da VR-MED é adequado para representar os elementos contidos nos casos de estudos.
A oficina contou inicialmente com um grupo de 26 pessoas, sendo que 23 participaram da primeira e segunda parte de oficina, pois 3 pessoas tiveram que se ausentar durante o curso da oficina e não preencheram o questionário aplicado na segunda parte.
Como o laboratório era composto por 24 microcomputadores, a primeira parte da oficina foi administrada, conforme segue:
22 pessoas com computadores individuais e 4 pessoas compartilhando dois microcomputadores (duas duplas).
Para a segunda etapa da oficina, foi possível disponibilizar um microcomputador por participante, dada às ausências.
A oficina contou com um grupo de 23 pessoas, todas associadas, de alguma forma, às ações do Una-SUS, condição prévia para estarem inscritos no evento dentro de o qual foi promovida a oficina.
A faixa etária ficou entre 28 e 68 anos, sendo 15 do sexo masculino e 11 do sexo feminino.
No que se refere à familiaridade com a informática, nenhum dos participantes indicou não possuir experiência com informática.
Entre os participantes da oficina, 19,23% possuíam alto conhecimento referente a os elementos gráficos para representação esquemática utilizados num fluxograma e 53,85% possui conhecimento razoável.
Já quanto a a utilização de softwares para modelagem de fluxograma, 46,15% informou que não utiliza sistemas computacionais com estes propósitos.
A oficina contou com 16 participantes que se apresentaram como professor, conforme resposta da questão três do pré-teste.
De estes, todos aplicam recursos computacionais em suas aulas.
Apenas um professor não faz uso de recursos como software educativo, ambientes de aprendizagem, ambientes de Ensino a Distância (conforme questão cinco do pré-teste).
Apenas 3 participantes indicaram que possuíam um conhecimento alto sobre o material de Casos Complexos formulado por a SBMFC, enquanto outros 6 assinalaram a opção que indicava conhecimento razoável sobre este material.
Com a finalização da primeira parte da oficina, no segundo momento, foi realizada uma avaliação da VR-MED, através da aplicação de questionários.
Em as seções a seguir, é feita uma análise dos resultados com base nos três eixos avaliados (Interpretação do Modelo, Representação do Problema e Satisfação).
A primeira questão (Figura 32) do eixo interpretação do modelo procurava examinar se os participantes conseguem interpretar as raias que representam os &quot;sujeitos «presentes nos casos diagramados, tais como médico e paciente.
De todos os participantes, apenas um não conseguiu verificar que na parte do diagrama apresentado existia um médico e um paciente (conforme delimitação das raias).
A segunda questão era relativa ao entendimento do participante quanto a a quantidade de elementos presentes numa parte do diagrama da VR-MED.
Para isso, foi apresentada uma imagem com diferentes elementos (Figura 33), questionando a quantidade de elementos presentes no diagrama.
As respostas a essa questão são apresentadas na Tabela 5.
Esperava- se que os participantes identificassem 7 elementos distintos:
Médico Perguntar Sintomas, Paciente Contar Sintomas, Sintoma Genéricos, Histórico, Conversar, Raia Paciente, Transição.
Contudo, a maioria dos participantes não chegou a esse entendimento.
Os que responderam 5 elementos identificaram:
Médico Perguntar Sintomas, Sintomas Genéricos, Paciente Contar Sintomas, Histórico, Conversa.
Ignorando a raia e o elemento transição.
Já outros participantes localizaram 6 elementos, somando a raia, com os outros 5 elementos já citados anteriormente.
Um dos participantes apontou em sua resposta:
5 ou 6 elementos, logo, considerando raia 6, ou então 5 sem levar em conta a raia na contagem.
&quot;Modelo Representação», que permite selecionar, a partir de uma biblioteca, um elemento que represente graficamente o paciente no contexto do diagrama.
De os 23 participantes, 16 responderam corretamente a essa questão.
A questão quatro apresentava um diagrama e destaca quatro áreas (Figura 35) distintas, usadas com o objetivo de aferir o entendimento do participante sobre os elementos delimitados em cada uma das áreas.
Com relação a a área que destacava o elemento de Início de Caso (primeiro quadro), 21 dos participantes o identificaram corretamente.
Foram apresentadas respostas como:
&quot;Em a área do médico, colocamos o início do caso.
É aqui que começa a história do paciente (visita ao médico).»
&quot;A figura representa o início do caso que pode ser na unidade de saúde, na casa do paciente no primeiro contato com o profissional de saúde.»
Observa- se, por estas respostas, que os participantes alcançaram o entendimento sobre o início do caso e o relacionaram este com suas propriedades, como o cenário onde se passa o jogo e o texto de introdução inicial.
Em a segunda área do diagrama, era apresentado um conjunto de sintomas de um paciente.
Em esta questão, 20 dos participantes responderam corretamente, conseguindo associar os elementos ao conceito de sintomas.
&quot;Momento da entrevista entre médico e paciente, onde este relaciona os sinais e sintomas relacionados aos seus problemas de saúde.»
Uma das respostas considerada incorreta relacionou os itens de sintomas a um diálogo com o paciente, contudo, sem mencionar o conceito de sintoma:
&quot;Área 02.
Onde o médico inicia a conversa com o paciente.»
Em a terceira área, que apresenta um elemento de histórico clínico, todas as respostas relacionaram o elemento presente ao histórico clínico, antecedentes, prontuários ou ainda conhecimento anterior sobre o paciente.
Seguem algumas respostas dadas por os participantes:
&quot;Seria o momento que o médico vai resgatar, conhecer toda a história do paciente (Anamnese) e em seguida exame físico.»
&quot;O histórico representa a situação clínica do paciente.»
&quot;Leitura do histórico do paciente.»
&quot;Representa o histórico médico do paciente, em o qual se pode saber se este tem alguma doença anterior ou algum atendimento anterior de entre outras informações que pode ser inseridas.»
A questão quatro, quarta área, apresenta exames complementares.
Em esta questão, os 23 participantes conseguiram correlacionar esses elementos de forma correta.
As seguintes respostas são destacadas:
&quot;Solicitação e realização de exames complementares.»
&quot;Exames complementares solicitados por o médico para concluir o diagnóstico do paciente.»
Em outra resposta, o participante, além de mencionar a presença de exames complementares, cita as propriedades ligadas aos exames (resultado):
&quot;Representa o momento de solicitação de exames complementares para elucidação diagnóstica, com seus respectivos resultados após a realização dos mesmos por o paciente.»
Em esta avaliação os participantes foram solicitados a construir um diagrama, tendo como base o caso de estudo textual apresentado no questionário de avaliação.
O objetivo foi verificar se é possível formalizar o conteúdo descrito num caso textual no diagrama da VR-MED.
O caso textual utilizado durante a oficina (Apêndice G ­ Eixo, Representação do Problema) descreve a situação de uma família (pai, mãe e filho) em que o filho sofre com a utilização de drogas e o pai apresenta diferentes sintomas.
Este caso foi concebido para representar o aspecto do atendimento familiar, atividade presente na rotina de um Médico de Família e Comunidade.
Os personagens presentes no caso textual são denominados apenas por:
Dona Maria (mãe), marido de Dona Maria (pai) e também o filho de Dona Maria (filho), e por fim, o médico que executa o atendimento.
Os sintomas apresentados por o marido são dispnéia10 paroxística noturna, ortopnéia11 e hipertensão arterial sistêmica.
Através de exames físicos o médico verifica edema de membros inferiores, turgência jugular, taquipnéia12, crepitantes finos nas bases na ausculta pulmonar, ritmo cardíaco irregular com frequência de 115 batimentos por minuto (taquicardia) e pressão arterial sistêmica de 170/110 mmHg.
A seguir são apresentadas partes de 21 diagramas construídos por os participantes da oficina e as particularidades que cada um apresentou.
Dois dos participantes da oficina não realizaram a tarefa por problemas técnicos.
Pode- se observar, na Figura 36, um diagrama que apresentou corretamente as informações presentes no caso de estudo.
O participante explorou objetos que não foram abordados com ênfase duramente a oficina, neste caso, o elemento de comentário que se encontra presente na raia Paciente, denominado de Esposo de D. Maria, por o participante.
Dificuldade em respirar, acompanhada de uma sensação de mal-estar.
Dificuldade de respirar que obriga a estar em pé.
Já os diagramas apresentados por a Figura 37 e Figura 38 apresentam erros, tais como não apresentam linhas de fluxo para ligar os elementos do diagrama e também os elementos são utilizados de forma incorreta, por exemplo, os sintomas e os exames físicos, não são representados de forma correta.
Pode- se observar que os sintomas estão ligados diretamente ao elemento Médico Realizar Exame Físico, sem a utilização correta dos elementos que representam os sintomas.
Ainda, o participante que construiu o diagrama da Figura 37 não obteve um entendimento correto do caso textual apresentado, já que tentou representar os sintomas, exames e histórico clínico, na raia da Dona Maria, quando estes refere- se a de seu esposo.
O Diagrama, apresentado na Figura 39 demonstra outra forma correta de representação, em o qual o participante representou claramente os exames físicos e complementares.
As figuras Figura 40, Figura 41, Figura 42 apresentam partes de um mesmo diagrama criado por um dos participantes sem a utilização dos elementos da VR-MED para a representação dos sintomas, exames e histórico clínico.
Este diagrama apresentado nas figuras:
Figura 40, Figura 41, Figura 42 foi construído com alguns erros, de entre eles observa- se que os elementos da VR-MED foram diagramados na raia da Paciente, denominada de Dona Maria, contudo, tais elementos, deviam ter sido representados na raia que representa o marido de Dona Maria.
Apesar disso, a maioria dos elementos utilizados foi organizada de forma lógica e coerente.
De entre as representações corretas, destaca- se a Figura 40 que demonstra uma maneira de representação utilizando- se do elemento Histórico Clínico da VR-MED para caracterizar o problema com drogadição.
Muitos participantes utilizaram o elemento Conversa com esse mesmo intuito.
Em a Figura 41 elaborada por um participante da avaliação da VR-MED, pode- se observar a utilização correta dos elementos de exames físicos, inclusive com denominações utilizadas por profissionais de saúde.
Já a Figura 42, apresenta a representação dos exames complementares.
Essa representação, contudo, encontra- se incompleta, pois falta o elemento de Paciente Realizar Exame Complementar.
Este mesmo problema foi observado em 4 outros diagramas, como pode ser visto na Figura 44.
Já o diagrama ilustrado na Figura 43, além de apresentar o mesmo problema, mostra um erro na Representação dos Exames Físicos, já que não possui o elemento Paciente Efetuar Exame Físico.
Complementar A partir de a recorrência deste erro, pode- se concluir que esse problema seja gerado por o próprio nome do elemento (Paciente Realizar Exame Complementar).
É provável que os participantes tenham associado esse elemento somente à execução dos exames por parte de o paciente.
Contudo, esse elemento é utilizado para finalização de um bloco, conforme descrito no capítulo 5, seção 5.3.2.
Complementar A Figura 45 apresenta um diagrama onde o participante utilizou o elemento de Histórico para indicar elementos presentes no caso de estudo.
Pode- se considerar esse diagrama correto, uma vez que apresentou uma lógica coerente de representação, embora não tenha se preocupado em representar o filho da Dona Maria, que é um dos sujeitos presentes no caso textual.
Um erro encontrado nos diagramas de alguns participantes foi a falta de linhas de fluxo para ligar os elementos da VR-MED e também o não uso de nomenclatura adequada e significativa para representar os elementos, tais problemas ficam evidentes nos diagramas apresentados na Figura 46 e Figura 47.
O digrama apresentado na Figura 48 mostra uma solução interessante, utilizada por o participante para representar a utilização de drogas por o filho de Dona Maria.
Em este diagrama, o participante da oficina utilizou- se do elemento de Sintomas para caracterizar os problemas ligados à droga.
Em o diagrama apresentado na Figura 49, é possível observar outra solução interessante para representar o mesmo aspecto da saúde do filho.
Em este diagrama, o participante da oficina utiliza- se de elementos de Conversa para detalhar um diálogo com o filho da Dona Maria e também de um elemento de Histórico para apresentar os problemas relacionados à droga.
Um erro encontrado num dos 23 diagramas foi a utilização dos elementos deslocados da raia Paciente para a raia Médico, como no exemplo da Figura 50.
Médico Em outro diagrama incorreto, um participante ligou o elemento Médico Realizar Exame Físico aos elementos de Sintomas, sem um agrupamento lógico.
Em alguns diagramas não foi possível deduzir a lógica imaginada por o participante da oficina, a Figura 52, apresenta um diagrama que é considerado incorreto.
Os diagramas apresentados nas figuras:
Figura 53 e Figura 54, exemplificam outros diagramas construídos corretamente, com a utilização dos elementos da VR-MED bem definidos e logicamente agrupados.
O eixo de satisfação inicia com quatro questões objetivas, sendo que cada questão possuía três possíveis respostas.
MED, ou seja, a forma adotada no diagrama.
Com relação a este aspecto, os participantes do experimento manifestaram sua opinião a respeito de a adequação do diagrama como ferramenta para representar casos de estudos textuais em forma de diagramas.
Com base nos dados apresentados no gráfico da Figura 56 observa- se se que a maioria dos questionados julgou que a VR-MED MED possui uma forma adequada.
Pode- se Pode e correlacionar esse resultado ao alto percentual de participantes que indicou possuir um conhecimento alto ou razoável sobre representações através de fluxogramas.
MED com os casos de estudo textuais.
Em relação a a facilidade de interpretação int de modelos a questão dois (Figura 57), levantou que era Razoável (26%) ou Muito Fácil (70%) correlacionar os elementos gráficos da VR-MED com as histórias dos casos textuais.
VR-MED eram suficientes para representação (modelagem) do caso textual que foi proposto.
A maioria dos participantes indicou que os elementos presentes não eram suficientes para representar todas as situações.
Essa constatação é justificável, uma vez que a VR-MED VR MED possui somente alguns elementos destacados do domínio de aplicação.
Para verificar se os participantes consideram adequada a utilização de jogos eletrônicos como recursos adicionais no ensino ensino da Medicina, foi proposta a questão quatro.
A questão cinco (Quais você considera que sejam os pontos fortes do modelo da VR-MED?)
procurava verificar se os participantes observaram algum ponto forte para destacar sobre o diagrama da VR-MED.
De os participantes, 3 não responderam a essa questão.
As seguintes respostas são destacadas:
&quot;Fácil visualização.
Cores distintas para cada elemento.
Ferramenta clara objetiva e bem definida.»
&quot;Ajuda a organizar e sistematizar as ideias durante a elaboração de um caso.»
Permitir que se viabilize a elaboração de casos por pessoal da saúde «&quot;Não conheço outros modelos, não posso comparar, achei muito interessante.»
organização dos dados e estabelecer a sequência.»
Já a questão seis (Quais você considera que sejam os pontos fracos da VR-MED?)
procurou verificar se os participantes observaram algum ponto fraco no diagrama da VR-MED.
De os participantes, 3 não responderam essa questão.
De entre as respostas coletadas destaca- se:
&quot;Utilização de elementos` Médico Perguntar Sintomas',` Médico Realiza Exame Físico',` Médico Solicitar Exame Complementar' na raia paciente.»
Esta citação refere- se aos elementos gráficos no diagrama que são representados na raia do paciente, mas que são referentes ao médico, elementos esses, que iniciam pela palavra médico, tal como:
Médico Pergunta Sintomas, esses elementos foram concebidos dessa forma, para facilitar a montagem do diagrama.
Reference Model, como uma coleção de especificações para e-learning baseado na web.
Este destaque é relevante, principalmente, para a arquitetura geral do jogo, pois este poderia ser concebido de forma a ser disponibilizado em ferramentas de Educação a Distância, como o Moodle, por exemplo.
Um ponto importante levantado por um dos participantes é a necessidade de se especializar os elementos da VR-MED.
Com o comentário &quot;não é permitido dados descritivos minuciosos», o participante sugere que ao invés de contar somente com elementos genéricos como Sintomas, Exames Físicos e Exames Complementares, poderiam ser criados elementos mais específicos como, por exemplo, radiografias já com a especificação dos laudos ou exames físicos com os sons específicos já presentes.
Respostas como:
&quot;não comporta outros profissionais de saúde «e &quot;não há como registrar medicações prescritivas «são justificáveis diante de o contexto, uma vez que os elementos para representar outros profissionais de saúde, tais como:
Enfermeira e dentista, ou então elementos para representar prescrições medicamentosas estão previstos, mas ainda não foram desenvolvidos.
A próxima questão do formulário (Você identifica alguma inovação na abordagem da VR-MED para representar os casos de ensino?)
procurou verificar a opinião dos participantes quanto a as inovações ligadas à VR-MED.
De os participantes, 6 não responderam.
De entre os que responderam, cabe ressaltar algumas observações que apontam para a utilização de jogos como objetos de aprendizagem, por utilizarem uma linguagem mais próxima à realidade dos alunos:
&quot;Acho que responde a cultura dos alunos atuais de interação com a máquina.»
&quot;Introduz elementos novos, com possibilidades de interação.»
&quot;Permite imaginar casos mais próximos a realidade dos alunos.»
Ainda sobre a questão sete, identificam- se as seguintes respostas:
&quot;A facilidade na modelagem do fluxo de avaliação pode potencializar o uso de simulações no ensino, especialmente na educação de profissionais de saúde.»
plataformas de aprendizagem interativa.»
Assim, intui- se que a VR-MED, além de gerar um jogo, pode ser utilizada para construir objetos de aprendizagem, pois permite de forma facilitada a criação e a especificação deste objeto, que neste contexto, é o jogo gerado por a VR-MED, que é considerado um OA.
Por fim, a questão oito (Quais as suas sugestões para melhoria da VR-MED?),
expõe as sugestões dos participantes da oficina.
De os participantes, quatro não responderam essa questão e 1 participante indicou na resposta que não tinha sugestões.
Referente a a especialização dos elementos, tais como, Sintomas, Exames Físicos Uma das sugestões aborda a &quot;caracterização de questões socioambientais».
Essa citação é importante, já que para a Medicina de Família e Comunidade tais características são relevantes e denotam peculiaridades que devem ser observadas por um profissional da área.
Apesar de não possuir elementos específicos para este fim, essa caracterização pode ser feita através de imagens e modelos que representam o cenário, além de uma propriedade textual que também descreve informações adicionais sobre o cenário onde o jogo ocorre.
Por fim, outra sugestão destacada durante a oficina refere- se à possibilidade, de viabilizar a construção do diagrama da VR-MED, na Internet.
A partir de a análise referente a a avaliação VR-MED, ressalta- se que a maioria dos participantes da oficina acredita na aplicabilidade de jogos eletrônicos como recurso adicional no ensino de Medicina.
Em geral, os participantes conseguiram construir diagramas de forma lógica e coerente.
Junto com a avaliação, alguns participantes criaram diagramações diferentes para representar o caso proposto, utilizando- se, corretamente, de elementos da VR-MED de forma diferente da abordada na capacitação.
A maioria dos participantes achou a VR-MED fácil e adequada, provavelmente em decorrência da experiência prévia com ferramentas de representação esquemática e fluxogramas.
Em relação a a interpretação do problema, os participantes conseguiram correlacionar os elementos presentes na VR-MED aos elementos pré-existentes no domínio estudado, o que fica claro quando os participantes respondem às questões de interpretação do modelo, e estabelecem relações dos elementos da VR-MED com a Anamnese, a história clínica do paciente e também à elucidação diagnóstica.
Porém, em relação a suficiência de elementos da VR-MED, muitos usuários destacaram a necessidade de mais elementos, assim como a necessidade de especializar alguns elementos do domínio.
Por fim, de uma maneira geral, foi possível confirmar que o diagrama da VR-MED, fornece um modelo de representação viável para casos de estudo textual e é facilmente interpretável.
Além de isto, conclui- se por a necessidade de continuar evoluindo no estudo do domínio (utilizando da metodologia interativa) para que a VR-MED consiga expressar um número maior de elementos especializados provenientes da área de Medicina de Família e Comunidade.
O uso de simulação e jogos em aplicações médicas já é uma realidade na formação de profissionais qualificados.
Em este contexto, essa dissertação propôs uma maneira para construir, através de uma DSL intitulada VR-MED, objetos de aprendizagem (no formato de um jogo) aplicados à Medicina de Família e Comunidade.
Para tanto, utilizou- se de conhecimentos de diferentes áreas da computação como RV, Engenharia de Domínio, MDD, e também OA.
Além de a criação da DSL em si, foi realizada uma avaliação empírica da ferramenta através de uma oficina.
Esta oficina permitiu um grande aprendizado, dada a diversidade de perfis das pessoas envolvidas.
Por as análises realizadas durante este trabalho, a versão atual da VR-MED atende às necessidades dos seus potenciais usuários, mas pode receber aprimoramentos, o que dada, a metodologia iterativa de desenvolvimento utilizada, pode ser obtido sem que seja preciso alterar a essência do trabalho.
Cabe ressaltar ainda, que após a conclusão deste texto, foi promovida mais uma oficina na UFCSPA para outros colaboradores da Una-SUS.
Essa oficina foi solicitada depois que a primeira, utilizada para avaliação, obteve uma boa repercussão entre os profissionais ligados à Medicina de Família e Comunidade.
Essa segunda oficina foi realizada num período mais curto que a primeira, o que inviabilizou a aplicação dos instrumentos de avaliação.
As seguintes contribuições foram obtidas com o desenvolvimento deste trabalho:
Criação de um diagrama (modelo) que contém elementos para representar um caso de estudo aplicado na Medicina de Família e Comunidade;
Estabelecimento e execução um método interativo de desenvolvimento de DSL, o que permitiu estudar e documentar o domínio da Medicina de Família e Comunidade;
Definição de um método para que, através deste diagrama da VR-MED, fosse gerado um jogo com as características diagramadas;
Em termos de reutilização, a VR-MED permite que o mesmo diagrama seja interpretado por diversos players.
A partir de a convergência dos conceitos de MDD e DSL, a abordagem implementa um diagrama, no formato de um fluxograma, que se supõe legível para diferentes profissionais.
Essa organização permite uma atividade de comunicação mais efetiva entre os profissionais da saúde e informatas;
Realização de um estudo empírico para verificar e avaliar a abordagem definida neste trabalho.
Ainda de entre as contribuições destaca- se a publicação do artigo VR-MED:
Linguagem de Domínio Específico para Ambientes Virtuais Aplicados à Educação Médica no XIII Congresso Brasileiro de Informática na Saúde.
No que se refere a trabalhos futuros, a VR-MED, será integrada num projeto maior, intitulado SimDeCS13, em desenvolvimento no grupo de Educação e Informação em Saúde da UFCSPA, que visa desenvolver um framework para construção de simuladores virtuais inteligentes para a área da saúde.
Foram também identificadas oportunidades para complementar esta pesquisa explorando aspectos que não puderam ser construídos neste momento.
Foram identificados como sendo deficitários principalmente os aspectos relativos à utilização dos dispositivos de RV para criar um ambiente mais imersivo e à especialização através de uma biblioteca de sintomas e exames físicos e complementares.
Uma limitação que pode ser observada é em relação a os players.
Esses promovem uma rigidez no processo de desenvolvimento da VR-MED, uma vez que os players devem evoluir em conjunto com a DSL, já que devem ser capazes de representar os elementos presentes na mesma.
O SimDeCS é um Sistema Multiagente composto de três agentes:
Agente de Domínio, Mediador e Aprendiz, A VR-MED será integrada ao SimDeCS, permitindo que os OA sejam diagramados e publicados.
