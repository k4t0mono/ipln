Este trabalho apresenta um método para extração, organização e apresentação de métricas para Processo de Desenvolvimento de Software (PDS), levando em consideração a evolução do próprio PDS e do conjunto de métricas correspondente.
A solução, baseada num ambiente de Data Warehousing, tem a finalidade de resgatar medições feitas em projetos passados, sob diferentes modelos de PDS e programas de métricas e formar uma base sólida de informações desses projetos.
Para viabilizar o resgate destas medições, são propostos procedimentos para tratar adequadamente a criação, alteração e exclusão de métricas.
Tais requisitos foram identificados numa empresa de Tecnologia de Informação, certificada CMMI nível 2, cuja principal característica é que a maioria das aplicações desenvolvidas é voltada à automação de Processos de Negócio.
A principal contribuição deste trabalho é a de permitir que medições presentes e passadas possam ser mantidas num repositório único de métricas da organização e que as mesmas sejam comparáveis, viabilizando um melhor controle dos projetos de software e qualidade de seus produtos.
Palavras Chave: Evolução de PDS, Processos de Negócio, Repositório de Métricas Em a busca por qualidade, as organizações promovem o aperfeiçoamento de seu Processo de Desenvolvimento de Software (PDS) com o intuito de prever, com melhor precisão, os prazos e custos, aumentando assim a competitividade.
Seguindo a abordagem encontrada em Harrington apud List onde, para melhorar é preciso controlar, para controlar é preciso medir, entende- se que coletar métricas é uma atividade importante para contribuir no aperfeiçoamento de PDS.
As métricas coletadas devem prover informações para o auxílio na tomada de decisões de acordo com os objetivos e estratégias da organização.
Segundo Gopal et al, as atividades necessárias para a coleta, organização e análise das métricas devem ser guiadas por um Programa de Métricas.
Em decorrência do aperfeiçoamento dos PDSs, ocorre uma evolução dos Programas de Métricas.
PDSs voltados à automação de Processos de Negócio possuem peculiaridades quanto a os artefatos utilizados e produzidos.
Os principais artefatos são os modelos de processos de negócio, os quais podem ser representados por:
Diagrama de atividades estendido, quando se utiliza a UML 1.
X, ou o próprio diagrama de atividades na UML 2.
0, Redes de Petri, ou representações próprias de ferramentas, como é o caso do Oracle Workflow Builder.
Quando se utiliza uma representação padrão para os processos de negócio, é possível medir- los quanto a o seu tamanho, complexidade, e outras características, permitindo um gerenciamento diferenciado para projetos orientados a processos de negócio frente a outros tipos de aplicação.
O enfoque principal deste trabalho está na definição de um método para a extração, organização e apresentação de métricas para PDSs voltados à automação de processos de negócio, levando em consideração a evolução desses PDSs e do conjunto de métricas correspondente.
A principal contribuição refere- se ao auxílio na aplicação de Programas de Métricas em empresas de Tecnologia de Informação (Ti) que buscam o aperfeiçoamento contínuo de seu PDS, permitindo que medições presentes e passadas possam ser mantidas num repositório único de métricas da organização e que as mesmas sejam comparáveis, viabilizando um melhor controle dos projetos de software e qualidade de seus produtos.
As questões relacionadas à evolução de PDS foram identificadas numa empresa de Ti que possui certificação CMMI nível 2 e cuja principal característica é que a maioria das aplicações desenvolvidas é voltada à automação de Processos de Negócio.
O objetivo principal deste trabalho é a definição de um método para guiar analistas de qualidade na aplicação de Programas de Métricas em empresas de Tecnologia de Informação, que desenvolvem projetos de software voltados a processos de negócio, que buscam o aperfeiçoamento de seu PDS e onde é possível identificar uma evolução natural do PDS e do conjunto de métricas correspondente.
Os objetivos específicos estão definidos como segue:
Garantir que o PDS e seu conjunto de métricas possam evoluir sem a necessidade de descartar as informações de versões anteriores.
Possibilitar que as informações contidas no repositório de métricas sejam coesas e consistentes para que os dados de diferentes projetos sejam comparáveis entre si.
Facilitar a análise das métricas, dando subsídios para o desenvolvimento de relatórios, gráficos, indicadores e outras formas de apresentação que se julgar necessárias.
Como aumentar a qualidade do planejamento e execução de projetos de software, voltados a processos de negócio, a partir de um repositório de métricas, estando, tanto o PDS como o respectivo programa de métricas, em constante evolução?
A metodologia utilizada nesta pesquisa pode ser classificada quanto a o seu objetivo como sendo exploratória, pois tem a finalidade de identificar o problema, levantar teorias e práticas para serem aplicadas e modificar as práticas existentes, fornecendo as inovações tecnológicas necessárias.
Quanto a o procedimento, caracteriza- se como um estudo de caso numa organização de software certificada CMMI nível 2, onde foi identificada a evolução do PDS e de seu Programa de Métricas correspondente e onde foram identificados requisitos para tratar esta evolução.
Este trabalho está estruturado da seguinte maneira:
Em o Capítulo 2 discute- se o que está sendo feito em relação a a Qualidade em PDS, com uma breve descrição de dois modelos de maturidade, e a apresentação dos trabalhos relacionados, enfocando questões relacionadas a Programa de Métricas em PDS.
O Capítulo 3 apresenta o enfoque principal deste trabalho, iniciando com a descrição do cenário onde a pesquisa está inserida, incluindo também um estudo de um ambiente real, seguidos por a caracterização do problema, onde foram relacionados os requisitos para uma solução ideal.
Em o Capítulo 4 a solução proposta é descrita, explorando cada requisito individualmente.
A solução descrita no Capítulo 4 foi testada numa empresa de Ti, e os resultados desta experimentação são apresentados no 2 Qualidade no Processo de Desenvolvimento de Software voltado a Processos de Negócio Este capítulo relata um estudo sobre Processo de Desenvolvimento de Software direcionado ao desenvolvimento de aplicações que implementam processos de negócio.
Apresenta- se também alguns conceitos sobre Qualidade no Processo de Desenvolvimento de Software, bem como a descrição de alguns modelos de Software Process Improvement.
Ainda, neste capítulo, são apresentados os trabalhos relacionados, que enfocam questões relacionadas a Programas de Métricas.
A pesquisa em PDS trata dos métodos e tecnologias utilizados para avaliar, apoiar e melhorar as atividades de desenvolvimento e manutenção de software.
Entretanto, um único processo não pode servir a qualquer tipo de empresa e projeto.
Questões relacionadas ao porte da empresa, cultura organizacional, objetivos específicos de projetos, tecnologias de desenvolvimento, e conhecimento e experiência da equipe, impõem características diferenciadas para os processos.
Assim, fazendo com que os processos de software necessitem de uma definição adequada a cada situação.
As aplicações voltadas a Processos de Negócio (PN) visam à automação de processos onde documentos, informações ou tarefas são transferidos entre participantes, de acordo com um conjunto definido de regras.
Estas aplicações requerem uma abordagem diferenciada para o seu desenvolvimento, necessitando de PDS específicos, onde modelos para a representação de fluxos de controle precisam ter tratamento prioritário, e a atribuição de participantes para execução dos PN envolvidos também requer cuidados especiais.
Os PN podem ser representados por modelos.
Segundo Leymann e Roller um modelo de processo descreve a estrutura de um processo de negócio, representando todos os caminhos possíveis para a sua execução, as regras para escolha desses caminhos, e as ações que devem ser executadas.
A modelagem de PN é feita com base em 21 padrões, que, segundo White, descrevem o comportamento de processos de negócio com a representação de seu fluxo de controle.
Estes padrões podem ser utilizados para medir os PNs quanto a o seu tamanho, complexidade, e outras características.
A representação destes padrões pode ser feita por algumas notações e, entre as principais, estão:
Redes de Petri, BPMN (Business Process Modeling Notation) e Diagrama de Atividades da UML.
Esta última é bastante citada na literatura, e segundo De umas e Hosftede e Bastos e Ruiz, já podia ser utilizada para representar PNs antes mesmo do lançamento da UML 2.
0. Porém, conforme Bastos e Ruiz o diagrama de atividades na UML 1.
X é limitado e insuficiente para representar todos os padrões de comportamento de um workflow, e Bastos e Ruiz propõem, ainda, uma extensão do diagrama de atividades chamado Workflow Activity Diagram (WAD), que utiliza estereótipos para definir novas propriedades para os diagramas.
Com a UML 2.
0, o Diagrama de Atividades teve diversas mudanças e White demonstra que todos os 21 padrões passaram a poder ser representados por ele.
A busca por soluções para melhorar a qualidade de software vem sendo feita há muito tempo.
Hoje as organizações estão resolvendo um de seus principais problemas:
A deficiência no controle dos projetos de software.
Em tempos de rápida inovação tecnológica, a chave para a sobrevivência de empresas de software é contar com uma melhoria contínua de seu processo.
Esta melhoria contínua traduz- se na evolução do PDS, tratada na literatura como a aplicação de normas e modelos de software process improvement (SPI).
Os principais modelos de SPI são o CMM e o CMMI.
Apresentase a seguir uma breve descrição sobre estes modelos.
O CMM definido por o Sei (Software Engineering Institute) foi projetado para auxiliar as organizações a selecionar estratégias para aperfeiçoamento de PDS, determinando a maturidade em que a organização se encontra e identificando os fatores mais críticos para obtenção de qualidade e melhoramento do processo.
O CMM baseia- se num modelo evolutivo de maturidade, em o qual as organizações partem de uma total falta de controle e gerenciamento dos projetos e vão gradativamente adquirindo novas competências, incrementando seu nível de eficiência e maturidade.
O modelo CMM possui 5 níveis de maturidade (Maturity Levels):
Initial, Repeatable, Defined, Managed e Optimizing.
Cada nível é composto de áreaschave de processo (Key Process Areas).
Cada área-chave de processo é organizada em cinco seções denominadas características comuns (Common Features), são elas:
Verificação da implementação.
Essas características comuns especificam as práticas-chave (Key Practices) que, quando tratadas coletivamente, atingem as metas previstas para a áreachave de processo (Rocha et al, 2001).
De acordo com Sei e Miller, o modelo CMM (Capability Maturity Model) foi definido por o Sei (Software Engineering Institute) a pedido do Departamento de Defesa dos Estados Unidos.
A partir de 1991, foram desenvolvidos CMMs para várias disciplinas (Engenharia de Sistemas, Engenharia de Software, Aquisição de Software, Gerência e Desenvolvimento da Força de Trabalho, Desenvolvimento Integrado do Processo e do Produto).
Ainda que estes modelos tenham se mostrado úteis, o uso de múltiplos modelos tornou- se problemático.
O CMMI surgiu para unificar estes vários modelos e é o resultado da evolução do CMM, SECM (System Engineering Capability Model) e IPD-CMM (Integrated Product Development Capability Maturity Model).
O CMMI possui dois tipos de representação:
Em estágios e contínua.
A representação em estágios é a mesma usada no CMM.
Em esta representação define- se um conjunto de áreas de processo para determinar um caminho evolutivo de melhoria para a unidade organizacional, descrito em termos de níveis de maturidade.
A representação contínua é o enfoque utilizado no SECM, no IPD-CMM e também na Iso/ IEC 15504.
Este enfoque permite que uma organização selecione uma área de processo específica e melhore com relação a esta área.
A representação contínua usa níveis de maturidade para caracterizar melhoria relacionada a uma área de processo.
O caminho evolutivo do CMMI, na representação por estágios, define 5 níveis de maturidade do processo.
Cada nível de maturidade engloba elementos chave, chamados Process Areas (PA) ou área de processo.
As organizações são avaliadas e classificadas de acordo com o nível em que todas as Áreas de Processo se encontram, considerando também que as Áreas de Processo dos níveis anteriores tenham sido cumpridas.
Por exemplo, uma organização não pode passar para o nível 3 antes de satisfazer as Áreas de Processo do nível Em o contexto de PDS, Medição e Análise é uma das principais áreas de processo e tem um impacto direto em todas as outras áreas do CMMI.
O propósito da Medição e Análise é desenvolver e sustentar uma capacidade de medição que é usada para dar suporte ao gerenciamento de informações.
Segundo Gopal et al, um Programa de Métricas de Software deve compreender um conjunto de atividades para definir, implementar, operar e manter um sistema de informações de coleta, análise e apresentação de métricas de PDS, produtos e serviços.
Um Programa de Métricas necessita da combinação de padrões, procedimentos, técnicas e ferramentas de suporte.
Para auxiliar na gestão de PDS, os valores das métricas coletadas devem estar acessíveis, consistentes e organizados a fim de facilitar o seu acesso e utilização por os responsáveis.
Segundo Palza et al, o CMMI sugere que os valores das métricas sejam armazenados num Repositório de Métricas da Organização.
Este repositório é usado para manter dados disponíveis do processo e dos produtos, contendo dados de métricas e informações relacionadas, necessárias para entender e analisar estas métricas.
Esta seção apresenta os trabalhos encontrados na literatura, que são relacionados com o tema de pesquisa e que buscam soluções para a implementação de Programas de Métricas em PDS, tais como Becker et al e Palza et al e que apresentam soluções para dar suporte às modificações em esquemas de bancos de dados.
Software Development Process Performance Data Warehousing Environment em Becker et al, é proposto um ambiente de Data Warehousing para dar suporte a programas de métricas para PDS, permitindo o armazenamento dos dados de medição de diferentes projetos numa base de dados unificada e centralizada.
Este ambiente permite que o acesso aos dados seja realizado por meio de interfaces que possibilitem consultas e análises de forma simplificada sobre a perspectiva das métricas, trazendo uma visão unificada dos diferentes projetos da organização.
A arquitetura proposta nesse trabalho endereça os problemas advindos da heterogeneidade, dos projetos e de ferramentas de captura, e armazenamento dos dados próprios a cada projeto.
A solução proposta trata esses problemas por o uso de serviços que atuam como wrappers dos diversos aplicativos presentes nos PDSs.
A camada de integração de aplicações é responsável por a extração de dados brutos dos projetos provenientes das diversas ferramentas e por a carga no Data Staging Area (DSA).
Cada projeto é descrito por metadados, expressos em XML Schema, que parametrizam a implementação dos wrappers.
Os metadados de projeto definem as ferramentas adotadas e como os dados requeridos são armazenados nessas ferramentas.
Em a camada de integração de dados, os dados extraídos das ferramentas do ambiente transacional são limpos e transformados no DSA, por meio de rotinas de limpeza e transformação, auxiliadas por os metadados organizacionais.
Após todo esse processo, os dados consolidados são carregados no Data Warehouse (DW).
O armazenamento de dados dos PDSs, do ponto de vista organizacional, é realizado por meio de um modelo analítico multidimensional (Figura 2) voltado ao acompanhamento das métricas da organização.
A camada de apresentação do ambiente citado possibilita o acesso diferenciado para cada perfil de usuário, por meio de permissões.
Essa proposta provê, ainda, a realização de consultas OLAP sobre os dados relativos a estas métricas, e a visualização destes por meio de interfaces que provêm formas de análise simplificadas sobre os dados gerados.
Em Palza et al é proposto o Multidimensional Measurement Repository (MMR), com o intuito de coletar, armazenar, analisar e reportar os dados de medições, baseado nos requisitos do CMMI.
O MMR visa organizar e armazenar dados de medidas históricas de projetos para auxiliar no seu acompanhamento e na análise de tendências, provendo assim meios para aumentar a qualidade dos produtos.
O MMR baseia- se em Data Warehousing de métricas e disponibiliza consultas sobre os dados por meio de técnicas OLAP.
Este repositório é extensível, permitindo a adoção de diferentes medidas, dando suporte à organização ao longo de sua evolução de maturidade.
O MMR utiliza- se de metadados para permitir a evolução do repositório de métricas da organização, atendendo às Áreas de Processo do CMMI.
As versões do repositório são mantidas, e as informações de cada projeto são armazenadas na versão do repositório, referente a a versão do PDS em que cada projeto foi concebido.
Em Galante et al e Jensen and Dyreson, são apresentadas duas técnicas que permitem modificações no esquema de banco de dados, mantendo a consistência entre o esquema e a extensão de dados.
Estas técnicas são:
A evolução de esquemas e o versionamento de esquemas.
Basicamente, a diferença entre elas é que a evolução de esquemas mantém somente o esquema mais recente, juntamente com sua extensão de dados, enquanto que o versionamento de esquemas preserva todas as versões de esquema e suas extensões de dados durante a evolução.
Em a evolução de esquemas, quando ocorre uma alteração, o novo esquema torna- se o esquema corrente e o esquema anterior é descartado.
Os dados antigos, baseados no esquema antigo são convertidos para o novo esquema.
Em o versionamento de esquemas, quando um novo esquema é criado, os dados do esquema anterior são adaptados para este novo esquema.
Porém, os esquemas anteriores e suas respectivas extensões de dados são preservados e permanecem armazenados no sistema de banco de dados como versões antigas.
Os PDS's devem ser adaptados para se adequar a determinadas situações, seja por o uso de tecnologias distintas no desenvolvimento dos projetos ou seja por a necessidade de atender certas especificidades de algumas aplicações, como é o caso dos projetos voltados a Processos de Negócio, onde modelos para a representação de fluxos de controle precisam ter tratamento prioritário, e a atribuição de participantes para execução dos PN envolvidos também requer cuidados especiais.
Além disso, as empresas buscam melhorias contínuas em seus PDS's, implicando em mudanças no Programa de Métricas com o intuito responder às novas questões que surgem ao decorrer da evolução do PDS.
As alterações no Programa de métricas geram um impacto direto na estrutura e no conteúdo do repositório de métricas da organização.
Embora, todo o processo de extração, organização e apresentação de métricas de PDS seja abordado em Becker et al, o mesmo é aplicado para PDSs que não sofrem modificações constantes em seu conjunto de métricas.
A questão da evolução dos PDSs não é levada em consideração.
A preocupação com a evolução do PDS está implícita em Palza et al, com a utilização de um repositório de métricas flexível que acompanha a evolução do PDS.
Contudo, os autores não abordam as questões que dizem respeito à possibilidade de comparação entre projetos que foram executados em diferentes versões do PDS.
Tratar as questões relacionadas às alterações no modelo analítico é importante, no contexto desta pesquisa.
Porém existem questões específicas, relacionadas à aplicação de programas de métricas, tais como:
Extração e apresentação das métricas, que não são abordadas em Galante et al e Jensen and Dyreson.
Este capítulo faz uma descrição do cenário da pesquisa, identificado com base na literatura e no estudo de um ambiente real, o qual também é descrito.
Em a seqüência, apresenta- se a caracterização do problema, onde são definidos os requisitos para uma solução ideal.
As melhorias contínuas aplicadas aos PDS's das Organizações promovem adaptações em suas atividades e artefatos, impactando diretamente no Programa de Métricas dessas organizações.
Quando artefatos são incluídos, excluídos ou modificados, as métricas, que tinham como entrada dados desses artefatos, também sofrem alterações.
Conforme o processo vai evoluindo, seja naturalmente ou por demanda de certificação, surgem novas necessidades referentes ao seu gerenciamento.
De esse modo, novas métricas podem ser necessárias para responder às novas questões que surgem, algumas métricas podem ser adaptadas (modificadas) e outras métricas podem ter suas coletas abandonadas por julgar- se não serem mais úteis.
Em este contexto, ocorre uma evolução do Conjunto de Métricas da Organização.
É importante salientar que o número de instâncias de projetos de desenvolvimento de software é pequeno, mesmo em empresas de grande porte, tornando- se quase imprescindível a utilização de dados de projetos passados, mesmo que estes tenham seguido versões diferentes de PDS, e onde Programas de Métricas diferentes tenham sido aplicados.
Esses dados do passado não podem ser descartados, pois, de outro modo, não seria possível contribuir integralmente para a qualidade dos produtos de software, por escassez de informações.
Existe também uma preocupação quanto a o armazenamento das informações coletadas junto aos PDSs.
A utilização de um Repositório Organizacional de Métricas facilita o acesso a essas informações, propiciando um melhor gerenciamento de elas.
Com a aplicação de um processo de Data Warehousing, a extração das métricas, o cálculo das métricas derivadas e a carga no repositório, estão contemplados nos conceitos de extração, transformação e carga (ETL) definidos por Kimball (1998).
Desta forma, as métricas são armazenadas num DW, permitindo dar suporte adequado para que a análise dessas métricas seja feita de forma coerente.
De entre as abordagens que dão suporte aos programas de métricas aplicados a PDS, existe a preocupação na definição das métricas, no seu armazenamento e na sua apresentação.
Porém, a maioria das propostas baseiam- se em PDSs estáticos, que não sofrem alterações constantes, medindo projetos que quase sempre são diretamente comparáveis.
As propostas que se preocupam em garantir a flexibilidade do conjunto de métricas, permitindo a inclusão/ exclusão/ modificação destas, não abordam uma questão importante que é a comparação das métricas de projetos que estão em versões diferentes do PDS, deixando uma lacuna no ponto que envolve a evolução desse PDS e do seu conjunto de métricas.
O objetivo deste estudo num ambiente real é identificar as questões relacionadas à evolução de PDS e suas implicações no Programa de Métricas, bem como, levantar requisitos para o desenvolvimento de uma abordagem que dê suporte à evolução de PDS.
A Empresa alvo é uma empresa de Tecnologia de Informação, cujo PDS adotado é baseado no RUP (Rational Unified Process) e nas Áreas de Conhecimento do PMBOK desta forma, existe apenas um processo de gestão de desenvolvimento de software bem definido, não explorando o processo no que diz respeito às atividades de engenharia de software (ES).
O enfoque deste estudo de caso está na análise de projetos desenvolvidos por a empresa, os quais estão baseados na automação de processos de negócio.
A questão da evolução do PDS nesta empresa está bem nítida, pois a mesma vem aperfeiçoando continuamente seu processo, para melhorar a qualidade de seus produtos e buscar o avanço nos níveis de certificação do CMMI.
Mesmo antes de cada certificação, o processo sofreu diversas atualizações, resultando numa evolução constituída por versões do processo.
Atualmente, o PDS encontra- se na versão 5.0, mas ainda estão ativas as versões anteriores 4.2 e 4.1.
O conjunto de métricas desta organização vem evoluindo juntamente com o PDS.
Em a versão 4.1, eram coletadas métricas referentes a:
Tamanho, esforço, mudanças, variação de marcos, qualidade do processo e do produto, e gestão de custos.
Em a versão 4.2, além de as métricas já coletadas na versão anterior, passou- se a coletar também métricas referentes a requisitos, retrabalho, produtividade, características dos projetos e satisfação do cliente.
Em a versão 5.0, além de as métricas encontradas na versão 4.2, foram adicionadas métricas relacionadas à gestão de riscos e faturamento.
Além de a criação de novas métricas, ocorreram modificações em métricas já existentes, como por exemplo, as métricas de esforço.
Em a versão 4.1 do processo, as métricas de esforço, de cada projeto, eram capturadas por Fase e Tipo (Planejado/ Realizado).
Em a versão 4.2, as métricas de esforço passaram a contar com uma nova dimensão, considerando o esforço total, esforço de engenharia e esforço de gestão, passando a ser capturadas por Fase, Tipo (Planejado/ Realizado) e Origem (Engenharia, Gestão, Total).
Ocorreram também algumas modificações em métricas relacionadas à Quality Assurance.
Em a versão 4.1 capturavam- se as não-conformidades de Cm (Configuration Management) e as não-conformidades nos artefatos.
Em a versão 4.2 estas métricas foram agrupadas, e passou- se a capturar apenas o total de não-conformidades identificadas.
Em as versões 4.1 e 4.2 do PDS, as métricas eram coletadas manualmente e armazenadas em planilhas padrão, editadas na ferramenta MS Excel.
As informações de cada projeto eram inseridas em planilhas individuais, baseadas no template para a versão do PDS que cada projeto foi concebido.
Para a versão 5.0 do processo, foi implantada a ferramenta Microsoft EPM para auxiliar na gestão dos processos.
Esta ferramenta possui um cubo OLAP interno, onde é possível organizar e analisar algumas métricas.
Porém outras ferramentas ainda são necessárias para o controle de defeitos e requisitos, por exemplo.
Devido a o fato desta empresa ainda não possuir as atividades de ES padronizadas, e por estar no nível 2 do CMMI, as peculiaridades referentes a PDS voltado à automação de processos de negócio não puderam ser exploradas e não é possível ainda coletar métricas referentes aos processos de negócio que fazem parte dos projetos desenvolvidos.
Com as próximas evoluções do PDS, serão incluídas estas atividades de ES, as quais irão padronizar o uso de modelos para a representação dos processos de negócio, de onde poderão ser extraídas novas métricas.
Destaca- se também que, nos procedimentos de gestão, existem muitas atividades, artefatos e informações que podem ser utilizados para medir o PDS e auxiliar no seu controle.
Os procedimentos de gestão para PDSs voltados a automação de processos de negócio não diferem daqueles desempenhados na gestão de outros tipos de PDSs.
O uso de informações de projetos passados para o planejamento, a elaboração de estimativas e o controle de projetos em andamento depende de uma base sólida de métricas da organização.
A utilização dessas informações é dificultada por a evolução do PDS e do programa de métricas.
Devido a as alterações no conjunto de métricas, os dados coletados em projetos que seguiram versões diferentes do PDS podem não ser passíveis de comparação.
O número de projetos de software, mesmo em empresas de Ti de grande porte, é considerado pequeno se comparado, por exemplo, com números típicos de execução de processos de negócio em organizações de médio/ grande porte.
Assim, utilizar apenas as métricas de projetos que estão na mesma versão de PDS pode não ser suficiente para prover recursos aos gestores, e contribuir no aumento da qualidade do planejamento e execução de projetos de software.
Quando o repositório de métricas da organização possui um número significativo de projetos, baseados na mesma versão de PDS, podem ser definidas melhorias neste PDS, com o lançamento de uma nova versão.
Desta forma, o conteúdo da base de métricas pode não ser mais útil para os projetos que iniciarão, seguindo a nova versão do PDS.
Desta forma as empresas acabam não aproveitando os benefícios de um Repositório de Métricas.
Existem na literatura alguns trabalhos que abordam questões relacionadas à implantação de Programas de Métricas.
Porém, os trabalhos encontrados não suprem todas as necessidades descritas no cenário desta pesquisa, pois não garantem que os dados de projetos concebidos em versões diferentes de PDS sejam comparáveis entre si.
Com a pesquisa na literatura, em modelos de maturidade como o CMMI, onde é sugerido que os valores das métricas sejam armazenados num Repositório de Métricas da Organização e que o conjunto de informações que o repositório precisa conter para o alcance de cada nível do CMMI vai se modificando e, também, com o estudo de um ambiente real, foram identificados requisitos para a consolidação desta proposta.
Estes requisitos são apresentados a seguir:
Software. Para tratar os casos de inclusão, exclusão e alteração de cada métrica.
Este capítulo apresenta a solução para o processo completo de extração, organização e apresentação das métricas de PDS voltados à automação de processos de negócio, levando em consideração a evolução do PDS e do Programa de Métricas correspondente.
A solução foi definida com o intuito de suprir os requisitos descritos no item 3.2.1, os quais foram identificados com base em um estudo de caso no PDS de uma empresa de Ti.
O princípio básico desta solução está fundamentado no trabalho de Becker et al, que foi estendido para dar suporte às questões relacionadas à evolução do PDS e do Programa de Métricas, as quais não eram tratadas na proposta original.
São propostas alterações na arquitetura do trabalho citado, nas camadas de integração de aplicações e integração de dados.
A arquitetura proposta (Figura 6), composta de três camadas é orientada a serviços, utilizando a facilidade desta abordagem para o acesso aos dados de projetos nas ferramentas de apoio.
Faz- se necessário o uso de metadados, os quais servem de configuração para a captura de cada métrica, para cada projeto.
Quando ocorre uma evolução do PDS, e, consequentemente do Conjunto de Métricas, esses metadados devem ser alterados para dar suporte à coleta das novas métricas, ou a alteração das métricas existentes.
Em a Camada de Integração de Aplicações, em Becker et al, os metadados são utilizados em nível de projeto, com a configuração da localização, forma de captura e cálculo de cada métrica.
Com as características de evolução, surge a necessidade de metadados em nível de versão de PDS, os quais são utilizados com o intuito de adaptar a coleta de cada projeto em sua versão original, para a versão atual do PDS.
Para ilustrar a utilização dos metadados, pode- se tomar um PDS Exemplo, que esteja na versão X, e seu respectivo Conjunto de Métricas, como exposto na Figura 7.
Supondo que houvesse uma evolução neste PDS Exemplo para a versão X+ 1, e que o Programa de Métricas tivesse a criação das métricas de Tamanho, e que as métricas de Custo fossem analisadas também por o ponto de vista do custo Sub-contratado, o Conjunto de Métricas resultante poderia ser representado como na Figura 8.
Para tratar a evolução do PDS e do Programa de Métricas, é preciso analisar o Conjunto de Métricas das versões anterior e atual do PDS, identificando as alterações do tipo:
Criação de métrica:
Para o caso da criação de uma métrica, são propostas quatro soluções:
Capturar- la, caso seja possível, nas ferramentas de apoio, derivar de outras métricas, adotar valores aproximados ou indicar como &quot;Valor não disponível», caso não seja possível a adoção de nenhum valor.
Exclusão de métrica:
Para uma métrica excluída, propõe- se três soluções:
Continuar coletando, mas sem a necessidade da análise desta métrica, a atribuição de algum valor aproximado, por exemplo, a média dos valores coletados anteriormente ou a indicação de &quot;Valor não disponível».
Modificação de métrica existente:
O Inclusão de uma dimensão:
No caso de modificação numa métrica existente, em que ocorre a inclusão de uma dimensão, são propostas duas soluções:
Coletar essa informação, diretamente nas ferramentas de apoio, utilizar heurísticas para distribuir os valores dessa métrica entre os registros da dimensão criada.
Excluir a dimensão e o agrupar os valores.
Manter a coleta relacionando com uma dimensão já excluída, pode ser importante, se futuramente, a organização necessitar levar em consideração esta dimensão Porém, isto somente será viável caso as informações utilizadas, na coleta dessa métrica, estejam nas ferramentas de apoio.
Em o trabalho de Becker et al, a camada de integração é responsável por carregar os Dados recebidos da Camada de Integração de Aplicações no DSA, por meio de rotinas de limpeza e transformação, auxiliadas por os metadados de versão de PDS.
Após todo esse processo, os dados consolidados são carregados no DW.
Para este trabalho, a Camada de Integração de Dados sofre alterações para comportar as rotinas de migração de dados entre as versões.
A cada evolução, o DSA passa a englobar a extensão de dados contida no DW da versão anterior.
O modelo de dados do DW é alterado sempre que ocorre modificação no conjunto de métricas.
As métricas que não sofrem alterações, simplesmente são carregadas no novo modelo à partir do modelo anterior, e as métricas que foram modificadas, são capturadas novamente das ferramentas de apoio ou adaptadas.
A evolução do DW foi tratada como uma evolução de esquemas, por a necessidade de manter uma visão unificada das métricas.
Mantém- se apenas a última versão do modelo analítico, e a extensão do modelo anterior é migrada para o novo modelo.
O DSA recebe, da Camada de Integração de Aplicações, os dados disponíveis nas ferramentas de apoio, já no formato do novo Programa de Métricas.
Para os dados que não estão disponíveis nas ferramentas de apoio, são buscadas alternativas, tais como a derivação de outras métricas já capturadas, existentes na extensão de dados da versão anterior, ou heurísticas para adoção de valores aproximados, quando possível.
Tomando- se como exemplo o PDS na versão X, citado anteriormente, desenvolve- se o modelo analítico, para comportar estas métricas, como apresentado na Figura 13, onde utiliza- se uma dimensão tipo, para diferenciar o tipo de esforço e custo (Planejado ou Realizado), criase uma dimensão Projeto, para diferenciar as métricas de cada projeto e cria- se também uma dimensão de data, para incluir a data de coleta de cada métrica.
Com a evolução do PDS utilizado como exemplo, desenvolve- se um novo modelo analítico, com base nas métricas da versão X+ 1 do PDS, tal como demonstrado na Figura 14.
As métricas de Custo, Tamanho e Esforço, por possuírem as mesmas dimensões, são armazenadas na mesma tabela fato, enquanto que a métrica de custo sub-contratado, por não possuir a dimensão &quot;Tipo», é acondicionada numa outra tabela fato.
A camada de apresentação não sofre alterações porque a solução visa encapsular as peculiaridades provenientes da evolução de métricas, mantendo os dados do DW na última versão do processo, fazendo com que esta camada receba os dados do DW, e ignorando os procedimentos que foram executados para tratar a evolução.
A partir de os dados do Data Warehouse, pode- se gerar gráficos, como mostrado na Figura 15, onde é possível analisar as informações consolidadas.
É possível também gerar relatórios com a execução de consultas SQL, diretamente no Data Warehouse.
Um exemplo de relatório pode ser observado na Figura de Tabelas Pivô, é possível analisar as métricas em diferentes perspectivas e filtros.
A solução apresentada tem o propósito de suprir as necessidades encontradas no âmbito desta pesquisa, as quais não eram endereçadas por as abordagens existentes na literatura.
O método proposto é baseado no trabalho de Becker et al, o qual foi estendido para atender as especificidades de PDSs que estão em constante evolução.
Os requisitos definidos no item 3.2.1 foram satisfeitos da seguinte maneira:
Requisito 1 ­ Com o intuito de representar todo o processo necessário para a efetiva coleta, organização e apresentação das métricas, endereçando as características descritas no item 3.1, optou- se por a extensão da arquitetura proposta em Becker et al, que, mesmo dando suporte apenas a PDSs estáticos (que não sofrem atualizações constantes), pode ser aplicada como ponto de partida para tratar a questão da evolução das métricas.
A escolha dessa arquitetura deu- se porque esta compreende todo o processo de captura, organização e apresentação de métricas de PDS.
Requisito 2 ­ A utilização de metadados permite configurar a solução adotada para cada alteração do Programa de métricas, e permite manter uma documentação das alterações destas métricas.
Requisito 3 ­ Para a definição do modelo analítico, optou- se por a abordagem definida em Becker et al, a qual baseia- se na estrutura dos projetos e no programa de métricas para compor o modelo analítico.
A evolução no conjunto de métricas implica na alteração do modelo de dados do Data Warehouse, desenvolvendo- se um novo modelo analítico ao surgimento de cada versão de PDS.
Desta forma ocorrendo também uma evolução no modelo analítico.
Requisito 4 ­ Para a apresentação das métricas, segue- se a abordagem definida em Becker et al, onde a camada de apresentação oferece suporte a consultas, visualizações e relatórios, em diferentes níveis de detalhes e agregações.
É possível também empregar técnicas OLAP (On-Line Analytical Processing), utilizando o modelo multidimensional como se fosse um cubo.
De essa forma, é possível atender às diferentes demandas de informações, dependendo do perfil de cada usuário.
Pode- se gerar relatórios ou gráficos consolidados, trazendo informações de cunho gerencial, e pode- se também apresentar as informações de forma mais detalhada.
Este capítulo apresenta a Experimentação da solução, que foi aplicada num ambiente real, com o propósito de comprovar as funcionalidades desta abordagem.
A solução foi testada na organização descrita anteriormente.·
Objetivo do Estudo: Analisar a solução proposta para verificar se ela atendeu os requisitos levantados no item 3.2.1· Objetivo do Experimento:
O propósito da experimentação é aplicar a solução num ambiente real, para comprovar sua funcionalidade.
A solução foi testada na organização descrita anteriormente.
Porém, a realidade encontrada é simplificada por a homogeneidade dos projetos e aplicações utilizadas, principalmente no que diz respeito aos projetos voltados à automação de processos de negócio, que são o enfoque deste trabalho.
Desta forma, não é necessária a utilização de wrappers, como sugerido na arquitetura, pois a empresa segue um padrão no uso das ferramentas, armazenando suas informações num mesmo SGBD (MS SQL Server).
Assim, todo o processo de extração, transformação e carga foi suprido por o desenvolvimento de procedimentos em T-SQL.
A versão atual do PDS utilizado por a empresa é a 5.0.
Contudo, ainda estão ativas as versões anteriores, 4.2 e 4.1.
Os dados utilizados para testes estão relacionados a defeitos, requisitos, esforço e tamanho do projeto, onde puderam ser tratadas algumas características da evolução.
Para isto, são descritos os metadados de versão de PDS e de projetos, iniciando- se por os metadados referentes à versão 4.1 do PDS, os quais estão representados nas figuras Figura 17 e Figura 18.
Os metadados completos podem ser encontrados no Anexo 1.
Em a versão 4.2 do PDS foi criada a métrica &quot;Tamanho de Cada Requisito», que não existia na versão 4.1.
Seguindo as alternativas propostas na solução para o caso da criação de uma métrica, procurou- se capturar a métrica diretamente da ferramenta utilizada para o controle de requisitos (Rational -- Requisite Para o).
Esta alternativa não teve sucesso, pois nos projetos concebidos nas versões anteriores à 4.2, não era armazenado o tamanho dos requisitos.
A segunda alternativa foi derivar de outras métricas, onde chegou- se a um valor aproximado, com a divisão do tamanho total do projeto por o número de requisitos.
Ainda na evolução da versão 4.1 para 4.2, houve a alteração das métricas de esforço, com a criação de uma nova dimensão.
Desta forma, houve tentativas de captura desses dados diretamente das ferramentas de apoio, também sem sucesso.
A alternativa foi a adoção de valores aproximados, destinando- se 40% das horas de esforço para o esforço de Gestão e 60% para esforço de engenharia.
Para a captura das métricas na versão 4.2 do PDS, são desenvolvidos os metadados correspondentes.
Em a Figura 19 encontram- se os metadados de versão de PDS, os quais são compostos por os metadados da versão 4.2 e os da 4.1 adaptados para serem compatíveis com a versão 4.2.
Em a Figura 20 são apresentados os metadados de projetos, contendo projetos na versão 4.1 e 4.2.
A o lançamento da versão 5.0 do PDS, ocorreu a inserção de uma métrica para controle de defeitos, levando em consideração o ambiente onde o defeito foi encontrado (Desenvolvimento/ Produção).
Desta forma, os metadados foram adaptados para coletar esta métrica perante a nova perspectiva.
Os metadados relativos à versão de PDS e aos projetos, com a coleta baseada na versão 5.0 do PDS estão disponíveis nas figuras Figura 21 e Figura 22.
Após capturadas das ferramentas de apoio, as métricas devem ser acondicionadas no DW.
Para isto, desenvolve- se o modelo analítico para cada versão de PDS, iniciando por a versão 4.1 (Figura 23), o qual comporta as métricas existentes no Programa de Métricas daquela versão.
Com a modificação do Programa de Métricas para a versão 4.2 do PDS, houve a necessidade do desenvolvimento de um novo modelo analítico, que é apresentado na Figura 24.
De acordo com a abordagem proposta, quando ocorre a evolução, o DSA utiliza a extensão dos dados contidos no modelo anterior, para compor o novo modelo.
As métricas de defeitos, por não sofrerem modificações, na evolução da versão 4.1 para 4.2 do PDS, são transferidas diretamente para o novo modelo, sem a necessidade de nova captura ou adaptação, enquanto que as métricas de esforço que passaram por modificações, com a inclusão da dimensão origem (Engenharia, Gestão e Total), e a métrica &quot;Tamanho dos Requisitos «que foi criada, passam por nova coleta ou adaptação e são inseridas no novo modelo.
Devido a a evolução do PDS para a versão 5.0 e às modificações no programa de métricas decorrentes dessa evolução, o DW é novamente reorganizado.
De a mesma forma, as métricas que não sofreram modificações são migradas diretamente para o novo modelo, enquanto que as métricas que foram criadas ou modificadas devem ser tratadas e organizadas corretamente no novo modelo de dados (Figura 25).
Com a utilização de metadados de versão de PDS e de projetos é possível configurar a captura das métricas acompanhando a evolução do PDS e do Programa de Métricas correspondente.
Os metadados são utilizados para capturar e adaptar as métricas durante a evolução.
A utilização de um DW permite um acesso mais objetivo às informações de projetos, pois estas ficam consolidadas num modelo de dados voltado a consultas analíticas, de onde podem ser gerados gráficos, relatórios, etc..
Com a experimentação da solução, foi demonstrado que é possível manter um repositório organizacional de métricas utilizando- se dados de projetos, mesmo estes estando em diferentes versões de PDS.
Para a validação da solução foram tratadas situações de criação e alteração de métricas, em três versões de PDS, desta forma, comprovando a eficácia da solução proposta.
Este trabalho propôs uma solução para tratar o processo completo de extração, organização e apresentação das métricas de PDS, voltados à automação de processos de negócio.
As questões de evolução de PDS foram levantadas numa empresa de Tecnologia de Informação, com certificação CMMI nível 2, que vem aperfeiçoando continuamente seu processo, para melhorar a qualidade de seus produtos e buscar o avanço nos níveis de certificação do CMMI.
Esta abordagem utiliza como base o trabalho de Becker et al, sobre o qual foram feitas extensões para tratar as questões relacionadas à evolução do PDS e do Programa de Métricas correspondente.
As principais modificações no trabalho original foram aplicadas em a:
Camada de Integração de Aplicações, a qual é responsável por a captura das informações nas ferramentas de apoio, onde foram estendidos os metadados de projetos, identificando a versão de PDS que cada projeto seguiu, e foram acrescentados metadados em nível de versão de PDS, para controlar as formas de captura e adaptação das métricas.
Camada de Integração de Dados, responsável por a organização das métricas no DW, que passa por alterações, principalmente no DSA, o qual precisa comportar as rotinas de migração de dados entre as versões.
A cada modificação no conjunto de métricas, o DSA passa a englobar a extensão de dados contida no DW da versão anterior e o modelo de dados do DW é alterado para dar suporte à nova versão.
A solução foi testada na empresa alvo de uma forma simplificada.
Todos os aspectos relacionados a web services e arquitetura orientada a serviços não foram testados pois, nesta empresa, há homogeneidade nos projetos e nas aplicações utilizadas.
Assim, todo o processo de extração, transformação e carga foi suprido por o desenvolvimento de procedimentos em TSQL.
Mesmo assim, o experimento permitiu explorar um modelo de PDS em evolução e as atualizações nos respectivos Programas de Métricas.
Como resultado, o experimento demonstrou que é possível formar uma base sólida, com informações de projetos em diferentes versões de PDS e que estas informações podem ser comparáveis entre si, em grande parte dos casos.
Como trabalhos futuros, sugere- se estender a presente proposta nos seguintes aspectos:
Aplicar técnicas de Descoberta de Conhecimento sobre o Repositório de Métricas da Organização, propiciando um maior aproveitamento das informações em ele armazenadas.
Evoluir a solução, para que ela atenda os requisitos dos níveis 4 e 5 do CMMI, de previsão e otimização dos PDSs.
Explorar, na Camada de Apresentação, formas de visualizar e tratar métricas com diferentes níveis de confiabilidade, ou seja, diferenciar métricas efetivamente obtidas da execução dos projetos, daquelas produzidas por heurísticas.
Examinar se a proposta é generalizável para outros tipos de aplicações, não relacionadas a processos de negócio.
