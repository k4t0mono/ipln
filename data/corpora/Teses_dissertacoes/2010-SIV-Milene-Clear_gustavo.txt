Hoje em dia, uma considerável parte das avaliações de usabilidade realizadas nos ciclos de desenvolvimento de software é conduzida em etapas mais avançadas nestes ciclos.
Algumas destas avaliações dependem ainda que protótipos totalmente funcionais sejam construídos, para que possam ser aplicadas, sendo comumente realizadas após o desenvolvimento e implantação do software.
Este fator contribui significativamente para o aumento no custo de produção.
Em este sentido, a partir de pesquisas sobre prototipação e engenharia de usabilidade e da condução de uma revisão sistemática sobre métricas para avaliação de usabilidade, o presente trabalho apresenta uma abordagem que permite que a avaliação de usabilidade seja antecipada, efetuando- a por meio de a utilização de protótipos ­ de fidelidade mista -- elaborados mediante o uso de uma ferramenta computacional.
Esta ferramenta auxilia na criação e simulação de protótipos de interfaces, além de permitir coletar as seguintes métricas de usabilidade, para posterior análise:
Sucesso de tarefas, desistência de tarefas, tempo na tarefa, esforço, equilíbrio de tela, simetria de tela, balanço de tela, seqüenciamento, ordem e complexidade e escala de usabilidade do sistema.
Além de as métricas que são coletadas por a ferramenta, de forma automática, são propostas as seguintes métricas, a serem coletadas a partir de a observação dos usuários utilizando os protótipos criados:
Sucesso parcial de tarefa, número de erros, auxílio e documentação, tempo de ajuda e raiva ou frustração.
A análise das métricas obtidas permite apontar áreas do sistema com possíveis problemas de usabilidade.
Além de isto, a execução de novos testes utilizando as interfaces refinadas com o auxílio da abordagem permite quantificar as melhorias realizadas por as mudanças de layout efetuadas.
Além de a abordagem, o trabalho apresenta seu uso num experimento realizado com usuários.
Este experimento permitiu verificar que, apesar de nem todas as métricas passíveis de serem coletadas de protótipos contribuírem para o refino das interfaces, ainda assim foi possível reduzir o número de problemas de usabilidade.
Palavras chave:
Protótipo, métricas, avaliação de usabilidade.
Em os dias de hoje, a utilização cada vez maior e mais abrangente dos computadores evidência a necessidade de que os sistemas interativos atuais devem se adaptar às mais variadas áreas do conhecimento humano e aos mais variados tipos de usuários.
Segundo Nielsen, para que um sistema consiga efetivamente auxiliar na execução das tarefas é necessário que sua interface seja de fácil aprendizagem, de forma que uma determinada tarefa possa ser rapidamente aprendida e executada.
Uma vez aprendida esta tarefa, é importante para o usuário que o sistema ofereça eficiência no uso e também que os passos executados possam ser lembrados facilmente nas próximas interações.
Além de os já citados, outro fator preponderante a ser observado no design de interações humano-computador é a satisfação do usuário em relação a o uso do sistema.
A satisfação, no entanto, pode ser prejudicada por interfaces em as quais não há preocupação com a clareza na comunicação e com a eficiência na execução das funcionalidades, o que pode dificultar a conclusão de uma tarefa ou ainda induzir os usuários a erros.
Estes problemas geralmente passam despercebidos e podem prejudicar a usabilidade do sistema como um todo.
A usabilidade, portanto, é a qualidade que caracteriza o uso dos softwares e depende de um acordo entre as características de interface, dos usuários, do ambiente e das tarefas.
Uma alternativa para projetar um sistema que seu uso seja adequado ao dia-a-dia dos usuários e seja, também, satisfatório, é incentivar a participação do cliente e sua interação com a equipe de design, realizando avaliações formativas com opções de design elaboradas para as interfaces propostas.
As avaliações formativas de usabilidade são realizadas a fim de melhorar a qualidade das interfaces gráficas e a interação através destas.
Estas avaliações são executadas no início do ciclo de desenvolvimento dos sistemas quando o layout das interfaces ainda não está totalmente definido.
Em geral, para este fim, são construídos protótipos destas interfaces para que sejam testadas e avaliadas com usuários finais.
De acordo com Beyer e Holtzblatt, estes protótipos agem como um meio de comunicação entre o designer e os clientes, permitindo que os usuários, ao interagir com o` novo sistema', possam contribuir com sua experiência para um desenho mais apropriado às necessidades do trabalho.
Com o uso de protótipos e a partir de a medição de alguns aspectos, como, por exemplo, eficácia, eficiência e satisfação, é possível se verificar quais aspectos dos laytous das telas precisam ser melhorados.
E, a definição de métricas e a coleta de dados durante uma seção de testes com usuários permitem que as melhorias realizadas em função de os resultados obtidos possam ser medidas e analisadas.
É neste âmbito, de possibilitar a coleta de métricas de usabilidade a partir de o uso de protótipos, ainda nas fases iniciais dos projetos, que este trabalho está sendo realizado.
Segundo Donyaee, a maioria das avaliações de usabilidade realizadas hoje em dia necessitam de um protótipo totalmente funcional, sendo, algumas destas, realizadas após o desenvolvimento e implantação do software.
Em este sentido, Nielsen &amp; Mack argumentam que o custo para regularizar eventuais problemas de usabilidade é menor se estas avaliações forem conduzidas antecipadamente.
Quanto mais tarde os problemas de usabilidade forem detectados, mais alto será o custo, tanto de trabalho quanto financeiro.
De esta maneira, as equipes de desenvolvimento de software devem atentar em realizar as avaliações de usabilidade o quanto antes em seus ciclos, tão logo os primeiros requisitos de negócio sejam levantados.
Para auxiliar na antecipação de avaliação de usabilidade existem diversas abordagens, como as baseadas em cenários, em modelos e em protótipos, de entre outras.
O foco deste trabalho está na utilização de protótipos como base para se tentar antecipar as avaliações de usabilidade dentro de os ciclos de desenvolvimento de software.
O objetivo deste trabalho é apresentar uma abordagem, com foco na extração de métricas a partir de protótipos computadorizados, que visa auxiliar os profissionais que trabalham com desenvolvimento de software a testar a usabilidade dos produtos por eles desenvolvidos ainda nas fases iniciais dos projetos, visando à redução dos custos de produção mencionados na seção anterior.
Em o intuito de atingir o objetivo mencionado anteriormente, realizou- se inicialmente um estudo sobre técnicas de prototipação.
Este estudo buscou conhecer as principais técnicas utilizadas, bem como seus processos de criação e teste.
Um segundo estudo buscou conhecer também como os protótipos e as avaliações de usabilidade ­ a partir de eles realizadas -- são utilizadas em alguns processos de engenharia de usabilidade.
Como o foco principal deste trabalho são as métricas, decidiu- se, visando conhecer seu estado da arte, realizar uma revisão sistemática da literatura existente.
Este tipo de revisão, segundo Kitchenham, é uma maneira criteriosa de identificar, avaliar e interpretar as pesquisas disponíveis acerca de uma questão específica, tópico ou fenômeno de interesse.
De acordo com a autora, muitas podem ser as razões para a condução de uma revisão sistemática, a deste trabalho é identificar e sumarizar as evidências existentes acerca de técnicas, métodos ou abordagens que propõem métricas para avaliação de usabilidade.
A revisão resultou num extenso conjunto de métricas aplicáveis aos mais diversos contextos e sistemas.
Este conjunto foi então reduzido, segundo critérios préestabelecidos, a um subconjunto de métricas aplicáveis a protótipos.
Estas métricas são descritas no capítulo 4 e o detalhamento da Revisão pode ser visto no Apêndice A. A partir de a identificação dos problemas apontados na subseção 1.1, dos estudos realizados e da condução da Revisão Sistemática, elaborou- se uma proposta de abordagem para antecipar a avaliação de usabilidade a partir de o uso de métricas e de protótipos automatizados por computador, Em os passos seguintes, a fim de avaliar a proposta, deu- se a elaboração e condução de um experimento que visava testar se a utilização da abordagem proposta consegue, de fato, antecipar problemas de usabilidade e reduzir- los.&amp;&amp;&amp;
Este trabalho está organizado da seguinte forma:
Em os capítulos dois e três é apresentado o referencial teórico que aborda a prototipação de interfaces, os diferentes tipos de prototipação e as técnicas envolvidas na sua criação e, também, como estas técnicas estão atualmente inseridas nos processos de engenharia de usabilidade.
O capítulo quatro apresenta o resultado da revisão sistemática realizada durante esta pesquisa.
Os capítulos cinco e seis apresentam respectivamente a estruturação da proposta e o resultado do experimento realizado para avaliar- la.
Uma discussão e as conclusões acerca de o trabalho são apresentadas no capítulo final, o qual é seguido das referências utilizadas para sua confecção.
A prototipação, como é conhecida nos dias de hoje, apesar de parecer algo relativamente novo, na verdade é uma técnica bastante antiga que remonta aos tempos dos grandes inventores da história.
Um exemplo clássico citado por Arnowitz são os detalhados desenhos em papel feitos por Leonardo da Vinci, ainda no século 15, a fim de ilustrar as suas idéias com relação a a engenharia (Error!
Reference source not found.).
Outro grande nome citado é Thomas Edison, que buscava, a partir de seus protótipos, também em papel, não somente ilustrar as suas inovações, mas também comunicar os requisitos de fabricação de suas invenções.
Por ter um espírito arguto, perfeccionista e essencialmente cientista, Edison trabalhava exaustivamente em seus protótipos, pois os mesmos deveriam sempre funcionar perfeitamente.
Ele costumava criar um desenho simples numa folha de papel para mostrar aos seus colegas.
Discussões surgiam a respeito e melhorias nos desenhos eram realizadas.
Seu incansável trabalho veio a tornar- se a primeira abordagem para a construção de protótipos.
Apesar de os protótipos, no âmbito da Interação Humano-- Computador (IHC), terem objetivos distintos aos que eram produzidos no passado, muitas lições podem ser aprendidas a partir destes precursores e muitas de elas são amplamente utilizadas nos dias de hoje, como, por exemplo, as revisões com usuários e design iterativo que eram utilizadas por Edison.
Segundo Arnowitz, um protótipo pode ser usado para testar desde pequenas até grandes idéias.
Dependendo dos objetivos do projeto, a abrangência do protótipo em relação a o sistema pode variar bastante.
Um protótipo horizontal contém toda a interface desenhada, mas nenhuma funcionalidade é adicionada aos botões e menus apresentados.
Já o vertical contém a implementação completa de uma parte específica do sistema.
Além de estas duas dimensões outra variante é o nível de detalhamento e os materiais empregados nos desenhos dos protótipos.
Os denominados low-- fidelity (protótipos de baixa fidelidade), em geral, são os que utilizam materiais diferentes dos que são utilizados na versão final do produto, como, por exemplo, um protótipo em papel de um website de um banco.
Este tipo de protótipo tende a ser simples, de baixo custo e de rápida elaboração.
Em contrapartida, protótipos high-- Fidelity (protótipos de alta fidelidade) possuem o look-and-feel do produto final e caracterizam- se por ser totalmente interativos, contendo uma definição clara da navegação no sistema.
Como foi visto, os profissionais desenvolvedores de software não foram os primeiros a utilizar a prototipação para visualizar antecipadamente as suas criações.
E, as vantagens, motivações e necessidades apresentadas anteriormente no contexto histórico ainda são relevantes nos dias de hoje.
Em as subseções a seguir serão discutidos em maiores detalhes alguns tipos mais comuns de prototipação utilizadas atualmente no âmbito do desenvolvimento de software.
Segundo Snyder, a prototipação em papel é um método bastante utilizado para desenhar, testar e refinar as interfaces de um sistema.
Em o início dos anos 90 era considerada uma técnica marginal, utilizada apenas por alguns profissionais experientes em modelagem de interfaces.
De a metade dos anos 90 em diante, profissionais de empresas bastante conhecidas começaram a experimentar o método.
A utilidade e os benefícios resultantes destes experimentos fizeram com que empresas como IBM® e Microsoft® introduzissem a prototipação em papel no seu processo de desenvolvimento de software.
Embora para a comunidade de IHC não exista uma definição oficial, única e aceita por todos acerca deste tipo de prototipação, pode- se considerar que prototipação em papel é um método de brainstorming, design, criação, teste e comunicação de interfaces com o usuário.
O protótipo feito à mão em papel (Error!
Reference source not found.)
é o primeiro e mais simples que pode ser criado.
Ele contém desenhos, geralmente feitos à mão, do layout da interface e contém dados reais, para fins de teste.
Pode ainda ser utilizado, dentro de o processo de desenvolvimento de software, já nas fases iniciais:
Tão logo as atividades de uma porção significativa do sistema tenham sido modeladas é possível elaborar um protótipo relacionado.
Esta técnica de desenho à mão permite simular e testar a interação de maneira rápida, além de proporcionar a identificação precoce de problemas de usabilidade.
Há certa divergência de opiniões na literatura sobre prototipação em papel.
Para Snyder, não se pode confundir um protótipo de papel com compositions (comps), wireframes e storyboarding.
Wireframes também causam bastante confusão, pois as pessoas os utilizam para diferentes fins.
Um wireframe define o layout de uma página na internet e também a localização das informações em ela contidas.
Snyder argumenta que um wireframe nem sempre é um protótipo em papel, pois pode não conter dados reais, apenas texto para indicar a localização das informações e também por nem sempre ser um trabalho impresso.
A Figura 4 apresenta um exemplo de wireframe de um web site.
Já os storyboards 1 são uma série de desenhos cuja finalidade é mostrar a interação ao longo de a realização da tarefa, podendo ser facilmente convertidos em protótipos de papel, separando as interfaces em eles contidas e adicionando as informações necessárias para a interação com o usuário.
Para Sharp um storyboard se encaixa na definição de protótipo em papel adotada, visto que também pode utilizar papel como meio de divulgação.
Existem ainda outros termos que podem ser encontrados na literatura ­ como Scketches e Mock-ups ­ mas, conceitualmente, estes são semelhantes aos protótipos citados anteriormente.
A seção 2.3 vai tratar especificamente deste tipo de prototipação.
Muitos são os projetos para os quais se torna importante fazer uso da prototipação em papel, embora não haja uma definição clara de quais são estes e como identificar- los.
Se o time do projeto contém muitos profissionais ou é interdisciplinar, ou seja, contêm pessoas de diferentes áreas da organização, um protótipo em papel pode influenciar positivamente no resultado final do design, por não ter as barreiras técnicas para a elaboração (i.
e uso do MS Visio®), que, muitas vezes, atrapalham os profissionais que não tem familiaridade com a tecnologia envolvida no projeto.
Assim, profissionais que não são da área técnica, podem, facilmente, contribuir com o desenho sem a necessidade de possuir habilidades específicas.
Outro fator que pode levar o time de projeto a adotar a prototipação em papel é quando se tem muitas idéias acerca de o design.
Em este caso, fazer um protótipo rapidamente permitirá testar estas diferentes idéias.
Segundo Snyder, do ponto de vista de infra-estrutura, a utilização do papel permite que sejam evitados gastos com alocação de recursos computacionais, tais como:
Nome utilizado para designar os profissionais da área de criação (i.
e nas agências de publicidade).
Experiência com o usuário vêm de testes de usabilidade logo nas primeiras fases dos projetos.
Os testes com protótipos em papel consistem em observar o usuário, guiado por uma tarefa pré-definida, interagir com as interfaces desenhadas nos protótipos.
Antes que estes protótipos sejam testados com os clientes de fato, recomenda- se realizar testes internos com outros membros da equipe a fim de dirimir quaisquer problemas na interface.
A o definir um conjunto de tarefas (este tema será abordado em maior detalhe na seção 2.4) que nortearão o desenho dos protótipos faz- se necessário, para realizar este teste, estabelecer, entre os membros da equipe de desenvolvimento, quem executará qual dos três papéis que devem ser desempenhados durante a execução:
Facilitador, Observador e Computador.
De acordo com Snyder o Facilitador é a pessoa que tratará das questões administrativas do teste, como:
O Observador é a pessoa que ficará realizando anotações durante o teste sobre os problemas que irão ocorrer durante a interação do usuário.
Este observador anota cada um dos problemas encontrados e faz inferências sobre o que ele julga ter causado tal problema.
Já o Computador é a pessoa que fica segurando e manejando o protótipo conforme o usuário interage com o mesmo.
Seu propósito é realizar exatamente as tarefas que o computador executaria se o software em questão estivesse funcionando, como, por exemplo, se o usuário interagir com o menu, este deve manejar o protótipo para executar tal ação.
Com os resultados do teste é realizada uma reunião com os observadores e o restante da equipe de design e demais gerentes do projeto, para que sejam discutidas as anotações feitas por os observadores durante a seção de teste.
As melhorias discutidas na reunião são agregadas ao design e novos desenhos são realizados.
Porém, para Snyder, a melhoria da interface é realizada ainda durante a seção de teste, enquanto que para Arnowitz e Holtzblatt estas melhorias são realizadas somente após a discussão de todos os itens.
A o final de todos os testes e refinamentos nos desenhos, deve- se gerar a documentação dos testes, que pode ser:
Documento de especificação de Interface:
Como os protótipos são desenhos das interfaces que já foram testadas, podem servir como base para a criação de uma especificação detalhada sobre como a interface definitiva deve ser;
Documento de comportamento de Interface:
Este relatório contém descrita a forma como a interface testada foi utilizada.
As informações contidas neste relatório são elaboradas por o membro da equipe que desempenhou o papel de computador durante a seção de testes;
Lista com os dez principais problemas encontrados.
Outra forma de criar protótipos é utilizar um aplicativo de computador que auxilie na criação.
De acordo com Newman, a utilização de uma ferramenta para elaborar protótipos facilita o desenvolvimento e modificação dos layouts das telas.
Possibilita ainda a criação de ligações entre as telas, possibilitando a navegação entre elas.
Existe uma série de aplicativos no mercado que permitem a criação de protótipos, como, por exemplo:
Denim, Axure®, Visio® e outras ferramentas de RAD (Rapid Application Development) também.
A seguir serão apresentadas brevemente algumas destas ferramentas.
Pesquisadores da universidade de Berkeley criaram um aplicativo denominado DENIM.
Esta ferramenta (Figura 5) permite que designers construam esboços de web sites em diferentes níveis de refinamento ­ mapa de site, seqüência de páginas e páginas individuais.
Além de o protótipo manter uma aparência de esboço, é possível ainda criar ligações entre as telas e executar o protótipo para testar a interação criada.
Axure RP® é uma ferramenta para prototipação e wireframing de web sites e aplicações web em geral.
Ela permite que designers criem protótipos que comportem- se como web sites reais, visto que é possível interagir com os designs e formulários criados.
Uma importante funcionalidade permite gerar automaticamente um documento, no formato Microsoft Word®, contendo a especificação da interface.
Contrariamente ao DENIM, o Axure RP® não permite navegar entre os protótipos criados clicando nos botões e links.
A Figura 6 mostra um exemplo de interface sendo construída com o auxílio desta ferramenta.
Todos os protótipos construídos com qualquer uma das ferramentas aqui descritas podem ser considerados protótipos em papel, desde que sejam impressos.
A prática na criação de storyboarding tem uma longa tradição nas comunidades e empresas de filmes, histórias em quadrinhos, televisão e animações em geral.
Storyboarding é uma breve descrição gráfica cujo objetivo principal é demonstrar a interface e os contextos de uso de um determinado sistema.
Esta técnica, considerada um protótipo de baixa fidelidade, pode ser usada tanto para descrever a interação com uma interface de um sistema sendo projetado como a interação com um dispositivo qualquer.
A Figura 9 apresenta um storyboarding criado para um site de Neurociências para crianças.
O Storyboard evolui conforme o entendimento geral sobre o domínio do sistema projetado evolui.
Arnowitz sugere que o storyboard seja o principal protótipo nas primeiras etapas do projeto de desenvolvimento de um sistema e que este pode servir de base para outros tipos de protótipos.
Para Holtzblatt os melhores desenhos de sistema vêm deste tipo de representação.
Os autores argumentam que a utilização somente de Casos de Uso no inicio dos projetos foca a equipe demasiadamente nas atividades do sistema e nas regras de negócio, enquanto que os storyboards auxiliam na visualização do fluxo das atividades sob o aspecto de o usuário e de seu trabalho.
De esta maneira, a utilização de storyboards no processo de design, ainda que não utilizado para validar aspectos de usabilidade, pode ser uma parte essencial do projeto de interfaces e ajudará a:
Já, segundo Curtis e Vertelney, um storyboard pode ser utilizado com as seguintes finalidades:
Holtzblatt Sugerem que após a finalização da elaboração dos storyboards os mesmos sejam compartilhados com os outros membros da equipe e com todos os stakeholders do projeto.
Após o compartilhamento destas informações, um membro da equipe é selecionado para ser o mediador da reunião que coletará o feedback dos clientes a respeito de o storyboard.
Em esta reunião, o mediador deve apresentar a seqüência de desenhos que será mostrada e percorrer o storyboard passo a passo explicando o que está ocorrendo.
À medida que são apresentados os desenhos e surgem as dúvidas dos clientes, devem ser feitas anotações sobre o que foi esquecido de ser inserido nos desenhos e sobre os comentários feitos.
A participação dos outros membros da equipe de design, além de o mediador, é importante, pois as reuniões são informativas e freqüentemente tornam- se ótimas sessões de design.
Por fim, os dados coletados durante a sessão de avaliação são discutidos e servem como base para a melhoria e correção do storyboard.
O processo de criação de protótipos não é único, não existe um processo que seja tido como o melhor e tampouco o ideal.
Existem três principais e diferentes abordagens com propostas distintas para a criação de estes:
Throw-Away Prototyping, Incremental Prototyping e Evolutionary Prototyping.
Em o Throw-Away Prototyping o protótipo é desenhado e testado.
O conhecimento obtido a partir destes testes é empregado no design do produto final, mas o protótipo é descartado e não mais utilizado.
Em a abordagem Incremental Prototyping o produto final é construído a partir de pedaços menores, um a cada vez.
Não existe, para esta técnica, um protótipo que contemple todo o sistema.
A cada versão lançada uma parte nova contendo funcionalidades é prototipada e desenvolvida.
Como esta técnica não compreende todo o sistema e, sim, uma parte sua a cada vez, ela também não reaproveita os protótipos já criados.
Evolutionary Prototyping não descarta nenhum dos protótipos criados, todos eles servem como base para a próxima fase de teste.
Como os desenhos são todos reutilizados, o sistema evolui de uma versão simples, contendo apenas algumas funcionalidades básicas, para uma versão completa que contempla todo o sistema.
A cada iteração são realizadas as modificações e melhorias sugeridas na iteração anterior.
As três abordagens apresentadas servem como base para todo o processo de prototipação, desde o levantamento das informações até o teste com os protótipos.
Os passos que serão mostrados a seguir representam a seqüência de atividades que deve ser desenvolvida até a criação dos desenhos, ou seja, os passos mostrados podem ser utilizados para qualquer uma das abordagens acima.
Antes de se iniciar o desenho do protótipo no papel, é importante especificar o que se deseja aprender a respeito de uma determinada parte do sistema.
Há diversas formas e abordagens para se definir o que o usuário executará durante os seus testes.
A abordagem mais citada na literatura para discutir, esclarecer ou analisar as necessidades dos usuários é descrever as tarefas (Task Description) que serão utilizadas como base para os testes.
Existem diversas formas de representar esta descrição e, aqui, serão apresentadas quatro formas distintas (gráficas ou textuais) de fazer esta representação:
Cenários, Casos de Uso, Casos de Uso Essenciais e desenho de tarefas (Task Design).
Estas abordagens são complementares e podem ser usadas em conjunto para capturar diferentes perspectivas de uma mesma tarefa.
Cenários são descrições textuais narrativas, em forma de histórias, que descrevem atividades ou tarefas e que permitem a discussão do contexto, necessidades e requisitos de sistema.
Para Carroll, além de realçar o comportamento e as ações dos usuários em relação a o sistema, Cenários descrevem procedimentos que são ou não adotados e evidência quais as interpretações que as pessoas fazem sobre o sistema.
O texto a seguir ilustra um possível Cenário de um usuário de um sistema de catálogo de biblioteca:
&quot;Digamos que eu queira achar um livro de George Jeffries.
Eu não me lembro do título do livro, mas sei que foi publicado antes de 1995.
Eu vou até o catálogo e entro minha senha de usuário.
Eu não entendo por que tenho que fazer isto, uma vez que não tenho como entrar na biblioteca para usar o catálogo sem antes passar por as portas de segurança.
Contudo, uma vez que minha senha tenha sido confirmada, eu recebo a opção de busca por autor ou por data, mas não a combinação de autor com data.
Eu tendo a escolher a opção por autor, porque a busca por data usualmente identifica muitas entradas.
Depois de 30 segundos o catálogo retorna dizendo que não há entradas para George Jeffries e mostrandome uma lista de entradas aproximadas.
Eu vejo a lista e percebo que, na verdade, eu errei o primeiro nome do autor e é Gregory e não George.
Eu escolho a entrada que eu desejo e o sistema mostra a localização para informar onde está o livro.»
Em este Cenário se pode notar que o texto é essencialmente narrativo e mostra, de maneira informal, a utilização de um sistema de biblioteca sob a perspectiva e descrição de um usuário.
Em virtude de isto, descrever possíveis futuros Cenários pode ser de bastante ajuda nos exercícios de design feitos logo nas primeiras etapas do projeto uma vez que o usuário achará mais fácil descrever as atividades para o aspecto orientado a tarefas dos Cenários do que o aspecto abstrato comum as especificações de sistema.
A quantidade de detalhes empregada na descrição feita no Cenário pode variar bastante.
Uma descrição mais detalhada permitirá que sejam construídos protótipos para que o usuário faça o teste da interface a partir de o que ele próprio descreveu.
A utilização de Cenários para representar o sistema, explicita o uso e pode ajudar os designers e analistas a focar a atenção nos usuários e suas tarefas.
Em projetos de desenvolvimento de software orientado a objetos é comum a utilização de diagramas UML (Unified Modeling Language) para a representação e modelagem tanto de negócio como de sistema.
De entre estes diagramas, o Diagrama de Casos de Uso tem como foco principal a interação usuário-sistema.
Cada caso de uso é ligado a um ou mais atores e representa uma das tarefas mais comumente realizadas por os usuários do sistema.
A Figura 13 mostra um exemplo de Diagrama de Caso de Uso de um sistema para comercialização de produtos.
Alternativamente, segundo Preece, o Caso de Uso pode ser apenas uma descrição textual, ao invés de a descrição gráfica usada no exemplo da Figura 13.
Em esta técnica, o caso de uso principal descreve a forma normal, sem erros ou exceções, de execução de um conjunto de tarefas.
Logo em seguida são descritos os cursos alternativos à execução normal.
Esta técnica é bastante similar aos detalhamentos de Casos de Uso utilizados em conjunto com as descrições gráficas.
A diferença básica para uma descrição textual feita no uso de Cenários é que nos Casos de Uso a descrição é voltada à interação usuário-sistema e não às atividades do usuário.
Em os Casos de Uso Essenciais ­ também conhecidos como Casos de Uso de Negócio ­ elabora- se um texto narrativo e estruturado mais geral do que os Cenários e mais detalhado do que um Caso de Uso tradicional.
Os Casos de Uso Essenciais são geralmente escritos em duas colunas onde a coluna da direita contém as ações realizadas por os usuários e a da esquerda as respostas e responsabilidades que se espera do sistema.
Em o Caso de Uso Essencial apresentado na Figura 14 se nota que a linguagem empregada na descrição é informal e voltada a maneira como o usuário se expressaria para descrever- la.
O exemplo não menciona a tecnologia empregada e, diferente de como poderia ser nos Cenários, não apresenta maiores detalhes sobre senha para acesso ou como são apresentados os dados.
Outra diferença importante entre os Casos de Uso Essenciais e as outras técnicas mostradas é que esta não trabalha com atores e, sim, com papéis de usuários, ou seja, a descrição estruturada das atividades é elaborada para um número grande de usuários que podem desempenhar o papel descrito.
O Desenho de Tarefas (Task Design) utilizado e criado por Snyder sugere uma abordagem diferente das já apresentadas até então.
Em esta técnica é criado um conjunto de tarefas que cobrem uma determinada parte do sistema a qual se deseja discutir e tirar as possíveis dúvidas.
As tarefas desenhadas devem ser baseadas nos objetivos do tipo de usuário selecionado e ainda compreender questões importantes para o desenvolvimento do produto.
Snyder argumenta ainda que as tarefas criadas devem ter:
O processo de criação de tarefas é bem definido e se inicia listando quais os objetivos dos usuários a serem alcançados na utilização da interface a ser testada.
Em o passo seguinte são listadas as eventuais dúvidas e riscos, ou seja, as questões que se deseja responder no teste com os usuários.
Com estas duas informações, priorizam- se as questões a serem respondidas e em sequida selecionam- se alguns objetivos a realizar que cubram uma ou mais destas questões.
A Figura 15 mostra um template de como desenhar a tarefa, sugerido por Snyder.
Em o exemplo anterior, para o campo Objetivos deve- se informar o que o usuário terá realizado ao completar a tarefa e como ele fará para descobrir se a tarefa foi finalizada com êxito.
Já para Entradas/ Pré-condições são listadas todas as informações necessárias para o cumprimento da tarefa e ainda quais as condições e pré-requisitos para executar- la.
Os passos de execução esperados são descritos em steps.
Tempo Previsto é o tempo necessário para que um usuário experiente complete a tarefa.
Em esta medida é desconsiderado o tempo que o sistema gastou com processamento.
As instruções para os usuários devem conter informações gerais que não foram colocadas nos outros campos e, para tanto, é necessário que este seja um dos últimos itens a serem preenchidos.
Em o último campo usualmente são citadas questões específicas a observar e também a forma como vai ser conduzida a tarefa.
A Figura 16 mostra um exemplo do template preenchido.
Nielsen propõe a mesma abordagem, porém o faz em duas etapas diferentes chamadas:
Desenho Paralelo e Desenho Participatório.
Em a primeira etapa são criadas simultâneamente várias idéias sobre uma mesma interface.
Estas idéias são avaliadas e apenas uma de elas é aprimorada com os usuários durante a etapa seguinte.
Com os desenhos de todas as tarefas concluídos, o próximo passo é desenhar todas as interfaces do sistema que darão suporte às tarefas elaboradas com o auxilio das técnicas mencionadas anteriormente.
Para cada uma das interfaces, devem ser elaboradas no mínimo duas propostas, a fim de oferecer alternativas de desenho para os usuários.
Um estudo recente mostrou que apresentar mais de uma alternativa de desenho para os clientes aumenta a liberdade de críticas e a quantidade de comentários negativos em relação a o design.
Estes comentários negativos e críticas fornecem importantes dados para que os membros da equipe elaborem uma interface que seja melhor aceita e que realmente contribua para a execução das tarefas dos usuários.
Já para a criação dos Storyboards, é importante utilizar a abordagem por Cenários, pois esta combinação permite que o desenho da interface seja baseado na finalidade de uso da aplicação.
A utilização em conjunto destas duas técnicas ­ Storyboarding e Cenários ­ permite ainda que sejam coletados requisitos e feedbacks dos usuários, além de ajudar a visualizar como a nova tecnologia será incorporada à prática do trabalho e o valor agregado com o seu uso.
Além de as alternativas já vistas nos processos de elaboração de protótipos em papel, outra forma de construir Storyboards é a proposta de Kantola e Jokela.
Esta nova proposta, chamada de Simple and Visual Storyboards (SVSb), foi baseada nos processos utilizados por a indústria de filmes e histórias em quadrinhos e divide a criação dos storyboards em sete principais características que, segundo os autores, provém da abordagem por Cenários.
Estas características ­ contexto, usuário, objetivos, planos, avaliação, ações do usuário e eventos do sistema ­ serão descritas a seguir.
Em as seções anteriores foram apresentados diferentes tipos de protótipos, assim como diferentes graus de fidelidade, sendo estes últimos, basicamente divididos entre baixa e alta fidelidade.
Segundo McCurdy, criar protótipos para apenas algum destes graus de fidelidade pode limitar o design e dificultar a adequação do mesmo à necessidade do teste.
Para resolver este problema os autores propõem um framework que contém cinco dimensões sob as quais a fidelidade de um protótipo pode variar:
Um experimento qualitativo realizado na Universidade de Indiana procurou descobrir o quanto a fidelidade e o meio em o qual um protótipo é construído afetam os resultados dos testes de usabilidade.
Para realizar o experimento foram selecionados 15 participantes que deveriam executar uma determinada tarefa com um tipo pré-definido de protótipo:
Um protótipo computadorizado de baixa fidelidade, um protótipo em papel e outro totalmente funcional.
Cada um destes participantes então executou, em apenas um dos protótipos, a tarefa solicitada e respondeu a um questionário pós-teste ao final da sessão.
A análise dos dados obtidos mostrou que a versão computadorizada conseguiu apontar tantos problemas de usabilidade quanto a a versão totalmente funcional.
A versão em papel, no entanto, apresentou uma diferença bastante significativa ­ para menos -- no número de problemas levantados em relação a seus outros dois concorrentes.
Em este mesmo sentido, um experimento descrito em também revelou que o protótipo automatizado por computador apontou dois problemas relativos ao layout da interface que passaram despercebidos por a versão em papel no mesmo teste.
E, em outro estudo, a grande maioria dos participantes do experimento relatou que prefere interagir com a versão computadorizada do protótipo por se sentirem menos observados e por facilitar a exploração do design, visto que a versão computadorizada evita o esforço desnecessário do facilitador do teste na versão em papel.
A Engenharia de Usabilidade é uma disciplina que provê um conjunto de métodos que visam agregar usabilidade à interface de usuário durante o processo de desenvolvimento de software e possui uma parte significante de suas tarefas voltadas aos estágios iniciais dos projetos.
Em este trabalho serão apresentados cinco diferentes ciclos de vida de desenvolvimento de interfaces.
Em cada uma destas, será destacado o uso de prototipacão.
Mayhew propõe um ciclo de desenvolvimento bastante detalhado, que consiste num conjunto de tarefas ligadas à Engenharia de Usabilidade e inseridas num completo ciclo de desenvolvimento de software.
O ciclo proposto é composto por três fases que compreendem tarefas desde o levantamento e análise de requisitos até a implantação do sistema.
Em a primeira fase, Análise de Requisitos, realiza- se uma descrição das características dos usuários, das suas tarefas e do fluxo de trabalho.
De estes levantamentos iniciais são extraídos os requisitos qualitativos de usabilidade e também os requisitos quantitativos, através de os quais são definidos níveis mínimos aceitáveis de performance do usuário e critérios de satisfação.
A o final desta fase são definidos a plataforma tecnológica e os princípios gerais de design.
Em a fase seguinte, dividida em três níveis de design, todas as tarefas analisadas na fase anterior são redesenhadas a nível organizacional a fim de aumentar as capacidades de automatização e proporcionar um fluxo de trabalho mais otimizado.
Em o primeiro nível de desenho é definida somente a forma de navegação e interação com os processos e tarefas.
Em este ponto encontra- se a prototipação em papel detalhada, por a qual são desenhadas as idéias levantadas no passo anterior.
Este desenho em papel é testado com usuários representativos e melhorado conforme seus feedbacks vão sendo agregados a interface.
Em o nível dois de design são aplicados padrões de desenhos definidos para as interfaces do sistema.
A mesma bateria de testes com usuários representativos é realizada e, por fim, no nível três, empregam- se todos os detalhes no desenho da interface e repetem- se os ciclos de teste.
Ao todo são, no mínimo, três execuções de prototipação e teste a serem realizadas.
A última fase consiste na instalação do sistema implementado e na coleta de feedbacks do usuário, que servirão como melhorias a serem incorporadas nas futuras versões do sistema.
A Figura 18 ilustra graficamente o processo descrito.
O modelo de Engenharia de Usabilidade (Error!
Reference source not found.)
proposto por Nielsen é um conjunto de atividades que se desenvolve durante o ciclo de vida de um produto.
O ciclo do modelo proposto por o autor enfatiza que não se deve ir diretamente ao design, mas sim realizar o máximo possível antes que qualquer esforço seja empregado no desenho das interfaces.
Os estágios da Engenharia de Usabilidade, sugeridos por o autor, são:
Conheça o usuário;
Análise competitiva;
Setting usability; Design paralelo;
Design participatório;
Design coordenado de toda a interface;
Prototipação; Teste empírico;
Aplicar orientações e Avaliação Heurística;
Design iterativo;
Coletar feedback dos usuários.
O primeiro estágio desta abordagem trata de conhecer os futuros usuários do sistema.
É importante nesta fase que os desenvolvedores conheçam as características dos seus usuários e como o sistema será utilizado.
Em o estágio seguinte se faz uma análise de pontos fortes e fracos dos produtos concorrentes, se houver.
O objetivo principal é testar, nos concorrentes, o que a interface e o design têm a oferecer aos usuários e qual a forma utilizada para apoiar as tarefas realizadas.
O terceiro estágio envolve a elaboração de objetivos gerais que a interface deve atingir.
Estes objetivos nada mais são do que o estabelecimento de métricas acerca de a usabilidade.
Se o software sendo desenvolvido tiver algum concorrente direto, estas métricas passam a ser, no mínimo, as da concorrência.
Em o quarto estágio o objetivo principal é a produção do máximo possível de propostas diferentes de interface.
Para tal, este estágio utiliza mais de um designer para que sejam elaboradas várias propostas ao mesmo tempo e não especifica qual técnica é utilizada para elaborar os desenhos.
A o final desta seção, estudam- se as diversas idéias e elegem- se as melhores.
O desenho participativo, próximo na seqüência dos estágios, une o conhecimento sobre o cliente obtido no primeiro estágio com as idéias levantadas no quarto estágio e promove a discussão das interfaces com alguns representantes do cliente.
A o concluir a discussão sobre as interfaces, se faz necessário eleger um coordenador, o qual irá centralizar todas as decisões sobre o desenho.
Este coordenador será responsável também por manter um entendimento geral sobre como o desenho do restante do sistema deve ser.
Eleita a coordenação, se inicia então o estágio de Prototipação, onde serão realizados os desenhos de todos os protótipos e posteriormente feitos os testes com os usuários e coletadas todas as informações necessárias para as eventuais melhorias.
Abordagens mais atuais, como a proposta por Obendorf, também utilizam a prototipação como item importante em seus processos.
A abordagem proposta por o autor, chamada de XPnUE, visa integrar os processos empregados em metodologias ágeis, como o Extreme Programming (XP), com as práticas que a Engenharia de Usabilidade provê.
Para isto, são utilizados Cenários como ferramenta para integrar as duas abordagens.
O autor argumenta que um dos pré-requisitos para que esta abordagem seja utilizada com sucesso é o emprego de protótipos em papel, pois estes possibilitam que os usuários interajam com mais facilidade com os membros da equipe de desenvolvimento, não havendo necessidade de conhecimento técnico.
Inicialmente se levantam informações acerca de o contexto de uso do sistema e das responsabilidades dos usuários.
A seguir, histórias textuais e storyboards são utilizados para o levantamento de requisitos e para os Cenários de Uso.
Em a seqüência, com estas histórias, elaboram- se os protótipos que serão validados com os clientes.
Juntamente com a criação dos protótipos também ocorre a implementação do sistema, que tem como entrada o protótipo desenvolvido já contendo o feedback do usuário.
Por fim, se realiza um teste de aceitação juntamente com os clientes.
Wolkerstorfer Propõem também uma abordagem que integra o XP com Engenharia de Usabilidade e utiliza protótipos para realizar teste das interfaces desenhadas com especialistas em IHC.
A abordagem chamada Extreme Designing, baseada nas metodologias ágeis de desenvolvimento de software, é uma proposta que visa o design, diferentemente do XP que foca no desenvolvimento do sistema.
Em o processo mostrado anteriormente, Obendorf propõe que a codificação ocorra paralelamente à prototipação e a coleta de feedback dos clientes, já no Extreme Designing, o protótipo é elaborado e testado com os clientes antes que qualquer esforço seja empregado na implementação do sistema.
De maneira análoga ao XPnUE o Extreme Designing utiliza Cenários e, também, user stories como ponto de partida para a elaboração dos desenhos das interfaces.
A Figura 20 mostra passo a passo o processo.
O ciclo de vida em estrela, proposto por Hix e Hartson inclui etapas de prototipação e avaliação, em as quais são utilizados protótipos como principal meio para a avaliação contínua.
Em este ciclo de vida não há a necessidade de se especificar todos os requisitos antes de avançar nas fases do projeto, basta elaborar um protótipo rápido das interfaces e inserir novos requisitos conforme o mesmo vai sendo avaliado.
Este ciclo é flexível e permite que possa ser iniciado por qualquer uma de suas partes, excetuando- se a Avaliação, parte central do ciclo.
Segundo Donyaee, uma grande variedade de métodos tem sido propostos para se avaliar a usabilidade de um determinado software.
Contudo, estes métodos normalmente requerem um laboratório especial ou, ainda, um protótipo totalmente funcional para que possam ser executados.
Seffah, assim como Donyaee, também relata que, além de não haver um consenso sobre quais fatores compõem a usabilidade, há uma crescente variedade de abordagens e modelos que procuram quantificar- la e medir- la.
Em este âmbito, de procurar quantificar e medir a usabilidade de um determinado software, este capítulo apresenta o resultado da questão dois da revisão sistemática realizada, cujo protocolo e as demais respostas para as outras questões podem ser consultados no Apêndice A deste trabalho.
Em as subseções a seguir será apresentado brevemente cada um dos estudos coletados a partir de a avaliação dos resultados nas bases de pesquisa selecionadas para a Revisão.
Os estudos que, de alguma forma, estavam relacionados entre si, foram agrupados em subseções separadas.
Brajnik e Lomuscio, Freire e Vigo apresentam abordagens para a avaliação de acessibilidade a partir de o uso de ferramentas que automatizam a execução desta.
Ao contrário de outros modelos já conhecidos, como o WCAG2.
0, estes trabalhos não apenas avaliam a conformidade com uma lista de diretrizes, mas preocupam- se em estabelecer medidas para quantificar este nível de acessibilidade.
Brajnik e Lomuscio propuseram um método chamado Samba ­ semi-Automated barreiras de acessibilidade.
Segundo os autores, uma barreira é qualquer condição causada por o web site que atrapalhe o progresso do usuário rumo a o objetivo da tarefa.
Este método utiliza uma abordagem intitulada Barrier Walkthrough que utiliza especialistas para detectar possíveis impedimentos no progresso de uma determinada tarefa.
O Samba é composto de três fases:
Em a primeira é utilizada uma ferramenta que avalia sites conforme as diretrizes do WCAG1.
0 e a lista de itens violados gerada é então mapeada para as respectivas barreiras de acessibilidade.
Em a segunda fase, a lista é avaliada por especialistas para que sejam determinados os graus de severidade das barreiras encontradas e posteriormente calculados os índices de acessibilidade na terceira e última fase.
De maneira similar, Vigo propõe uma métrica chamada WAQM ­ Web Accessibility Quantitative Metric ­ que também utiliza uma ferramenta para automatizar a avaliação dos web sites conforme as diretrizes do WCAG.
Para cada um dos atributos de acessibilidade do WCAG, um valor quantitativo é atribuído e, posteriormente, conforme os relatórios de resultados das ferramentas, uma métrica geral é calculada para todo o web site.
Já Freire propõem uma forma de avaliar e monitorar a acessibilidade de sites governamentais a partir de a avaliação automatizada utilizando, neste contexto específico, uma série de métricas coletadas de levantamento bibliográfico.
A abordagem proposta é composta ainda por uma ferramenta que além de realizar as avaliações, mantém um histórico das métricas coletadas a fim de servir como base para o monitoramento.
Além de o trabalho apresentado por Brajnik e Lomuscio, outros cinco estudos propõem medir a usabilidade a partir de uma única métrica.
Babiker sugerem uma métrica chamada Usability Score que é composta por o atributos navegabilidade, orientação e interações com o usuário, e visa medir a usabilidade de sistemas baseados em Html.
Para Chang a métrica, calculada a partir de a teoria de sistemas Fuzzy, é composta de seis fatores:
Feedback do sistema, consistência, prevenção de erros, performance ou eficiência, satisfação e recuperação após erros.
O Usability Index, proposto por Keevil, é uma métrica cujo valor representa um percentual de conformidade a um checklist, calculado de maneira manual.
Já McGee estende uma proposta chamada User Magnitude Estimation (Ume) para criar uma nova abordagem intitulada Master Usability Scaling (Mus).
Este novo método utiliza a mesma abordagem que o Ume utiliza, porém adicionando uma nova atividade.
Com o Ume, cada um dos usuários participantes da seção de testes estima a magnitude da usabilidade para cada uma das tarefas executadas.
O método proposto adiciona um novo componente que mede a magnitude da usabilidade de tarefas pré-determinadas e padronizadas, inserida no contexto dos testes.
De esta maneira, torna- se possível ter uma medida de usabilidade contínua entre os diversos testes, visto que as tarefas padrão são reutilizadas em novos estudos.
Com o intuito de facilitar a utilização de modelos para realizar medidas, Sauro apresenta o Summated Usability Metric (SUM) que reúne as métricas:
Contagem de erros, tempo na tarefa, e satisfação.
Esta métrica, calculada com o auxílio de técnicas de padronização de valores utilizada por o SixSigma, visa aumentar a significância e a importância estratégica da usabilidade, além de facilitar a comparação com métricas organizacionais como aumento nas vendas, taxa de diminuição no suporte, entre outras.
Ivory, Ivory e Hearst e Ngo e Byrne propõem métodos e métricas para medir o design de interfaces gráficas.
Os trabalhos de Ivory, voltados para a Web, sugerem uma ferramenta que automatiza a coleta e análise de métricas de web sites.
Esta ferramenta possui mais de 150 métricas subdivididas em nove classes:
Elementos textuais, elementos de ligação, elementos gráficos, formatação textual, formatação das ligações, formatação dos gráficos, formatação da página e, por fim, performance da página.
A ferramenta realiza análises entre páginas e entre web sites utilizando estas classes, visando criar um perfil estatístico.
Em o estudo realizado por Ngo, há a preocupação com a estética da interface e como ela afeta a maneira como as pessoas percebem a usabilidade de um determinado sistema.
O trabalho apresenta uma maneira, empiricamente estabelecida, de medir a estética a partir de cinco métricas:
Balanço, simetria, seqüência e ordem e complexidade.
Os estudos apresentados nesta seção não têm relação entre si e não puderam ser agrupados como os mostrados anteriormente.
Covella e Olsina, propõem um framework chamado INCAMI ­ Information Need, Concept model, Attribute, Metric and Indicator ­ que tem como objetivo especificar, medir e avaliar a qualidade no uso de sistemas.
A abordagem sistemática proposta pode ser divida em, pelo menos, três partes bases fundamentais:
Um modelo conceitual para especificar a qualidade no uso;
Um framework para medição e avaliação;
Metodologia baseada em modelos.
Donyaee introduzem modelos para avaliação de usabilidade a partir de métricas preditivas.
O conjunto de métricas foi selecionado de outros estudos de acordo com sua aplicabilidade, poder de predição e esforço necessário para coletar- las e analisálas.
Ao todo são dez medidas que contam o número de:
Elementos, ícones, atalhos, itens de entrada, botões, itens de menu, funcionalidades, caixas de diálogo e funcionalidades disponíveis no menu e na barra de ferramentas.
Käki, apresenta três novas métricas para medir a usabilidade em interfaces de busca:
Velocidade de busca, velocidade de busca qualificada e acuidade da busca.
Diferentemente de outros estudos, o foco deste reside no momento em que o usuário analisa os resultados da pesquisa realizada, facilitando que seja complementado por outros estudos que avaliem interface e design.
O'Connel e Choong identificaram que existe uma falta de métodos amplamente aceitos para medir interfaces de sistemas para análise de informação e propuseram uma abordagem que tem por finalidade medir a experiência dos usuários com este tipo de sistema.
Esta proposta é composta de um conjunto de sete heurísticas a serem obedecidas por os sistemas de visualização de informações.
As métricas, neste caso, são aplicadas para medir cada uma destas heurísticas.
Rauterberg mostra, em seu estudo, uma idéia diferente dos demais, argumentando que um sistema pode ser medido a partir de quatro diferentes visões:
Visão orientada a interação, visão orientada ao usuário, visão orientada ao produto e visão formal.
Para cada uma das visões apresentadas, a usabilidade é medida de forma distinta, por exemplo, na visão orientada a produto, a usabilidade é medida em termos de ergonomia.
O estudo introduz duas novas métricas para medir a usabilidade a partir de a visão orientada ao produto:
Functional feeback e interactive directness.
Baseado na idéia de que os usuários devem conseguir procurar visualmente, e de maneira fácil, os elementos de uma interface, Rosenholtz sugerem um método que mede a degradação de uma tarefa a partir de uma técnica intitulada Congestionamento de Funcionalidades (Feature Congestion).
A medida desta técnica é realizada a partir de a quantidade de elementos na tela e também da organização destes.
Para tal, ele propõe formas de medir o grau em que as funcionalidades do sistema estão desorganizadas.
Saward e Barker sugerem que a usabilidade deva ser medida por a habilidade com que os usuários navegam e exploram um dado sistema e se coloca contrário a outros modelos que utilizam métricas mais tradicionais, como:
Tempo para completar a tarefa, número de tarefas completadas, etc..
O autor foca- se na percepção que os usuários possuem da informação em sistemas baseados na internet para recuperação de informação (Internet Information Retrieval Systems).
Duas importantes medidas são apresentadas por o estudo:
Expectativa e confiança do usuário sobre a localização da informação.
Scholtz desenvolveu várias métricas com as quais é possível medir o sucesso da representação visual de uma determinada informação.
O estudo apresenta cinco áreas sob as quais uma representação visual deve ser avaliada:
Interação, criatividade, colaboração, utilidade e sensibilidade à situação (situation awareness).
Para cada uma destas áreas são sugeridas métricas para realizar a medição.
Por exemplo, para medir a interação, podem- se utilizar as seguintes métricas:
Tempo gasto em cada passo do processo e tempo gasto no uso da ferramenta.
Sears, propõe uma ferramenta chamada semi-Automated Interface Designer and Evaluator (AIDE).
A análise realizada por esta ferramenta é baseada em cinco métricas:
Eficiência, alinhamento, balanço horizontal, balanço vertical e restrições (constraints).
Para completar, a ferramenta dispõe, ainda, de uma função para gerar interfaces automaticamente bastando para tal apenas selecionar quais métricas são desejadas.
Seffah, propõem um método por o qual a usabilidade é dividida e medida de acordo com dez fatores e cada um destes medido por pelo menos uma métrica.
Ao todo são 127 métricas, reunidas de vários outros trabalhos, que ajudam a medir a (QUIM), segundo o autor, serve como repositório de métricas para fins de pesquisa.
Como parte do estudo, uma ferramenta foi desenvolvida com o intuito de ajudar a selecionar e ensinar a medir cada um dos fatores selecionados (satisfação, facilidade de aprendizado e etc) para um dado projeto.
Tamir propõe um framework para medir esforço no uso de qualquer sistema, a partir de dois pontos principais:
Esforço relacionado ao teclado e ao mouse e esforço relacionado ao olho, medido a partir de eye-- tracking.
Tonn--Eichstadt apresenta uma extensão do método GOMS (Goals Operators Methods and Selection) para medir a alguns aspectos de usabilidade de web sites para usuários com deficiência visual.
Seu método consiste em propor novas estruturas para as notações da abordagem estendida, a fim de suportar a descrição de novos contextos.
Com base na pesquisa bibliográfica desenvolvida foi possível conhecer diferentes tipos de protótipos existentes, bem como as técnicas envolvidas na sua utilização.
A pesquisa evidenciou que as tradicionais definições de alta e baixa fidelidades dos protótipos possuem críticas.
O estudo sobre a utilização dos protótipos na Engenharia de Usabilidade possibilitou conhecer os contextos e em que fases dos ciclos de desenvolvimento da área de IHC apresentados os protótipos são normalmente utilizados.
Pode- se observar que para a quase totalidade de eles ­ exceto o proposto por Nielsen ­ um protótipo é sempre desenvolvido e testado logo nas fases iniciais.
No entanto, conforme pode ser visto na Tabela 1, nem todas as metodologias apresentadas utilizam o mesmo tipo de protótipo e menos da metade destas, utiliza métricas para fazer avaliação.
A Revisão Sistemática[ 5] possibilitou conhecer o estado da arte acerca de métricas para avaliação de usabilidade.
O estudo sistemático mostrou que apenas uma pequena parte dos métodos, técnicas e ou abordagens criados para avaliar a usabilidade a partir de métricas, de fato, podem ser aplicados a protótipos.
A maioria das propostas necessita de um sistema totalmente funcional para que possam ser efetivamente aplicadas.
Considerando: Os estudos apresentados, que sugerem que o computador seja utilizado para intermediar o teste com protótipos;
O computador, no âmbito desta proposta, por meio de uma ferramenta especializada, será responsável por possibilitar a criação de protótipos, simular seu uso, coletar as métricas e apresentar os resultados relacionados, além de permitir a definição dos cenários, tarefas e questionários a serem utilizados durante o teste com usuários.
Utilizando a definição criada por McCurdy, a ferramenta permitirá criar protótipos de alta fidelidade em termos de refinamento visual, além de possibilitar melhor riqueza de interação em relação a o papel, devido a a melhor resposta visual dos componentes do layout quando o usuário interage com os mesmos.
Por este fato, os protótipos criados por esta ferramenta são considerados como sendo de fidelidade mista.
A seguir serão apresentadas, em maiores detalhes, as métricas selecionadas e a ferramenta que será responsável por coletar- las.
A revisão sistemática realizada, cujos resultados foram apresentados no capítulo 4, apresentou mais de 300 métricas que medem diferentes aspectos da usabilidade.
Cada uma das métricas coletadas está associada a um aspecto da usabilidade que está sendo medido, como por exemplo:
Design ou performance.
O conjunto total de métricas possui cerca de 30 aspectos diferentes relacionados à interface ou a interação do usuário durante uma determinada tarefa, de entre os quais se podem citar:
Desenho da informação, estética, colaboração, facilidade de uso, entre outros.
A o revisar a literatura, foi possível encontrar ainda os termos &quot;fatores «e &quot;dimensões «que são utilizados com o mesmo significado que aspectos.
Como mencionado anteriormente, foi possível perceber que a grande maioria destas métricas necessita de um protótipo totalmente funcional para que possam ser coletadas.
Sendo assim, somente uma pequena parte destas pode ser realmente antecipada e utilizada em protótipos desenvolvidos ainda nos estágios iniciais de desenho das interfaces.
Todas as métricas coletadas através da realização da revisão sistemática passaram por um processo de catalogação, em o qual foram levantadas as seguintes informações:
Nome da métrica, aspecto associado, descrição, forma de coleta, forma de cálculo e fidelidade do protótipo necessária para sua captura.
Para o campo fidelidade do protótipo necessária foram utilizados dois possíveis valores:
F, para designar que é necessária a construção de um protótipo totalmente funcional para coletar esta métrica, e P, para designar que apenas um protótipo simples (em papel, por exemplo) basta para capturar- la.
Assim, métricas que necessitavam de um protótipo totalmente funcional ­ como as de acessibilidade, por exemplo ­ ficaram automaticamente excluídas da lista final de métricas.
Adicionalmente, adotou- se o mesmo critério de seleção seguido por Donyaee, que selecionou aquelas cujo esforço para coletar e analisar tenha uma boa relação custo-benefício, a fim de facilitar a coleta e interpretação.
As métricas utilizadas num dos estudos analisados ­ apesar de serem passíveis de utilizar em protótipos ­ não puderam ser aproveitadas, pois os autores não mencionam como fazer a interpretação ou coleta das mesmas.
O conjunto final de métricas que a abordagem conterá é explicado a seguir:
Balanço de tela:
Calcula o balanço do layout da interface em relação a dois eixos centrais, um vertical e outro horizontal.
Trata- se de uma métrica calculada automaticamente dividindo- se a tela em dois eixos centrais, um vertical e outro horizontal.
Para cada um dos lados criados por os eixos ­ superior, inferior, esquerdo e direito ­ calcula- se o peso dos componentes.
Logo, diz- se que o layout está em balanço quando o peso do lado superior menos o do inferior e o peso do lado esquerdo menos o do direito é igual a zero.
Caso o valor obtido por algum dos lados for superior ao outro, diz- se que o lado com o maior valor está pesado.
Por exemplo, se o peso do lado esquerdo é maior que o do direito, diz- se que o layout está mais pesado para esquerda;
Simetria de tela:
Trata da distribuição balanceada de elementos equivalentes sobre um mesmo eixo.
A simetria é calculada automaticamente dividindo- se a tela em quatro quadrantes e calculando- se o alinhamento dos componentes em cada um destes quadrantes em relação a os eixos.
Por exemplo, diz- se que um layout está verticalmente simétrico quando o alinhamento dos componentes nos quadrantes superior e inferior esquerdo menos o direito é zero, assim:
ASE ­ ASD $= 0 e AIE ­ AID $= 0.
Já para dizer que um layout está horizontalmente simétrico, basta inverter, ou seja, o alinhamento dos componentes no quadrante superior esquerdo menos o alinhamento dos componentes no quadrando inferior esquerdo igual a zero e o Equilíbrio de tela:
Diz se um layout está em equilíbrio.
Isto ocorre quando o seu centro coincide com o centro da tela onde foi construído e pode ser obtido automaticamente, calculando- se o centro de gravidade do layout ­ somente componentes ­ e comparando- o com o centro de gravidade da tela ­ sem os componentes.
O centro de gravidade do layout pode ser obtido somando- se todos as áreas de todos os elementos e multiplicando- se por a distância de cada um de eles em relação a o eixo x ­ horizontal.
A mesma coisa é feita para o eixo y ­ vertical.
A o final, obtém- se um par ordenado (x, y) que representa o centro do layout;
Seqüenciamento de tela:
Visto que os olhos são constantemente treinados para leitura, ou seja, treinados a movimentarem- se da esquerda para a direita e de cima para baixo, é aconselhável que as interfaces gráficas também mantenham esta seqüência.
O seqüenciamento de tela pressupõe que os elementos da interface gráfica serão dispostos obedecendo- se este movimento natural dos olhos.
Esta medida calculada de maneira simples a partir de o número de componentes em cada um dos quadrantes da tela.
Um componente ou mais no quadrante superior esquerdo vale 4;
um componente ou mais no quadrante superior direito vale 3 e assim segue, sendo 2 e 1 para os respectivos quadrantes inferiores.
Quanto mais próximo de 10 for o resultado, melhor é o seqüenciamento da tela;
Ordem e complexidade de tela:
Utiliza o resultado das quatro anteriores.
A ordem é obtida através da soma ponderada do seqüenciamento, simetria, balanço e equilíbrio, divididos por o número de componentes.
Quanto maior o valor das quatro primeiras métricas, maior a ordem do layout, em contrapartida, quanto mais componentes a tela conter, mais complexa ela é;
Esforço: Mede o esforço a partir de a soma ponderada de cliques do mouse, número de teclas pressionadas e mickeys, que segundo o autor, trata- se de quantidade de pixels que o mouse atravessou durante o intervalo medido;
Escala de Usabilidade do Sistema: Representa a satisfação do usuário durante a interação com o sistema.
É capturada por um questionário pós-teste composto por 10 perguntas a serem respondidas de acordo com uma escala likert.
Uma fórmula específica auxilia no cálculo da escala de usabilidade do sistema;
Sucesso da tarefa:
Representa uma simples contagem de tarefas que foram finalizadas com sucesso, sem a interferência do facilitador ou documentação do sistema.
Normalmente é apresentada sob forma de uma razão entre tarefas completadas com sucesso e sem sucesso;
Sucesso parcial de tarefas:
Representa o número de tarefas que foram finalizadas, mas mediante o auxílio do facilitador do teste ou da documentação do sistema existente.
Esta medida é obtida a partir de a análise dos vídeos gravados durante as sessões de observação de usuários;
Auxílio e documentação:
Representa o número de vezes em que o usuário solicitou ajuda ao facilitador da seção de testes, durante a execução de uma tarefa, ou acessou a documentação do sistema.
Esta medida é obtida a partir de a análise dos vídeos gravados durante as sessões de observação de usuários;
Desistência de tarefas:
Representa uma simples contagem de tarefas em que o usuário optou por desistir;
Tempo de ajuda:
Informa a quantidade de tempo em minutos que o usuário gastou em ajuda, com análise da documentação disponível ou questionamento do facilitador durante a execução da tarefa.
Esta medida é obtida a partir de a análise dos vídeos gravados durante as sessões de observação de usuários;
Tempo na tarefa:
Informa o tempo gasto por o usuário na execução da tarefa, considerando tarefas concluídas com ou sem sucesso.
Esta métrica é obtida automaticamente por o computador;
Número de erros:
Corresponde à quantidade de seleção errada de comandos no contexto de uma tarefa.
É obtida através de uma simples contagem destas ocorrências.
Esta medida é obtida a partir de a análise dos vídeos gravados durante as sessões de observação de usuários;
Raiva ou frustração:
Quantidade de vezes em que o usuário participante do teste expressou raiva ou frustração na interação com o sistema.
Esta medida é obtida a partir de a análise dos vídeos gravados durante as sessões de observação de usuários.
A fim de intermediar os testes com usuários, foi construída, no Centro de Pesquisas em Computação Aplicada (CPCA) da PUCRS, uma ferramenta que visa auxiliar na organização do teste, construção dos protótipos, simulação de uso das interfaces e coleta de métricas.
As próximas seções apresentarão detalhes desta ferramenta.
A ferramenta foi construída utilizando- se a tecnologia Java com interface gráfica elaborada com componentes swing.
A ferramenta é dividida em dois módulos, o primeiro (Figura 22) responsável por a gestão dos dados referentes ao teste com usuários e por a criação de protótipos3 e, o segundo (Figura 23), responsável por executar a simulação das telas e coletar as métricas.
Cada módulo é empacotado num arquivo jar distinto que pode ser utilizado separadamente em qualquer sistema operacional suportado por a tecnologia Java (Figura 22).
Em relação a os testes com usuários, podem ser criados todos os itens que normalmente fazem parte de um teste de usabilidade com protótipos, como:
Cenários, tarefas e questionários, além de as próprias telas do protótipo.
Cada novo teste é concebido como um novo projeto, o qual, ao ser criado, permite cadastrar um cenário descritivo, que auxiliará o participante do teste a entender o contexto sob o qual estará executando as tarefas que lhe serão apresentadas.
Este cenário, por sua vez, é composto de uma ou mais tarefas, cada qual contendo somente uma descrição textual.
Para o levantamento do perfil do usuário participante do teste, é possível criar questionários, que podem conter A idéia de analisar questões relativas a usabilidade teve início com o trabalho de Abrão &amp; Luckei;
Em o referido trabalho foi desenvolvida uma ferramenta para prototipação de interfaces que permitia, além de a prototipação das telas a navegação entre elas.
Com as pesquisas desenvolvidas para esta dissertação, a ferramenta foi completamente refeita, incluindo todas as funcionalidades descritas nesta seção.
Para a criação dos protótipos é possível utilizar o auxílio de uma extensa lista de componentes e de um formulário contendo linhas de grade, que auxiliam no alinhamento do layout.
Cada um dos componentes utilizados permite que sejam alteradas algumas de suas propriedades, como:
Altura, largura, cor de fundo, cor do texto, fonte e etc..
Alguns destes componentes permitem, inclusive, que sejam indicados outros protótipos para serem abertos ou fechados quando clicados por os usuários.
A fim de aprimorar a organização dos protótipos, a ferramenta dispõe de versionamento, permitindo que sejam criadas novas versões de protótipos baseadas em layouts anteriores.
Sempre que uma simulação é executada, uma nova versão dos protótipos é criada, impedindo que as versões já testadas sejam alteradas, o que pode invalidar as métricas já coletadas.
A Figura 23 apresenta a interface da ferramenta com um protótipo sendo construído.
Em o módulo referente a a simulação e coleta de métricas, são apresentados os questionários para que sejam respondidos por os usuários, é executada a simulação e feita a coleta das métricas passíveis de serem obtidas automaticamente.
São elas:
Balanço de Tela:
Obtida em tempo de prototipação e calculada conforme explicado na seção anterior;
Simetria de Tela:
Obtida em tempo de prototipação e calculada conforme explicado na seção anterior;
Equilibrio de Tela: Obtida em tempo de prototipação e calculada conforme explicado na seção anterior;
Seqüenciamento de Tela:
Obtida em tempo de prototipação e calculada conforme explicado na seção anterior;
Ordem e Complexidade de Tela:
Obtida em tempo de prototipação e calculada conforme explicado na seção anterior;
Esforço: Somatório da quantidade de cliques do mouse, quantidade de pixels atravessados por o ponteiro do mouse e quantidade de teclas pressionadas;
Escala de usabilidade do sistema:
Calculada automaticamente após o usuário responder o questionário pós-teste.
A escala é obtida por o somatório dos pesos das questões, sendo:
Desistência de tarefas:
Métrica obtida por a contagem de cliques feitos sobre os botões:
&quot;Desistir deste teste «e &quot;Desistir de todos os testes&quot;;
Tempo na tarefa:
A contagem do tempo inicia com o clique sobre o botão &quot;Iniciar «e finaliza com o clique sobre o botão &quot;Finalizar».
A o desistir da tarefa ou do teste, o tempo computado até o momento é desconsiderado.
Optou- se por criar um módulo separado para ficar a cargo de esta parte a fim de facilitar os testes, ou seja, não é necessário ter a ferramenta de prototipação e criação do teste nos computadores utilizados apenas para teste, como é o caso dos laboratórios de usabilidade.
Assim, ao abrir o projeto na ferramenta de simulação, é apresentado um questionário para obtenção do perfil do usuário.
Em seguida, o cenário é apresentado e assim que o usuário sentir- se à vontade para tal, ele pode iniciar a simulação dos protótipos.
A o iniciar esta simulação a ferramenta exibe a primeira tarefa cadastrada.
Para que seja possível interagir com os protótipos para executar cada tarefa é necessário que o usuário participante informe o início da mesma clicando sobre o botão designado para isto.
Tão logo a tarefa em execução seja terminada e o usuário indique sua finalização, a próxima tarefa cadastrada é mostrada.
Este ciclo segue até que todas elas estejam concluídas, quando, então, um questionário pós-teste é mostrado.
É importante lembrar que, uma vez realizado um teste numa das versões, não é mais possível alterar nenhum dos protótipos, para que nenhum dos dados coletados seja invalidado.
A Figura 24 mostra a descrição de uma tarefa a ser executada.
Durante a execução dos testes, o segundo módulo da ferramenta fica responsável por a coleta das métricas.
A o finalizar a sessão de testes, a exibição do conjunto de dados coletados é feita por o primeiro módulo da ferramenta.
Caso o teste realizado contenha vídeos para serem analisados posteriormente, a ferramenta permite que sejam manualmente alteradas algumas das métricas, como, por exemplo:
Número de vezes em que o usuário expressou raiva ou frustração e número de erros.
Esta ferramenta pode ser utilizada na grande maioria das metodologias de engenharia de usabilidade mostradas anteriormente, excetuando- se XPnUE que utiliza apenas prototipação em papel em seus processos.
As organizações que utilizam o Usability Engineering Lifecycle podem valer- se das funcionalidades deste programa especialmente no primeiro e terceiro níveis da segunda fase da metodologia quando é realizado o design, o teste e o desenvolvimento.
Em a primeira das fases, a ferramenta pode auxiliar na modelagem conceitual e na criação dos mockups, enquanto que, na segunda, pode auxiliar na criação da interface detalhada.
Para quem utiliza a Usability Engineering, a utilização pode ser útil nos estágios de Prototipação e Coleta e Feedback dos Usuários, visto que são coletados dados automaticamente de questionários aplicados ao final dos testes.
O Extreme Designing não trabalha especificamente com um tipo de prototipação, logo, o uso da ferramenta pode ser empregado para realizar a prototipação e a criação de user stories, que são partes importantes da metodologia.
Por fim, o Star Lifecycle possui dois processos chave em os quais a ferramenta pode ser útil:
A Prototipação e o Design Conceitual e Formal.
Como mencionado na seção anterior, todos os protótipos construídos por a ferramenta podem ser reaproveitados, de forma que o desenho das interfaces de um dado sistema pode evoluir de algo mais simples a algo mais completo, sem a necessidade de retrabalho.
Em este sentido, conforme descrito no capítulo 2, o Evolutionary Prototyping é o processo com o qual a ferramenta descrita mais se adéqua.
O uso da ferramenta, segundo o Evolutionary Prototyping, dá- se no processo de &quot;Desenhar Componente/Protótipos».
Algumas das técnicas mencionadas no capítulo 2 deverão ser utilizadas a fim de efetivamente utilizar a ferramenta para realizar avaliação de alternativas de design.
Visando facilitar a ambientação dos usuários com as tarefas e ainda nortear a criação destas, o primeiro passo necessário, utilizando o primeiro modulo, é criar um Cenário em o qual seja descrito o contexto para execução destas tarefas.
Com o cenário concluído, criam- se então as tarefas que serão executadas no teste.
As técnicas que podem contribuir neste passo são o uso de Casos de Uso Essenciais ou Task Design, mostrados anteriormente.
Em a seqüência cria- se o questionário pré-teste, que será mostrado ao usuário antes do cenário do teste.
Este questionário pode conter um número variável de perguntas dissertativas e/ ou objetivas e seu preenchimento é opcional, não impedindo (a falta de preenchimento) a realização de testes.
Tendo em mente o cenário e as tarefas elaboradas para o teste, cria- se então o conjunto de protótipos que darão suporte para a execução do que será solicitado.
A ferramenta permite que seja criada uma ou mais telas e, também, que sejam definidos links entre cada um dos protótipos a fim de criar um efeito de navegação na execução dos testes.
A ferramenta permite que a navegação seja testada em tempo de design, sem a necessidade de acessar o segundo módulo para tal.
Após o término do desenho das telas, este deve ser salvo e o arquivo gerado deve ser aberto no segundo módulo.
O segundo módulo possui um interface bastante simples, com os comandos localizados na parte inferior;
Basta clicar em iniciar questionário para que o teste inicie.
Após o usuário responder ao questionário, o cenário lhe é apresentado e, em seguida a leitura, é apresentada a primeira tarefa cadastrada.
O usuário é indicado a ler e clicar em iniciar para que possa interagir com os protótipos e realizar o que foi solicitado.
Após concluir a tarefa, basta indicar o término e o programa automaticamente carrega a próxima tarefa.
A o chegar ao final, automaticamente é exibido o Sus, que nesta abordagem é utilizado como questionário pós-teste.
Enquanto o usuário executa o conjunto de tarefas, o sistema coleta as seguintes métricas automaticamente:
Tempo de tarefa, desistência de tarefas, Sus, esforço, ordem e complexidade, seqüenciamento de tela, equilíbrio de tela, simetria de tela, balanço de tela.
O restante das métricas é informado manualmente no primeiro módulo de ferramenta, após análise de vídeos gerados durante a interação do usuário, conforme descrito anteriormente.
Após a coleta e análise dos dados obtidos com o teste, o primeiro módulo da ferramenta permite que protótipos sejam criados a partir de os existentes, evitando esforço de retrabalho para construir- los novamente.
Assim, conforme as métricas são analisadas (Figura 25) e melhorias são construídas, as alternativas de design podem ser comparadas utilizando- se os dados coletados nas diferentes sessões de teste e que ficam armazenados no mesmo arquivo.
A seguir serão apresentados os passos realizados para analisar a proposta feita na seção anterior.
Primeiramente será apresentado o planejamento do experimento que foi conduzido, seguido do detalhamento da execução do mesmo e resultados obtidos.
O experimento aqui proposto objetiva comparar, no âmbito da antecipação da avaliação, se a abordagem proposta ­ utilizar o software para prototipar e coletar as métricas -- consegue de fato antecipar e medir problemas usabilidade ainda em tempo de design utilizando as métricas coletadas.
Será utilizado, para este experimento, um sistema para apoio a testes com usuários, também desenvolvido no CPCA.
A interface deste sistema será mantida sem a realização de quaisquer testes e/ ou avaliações de usabilidade até o final do seu desenvolvimento e será construída, testada e refinada uma versão prototipada desta mesma interface com o auxilio da ferramenta mencionada no capítulo anterior.
A o final, existirão duas versões do sistema de apoio a testes com usuários:
Uma desenvolvida sem a realização de testes de usabilidade e a outra refinada após o uso da abordagem proposta.
Será então realizado um teste de usabilidade para determinar se a versão final do sistema para a qual foram realizados testes com a ferramenta de prototipação de fato contém menos problemas de interface que a versão sem esta interferência.
O experimento será realizado em duas etapas, primeiramente haverá um teste com usuários nos protótipos da ferramenta, onde ocorrerá a coleta das métricas.
Os dados coletados por este teste serão analisados e sugestões de mudança nas interfaces serão feitas e implementadas.
Quando as alterações estiverem concluídas, serão realizadas Avaliações Heurísticas -- segunda etapa ­ a fim de determinar se a interface que sofreu a interferência desta abordagem, de fato contém menos problemas de usabilidade.
Alguns parâmetros do experimento planejado são apresentados e descritos a seguir:
Variáveis independentes:
Para a primeira etapa do experimento, protótipos da ferramenta construídos e automatizados por o computador.
Para a segunda parte, interfaces totalmente funcionais da ferramenta, construídas com e sem a interferência da abordagem.
Variáveis dependentes:
Em a primeira etapa, as variáveis dependentes são o resultado de cada uma das métricas coletadas durante o teste com os protótipos.
Já as variáveis da segunda, são os problemas de usabilidade encontrados em cada um dos dois sistemas testados na avaliação heurística ­ aquele construído com a interferência da abordagem e o construído sem esta interferência.
Sujeitos: Alunos de graduação e pós-graduação da Faculdade de Informática da PUCRS, para a primeira parte do experimento.
Já a Avaliação Heurística será realizada por especialistas na área.
Objeto: Protótipo e Sistema para auxílio a testes com usuários, modelado e desenvolvido no CPCA.
Variáveis de Bloqueio:
Não foram identificados.
Processo: Para o processo será utilizada uma abordagem in vitro, visto que os participantes executarão o teste num laboratório de usabilidade sob condições controladas.
Adicionalmente, visando mitigar o problema da difusão, os sujeitos participantes serão escalonados em horários diferentes e as execuções do experimento serão individuais.
O experimento será conduzido durante o desenvolvimento do software avaliado, portanto, trata- se de um estudo on-line.
Questão: A versão da interface gráfica construída com a ajuda da ferramenta de prototipação contém menos problemas de usabilidade do que a versão construída sem este auxílio?
Cabe ainda ressaltar alguns princípios que serão observados no projeto e execução do experimento:
Obstrução: Durante a experimentação, muitos dos participantes não possuem o mesmo nível de experiência acadêmica e profissional.
Para minimizar o efeito da experiência sobre o experimento, os indivíduos serão selecionados utilizando o critério de conveniência;
Balanceamento: Este princípio será utilizado para que cada interface gráfica seja testada por a mesma quantidade de participantes.
A partir de a questão de pesquisa proposta podem- se levantar duas hipóteses para investigação com o experimento:
H0: µnormal $= µabordagem H1:
µnormal\&gt; µabordagem Onde:
O tipo de experimento planejado procura investigar se normal possui a mesma quantidade ou mais de problemas de usabilidade que abordagem.
Para este fim, será utilizada uma abordagem de um fator e dois tratamentos.
O fator, neste experimento, consiste na interface gráfica das duas versões do sistema e os tratamentos consistem nas abordagens utilizadas para a construção das mesmas.
A fim de auxiliar a controlar a ocorrência de vieses na pesquisa e ajudar a minimizar o efeito de hipóteses rivais plausíveis, os seguintes aspectos serão observados:
Validade interna:
O Ambiente:
O ambiente onde será aplicado o experimento será definido e todos os participantes farão os testes no mesmo ambiente, evitando que os participantes possam sofrer influências externas;
Validade externa:
O Para esta avaliação, os participantes selecionados possuirão um perfil apto aos tratamentos do experimento, apresentando, em sua maioria, conhecimento prévio sobre a área de Interação Humano-- Computador, além de experiência em interação com softwares em geral.
O experimento, realizado num laboratório de usabilidade, foi constituído de um cenário e mais cinco tarefas pertinentes a este contexto (ver Apêndice B).
Antes do início da execução do experimento, solicitou- se que três pessoas conhecedoras do software submetido à avaliação, executassem o mesmo teste proposto aos participantes, a fim de gerar um conjunto de métricas.
A média dos resultados coletados das métricas deste teste foi estipulada como sendo o ideal a ser alcançado.
A Tabela 2 a seguir mostra estes dados.
Para as métricas não mencionadas na Tabela 2 foram considerados os seguintes valores como esperados:
Escala de Usabilidade do Sistema:
100; Sucesso de Tarefa:
Todas as tarefas executadas com sucesso;
Sucesso Parcial de Tarefa: Nenhuma tarefa com execução parcial;
Auxílio e Documentação:
Nenhum auxílio prestado e nenhuma documentação acessada;
Desistência de Tarefas: Nenhuma tarefa com desistência;
Tempo de Ajuda: Zero Número de Erros:
Zero Raiva ou Frustração:
Zero Adicionalmente, considerou- se que para as métricas relacionadas a layout, a análise levaria em consideração apenas a Ordem e Complexidade, visto que ela, no seu cálculo, leva em consideração o resultado de todas as outras métricas do layout ­ Balanço, Seqüenciamento, Simetria e Equilíbrio.
De acordo com o estudo de Ngo, o valor esperado para esta métrica é três, este mesmo valor foi adotado por este estudo.
Visando conhecer o perfil do conjunto de participantes, um questionário pré-teste foi aplicado antes de cada execução dos testes ­ Ver Apêndice C. Antes que os participantes o respondessem, foi solicitado que o Acordo Ético para a utilização dos dados e imagens fosse lido e assinado ­ Ver Anexo B. A análise das respostas dos usuários mostrou que, do conjunto total de 10 participantes:
Todos os participantes, no mínimo, cursam ensino superior, sendo que 40% destes, já o concluíram;
Visto que o objeto do experimento tratava- se de um software específico para auxílio a teste com usuários, o perfil dos participantes selecionados mostrou- se bastante próprio para o teste, visto que a maioria era experiente no uso de computadores e já havia tido contato com a área de IHC.
A primeira tarefa que os usuários participantes deveriam executar consistia em utilizar os protótipos para criar um novo projeto.
A Tabela 3 mostra os dados desta tarefa coletados durante a execução da referida tarefa.
A segunda tarefa solicitava aos usuários participantes que utilizassem os protótipos para criar um usuário com determinado conjunto de dados.
A Tabela 4 mostra os dados coletados por a ferramenta durante a execução desta tarefa.
A terceira das tarefas solicitava aos usuários participantes que criassem um questionário do tipo pré-teste e inserissem em ele uma pergunta do tipo texto.
A Tabela 5 mostra os dados coletados durante a execução desta tarefa.
A penúltima tarefa consistia em criar um build do projeto em o qual se está trabalhando.
A Tabela 6 mostra os dados que foram coletados durante esta tarefa.
A quinta e última tarefa solicitava aos usuários que carregassem o usuário criado para completar a segunda tarefa.
A Tabela 7 mostra os dados coletados desta execução de tarefa.
As métricas relacionadas a layout também foram coletadas após a sessão de testes, visto que as mesmas não precisam de usuários para que os dados sejam obtidos:
Tabela 9: Valores obtidos da Escala de Usabilidade do Sistema[ 10].
Escala de Usabilidade do Sistema Participante 1 Participante 2 Participante 3 Participante 4 Participante 5 Participante 6 Participante 7 Participante 8 Participante 9 Participante 10 Para facilitar a análise dos dados, as médias de cada uma das métricas cujo valor era numérico e não zerado foram calculadas e tabuladas juntamente com a média esperada para cada uma das métricas.
Visto que todas as tarefas foram concluídas com êxito, sem a necessidade de nenhum auxílio e que nenhum dos participantes optou por desistir, a análise não levou estas métricas em consideração.
A partir de os dados da comparação, para selecionar quais telas deveriam ser revisadas, considerou- se que todas as métricas cujo valor medido fosse 30% maior do que o esperado deveriam ser selecionadas.
De acordo com os dados apresentados, todas foram selecionadas para revisão.
Visto que o esforço e tempo apresentaram uma alta significativa em relação a o esperado, as primeiras revisões dos protótipos procuraram corrigir problemas de usabilidade que pudessem resultar neste aumento de esforço e consequentemente, tempo.
Em a tela de cadastro de projetos ­ Tarefa 1 ­ foram incluídas máscaras nos campos onde era necessário informar alguma data.
Também foi incluída a informação de quais campos eram obrigatórios e corrigido um campo que não aceitava a tecla para mudar o foco.
A falta de ação da tecla faz com que seja necessário o uso do mouse numa interação onde o teclado é o principal meio de comunicação, visto que esta é uma tela de cadastro.
Em a tela de cadastro de usuários ­ Tarefa 2 ­ foram feitas as mesmas alterações da tela de projetos, porém foi acrescida a máscara para o campo do telefone.
O campo de escolaridade recebeu um componente onde era possível selecionar a escolaridade ao invés de ter que digitar.
A tela de cadastrar questionário ­ Tarefa 3 ­ no sistema desenvolvido sem a interferência da abordagem era dividida em duas partes, uma em a qual apenas se informavam o nome do questionário e o seu tipo ­ pré ou pós-teste.
A o confirmar os dados nesta, uma segunda tela era aberta, onde era possível cadastrar as perguntas que seriam feitas no questionário.
Visando reduzir o tempo e o esforço, estas telas foram unificadas.
Criou- se uma tela única através de a qual era possível informar os dados do questionário e já inserir as perguntas desejadas.
Adicionalmente, aplicou- se o mesmo conjunto de alterações feitas na primeira tela.
O cadastro de builds ­ tarefa 4 ­ é uma tela com poucas informações, apenas 2 campos.
Para ela, aplicaram- se as alterações feitas na primeira tela.
Adicionalmente, foi trocado o campo onde era informado o build, que era um campo de texto simples, por um componente onde o n* úmero do build pode ser incrementado.
Para a tela da seleção de usuário, que era a última das tarefas a serem realizadas, aplicaram- se, também, as alterações de interface realizadas na tela de cadastro de projetos e mais a troca do texto do botão de &quot;Carregar Usuário «para &quot;Selecionar Usuário», a fim de ficar de acordo com a tela principal, que informa:
&quot;Usuário Selecionado:»
e não &quot;Usuário Carregado:»,
visto que o maior número de erros durante o teste foi justamente nesta tela, causado por a dificuldade em associar a texto do botão a sua função.
Como todas as métricas de layout mostraram valores desfavoráveis:
Quando o experimento mostrado na sessão anterior foi idealizado, já existia um protótipo do sistema de auxílio a testes com usuários.
As telas deste protótipo foram replicadas para a ferramenta de prototipação e testadas conforme mostrado;
No entanto, o desenvolvimento do sistema continuou sem interferências, ou seja, no momento da conclusão das alterações de interface, duas versões do sistema de auxílio a teste com usuários ­ objeto do teste anterior ­ passaram a existir:
Uma concluída a partir de o refinamento feito com os resultados da abordagem e outra concluída sem nenhuma interferência.
Assim, tão logo todas as alterações de interface foram concluídas (na versão com interferência da abordagem), uma Avaliação Heurística ­ ver Apêndice D ­ foi conduzida.
Esta avaliação foi realizada por 3 especialistas na área de IHC, sendo 2 mestres e 1 doutor, e solicitava que os especialistas testassem somente as interfaces utilizadas nos protótipos dos testes com usuários.
As avaliações duraram em média 40 minutos e mostraram os resultados que são apresentados na Tabela 11.
Os dados apresentados apontam que o sistema cuja interface foi refinada com o auxílio da abordagem proposta teve uma média de 15 problemas enquanto o sistema cuja interface não sofreu interferência alguma, teve uma média de 20 problemas.
Em a versão com interferência, grande parte dos problemas encontrados foram referentes à validação de data, à localização de mensagens e a textos não exibidos corretamente.
Já na versão sem interferência ocorreram problemas de validação em vários campos, indicação de campos obrigatórios não existentes, objetos utilizados incorretamente, como checkboxes permitindo múltipla escolha.
Cabe ressaltar ainda que a quantidade de problemas catastróficos ­ grau de severidade 4 ­ encontrados no sistema refinado por a abordagem foi reduzido mais de três vezes em relação a o sistema sem interferência.
A Tabela 12 mostra a distribuição de frequência entre os graus de severidade que foram encontrados por a Avaliação Heurística.
A antecipação da avaliação de usabilidade constitui um importante elemento para auxiliar a reduzir os custos envolvidos na produção de software, visto que, quanto antes um determinado problema de usabilidade é detectado e resolvido, menos custo de retrabalho e financeiro será demandado.
Em este âmbito, existem diversas alternativas que auxiliam as equipes de desenvolvimento a realizar esta antecipação, como o uso de modelos, cenários e protótipos como base para a avaliação, no lugar de executar- la sobre o produto finalizado (ou em fase final de desenvolvimento).
Apesar de as avaliações de usabilidade que utilizam protótipos serem bem difundidas, a maioria necessita de um protótipo totalmente funcional para sua aplicação.
Este tipo de protótipo normalmente é utilizado nas fases mais adiantadas dos projetos de desenvolvimento de software;
Assim, visando possibilitar a antecipação da avaliação, o presente trabalho apresentou uma abordagem que permite que esta seja feita por meio de a utilização de protótipos elaborados mediante o uso de uma ferramenta computacional, capaz de auxiliar na criação e simulação de protótipos de interfaces e coleta de métricas.
A utilização de métricas sobre protótipos, para a realização de avaliações de usabilidade, permite que, dependendo da métrica selecionada, áreas do sistema com possíveis problemas possam ser apontadas.
Além de isto, se realizados novos testes utilizando as interfaces refinadas com o auxílio da abordagem, é possível ainda quantificar as melhorias realizadas por as mudanças de layout efetuadas.
Durante a realização desta dissertação, o processo de revisão sistemática contribuiu significativamente para a coleta de estudos relacionados a métricas de usabilidade e permitiu que muitos trabalhos relevantes pudessem ser analisados, além de constituir uma contribuição para a área, provendo pesquisadores com uma lista de importantes trabalhos sobre o tema.
Alguns dos estudos coletados por a revisão sistemática, apesar de apresentarem métricas passíveis de ser coletadas a partir de protótipos, pouco contribuíram para o refinamento dos desenhos das interfaces, como, por exemplo, a métrica de satisfação, representada por o trabalho desenvolvido por Brooke e as métricas de layout, representadas por o trabalho de Ngo.
Apesar de as tentativas de manter o alinhamento, balanceamento e simetria dos layouts, não foi possível atender a estas métricas e continuar com a mesma ideia de layout, pois limitaria o desenho da interface.
Já a métrica de satisfação não sugere nenhuma ocorrência de problemas de interface.
A limitação deste tipo de abordagem, que utiliza métricas para avaliar usabilidade, é que um valor coletado durante uma sessão de testes somente aponta onde pode ter haver um determinado problema e não diz, de fato, qual é o problema encontrado (ou como sanar- lo).
Ou seja, mesmo utilizando esta abordagem, a avaliação de um especialista em IHC não está descartada, se fazendo necessária uma análise crítica dos valores coletados e dos fatores que possam estar causando uma distorção nos valores esperados para a métrica.
Em contrapartida, mesmo que não haja a presença de um profissional especializado, é possível medir, a partir de novos testes, se as interfaces estão sendo melhoradas ou, ainda, se estão atendendo a requisitos de usabilidade, como:
Além de isto, devido a a ferramenta ter sido construída para ser utilizada com protótipos de aplicativos para desktop, os resultados apresentados não levaram em consideração aplicações móveis ou web.
Esta abordagem pode ser generalizada e ter sua utilidade estendida para avaliar outros tipos de aplicativos ­ web e móvel ­ desde que a ferramenta seja adaptada para tal fim.
Apesar de as limitações encontradas, julgamos que os objetivos deste trabalho foram alcançados, da seguinte maneira:
Com o uso da abordagem no experimento realizado, o número de problemas de usabilidade da interface foi, de fato, menor no sistema que sofreu sua interferência, além de ter diminuído em mais de 3 vezes o número de problemas com grau de severidade catastrófico.
Outro fator positivo é sua facilidade de utilização, sendo que apenas um especialista pode efetuar- la, ou seja, não há a necessidade de outros profissionais para auxílio, como é normalmente visto na prototipação em papel, onde são necessários profissionais para observar o teste e para desempenhar o papel de computador.
Como próximos passos deste trabalho sugere- se estender a revisão sistemática, incluindo novas bases de pesquisas eletrônicas, para, a partir de os resultados, estudar que outras métricas poderiam ser adicionadas a abordagem proposta neste trabalho.
Sugere- se também, como resultado de um comentário de um dos participantes do teste com usuários, a inclusão, no segundo módulo da ferramenta, de formas de medir automaticamente o uso da documentação de sistema, quando disponível.
De entre os trabalhos futuros que podem ser desenvolvidos a partir deste, prevê- se:
A inclusão de um sistema de eye-- tracking para medir o esforço dos olhos, como sugerido por Tamir.
Outro possível trabalho futuro está descrito em Silva, em o qual se propõe a integração do método proposto nesta dissertação com um método de avaliação de usabilidade baseada em modelos apresentado em Silva &amp; Silveira.
Este método propõe a utilização de diretrizes para avaliação de usabilidade a partir de modelos, tais como, Diagramas de Casos de Uso, Diagramas de Atividades, Modelos.
A proposta de integração apresentada em Silva consiste num framework para antecipação da avaliação de usabilidade, o qual provê ferramentas para avaliar de forma antecipada diferentes artefatos.
Estes métodos podem ainda ser utilizados de forma complementar, uma vez que a verificação de diretrizes a partir de modelos pode ser considerada um método de avaliação por inspeção, em o qual profissionais com pouca experiência podem aplicar- lo;
Enquanto o método de avaliação a partir de protótipos pode ser considerado um método empírico, em o qual há a necessidade de usuários realizando tarefas e especialistas observando- os.
Outro motivo para a utilização dos métodos de forma complementar é o fato da avaliação baseada em modelos apontar problemas ao passo que o método de avaliação a partir de protótipos fornece indícios de onde o problema pode estar.
